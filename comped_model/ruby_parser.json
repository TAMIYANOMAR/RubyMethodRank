{" RubyParser _reduce_none":{"type":"method","name":"_reduce_none","children":[],"call":["val [] "]}," bitch":{"type":"method","name":"bitch","children":[],"call":[" warn ","c [] ","c [] split last ","c [] split "," caller "," caller  [] "," caller  [] split last "," caller  [] split ","  caller aller "]}," Sexp node_type":{"type":"method","name":"node_type","children":[],"call":[" first "]}," Sexp values":{"type":"method","name":"values","children":[],"call":[" [] "]}," Sexp value":{"type":"method","name":"value","children":[],"call":[" last "," raise "," size > "," size "]}," Sexp paren":{"type":"method","name":"paren","children":[],"call":[]}," StringIO unread_many":{"type":"method","name":"unread_many","children":[],"call":[" unread ","str split reverse each ","str split reverse ","str split "]}," StringIO unread":{"type":"method","name":"unread","children":[],"call":[" ungetc ","c [] ","String  === "," was_begin_of_line= "," begin_of_line= "," was_begin_of_line ","c nil? "," ungetc []  ","c []  [] ","c []  nil? "]}," StringIO peek":{"type":"method","name":"peek","children":[],"call":["c == ","c chr "," ungetc ","c nil? "," getc ","c chr  == "," getc  == ","c chr  c chr hr "," getc   getc hr "," ungetc chr  "," unget getc  ","c chr  nil? "," getc  nil? "," getc chr  "," get getc  "]}," StringIO read_line":{"type":"method","name":"read_line","children":[],"call":[" gets sub "," gets "," was_begin_of_line= "," begin_of_line= "]}," StringIO match_string":{"type":"method","name":"match_string","children":[],"call":[" unread_many ","buffer join ","c2 != ","c [] ","buffer << "," read ","c == ","term each_byte "," unread ","c !~ "," read 2 != "," read  [] "," read  == ","term ea read h_byte "," read  !~ "]}," StringIO read":{"type":"method","name":"read","children":[],"call":["c chr ","c != "," begin_of_line= ","c == "," was_begin_of_line= "," begin_of_line "," ungetc ","d != "," getc "," getc   getc hr "," getc  != "," getc  == "," unget getc  "," get getc  "]}," StringIO current_line":{"type":"method","name":"current_line","children":[],"call":["@original_string [] [] split size ","@original_string [] [] split ","@original_string [] [] ","@original_string [] "," pos "]}," StringIO rest":{"type":"method","name":"rest","children":[],"call":[" string [] "," pos "," string "]}," StringIO initialize":{"type":"method","name":"initialize","children":[],"call":[" string dup "," string "," old_initialize "," was_begin_of_line= "," begin_of_line= "]}," Symbol is_argument":{"type":"method","name":"is_argument","children":[],"call":[" == "]}," Token ==":{"type":"method","name":"==","children":[],"call":[" args == ","o args "," args ","Token  === "]}," Token to_sym":{"type":"method","name":"to_sym","children":[],"call":[" value to_sym "," value "]}," Token inspect":{"type":"method","name":"inspect","children":[],"call":[" args join inspect "," args join "," args "]}," Token first":{"type":"method","name":"first","children":[],"call":[" args first "," args "]}," Token value":{"type":"method","name":"value","children":[],"call":[" args first "," args "]}," Token initialize":{"type":"method","name":"initialize","children":[],"call":[" Array "]}," t":{"type":"method","name":"t","children":[],"call":["Token  new "]}," StackState is_in_state":{"type":"method","name":"is_in_state","children":[],"call":["@stack last "]}," StackState push":{"type":"method","name":"push","children":[],"call":["@stack push "," raise ","val != "]}," StackState lexpop":{"type":"method","name":"lexpop","children":[],"call":["@stack push ","@stack pop "," raise ","@stack size == ","@stack size ","@st@stack pop ck push ","@st@stack pop ck pop "," r@stack pop ise ","@st@stack pop ck size == ","@st@stack pop ck size "]}," StackState pop":{"type":"method","name":"pop","children":[],"call":["@stack push ","@stack size == ","@stack size ","@stack pop "]}," StackState initialize":{"type":"method","name":"initialize","children":[],"call":[]}," StackState inspect":{"type":"method","name":"inspect","children":[],"call":["@stack inspect "]}," Environment unextend":{"type":"method","name":"unextend","children":[],"call":[" raise ","@env empty? ","@use shift ","@env shift ","@dyn shift "]}," Environment extend":{"type":"method","name":"extend","children":[],"call":["@use unshift ","@env unshift ","@dyn unshift "]}," Environment dasgn_curr?":{"type":"method","name":"dasgn_curr?","children":[],"call":[" current has_key? "," current "," dynamic? "," has_key? ! "," has_key? "]}," Environment dynamic?":{"type":"method","name":"dynamic?","children":[],"call":["@dyn [] != ","@dyn [] "]}," Environment current":{"type":"method","name":"current","children":[],"call":["@env first "]}," Environment dynamic":{"type":"method","name":"dynamic","children":[],"call":["env merge ","@env [] reverse inject ","@env [] reverse ","@env [] ","@dyn index "]}," Environment all":{"type":"method","name":"all","children":[],"call":["env merge ","@env [] reverse inject ","@env [] reverse ","@env [] ","@dyn index "]}," Environment has_key?":{"type":"method","name":"has_key?","children":[],"call":[" all has_key? "," all "]}," Environment []=":{"type":"method","name":"[]=","children":[],"call":[" current []= "," current "," raise ","v == "]}," Environment []":{"type":"method","name":"[]","children":[],"call":[" all [] "," all "]}," Environment used?":{"type":"method","name":"used?","children":[],"call":["u [] ","env merge ","@use [] reverse inject ","@use [] reverse ","@use [] ","@dyn index "]}," Environment use":{"type":"method","name":"use","children":[],"call":["@use [] []= ","@use [] ","env [] ","@env each_with_index "]}," Environment initialize":{"type":"method","name":"initialize","children":[],"call":[" extend "," reset "]}," Keyword keyword":{"type":"method","name":"keyword","children":[],"call":["str size "]}," Keyword hash_keyword":{"type":"method","name":"hash_keyword","children":[],"call":[]}," Keyword KWtable id1":{"type":"method","name":"id1","children":[],"call":[" id last "," id "]}," Keyword KWtable id0":{"type":"method","name":"id0","children":[],"call":[" id first "," id "]}," Keyword KWtable initialize":{"type":"method","name":"initialize","children":[],"call":[]}," RubyLexer is_next_no_case":{"type":"method","name":"is_next_no_case","children":[],"call":["buf join "," src pos= "," src ","c downcase != ","r downcase ","c downcase ","buf << "," src read ","b chr ","s each_byte "," src pos "," s src read c pos= "," srb chr  pos= "," s src read c "," srb chr  ","b chr  downb chr ase != "," src read  downcase ","r downb chr ase ","b chr  downb chr ase "," s src read c  src read ead "," srb chr  read ","b ch src read  ","b b chr hr ","s eab chr h_byte "," s src read c pos "," srb chr  pos "]}," RubyLexer is_next_identchar":{"type":"method","name":"is_next_identchar","children":[],"call":["c =~ ","c != "," src unread "," src "," src read "," src read  =~ "," src read  != "," sr src read  unread "," sr src read  "," sr src read  read "]}," RubyLexer rb_compile_error":{"type":"method","name":"rb_compile_error","children":[],"call":[" raise "," src rest [] inspect "," src rest [] "," src rest "," src "," lineno "," ss rest [] inspect "," ss rest [] "," ss rest "," ss "," rest [] inspect "," rest [] "," rest "]}," RubyLexer warning":{"type":"method","name":"warning","children":[],"call":[]}," RubyLexer tokadd":{"type":"method","name":"tokadd","children":[],"call":[" token_buffer << "," token_buffer "," string_buffer << "," string_buffer "]}," RubyLexer number_token":{"type":"method","name":"number_token","children":[],"call":[" yacc_value= ","number to_i ","number to_f "," raise ","nondigit != "]}," RubyLexer parse_number":{"type":"method","name":"parse_number","children":[],"call":[" src read "," src "," number_token "," token_buffer join "," token_buffer "," src unread "," raise ","nondigit != "," token_buffer << ","c == "," yacc_value= "," token_buffer join to_i ","c2 =~ "," loop "," token_buffer length > "," token_buffer length ","c <= ","c >= ","c =~ "," token_buffer length == ","nondigit == "," token_buffer clear "," lex_state= "," rb_compile_error "," int_with_base "," src scan ","number to_f ","number =~ "," src matched "," scan "," matched "," sr src read  read "," s number_token c  number_token ead "," sr src read  "," s number_token c "," numbe number_token _token ","  src matched _token ","  matched _token "," token_buffe number_token  join "," token_buffe number_token  "," sr src read  unread "," s number_token c un number_token ead ","  number_token aise "," token_buffe number_token  << "," src read  == "," ya src read  src read _value= "," token_buffe number_token  join to_i "," src read 2 =~ "," src read  =~ "," token_buffe number_token  length > "," token_buffe number_token  length "," src read  <= "," src read  >= "," token_buffe number_token  length == "," token_buffer  src read lear "," token_buffe number_token  clea number_token  "," rb_ src read ompile_error ","  number_token b_compile_e number_token  number_token o number_token  "," sr src read  s src read an "," s number_token c scan ","numbe number_token  to_f "," src matched  to_f "," matched  to_f ","numbe number_token  =~ "," src matched  =~ "," matched  =~ "," sr src read  mat src read hed "," s number_token c matched "," s src read an "," mat src read hed "]}," RubyLexer yylex":{"type":"method","name":"yylex","children":[],"call":[" yacc_value= "," t "," token_buffer join "," token_buffer "," lex_state= "," lex_state == "," lex_state ","keyword id1 ","keyword id0 == ","keyword id0 ","state == ","state != "," cmdarg is_in_state "," cmdarg "," cond is_in_state "," cond "," command_start= ","keyword name ","keyword state ","keyword nil? ","Keyword  keyword "," token_buffer length "," token_buffer [] =~ "," token_buffer [] ","result nil? "," src unread "," src "," token_buffer << "," src peek ","c2 == ","c2 != "," src read ","(lvasgn :c\n  (send\n    (send nil :src) :read)) == "," token_buffer [] == "," src peek != ","c =~ "," token_buffer clear "," raise ","c inspect "," end_seen= "," src match_string "," src was_begin_of_line ","`@@ + + ","`@@ + ","`@ + + ","`@ + "," token_buffer length == ","c == "," s "," token_buffer join [] to_i "," token_buffer join [] ","last_state == ","c to_sym "," parse_quote ","c !~ "," lex_state is_argument "," cmdarg push "," cond push "," warning ","(lvasgn :c\n  (send\n    (send nil :src) :read)) != "," lex_strterm= "," arg_ambiguous "," cmdarg lexpop "," cond lexpop "," parse_number ","c [] "," read_escape "," is_next_identchar "," src peek ! ","invalid character syntax; use ?\\ + "," lex_state is_argument ! ","tok == "," heredoc_identifier "," lex_state != "," src read_line "," loop "," read_comment == "," read_comment "," command_start ","token == "," parse_string "," lex_strterm "," heredoc "," lex_strterm [] == "," lex_strterm [] "," process_token "," token= ","src matched "," src scan "," rb_compile_error ","src matched inspect ","src scan ","src eos? "," lineno= ","src beginning_of_line? ","src check ","src [] to_i ","src [] ","src [] to_sym "," fix_arg_lex_state ","src check ! ","c [] ord & ","c [] ord ","src getch ","(pair\n  (str \" \")\n  (str \"s\")) [] ","(sym :expr_end) include? ! ","(sym :expr_end) include? ","utype == ","sign == "," expr_beg_push ","src matched [] gsub gsub ","src matched [] gsub ","src matched [] "," token "," token =~ "," unescape ","@comments << ","@comments clear ","@comments << << ","src was_begin_of_line ","(pair\n  (str \")\")\n  (sym :tRPAREN)) [] ","(sym :expr_beg) include? ","src matched gsub gsub ","src matched gsub ","src unread "," yylex_string ","TOKENS  [] ","src pos ","result == "," version == "," version "," tern push "," tern "," yylex_paren19 "," yylex_paren18 "," ruby18 "," tern lexpop ","(sym :tRBRACK) include? "," space_seen "," space_seen= "," is_space_arg? "," is_beg? "," is_end? "," is_end? ! ","src rest [] chr ","src rest [] ","src rest "," is_arg? "," in_lex_state? "," is_arg? ! "," in_lex_state? ! "," paren_nest "," lpar_beg= "," lpar_beg == "," lpar_beg "," brace_nest "," yacc_value ","src matched == ","src [] empty? "," matched "," scan ","ss rest [] chr ","ss rest [] ","ss rest "," check "," end_of_stream? "," beginning_of_line? "," result ","ss [] to_i ","ss [] ","ss [] to_sym "," check ! "," string ","ss getch "," space_vs_beginning "," in_arg_state? "," expr_result "," matched [] gsub gsub "," matched [] gsub "," matched [] ","symbol =~ ","ss [] gsub "," matched =~ "," arg_state ","text == "," matched == ","ss pos ","ss [] empty? "," matched gsub gsub "," matched gsub "," ya src read  src read _value= "," ya read_escape  read_escape _value= "," yasrc getch src getch _value= "," yasrc matched src matched _value= "," yass getch ss getch _value= "," ya matched  matched _value= ","  heredoc_identifier en_buffer join ","  yacc_value= en_buffer join ","  matched en_buffer join ","  parse_string _buffer join ","  heredoc _buffer join ","  space_vs_beginning _buffer join ","  yylex_paren19 _buffer join ","  yylex_paren18 _buffer join "," (pair\n  (str \")\")\n  (sym :tRPAREN)) [] _buffer join ","  heredoc_identifier en_buffer ","  yacc_value= en_buffer ","  matched en_buffer ","  parse_string _buffer ","  heredoc _buffer ","  space_vs_beginning _buffer ","  yylex_paren19 _buffer ","  yylex_paren18 _buffer "," (pair\n  (str \")\")\n  (sym :tRPAREN)) [] _buffer "," lex_ lex_state = "," lex_ lex_state  == "," lex_ lex_state  ","Keyword  keyword  id1 ","Keyword  keyword  id0 == ","Keyword  keyword  id0 "," lex_state  == "," lex_state  != "," cmdarg is_in_ lex_state  ","  src read mdarg is_in_state ","  read_escape mdarg is_in_state "," src getch mdarg is_in_state "," src matched mdarg is_in_state "," ss getch mdarg is_in_state ","  matched mdarg is_in_state ","  src read mdarg ","  read_escape mdarg "," src getch mdarg "," src matched mdarg "," ss getch mdarg ","  matched mdarg "," cond is_in_ lex_state  ","  src read ond is_in_state ","  read_escape ond is_in_state "," src getch ond is_in_state "," src matched ond is_in_state "," ss getch ond is_in_state ","  matched ond is_in_state ","  src read ond ","  read_escape ond "," src getch ond "," src matched ond "," ss getch ond ","  matched ond ","  src read ommand_start= ","  read_escape ommand_start= "," src getch ommand_start= "," src matched ommand_start= "," ss getch ommand_start= ","  matched ommand_start= ","Keyword  keyword  name ","keyword  lex_state  ","Keyword  keyword  state ","Keyword  keyword  nil? ","Keyword  Keyword  keyword  ","  heredoc_identifier en_buffer length ","  yacc_value= en_buffer length ","  matched en_buffer length ","  parse_string _buffer length ","  heredoc _buffer length ","  space_vs_beginning _buffer length ","  yylex_paren19 _buffer length ","  yylex_paren18 _buffer length "," (pair\n  (str \")\")\n  (sym :tRPAREN)) [] _buffer length ","  heredoc_identifier en_buffer [] =~ ","  yacc_value= en_buffer [] =~ ","  matched en_buffer [] =~ ","  parse_string _buffer [] =~ ","  heredoc _buffer [] =~ ","  space_vs_beginning _buffer [] =~ ","  yylex_paren19 _buffer [] =~ ","  yylex_paren18 _buffer [] =~ "," (pair\n  (str \")\")\n  (sym :tRPAREN)) [] _buffer [] =~ ","  heredoc_identifier en_buffer [] ","  yacc_value= en_buffer [] ","  matched en_buffer [] ","  parse_string _buffer [] ","  heredoc _buffer [] ","  space_vs_beginning _buffer [] ","  yylex_paren19 _buffer [] ","  yylex_paren18 _buffer [] "," (pair\n  (str \")\")\n  (sym :tRPAREN)) [] _buffer [] ","src matched  nil? ","(pair\n  (str \")\")\n  (sym :tRPAREN)) []  nil? "," yylex_paren19  nil? "," yylex_paren18  nil? "," sr src read  unread "," sr read_escape  unread "," srsrc getch  unread "," srsrc matched  unread "," srss getch  unread "," sr matched  unread ","  src  unread "," sr src read  "," sr read_escape  "," srsrc getch  "," srsrc matched  "," srss getch  "," sr matched  ","  src  ","  heredoc_identifier en_buffer << ","  yacc_value= en_buffer << ","  matched en_buffer << ","  parse_string _buffer << ","  heredoc _buffer << ","  space_vs_beginning _buffer << ","  yylex_paren19 _buffer << ","  yylex_paren18 _buffer << "," (pair\n  (str \")\")\n  (sym :tRPAREN)) [] _buffer << "," sr src read  peek "," sr read_escape  peek "," srsrc getch  peek "," srsrc matched  peek "," srss getch  peek "," sr matched  peek ","  src  peek "," src read  == ","(pair\n  (str \" \")\n  (str \"s\")) []  == "," src read 2 == "," read_escape 2 == ","src getch 2 == ","src matched 2 == ","ss getch 2 == "," matched 2 == "," src read  != ","(pair\n  (str \" \")\n  (str \"s\")) []  != "," src read 2 != "," read_escape 2 != ","src getch 2 != ","src matched 2 != ","ss getch 2 != "," matched 2 != "," sr src read  read "," sr read_escape  read "," srsrc getch  read "," srsrc matched  read "," srss getch  read "," sr matched  read ","  src  read ","(lvasgn : src read \n  (send\n    (send nil :sr src read ) :read)) == ","(lvasgn : read_escape \n  (send\n    (send nil :sr read_escape ) :read)) == ","(lvasgn :src getch \n  (send\n    (send nil :srsrc getch ) :read)) == ","(lvasgn :src matched \n  (send\n    (send nil :srsrc matched ) :read)) == ","(lvasgn :ss getch \n  (send\n    (send nil :srss getch ) :read)) == ","(lvasgn : matched \n  (send\n    (send nil :sr matched ) :read)) == ","(lvasgn :c\n  (send\n    (send nil : src ) :read)) == ","  heredoc_identifier en_buffer [] == ","  yacc_value= en_buffer [] == ","  matched en_buffer [] == ","  parse_string _buffer [] == ","  heredoc _buffer [] == ","  space_vs_beginning _buffer [] == ","  yylex_paren19 _buffer [] == ","  yylex_paren18 _buffer [] == "," (pair\n  (str \")\")\n  (sym :tRPAREN)) [] _buffer [] == "," sr src read  peek != "," sr read_escape  peek != "," srsrc getch  peek != "," srsrc matched  peek != "," srss getch  peek != "," sr matched  peek != ","  src  peek != "," src read  =~ "," read_escape  =~ ","src getch  =~ ","src matched  =~ ","ss getch  =~ "," matched  =~ "," token_buffer  src read lear "," token_buffer  read_escape lear "," token_buffer src getch lear "," token_buffer src matched lear "," token_buffer ss getch lear "," token_buffer  matched lear ","  heredoc_identifier en_buffer clear ","  yacc_value= en_buffer clear ","  matched en_buffer clear ","  parse_string _buffer clear ","  heredoc _buffer clear ","  space_vs_beginning _buffer clear ","  yylex_paren19 _buffer clear ","  yylex_paren18 _buffer clear "," (pair\n  (str \")\")\n  (sym :tRPAREN)) [] _buffer clear "," src read  inspe src read t "," read_escape  inspe read_escape t ","src getch  inspesrc getch t ","src matched  inspesrc matched t ","ss getch  inspess getch t "," matched  inspe matched t "," sr src read  mat src read h_string "," sr read_escape  mat read_escape h_string "," srsrc getch  matsrc getch h_string "," srsrc matched  matsrc matched h_string "," srss getch  matss getch h_string "," sr matched  mat matched h_string ","  src  match_string "," sr src read  was_begin_of_line "," sr read_escape  was_begin_of_line "," srsrc getch  was_begin_of_line "," srsrc matched  was_begin_of_line "," srss getch  was_begin_of_line "," sr matched  was_begin_of_line ","  src  was_begin_of_line ","  heredoc_identifier en_buffer length == ","  yacc_value= en_buffer length == ","  matched en_buffer length == ","  parse_string _buffer length == ","  heredoc _buffer length == ","  space_vs_beginning _buffer length == ","  yylex_paren19 _buffer length == ","  yylex_paren18 _buffer length == "," (pair\n  (str \")\")\n  (sym :tRPAREN)) [] _buffer length == "," read_escape  == ","src getch  == ","src matched  == ","ss getch  == "," matched  == ","  heredoc_identifier en_buffer join [] to_i ","  yacc_value= en_buffer join [] to_i ","  matched en_buffer join [] to_i ","  parse_string _buffer join [] to_i ","  heredoc _buffer join [] to_i ","  space_vs_beginning _buffer join [] to_i ","  yylex_paren19 _buffer join [] to_i ","  yylex_paren18 _buffer join [] to_i "," (pair\n  (str \")\")\n  (sym :tRPAREN)) [] _buffer join [] to_i ","  heredoc_identifier en_buffer join [] ","  yacc_value= en_buffer join [] ","  matched en_buffer join [] ","  parse_string _buffer join [] ","  heredoc _buffer join [] ","  space_vs_beginning _buffer join [] ","  yylex_paren19 _buffer join [] ","  yylex_paren18 _buffer join [] "," (pair\n  (str \")\")\n  (sym :tRPAREN)) [] _buffer join [] ","last_ lex_state  == "," src read  to_sym "," read_escape  to_sym ","src getch  to_sym ","src matched  to_sym ","ss getch  to_sym "," matched  to_sym "," src read  !~ "," read_escape  !~ ","src getch  !~ ","src matched  !~ ","ss getch  !~ "," matched  !~ "," lex_ lex_state  is_argument ","  src read mdarg push ","  read_escape mdarg push "," src getch mdarg push "," src matched mdarg push "," ss getch mdarg push ","  matched mdarg push ","  src read ond push ","  read_escape ond push "," src getch ond push "," src matched ond push "," ss getch ond push ","  matched ond push ","(lvasgn : src read \n  (send\n    (send nil :sr src read ) :read)) != ","(lvasgn : read_escape \n  (send\n    (send nil :sr read_escape ) :read)) != ","(lvasgn :src getch \n  (send\n    (send nil :srsrc getch ) :read)) != ","(lvasgn :src matched \n  (send\n    (send nil :srsrc matched ) :read)) != ","(lvasgn :ss getch \n  (send\n    (send nil :srss getch ) :read)) != ","(lvasgn : matched \n  (send\n    (send nil :sr matched ) :read)) != ","(lvasgn :c\n  (send\n    (send nil : src ) :read)) != ","  src read mdarg lexpop ","  read_escape mdarg lexpop "," src getch mdarg lexpop "," src matched mdarg lexpop "," ss getch mdarg lexpop ","  matched mdarg lexpop ","  src read ond lexpop ","  read_escape ond lexpop "," src getch ond lexpop "," src matched ond lexpop "," ss getch ond lexpop ","  matched ond lexpop "," src read  [] "," read_escape  [] ","src getch  [] ","src matched  [] ","ss getch  [] "," matched  [] "," read_es src read ape "," read_es read_escape ape "," read_essrc getch ape "," read_essrc matched ape "," read_esss getch ape "," read_es matched ape "," is_next_ident src read har "," is_next_ident read_escape har "," is_next_identsrc getch har "," is_next_identsrc matched har "," is_next_identss getch har "," is_next_ident matched har "," sr src read  peek ! "," sr read_escape  peek ! "," srsrc getch  peek ! "," srsrc matched  peek ! "," srss getch  peek ! "," sr matched  peek ! ","  src  peek ! ","invalid  src read hara src read ter syntax; use ?\\ + ","invalid  read_escape hara read_escape ter syntax; use ?\\ + ","invalid src getch harasrc getch ter syntax; use ?\\ + ","invalid src matched harasrc matched ter syntax; use ?\\ + ","invalid ss getch harass getch ter syntax; use ?\\ + ","invalid  matched hara matched ter syntax; use ?\\ + "," lex_ lex_state  is_argument ! "," heredoc_identifier  == "," yacc_value=  == "," heredo src read _identifier "," heredo read_escape _identifier "," heredosrc getch _identifier "," heredosrc matched _identifier "," heredoss getch _identifier "," heredo matched _identifier "," lex_ lex_state  != "," sr src read  read_line "," sr read_escape  read_line "," srsrc getch  read_line "," srsrc matched  read_line "," srss getch  read_line "," sr matched  read_line ","  src  read_line "," read_ src read omment == "," read_ read_escape omment == "," read_src getch omment == "," read_src matched omment == "," read_ss getch omment == "," read_ matched omment == "," read_ src read omment "," read_ read_escape omment "," read_src getch omment "," read_src matched omment "," read_ss getch omment "," read_ matched omment ","  src read ommand_start ","  read_escape ommand_start "," src getch ommand_start "," src matched ommand_start "," ss getch ommand_start ","  matched ommand_start "," heredoc_identifier en == "," yacc_value= en == "," matched en == "," parse_string  == "," heredoc  == "," space_vs_beginning  == "," yylex_paren19  == "," yylex_paren18  == ","(pair\n  (str \")\")\n  (sym :tRPAREN)) []  == "," heredo src read  "," heredo read_escape  "," heredosrc getch  "," heredosrc matched  "," heredoss getch  "," heredo matched  "," pro src read ess_token "," pro read_escape ess_token "," prosrc getch ess_token "," prosrc matched ess_token "," pross getch ess_token "," pro matched ess_token "," process_ heredoc_identifier en "," process_ yacc_value= en "," process_ matched en "," process_ parse_string  "," process_ heredoc  "," process_ space_vs_beginning  "," process_ yylex_paren19  "," process_ yylex_paren18  "," process_(pair\n  (str \")\")\n  (sym :tRPAREN)) []  "," proce src _token ","  heredoc_identifier en= ","  yacc_value= en= ","  matched en= ","  parse_string = ","  heredoc = ","  space_vs_beginning = ","  yylex_paren19 = ","  yylex_paren18 = "," (pair\n  (str \")\")\n  (sym :tRPAREN)) [] = ","sr src read  mat src read hed ","sr read_escape  mat read_escape hed ","srsrc getch  matsrc getch hed ","srsrc matched  matsrc matched hed ","srss getch  matss getch hed ","sr matched  mat matched hed "," src  matched "," sr src read  s src read an "," sr read_escape  s read_escape an "," srsrc getch  ssrc getch an "," srsrc matched  ssrc matched an "," srss getch  sss getch an "," sr matched  s matched an ","  src  scan "," rb_ src read ompile_error "," rb_ read_escape ompile_error "," rb_src getch ompile_error "," rb_src matched ompile_error "," rb_ss getch ompile_error "," rb_ matched ompile_error ","sr src read  mat src read hed inspe src read t ","sr read_escape  mat read_escape hed inspe read_escape t ","srsrc getch  matsrc getch hed inspesrc getch t ","srsrc matched  matsrc matched hed inspesrc matched t ","srss getch  matss getch hed inspess getch t ","sr matched  mat matched hed inspe matched t "," src  matched inspect ","sr src read  s src read an ","sr read_escape  s read_escape an ","srsrc getch  ssrc getch an ","srsrc matched  ssrc matched an ","srss getch  sss getch an ","sr matched  s matched an "," src  scan ","sr src read  eos? ","sr read_escape  eos? ","srsrc getch  eos? ","srsrc matched  eos? ","srss getch  eos? ","sr matched  eos? "," src  eos? ","sr src read  beginning_of_line? ","sr read_escape  beginning_of_line? ","srsrc getch  beginning_of_line? ","srsrc matched  beginning_of_line? ","srss getch  beginning_of_line? ","sr matched  beginning_of_line? "," src  beginning_of_line? ","sr src read   src read he src read k ","sr read_escape   read_escape he read_escape k ","srsrc getch  src getch hesrc getch k ","srsrc matched  src matched hesrc matched k ","srss getch  ss getch hess getch k ","sr matched   matched he matched k "," src  check ","sr src read  [] to_i ","sr read_escape  [] to_i ","srsrc getch  [] to_i ","srsrc matched  [] to_i ","srss getch  [] to_i ","sr matched  [] to_i "," src  [] to_i ","sr src read  [] ","sr read_escape  [] ","srsrc getch  [] ","srsrc matched  [] ","srss getch  [] ","sr matched  [] "," src  [] ","sr src read  [] to_sym ","sr read_escape  [] to_sym ","srsrc getch  [] to_sym ","srsrc matched  [] to_sym ","srss getch  [] to_sym ","sr matched  [] to_sym "," src  [] to_sym "," fix_arg_lex_ lex_state  ","sr src read   src read he src read k ! ","sr read_escape   read_escape he read_escape k ! ","srsrc getch  src getch hesrc getch k ! ","srsrc matched  src matched hesrc matched k ! ","srss getch  ss getch hess getch k ! ","sr matched   matched he matched k ! "," src  check ! "," src read  [] ord & "," read_escape  [] ord & ","src getch  [] ord & ","src matched  [] ord & ","ss getch  [] ord & "," matched  [] ord & "," src read  [] ord "," read_escape  [] ord ","src getch  [] ord ","src matched  [] ord ","ss getch  [] ord "," matched  [] ord ","sr src read  get src read h ","sr read_escape  get read_escape h ","srsrc getch  getsrc getch h ","srsrc matched  getsrc matched h ","srss getch  getss getch h ","sr matched  get matched h "," src  getch ","(sym :expr_end) in src read lude? ! ","(sym :expr_end) in read_escape lude? ! ","(sym :expr_end) insrc getch lude? ! ","(sym :expr_end) insrc matched lude? ! ","(sym :expr_end) inss getch lude? ! ","(sym :expr_end) in matched lude? ! ","(sym :expr_end) in src read lude? ","(sym :expr_end) in read_escape lude? ","(sym :expr_end) insrc getch lude? ","(sym :expr_end) insrc matched lude? ","(sym :expr_end) inss getch lude? ","(sym :expr_end) in matched lude? ","sr src read  mat src read hed [] gsub gsub ","sr read_escape  mat read_escape hed [] gsub gsub ","srsrc getch  matsrc getch hed [] gsub gsub ","srsrc matched  matsrc matched hed [] gsub gsub ","srss getch  matss getch hed [] gsub gsub ","sr matched  mat matched hed [] gsub gsub "," src  matched [] gsub gsub ","sr src read  mat src read hed [] gsub ","sr read_escape  mat read_escape hed [] gsub ","srsrc getch  matsrc getch hed [] gsub ","srsrc matched  matsrc matched hed [] gsub ","srss getch  matss getch hed [] gsub ","sr matched  mat matched hed [] gsub "," src  matched [] gsub ","sr src read  mat src read hed [] ","sr read_escape  mat read_escape hed [] ","srsrc getch  matsrc getch hed [] ","srsrc matched  matsrc matched hed [] ","srss getch  matss getch hed [] ","sr matched  mat matched hed [] "," src  matched [] ","  heredoc_identifier en ","  yacc_value= en ","  matched en ","  parse_string  ","  heredoc  ","  space_vs_beginning  ","  yylex_paren19  ","  yylex_paren18  "," (pair\n  (str \")\")\n  (sym :tRPAREN)) []  ","  heredoc_identifier en =~ ","  yacc_value= en =~ ","  matched en =~ ","  parse_string  =~ ","  heredoc  =~ ","  space_vs_beginning  =~ ","  yylex_paren19  =~ ","  yylex_paren18  =~ "," (pair\n  (str \")\")\n  (sym :tRPAREN)) []  =~ "," unes src read ape "," unes read_escape ape "," unessrc getch ape "," unessrc matched ape "," unesss getch ape "," unes matched ape ","@ src read omments << ","@ read_escape omments << ","@src getch omments << ","@src matched omments << ","@ss getch omments << ","@ matched omments << ","@ src read omments  src read lear ","@ read_escape omments  read_escape lear ","@src getch omments src getch lear ","@src matched omments src matched lear ","@ss getch omments ss getch lear ","@ matched omments  matched lear ","@ src read omments << << ","@ read_escape omments << << ","@src getch omments << << ","@src matched omments << << ","@ss getch omments << << ","@ matched omments << << ","sr src read  was_begin_of_line ","sr read_escape  was_begin_of_line ","srsrc getch  was_begin_of_line ","srsrc matched  was_begin_of_line ","srss getch  was_begin_of_line ","sr matched  was_begin_of_line "," src  was_begin_of_line ","(sym :expr_beg) in src read lude? ","(sym :expr_beg) in read_escape lude? ","(sym :expr_beg) insrc getch lude? ","(sym :expr_beg) insrc matched lude? ","(sym :expr_beg) inss getch lude? ","(sym :expr_beg) in matched lude? ","sr src read  mat src read hed gsub gsub ","sr read_escape  mat read_escape hed gsub gsub ","srsrc getch  matsrc getch hed gsub gsub ","srsrc matched  matsrc matched hed gsub gsub ","srss getch  matss getch hed gsub gsub ","sr matched  mat matched hed gsub gsub "," src  matched gsub gsub ","sr src read  mat src read hed gsub ","sr read_escape  mat read_escape hed gsub ","srsrc getch  matsrc getch hed gsub ","srsrc matched  matsrc matched hed gsub ","srss getch  matss getch hed gsub ","sr matched  mat matched hed gsub "," src  matched gsub ","sr src read  unread ","sr read_escape  unread ","srsrc getch  unread ","srsrc matched  unread ","srss getch  unread ","sr matched  unread "," src  unread ","sr src read  pos ","sr read_escape  pos ","srsrc getch  pos ","srsrc matched  pos ","srss getch  pos ","sr matched  pos "," src  pos ","(sym :tRBRACK) in src read lude? ","(sym :tRBRACK) in read_escape lude? ","(sym :tRBRACK) insrc getch lude? ","(sym :tRBRACK) insrc matched lude? ","(sym :tRBRACK) inss getch lude? ","(sym :tRBRACK) in matched lude? "," spa src read e_seen "," spa read_escape e_seen "," spasrc getch e_seen "," spasrc matched e_seen "," spass getch e_seen "," spa matched e_seen "," spa src read e_seen= "," spa read_escape e_seen= "," spasrc getch e_seen= "," spasrc matched e_seen= "," spass getch e_seen= "," spa matched e_seen= "," is_spa src read e_arg? "," is_spa read_escape e_arg? "," is_spasrc getch e_arg? "," is_spasrc matched e_arg? "," is_spass getch e_arg? "," is_spa matched e_arg? ","sr src read  rest []  src read hr ","sr read_escape  rest []  read_escape hr ","srsrc getch  rest [] src getch hr ","srsrc matched  rest [] src matched hr ","srss getch  rest [] ss getch hr ","sr matched  rest []  matched hr "," src  rest [] chr ","sr src read  rest [] ","sr read_escape  rest [] ","srsrc getch  rest [] ","srsrc matched  rest [] ","srss getch  rest [] ","sr matched  rest [] "," src  rest [] ","sr src read  rest ","sr read_escape  rest ","srsrc getch  rest ","srsrc matched  rest ","srss getch  rest ","sr matched  rest "," src  rest "," in_lex_ lex_state ? "," in_lex_ lex_state ? ! "," bra src read e_nest "," bra read_escape e_nest "," brasrc getch e_nest "," brasrc matched e_nest "," brass getch e_nest "," bra matched e_nest "," ya src read  src read _value "," ya read_escape  read_escape _value "," yasrc getch src getch _value "," yasrc matched src matched _value "," yass getch ss getch _value "," ya matched  matched _value ","sr src read  mat src read hed == ","sr read_escape  mat read_escape hed == ","srsrc getch  matsrc getch hed == ","srsrc matched  matsrc matched hed == ","srss getch  matss getch hed == ","sr matched  mat matched hed == "," src  matched == ","sr src read  [] empty? ","sr read_escape  [] empty? ","srsrc getch  [] empty? ","srsrc matched  [] empty? ","srss getch  [] empty? ","sr matched  [] empty? "," src  [] empty? "," mat src read hed "," mat read_escape hed "," matsrc getch hed "," matsrc matched hed "," matss getch hed "," mat matched hed "," s src read an "," s read_escape an "," ssrc getch an "," ssrc matched an "," sss getch an "," s matched an ","ss rest []  src read hr ","ss rest []  read_escape hr ","ss rest [] src getch hr ","ss rest [] src matched hr ","ss rest [] ss getch hr ","ss rest []  matched hr ","  src read he src read k ","  read_escape he read_escape k "," src getch hesrc getch k "," src matched hesrc matched k "," ss getch hess getch k ","  matched he matched k "," src matched  ","  src read he src read k ! ","  read_escape he read_escape k ! "," src getch hesrc getch k ! "," src matched hesrc matched k ! "," ss getch hess getch k ! ","  matched he matched k ! ","ss get src read h ","ss get read_escape h ","ss getsrc getch h ","ss getsrc matched h ","ss getss getch h ","ss get matched h "," spa src read e_vs_beginning "," spa read_escape e_vs_beginning "," spasrc getch e_vs_beginning "," spasrc matched e_vs_beginning "," spass getch e_vs_beginning "," spa matched e_vs_beginning "," in_arg_ lex_state ? "," expr_src matched  "," expr_(pair\n  (str \")\")\n  (sym :tRPAREN)) []  "," expr_ yylex_paren19  "," expr_ yylex_paren18  "," mat src read hed [] gsub gsub "," mat read_escape hed [] gsub gsub "," matsrc getch hed [] gsub gsub "," matsrc matched hed [] gsub gsub "," matss getch hed [] gsub gsub "," mat matched hed [] gsub gsub "," mat src read hed [] gsub "," mat read_escape hed [] gsub "," matsrc getch hed [] gsub "," matsrc matched hed [] gsub "," matss getch hed [] gsub "," mat matched hed [] gsub "," mat src read hed [] "," mat read_escape hed [] "," matsrc getch hed [] "," matsrc matched hed [] "," matss getch hed [] "," mat matched hed [] "," src  [] gsub "," mat src read hed =~ "," mat read_escape hed =~ "," matsrc getch hed =~ "," matsrc matched hed =~ "," matss getch hed =~ "," mat matched hed =~ "," arg_ lex_state  "," matched [] gsub gsub  == "," mat src read hed == "," mat read_escape hed == "," matsrc getch hed == "," matsrc matched hed == "," matss getch hed == "," mat matched hed == "," mat src read hed gsub gsub "," mat read_escape hed gsub gsub "," matsrc getch hed gsub gsub "," matsrc matched hed gsub gsub "," matss getch hed gsub gsub "," mat matched hed gsub gsub "," mat src read hed gsub "," mat read_escape hed gsub "," matsrc getch hed gsub "," matsrc matched hed gsub "," matss getch hed gsub "," mat matched hed gsub "]}," RubyLexer read_comment":{"type":"method","name":"read_comment","children":[],"call":[" src unread "," src "," token_buffer << "," token_buffer ","c == ","(lvasgn :c\n  (send\n    (send nil :src) :read)) != "," src read "," token_buffer clear "," sr src read  unread "," sr src read  "," src read  == ","(lvasgn : src read \n  (send\n    (send nil :sr src read ) :read)) != "," sr src read  read "," token_buffer  src read lear "]}," RubyLexer arg_ambiguous":{"type":"method","name":"arg_ambiguous","children":[],"call":[" warning "]}," RubyLexer heredoc_identifier":{"type":"method","name":"heredoc_identifier","children":[],"call":[" yacc_value= "," t ","term == "," lex_strterm= "," s "," token_buffer join "," token_buffer "," src read_line "," src "," src unread "," token_buffer << ","c =~ ","(lvasgn :c\n  (send\n    (send nil :src) :read)) != "," src read "," token_buffer clear ","(send\n  (lvar :func) :&\n  (const nil :STR_FUNC_INDENT)) != ","func & "," raise ","c == ","c != "," string_buffer join "," string_buffer "," src string []= "," src matched_size "," src pos "," src string "," src string [] "," src check "," string_buffer << "," src [] "," src [] empty? "," src scan "," rb_compile_error "," string_buffer= "," src extra_lines_added "," src matched "," result "," matched "," scan "," ss [] "," ss "," ss [] == "," ss [] empty? "," ruby23? "," ruby23plus? ","rest_of_line empty? "," ss charpos - "," ss charpos ","rest_of_line count "," lineno ","mods == ","mods empty? "," ss pos "," match [] "," match "," debug "," ss extra_lines_added "," ya src read  src read _value= "," src []  == "," ss []  == "," lex_str src [] = "," lex_str ss [] = ","  token_buffer join en_buffer join ","  token_buffer join en_buffer "," src read_ src read_line  "," src read_ src string []  "," src read_ src matched  "," src read_ matched  "," sr src read  read_line "," sr src read  "," sr src read  unread ","  token_buffer join en_buffer << "," src read  =~ ","(lvasgn : src read \n  (send\n    (send nil :sr src read ) :read)) != "," sr src read  read ","  token_buffer join en_buffer clear "," token_buffer  src read lear ","(send\n  (lvar :fun src read ) :&\n  ( src read onst nil :STR_FUNC_INDENT)) != ","fun src read  & "," src read  == "," src read  != "," sr src read  string []= "," sr src read  mat src read hed_size "," sr src read  pos "," sr src read  string "," sr src read  string [] "," sr src read   src read he src read k "," sr src read  [] "," sr src read  [] empty? "," sr src read  s src read an "," rb_ src read ompile_error "," src extra_ src read_line s_added "," src extra_ src string [] s_added "," src extra_ src matched s_added "," src extra_ matched s_added "," sr src read  extra_lines_added "," sr src read  mat src read hed "," mat src read hed "," s src read an ","rest_of_ src read_line  empty? ","rest_of_ src string []  empty? ","rest_of_ src matched  empty? ","rest_of_ matched  empty? "," scan  empty? "," ss  src read harpos - "," ss  src read harpos ","rest_of_ src read_line  count ","rest_of_ src string []  count ","rest_of_ src matched  count ","rest_of_ matched  count ","rest_of_line  src read ount "," scan  count ","  src read_line no ","  src string [] no ","  src matched no ","  matched no "," mat src read h [] "," mat src read h "," ss extra_ src read_line s_added "," ss extra_ src string [] s_added "," ss extra_ src matched s_added "," ss extra_ matched s_added "]}," RubyLexer parse_quote":{"type":"method","name":"parse_quote","children":[],"call":[" lex_strterm= "," s "," raise ","Unknown type of %string. Expected 'Q', 'q', 'w', 'x', 'r' or any non letter character, but found ' + + ","Unknown type of %string. Expected 'Q', 'q', 'w', 'x', 'r' or any non letter character, but found ' + "," lex_state= "," src unread "," src "," src read ","c =~ ","STR_SQUOTE  | ","STR_DQUOTE  | "," yacc_value= "," t ","c + ","beg == ","c == ","beg =~ "," rb_compile_error ","token_type nil? "," src scan ","nnd nil? ","(pair\n  (str \"(\")\n  (str \")\")) [] "," src eos? "," src getch "," src matched "," src matched_size == "," src matched_size "," string "," eat_whitespace "," end_of_stream? "," ss getch "," ss "," matched "," ss matched_size == "," ss matched_size "," scan "," getch ","Unknown type of %string. Expe src read ted 'Q', 'q', 'w', 'x', 'r' or any non letter  src read hara src read ter, but found ' + + ","Unknown type of %string. Expected 'Q', 'q', 'w', 'x', 'r' or any non letter c + aracter, but found ' + + ","Unknown type of %string. Expe src read ted 'Q', 'q', 'w', 'x', 'r' or any non letter  src read hara src read ter, but found ' + ","Unknown type of %string. Expected 'Q', 'q', 'w', 'x', 'r' or any non letter c + aracter, but found ' + "," sr src read  unread "," sr src read  "," sr src read  read "," src read  =~ "," ya src read  src read _value= "," src read  + "," src read  == "," rb_ src read ompile_error "," sr src read  s src read an ","(pair\n  (str \"(\")\n  (str \")\")) []  nil? "," sr src read  eos? "," sr src read  get src read h "," src getc +  "," sr src read  mat src read hed "," src matc + ed "," sr src read  mat src read hed_size == "," src matc + ed_size == "," sr src read  mat src read hed_size "," src matc + ed_size "," eat_whitespa src read e "," ss get src read h "," ss getc +  "," mat src read hed "," matc + ed "," ss mat src read hed_size == "," ss matc + ed_size == "," ss mat src read hed_size "," ss matc + ed_size "," s src read an "," get src read h "," getc +  "]}," RubyLexer heredoc":{"type":"method","name":"heredoc","children":[],"call":[" yacc_value= "," s ","str join "," lex_strterm= "," src unread_many "," src "," raise "," src peek == "," src peek ","buffer << "," src read ","buffer join ","c != ","c == "," tokadd_string "," src match_string "," src unread "," t ","# + ","str << "," src read_line ","(send\n  (lvar :func) :&\n  (const\n    (const nil :RubyLexer) :STR_FUNC_EXPAND)) == ","func & "," src begin_of_line? ","(send\n  (lvar :func) :&\n  (const\n    (const nil :RubyLexer) :STR_FUNC_INDENT)) != ","eos inspect ","eos + "," string_buffer join delete "," string_buffer join "," string_buffer "," rb_compile_error "," src eos? "," string_buffer << "," src scan "," src check "," src matched "," src pos "," string_buffer= "," src beginning_of_line? ","eos_re inspect ","(send\n  (lvar :func) :&\n  (const nil :STR_FUNC_EXPAND)) != ","(send\n  (lvar :func) :&\n  (const nil :STR_FUNC_INDENT)) != "," heredoc_dedent "," ruby23? "," end_of_stream? "," scan "," check "," matched "," ss pos "," ss "," ss unread_many "," lineno "," beginning_of_line? ","Regexp  escape ","(send\n  (lvar :func) :&\n  (const nil :STR_FUNC_ICNTNT)) != "," ruby23plus? ","s b delete force_encoding ","s b delete ","s b ","s delete ","s b force_encoding ","last_line end_with? ","func =~ "," command_start= "," result "," string_buffer clear ","str != ","str == "," lex_state= "," heredoc_restore "," matched =~ "," maybe_pop_stack "," ss_string [] "," ss_string "," ya tokadd_string  tokadd_string _value= "," ya src read  src read _value= ","  string_buffer join  "," string_buffer join tr join "," string_buffer join  join "," tokadd_string  join "," lex_ string_buffer join trterm= "," lex_ string_buffer join term= "," lex_ tokadd_string term= "," sr tokadd_string  unread_many "," sr src read  unread_many ","  string_buffer join rc unread_many "," sr tokadd_string  "," sr src read  ","  string_buffer join rc "," rai string_buffer join e "," sr tokadd_string  peek == "," sr src read  peek == ","  string_buffer join rc peek == "," sr tokadd_string  peek "," sr src read  peek ","  string_buffer join rc peek "," sr tokadd_string  read "," sr src read  read ","  string_buffer join rc read "," tokadd_string  != "," src read  != "," tokadd_string  == "," src read  == "," tokadd_ string_buffer join tring "," tokadd_ string_buffer join ing "," tokadd_ tokadd_string ing "," sr tokadd_string  mat tokadd_string h_string "," sr src read  mat src read h_string ","  string_buffer join rc match_ string_buffer join tring "," src match_ string_buffer join ing "," src match_ tokadd_string ing "," sr tokadd_string  unread "," sr src read  unread ","  string_buffer join rc unread "," string_buffer join tr << "," string_buffer join  << "," tokadd_string  << "," sr tokadd_string  read_line "," sr src read  read_line ","  string_buffer join rc read_line ","(send\n  (lvar :fun tokadd_string ) :&\n  ( tokadd_string onst\n    ( tokadd_string onst nil :RubyLexer) :STR_FUNC_EXPAND)) == ","(send\n  (lvar :fun src read ) :&\n  ( src read onst\n    ( src read onst nil :RubyLexer) :STR_FUNC_EXPAND)) == ","( string_buffer join end\n  (lvar :func) :&\n  (con string_buffer join t\n    (con string_buffer join t nil :RubyLexer) :STR_FUNC_EXPAND)) == ","fun tokadd_string  & ","fun src read  & "," sr tokadd_string  begin_of_line? "," sr src read  begin_of_line? ","  string_buffer join rc begin_of_line? ","(send\n  (lvar :fun tokadd_string ) :&\n  ( tokadd_string onst\n    ( tokadd_string onst nil :RubyLexer) :STR_FUNC_INDENT)) != ","(send\n  (lvar :fun src read ) :&\n  ( src read onst\n    ( src read onst nil :RubyLexer) :STR_FUNC_INDENT)) != ","( string_buffer join end\n  (lvar :func) :&\n  (con string_buffer join t\n    (con string_buffer join t nil :RubyLexer) :STR_FUNC_INDENT)) != ","eos inspe tokadd_string t ","eos inspe src read t ","eo string_buffer join  in string_buffer join pect ","eo string_buffer join  + ","  string_buffer join tring_buffer join delete ","  string_buffer join ing_buffer join delete ","  tokadd_string ing_buffer join delete ","  string_buffer join tring_buffer join ","  string_buffer join ing_buffer join ","  tokadd_string ing_buffer join ","  string_buffer join tring_buffer ","  string_buffer join ing_buffer ","  tokadd_string ing_buffer "," rb_ tokadd_string ompile_error "," rb_ src read ompile_error "," sr tokadd_string  eos? "," sr src read  eos? ","  string_buffer join rc eo string_buffer join ? ","  string_buffer join tring_buffer << ","  string_buffer join ing_buffer << ","  tokadd_string ing_buffer << "," sr tokadd_string  s tokadd_string an "," sr src read  s src read an ","  string_buffer join rc  string_buffer join can "," sr tokadd_string   tokadd_string he tokadd_string k "," sr src read   src read he src read k ","  string_buffer join rc check "," sr tokadd_string  mat tokadd_string hed "," sr src read  mat src read hed ","  string_buffer join rc matched "," sr tokadd_string  pos "," sr src read  pos ","  string_buffer join rc po string_buffer join  ","  string_buffer join tring_buffer= ","  string_buffer join ing_buffer= ","  tokadd_string ing_buffer= "," sr tokadd_string  beginning_of_line? "," sr src read  beginning_of_line? ","  string_buffer join rc beginning_of_line? ","eos_re inspe tokadd_string t ","eos_re inspe src read t ","eo string_buffer join _re in string_buffer join pect ","(send\n  (lvar :fun tokadd_string ) :&\n  ( tokadd_string onst nil :STR_FUNC_EXPAND)) != ","(send\n  (lvar :fun src read ) :&\n  ( src read onst nil :STR_FUNC_EXPAND)) != ","( string_buffer join end\n  (lvar :func) :&\n  (con string_buffer join t nil :STR_FUNC_EXPAND)) != ","(send\n  (lvar :fun tokadd_string ) :&\n  ( tokadd_string onst nil :STR_FUNC_INDENT)) != ","(send\n  (lvar :fun src read ) :&\n  ( src read onst nil :STR_FUNC_INDENT)) != ","( string_buffer join end\n  (lvar :func) :&\n  (con string_buffer join t nil :STR_FUNC_INDENT)) != "," heredo tokadd_string _dedent "," heredo src read _dedent "," end_of_ string_buffer join tream? "," end_of_ string_buffer join eam? "," end_of_ tokadd_string eam? "," s tokadd_string an "," s src read an ","  string_buffer join can ","  tokadd_string he tokadd_string k ","  src read he src read k "," mat tokadd_string hed "," mat src read hed ","  string_buffer join  string_buffer join  po string_buffer join  ","  string_buffer join  string_buffer join  ","  string_buffer join  string_buffer join  unread_many ","Regexp  es tokadd_string ape ","Regexp  es src read ape ","Regexp  e string_buffer join cape ","(send\n  (lvar :fun tokadd_string ) :&\n  ( tokadd_string onst nil :STR_FUNC_ICNTNT)) != ","(send\n  (lvar :fun src read ) :&\n  ( src read onst nil :STR_FUNC_ICNTNT)) != ","( string_buffer join end\n  (lvar :func) :&\n  (con string_buffer join t nil :STR_FUNC_ICNTNT)) != "," ruby23plu string_buffer join ? ","s b delete for tokadd_string e_en tokadd_string oding ","s b delete for src read e_en src read oding "," string_buffer join  b delete force_encoding "," string_buffer join  b delete "," string_buffer join  b "," string_buffer join  delete ","s b for tokadd_string e_en tokadd_string oding ","s b for src read e_en src read oding "," string_buffer join  b force_encoding ","la string_buffer join t_line end_with? "," ss_string []  end_with? ","fun tokadd_string  =~ ","fun src read  =~ ","  tokadd_string ommand_start= ","  src read ommand_start= "," command_ string_buffer join tart= "," re string_buffer join ult "," string_buffer  tokadd_string lear "," string_buffer  src read lear ","  string_buffer join tring_buffer clear ","  string_buffer join ing_buffer clear ","  tokadd_string ing_buffer clear "," string_buffer join tr != "," string_buffer join  != "," string_buffer join tr == "," string_buffer join  == "," lex_ string_buffer join tate= "," heredo tokadd_string _restore "," heredo src read _restore "," heredoc_re string_buffer join tore "," mat tokadd_string hed =~ "," mat src read hed =~ "," maybe_pop_sta tokadd_string k "," maybe_pop_sta src read k "," maybe_pop_ string_buffer join tack ","  string_buffer join  string_buffer join _ string_buffer join tring [] "," ss_ string_buffer join ing [] "," ss_ tokadd_string ing [] ","  string_buffer join  string_buffer join _ string_buffer join tring "," ss_ string_buffer join ing "," ss_ tokadd_string ing "]}," RubyLexer tokadd_string":{"type":"method","name":"tokadd_string","children":[],"call":["buffer << "," raise ","(send\n  (lvar :func) :&\n  (const\n    (const nil :RubyLexer) :STR_FUNC_SYMBOL)) != ","func & ","c == "," src unread "," src ","c =~ ","(send\n  (lvar :func) :&\n  (const\n    (const nil :RubyLexer) :STR_FUNC_QWORDS)) != ","(and\n  (lvar :paren)\n  (send\n    (lvar :c) :==\n    (lvar :paren))) ! ","c != "," read_escape ","(send\n  (lvar :func) :&\n  (const\n    (const nil :RubyLexer) :STR_FUNC_ESCAPE)) != ","(send\n  (lvar :func) :&\n  (const\n    (const nil :RubyLexer) :STR_FUNC_EXPAND)) != "," tokadd_escape ","(send\n  (lvar :func) :&\n  (const\n    (const nil :RubyLexer) :STR_FUNC_REGEXP)) != "," src read ","c2 == "," src peek ! "," src peek "," nest "," nest == ","(lvasgn :c\n  (send\n    (send nil :src) :read)) == "," src eos? "," src matched "," string_buffer << "," string_buffer "," rb_compile_error "," src scan ","Regexp  escape ","paren != ","paren nil? "," src check "," src pos ","Regexp  new ","(send\n  (lvar :func) :&\n  (const nil :STR_FUNC_SYMBOL)) != ","(send\n  (lvar :func) :&\n  (const nil :STR_FUNC_REGEXP)) != ","(send\n  (lvar :func) :&\n  (const nil :STR_FUNC_EXPAND)) != ","(send\n  (lvar :func) :&\n  (const nil :STR_FUNC_ESCAPE)) != ","(send\n  (lvar :func) :&\n  (const nil :STR_FUNC_AWORDS)) != ","(send\n  (lvar :func) :&\n  (const nil :STR_FUNC_QWORDS)) != "," end_of_stream? "," matched "," scan "," check "," ss pos "," ss "," string_nest "," string_nest == ","@@regexp_cache [] ","term == ","func =~ "," tokadd "," matched count "," lineno "," getch ","(and\n  (lvar :paren_re)\n  (send nil :check\n    (lvar :paren_re))) ! "," check ! "," debug "," pos ","term !~ "," tokadd_utf8 "," nextc "," unscan ","func !~ "," regexp_cache [] "," regexp_cache ","(send\n  (lvar :fun read_escape ) :&\n  ( read_escape onst\n    ( read_escape onst nil :RubyLexer) :STR_FUNC_SYMBOL)) != ","(send\n  (lvar :fun src read ) :&\n  ( src read onst\n    ( src read onst nil :RubyLexer) :STR_FUNC_SYMBOL)) != ","(send\n  (lvar :fun src matched ) :&\n  ( src matched onst\n    ( src matched onst nil :RubyLexer) :STR_FUNC_SYMBOL)) != ","(send\n  (lvar :fun matched ) :&\n  ( matched onst\n    ( matched onst nil :RubyLexer) :STR_FUNC_SYMBOL)) != ","(send\n  (lvar :func) :&\n  (const\n    (const nil :RubyLeRegexp  escape er) :STR_FUNC_SYMBOL)) != ","(send\n  (lvar :func) :&\n  (consRegexp  escape \n    (consRegexp  escape  nil :RubyLexer) :STR_FUNC_SYMBOL)) != ","fun read_escape  & ","fun src read  & ","fun src matched  & ","fun matched  & "," read_escape  == "," src read  == "," src matched  == "," matched  == "," sr read_escape  unread "," sr src read  unread "," sr src matched  unread "," sr matched  unread "," sr read_escape  "," sr src read  "," sr src matched  "," sr matched  "," read_escape  =~ "," src read  =~ "," src matched  =~ "," matched  =~ ","(send\n  (lvar :fun read_escape ) :&\n  ( read_escape onst\n    ( read_escape onst nil :RubyLexer) :STR_FUNC_QWORDS)) != ","(send\n  (lvar :fun src read ) :&\n  ( src read onst\n    ( src read onst nil :RubyLexer) :STR_FUNC_QWORDS)) != ","(send\n  (lvar :fun src matched ) :&\n  ( src matched onst\n    ( src matched onst nil :RubyLexer) :STR_FUNC_QWORDS)) != ","(send\n  (lvar :fun matched ) :&\n  ( matched onst\n    ( matched onst nil :RubyLexer) :STR_FUNC_QWORDS)) != ","(send\n  (lvar :func) :&\n  (const\n    (const nil :RubyLeRegexp  escape er) :STR_FUNC_QWORDS)) != ","(send\n  (lvar :func) :&\n  (consRegexp  escape \n    (consRegexp  escape  nil :RubyLexer) :STR_FUNC_QWORDS)) != ","(and\n  (lvar :paren)\n  (send\n    (lvar : read_escape ) :==\n    (lvar :paren))) ! ","(and\n  (lvar :paren)\n  (send\n    (lvar : src read ) :==\n    (lvar :paren))) ! ","(and\n  (lvar :paren)\n  (send\n    (lvar : src matched ) :==\n    (lvar :paren))) ! ","(and\n  (lvar :paren)\n  (send\n    (lvar : matched ) :==\n    (lvar :paren))) ! "," read_escape  != "," src read  != "," src matched  != "," matched  != "," read_es read_escape ape "," read_es src read ape "," read_es src matched ape "," read_es matched ape "," read_(send\n  (lvar :func) :&\n  (const nil :STR_FUNC_ESCAPE)) !=  "," read_func =~  ","(send\n  (lvar :fun read_escape ) :&\n  ( read_escape onst\n    ( read_escape onst nil :RubyLexer) :STR_FUNC_ESCAPE)) != ","(send\n  (lvar :fun src read ) :&\n  ( src read onst\n    ( src read onst nil :RubyLexer) :STR_FUNC_ESCAPE)) != ","(send\n  (lvar :fun src matched ) :&\n  ( src matched onst\n    ( src matched onst nil :RubyLexer) :STR_FUNC_ESCAPE)) != ","(send\n  (lvar :fun matched ) :&\n  ( matched onst\n    ( matched onst nil :RubyLexer) :STR_FUNC_ESCAPE)) != ","(send\n  (lvar :func) :&\n  (const\n    (const nil :RubyLeRegexp  escape er) :STR_FUNC_ESCAPE)) != ","(send\n  (lvar :func) :&\n  (consRegexp  escape \n    (consRegexp  escape  nil :RubyLexer) :STR_FUNC_ESCAPE)) != ","(send\n  (lvar :fun read_escape ) :&\n  ( read_escape onst\n    ( read_escape onst nil :RubyLexer) :STR_FUNC_EXPAND)) != ","(send\n  (lvar :fun src read ) :&\n  ( src read onst\n    ( src read onst nil :RubyLexer) :STR_FUNC_EXPAND)) != ","(send\n  (lvar :fun src matched ) :&\n  ( src matched onst\n    ( src matched onst nil :RubyLexer) :STR_FUNC_EXPAND)) != ","(send\n  (lvar :fun matched ) :&\n  ( matched onst\n    ( matched onst nil :RubyLexer) :STR_FUNC_EXPAND)) != ","(send\n  (lvar :func) :&\n  (const\n    (const nil :RubyLeRegexp  escape er) :STR_FUNC_EXPAND)) != ","(send\n  (lvar :func) :&\n  (consRegexp  escape \n    (consRegexp  escape  nil :RubyLexer) :STR_FUNC_EXPAND)) != "," tokadd_es read_escape ape "," tokadd_es src read ape "," tokadd_es src matched ape "," tokadd_es matched ape "," Regexp  escape okadd_escape "," tokadd_(send\n  (lvar :func) :&\n  (const nil :STR_FUNC_ESCAPE)) !=  "," tokadd_func =~  ","(send\n  (lvar :fun read_escape ) :&\n  ( read_escape onst\n    ( read_escape onst nil :RubyLexer) :STR_FUNC_REGEXP)) != ","(send\n  (lvar :fun src read ) :&\n  ( src read onst\n    ( src read onst nil :RubyLexer) :STR_FUNC_REGEXP)) != ","(send\n  (lvar :fun src matched ) :&\n  ( src matched onst\n    ( src matched onst nil :RubyLexer) :STR_FUNC_REGEXP)) != ","(send\n  (lvar :fun matched ) :&\n  ( matched onst\n    ( matched onst nil :RubyLexer) :STR_FUNC_REGEXP)) != ","(send\n  (lvar :func) :&\n  (const\n    (const nil :RubyLeRegexp  escape er) :STR_FUNC_REGEXP)) != ","(send\n  (lvar :func) :&\n  (consRegexp  escape \n    (consRegexp  escape  nil :RubyLexer) :STR_FUNC_REGEXP)) != "," sr read_escape  read "," sr src read  read "," sr src matched  read "," sr matched  read "," read_escape 2 == "," src read 2 == "," src matched 2 == "," matched 2 == "," sr read_escape  peek ! "," sr src read  peek ! "," sr src matched  peek ! "," sr matched  peek ! "," sr read_escape  peek "," sr src read  peek "," sr src matched  peek "," sr matched  peek "," nesRegexp  escape  "," nesRegexp  escape  == ","(lvasgn : read_escape \n  (send\n    (send nil :sr read_escape ) :read)) == ","(lvasgn : src read \n  (send\n    (send nil :sr src read ) :read)) == ","(lvasgn : src matched \n  (send\n    (send nil :sr src matched ) :read)) == ","(lvasgn : matched \n  (send\n    (send nil :sr matched ) :read)) == "," sr read_escape  eos? "," sr src read  eos? "," sr src matched  eos? "," sr matched  eos? "," sr read_escape  mat read_escape hed "," sr src read  mat src read hed "," sr src matched  mat src matched hed "," sr matched  mat matched hed "," src maRegexp  escape ched "," sRegexp  escape ring_buffer << "," sRegexp  escape ring_buffer "," rb_ read_escape ompile_error "," rb_ src read ompile_error "," rb_ src matched ompile_error "," rb_ matched ompile_error "," sr read_escape  s read_escape an "," sr src read  s src read an "," sr src matched  s src matched an "," sr matched  s matched an ","Regexp  es read_escape ape ","Regexp  es src read ape ","Regexp  es src matched ape ","Regexp  es matched ape ","RegeRegexp  escape p  escape ","Regexp  (send\n  (lvar :func) :&\n  (const nil :STR_FUNC_ESCAPE)) !=  ","Regexp  func =~  "," sr read_escape   read_escape he read_escape k "," sr src read   src read he src read k "," sr src matched   src matched he src matched k "," sr matched   matched he matched k "," sr read_escape  pos "," sr src read  pos "," sr src matched  pos "," sr matched  pos ","RegeRegexp  escape p  new ","(send\n  (lvar :fun read_escape ) :&\n  ( read_escape onst nil :STR_FUNC_SYMBOL)) != ","(send\n  (lvar :fun src read ) :&\n  ( src read onst nil :STR_FUNC_SYMBOL)) != ","(send\n  (lvar :fun src matched ) :&\n  ( src matched onst nil :STR_FUNC_SYMBOL)) != ","(send\n  (lvar :fun matched ) :&\n  ( matched onst nil :STR_FUNC_SYMBOL)) != ","(send\n  (lvar :func) :&\n  (consRegexp  escape  nil :STR_FUNC_SYMBOL)) != ","(send\n  (lvar :fun read_escape ) :&\n  ( read_escape onst nil :STR_FUNC_REGEXP)) != ","(send\n  (lvar :fun src read ) :&\n  ( src read onst nil :STR_FUNC_REGEXP)) != ","(send\n  (lvar :fun src matched ) :&\n  ( src matched onst nil :STR_FUNC_REGEXP)) != ","(send\n  (lvar :fun matched ) :&\n  ( matched onst nil :STR_FUNC_REGEXP)) != ","(send\n  (lvar :func) :&\n  (consRegexp  escape  nil :STR_FUNC_REGEXP)) != ","(send\n  (lvar :fun read_escape ) :&\n  ( read_escape onst nil :STR_FUNC_EXPAND)) != ","(send\n  (lvar :fun src read ) :&\n  ( src read onst nil :STR_FUNC_EXPAND)) != ","(send\n  (lvar :fun src matched ) :&\n  ( src matched onst nil :STR_FUNC_EXPAND)) != ","(send\n  (lvar :fun matched ) :&\n  ( matched onst nil :STR_FUNC_EXPAND)) != ","(send\n  (lvar :func) :&\n  (consRegexp  escape  nil :STR_FUNC_EXPAND)) != ","(send\n  (lvar :fun read_escape ) :&\n  ( read_escape onst nil :STR_FUNC_ESCAPE)) != ","(send\n  (lvar :fun src read ) :&\n  ( src read onst nil :STR_FUNC_ESCAPE)) != ","(send\n  (lvar :fun src matched ) :&\n  ( src matched onst nil :STR_FUNC_ESCAPE)) != ","(send\n  (lvar :fun matched ) :&\n  ( matched onst nil :STR_FUNC_ESCAPE)) != ","(send\n  (lvar :func) :&\n  (consRegexp  escape  nil :STR_FUNC_ESCAPE)) != ","(send\n  (lvar :fun read_escape ) :&\n  ( read_escape onst nil :STR_FUNC_AWORDS)) != ","(send\n  (lvar :fun src read ) :&\n  ( src read onst nil :STR_FUNC_AWORDS)) != ","(send\n  (lvar :fun src matched ) :&\n  ( src matched onst nil :STR_FUNC_AWORDS)) != ","(send\n  (lvar :fun matched ) :&\n  ( matched onst nil :STR_FUNC_AWORDS)) != ","(send\n  (lvar :func) :&\n  (consRegexp  escape  nil :STR_FUNC_AWORDS)) != ","(send\n  (lvar :fun read_escape ) :&\n  ( read_escape onst nil :STR_FUNC_QWORDS)) != ","(send\n  (lvar :fun src read ) :&\n  ( src read onst nil :STR_FUNC_QWORDS)) != ","(send\n  (lvar :fun src matched ) :&\n  ( src matched onst nil :STR_FUNC_QWORDS)) != ","(send\n  (lvar :fun matched ) :&\n  ( matched onst nil :STR_FUNC_QWORDS)) != ","(send\n  (lvar :func) :&\n  (consRegexp  escape  nil :STR_FUNC_QWORDS)) != "," end_of_sRegexp  escape ream? "," mat read_escape hed "," mat src read hed "," mat src matched hed "," mat matched hed "," maRegexp  escape ched "," s read_escape an "," s src read an "," s src matched an "," s matched an ","  read_escape he read_escape k ","  src read he src read k ","  src matched he src matched k ","  matched he matched k "," sRegexp  escape ring_nesRegexp  escape  "," sRegexp  escape ring_nesRegexp  escape  == ","@@regexp_ read_escape a read_escape he [] ","@@regexp_ src read a src read he [] ","@@regexp_ src matched a src matched he [] ","@@regexp_ matched a matched he [] ","@@regeRegexp  escape p_cache [] ","@@(send\n  (lvar :func) :&\n  (const nil :STR_FUNC_REGEXP)) != _cache [] ","@@func =~ _cache [] ","Regexp  escape erm == ","fun read_escape  =~ ","fun src read  =~ ","fun src matched  =~ ","fun matched  =~ "," Regexp  escape okadd "," mat read_escape hed  read_escape ount "," mat src read hed  src read ount "," mat src matched hed  src matched ount "," mat matched hed  matched ount "," maRegexp  escape ched counRegexp  escape  "," get read_escape h "," get src read h "," get src matched h "," get matched h "," geRegexp  escape ch ","(and\n  (lvar :paren_re)\n  (send nil : read_escape he read_escape k\n    (lvar :paren_re))) ! ","(and\n  (lvar :paren_re)\n  (send nil : src read he src read k\n    (lvar :paren_re))) ! ","(and\n  (lvar :paren_re)\n  (send nil : src matched he src matched k\n    (lvar :paren_re))) ! ","(and\n  (lvar :paren_re)\n  (send nil : matched he matched k\n    (lvar :paren_re))) ! ","(and\n  (lvar :Regexp  new )\n  (send nil :check\n    (lvar :Regexp  new ))) ! ","(and\n  (lvar :@@regexp_cache [] )\n  (send nil :check\n    (lvar :@@regexp_cache [] ))) ! ","(and\n  (lvar : regexp_cache [] )\n  (send nil :check\n    (lvar : regexp_cache [] ))) ! ","  read_escape he read_escape k ! ","  src read he src read k ! ","  src matched he src matched k ! ","  matched he matched k ! ","Regexp  escape erm !~ "," Regexp  escape okadd_uRegexp  escape f8 "," next read_escape  "," next src read  "," next src matched  "," next matched  "," neRegexp  escape tc "," nexRegexp  escape c "," uns read_escape an "," uns src read an "," uns src matched an "," uns matched an ","fun read_escape  !~ ","fun src read  !~ ","fun src matched  !~ ","fun matched  !~ "," regexp_ read_escape a read_escape he [] "," regexp_ src read a src read he [] "," regexp_ src matched a src matched he [] "," regexp_ matched a matched he [] "," regeRegexp  escape p_cache [] "," (send\n  (lvar :func) :&\n  (const nil :STR_FUNC_REGEXP)) != _cache [] "," func =~ _cache [] "," regexp_ read_escape a read_escape he "," regexp_ src read a src read he "," regexp_ src matched a src matched he "," regexp_ matched a matched he "," regeRegexp  escape p_cache "," (send\n  (lvar :func) :&\n  (const nil :STR_FUNC_REGEXP)) != _cache "," func =~ _cache "]}," RubyLexer read_escape":{"type":"method","name":"read_escape","children":[],"call":[" yyerror ","c [] "," read_escape "," src read "," src "," pushback ","(lvasgn :c\n  (send\n    (send nil :src) :read)) != ","c == "," src unread ","c != ","n chr "," raise ","c inspect ","c [] - ","c [] - + ","c =~ "," src read downcase ","2 times ","3 times "," src getch "," rb_compile_error "," src eos? "," src scan ","c []= ","(send\n  (send\n    (send\n      (lvar :c) :[]\n      (int 0)) :ord) :&\n  (int 159)) chr ","c [] ord & ","c [] ord "," src [] ","127 chr ","(send\n  (send\n    (send\n      (lvar :c) :[]\n      (int 0)) :ord) :|\n  (int 128)) chr ","c [] ord | "," src [] to_i chr "," src [] to_i "," src matched to_i chr "," src matched to_i "," src matched "," src check "," ss getch "," ss "," end_of_stream? "," scan ","(send\n  (send\n    (send\n      (send nil :ss) :[]\n      (int 1)) :delete\n    (str \"{}\")) :to_i\n  (int 16)) pack "," ss [] delete to_i "," ss [] delete "," ss [] "," matched "," check "," ss [] to_i chr "," ss [] to_i ","(send\n  (send\n    (send nil :matched) :to_i\n    (int 8)) :&\n  (int 255)) chr "," matched to_i & "," matched to_i "," extra_lineno "," dup "," ss [] to_i chr force_encoding ","(send\n  (send\n    (send nil :matched) :to_i\n    (int 8)) :&\n  (int 255)) chr force_encoding "," getch ","(send\n  (send\n    (send\n      (send nil :ss) :[]\n      (int 1)) :split) :map) pack ","s to_i "," ss [] split map "," ss [] split ","(send\n  (send\n    (send nil :ss) :[]\n    (int 1)) :to_i\n  (int 16)) pack ","(send\n  (send\n    (send\n      (send nil :match) :[]\n      (int 1)) :split) :map) pack "," match [] split map "," match [] split "," match [] "," match "," debug ","(send\n  (send\n    (send nil :match) :[]\n    (int 1)) :to_i\n  (int 16)) pack "," match [] to_i "," match [] to_i chr force_encoding "," match [] to_i chr ","(send\n  (send\n    (send\n      (send nil :src) :matched) :to_i\n    (int 8)) :&\n  (int 255)) chr "," src matched to_i & "," read_escape  [] "," src read  [] "," src read downcase  [] "," src []  [] "," ss []  [] "," match []  [] "," read_es read_escape ape "," read_es src read ape "," read_es src read downcase ape "," read_es src [] ape "," read_es ss [] ape "," read_es match [] ape "," sr read_escape  read "," sr src read  read "," sr src read downcase  read "," sr src []  read "," sr ss []  read "," sr match []  read "," sr read_escape  "," sr src read  "," sr src read downcase  "," sr src []  "," sr ss []  "," sr match []  "," pushba read_escape k "," pushba src read k "," pushba src read downcase k "," pushba src [] k "," pushba ss [] k "," pushba match [] k ","(lvasgn : read_escape \n  (send\n    (send nil :sr read_escape ) :read)) != ","(lvasgn : src read \n  (send\n    (send nil :sr src read ) :read)) != ","(lvasgn : src read downcase \n  (send\n    (send nil :sr src read downcase ) :read)) != ","(lvasgn : src [] \n  (send\n    (send nil :sr src [] ) :read)) != ","(lvasgn : ss [] \n  (send\n    (send nil :sr ss [] ) :read)) != ","(lvasgn : match [] \n  (send\n    (send nil :sr match [] ) :read)) != "," read_escape  == "," src read  == "," src read downcase  == "," src []  == "," ss []  == "," match []  == "," sr read_escape  unread "," sr src read  unread "," sr src read downcase  unread "," sr src []  unread "," sr ss []  unread "," sr match []  unread "," read_escape  != "," src read  != "," src read downcase  != "," src []  != "," ss []  != "," match []  != ","n  read_escape hr ","n  src read hr ","n  src read downcase hr ","n  src [] hr ","n  ss [] hr ","n  match [] hr "," read_escape  inspe read_escape t "," src read  inspe src read t "," src read downcase  inspe src read downcase t "," src []  inspe src [] t "," ss []  inspe ss [] t "," match []  inspe match [] t "," read_escape  [] - "," src read  [] - "," src read downcase  [] - "," src []  [] - "," ss []  [] - "," match []  [] - "," read_escape  [] - + "," src read  [] - + "," src read downcase  [] - + "," src []  [] - + "," ss []  [] - + "," match []  [] - + "," read_escape  =~ "," src read  =~ "," src read downcase  =~ "," src []  =~ "," ss []  =~ "," match []  =~ "," sr read_escape  read down read_escape ase "," sr src read  read down src read ase "," sr src read downcase  read down src read downcase ase "," sr src []  read down src [] ase "," sr ss []  read down ss [] ase "," sr match []  read down match [] ase "," sr read_escape  get read_escape h "," sr src read  get src read h "," sr src read downcase  get src read downcase h "," sr src []  get src [] h "," sr ss []  get ss [] h "," sr match []  get match [] h "," rb_ read_escape ompile_error "," rb_ src read ompile_error "," rb_ src read downcase ompile_error "," rb_ src [] ompile_error "," rb_ ss [] ompile_error "," rb_ match [] ompile_error "," sr read_escape  eos? "," sr src read  eos? "," sr src read downcase  eos? "," sr src []  eos? "," sr ss []  eos? "," sr match []  eos? "," sr read_escape  s read_escape an "," sr src read  s src read an "," sr src read downcase  s src read downcase an "," sr src []  s src [] an "," sr ss []  s ss [] an "," sr match []  s match [] an "," read_escape  []= "," src read  []= "," src read downcase  []= "," src []  []= "," ss []  []= "," match []  []= ","(send\n  (send\n    (send\n      (lvar : read_escape ) :[]\n      (int 0)) :ord) :&\n  (int 159))  read_escape hr ","(send\n  (send\n    (send\n      (lvar : src read ) :[]\n      (int 0)) :ord) :&\n  (int 159))  src read hr ","(send\n  (send\n    (send\n      (lvar : src read downcase ) :[]\n      (int 0)) :ord) :&\n  (int 159))  src read downcase hr ","(send\n  (send\n    (send\n      (lvar : src [] ) :[]\n      (int 0)) :ord) :&\n  (int 159))  src [] hr ","(send\n  (send\n    (send\n      (lvar : ss [] ) :[]\n      (int 0)) :ord) :&\n  (int 159))  ss [] hr ","(send\n  (send\n    (send\n      (lvar : match [] ) :[]\n      (int 0)) :ord) :&\n  (int 159))  match [] hr "," read_escape  [] ord & "," src read  [] ord & "," src read downcase  [] ord & "," src []  [] ord & "," ss []  [] ord & "," match []  [] ord & "," read_escape  [] ord "," src read  [] ord "," src read downcase  [] ord "," src []  [] ord "," ss []  [] ord "," match []  [] ord "," sr read_escape  [] "," sr src read  [] "," sr src read downcase  [] "," sr src []  [] "," sr ss []  [] "," sr match []  [] ","127  read_escape hr ","127  src read hr ","127  src read downcase hr ","127  src [] hr ","127  ss [] hr ","127  match [] hr ","(send\n  (send\n    (send\n      (lvar : read_escape ) :[]\n      (int 0)) :ord) :|\n  (int 128))  read_escape hr ","(send\n  (send\n    (send\n      (lvar : src read ) :[]\n      (int 0)) :ord) :|\n  (int 128))  src read hr ","(send\n  (send\n    (send\n      (lvar : src read downcase ) :[]\n      (int 0)) :ord) :|\n  (int 128))  src read downcase hr ","(send\n  (send\n    (send\n      (lvar : src [] ) :[]\n      (int 0)) :ord) :|\n  (int 128))  src [] hr ","(send\n  (send\n    (send\n      (lvar : ss [] ) :[]\n      (int 0)) :ord) :|\n  (int 128))  ss [] hr ","(send\n  (send\n    (send\n      (lvar : match [] ) :[]\n      (int 0)) :ord) :|\n  (int 128))  match [] hr "," read_escape  [] ord | "," src read  [] ord | "," src read downcase  [] ord | "," src []  [] ord | "," ss []  [] ord | "," match []  [] ord | "," sr read_escape  [] to_i  read_escape hr "," sr src read  [] to_i  src read hr "," sr src read downcase  [] to_i  src read downcase hr "," sr src []  [] to_i  src [] hr "," sr ss []  [] to_i  ss [] hr "," sr match []  [] to_i  match [] hr "," sr read_escape  [] to_i "," sr src read  [] to_i "," sr src read downcase  [] to_i "," sr src []  [] to_i "," sr ss []  [] to_i "," sr match []  [] to_i "," sr read_escape  mat read_escape hed to_i  read_escape hr "," sr src read  mat src read hed to_i  src read hr "," sr src read downcase  mat src read downcase hed to_i  src read downcase hr "," sr src []  mat src [] hed to_i  src [] hr "," sr ss []  mat ss [] hed to_i  ss [] hr "," sr match []  mat match [] hed to_i  match [] hr "," sr read_escape  mat read_escape hed to_i "," sr src read  mat src read hed to_i "," sr src read downcase  mat src read downcase hed to_i "," sr src []  mat src [] hed to_i "," sr ss []  mat ss [] hed to_i "," sr match []  mat match [] hed to_i "," sr read_escape  mat read_escape hed "," sr src read  mat src read hed "," sr src read downcase  mat src read downcase hed "," sr src []  mat src [] hed "," sr ss []  mat ss [] hed "," sr match []  mat match [] hed "," sr read_escape   read_escape he read_escape k "," sr src read   src read he src read k "," sr src read downcase   src read downcase he src read downcase k "," sr src []   src [] he src [] k "," sr ss []   ss [] he ss [] k "," sr match []   match [] he match [] k "," ss get read_escape h "," ss get src read h "," ss get src read downcase h "," ss get src [] h "," ss get ss [] h "," ss get match [] h "," s read_escape an "," s src read an "," s src read downcase an "," s src [] an "," s ss [] an "," s match [] an ","(send\n  (send\n    (send\n      (send nil :ss) :[]\n      (int 1)) :delete\n    (str \"{}\")) :to_i\n  (int 16)) pa read_escape k ","(send\n  (send\n    (send\n      (send nil :ss) :[]\n      (int 1)) :delete\n    (str \"{}\")) :to_i\n  (int 16)) pa src read k ","(send\n  (send\n    (send\n      (send nil :ss) :[]\n      (int 1)) :delete\n    (str \"{}\")) :to_i\n  (int 16)) pa src read downcase k ","(send\n  (send\n    (send\n      (send nil :ss) :[]\n      (int 1)) :delete\n    (str \"{}\")) :to_i\n  (int 16)) pa src [] k ","(send\n  (send\n    (send\n      (send nil :ss) :[]\n      (int 1)) :delete\n    (str \"{}\")) :to_i\n  (int 16)) pa ss [] k ","(send\n  (send\n    (send\n      (send nil :ss) :[]\n      (int 1)) :delete\n    (str \"{}\")) :to_i\n  (int 16)) pa match [] k "," mat read_escape hed "," mat src read hed "," mat src read downcase hed "," mat src [] hed "," mat ss [] hed "," mat match [] hed ","  read_escape he read_escape k ","  src read he src read k ","  src read downcase he src read downcase k ","  src [] he src [] k ","  ss [] he ss [] k ","  match [] he match [] k "," ss [] to_i  read_escape hr "," ss [] to_i  src read hr "," ss [] to_i  src read downcase hr "," ss [] to_i  src [] hr "," ss [] to_i  ss [] hr "," ss [] to_i  match [] hr ","(send\n  (send\n    (send nil :mat read_escape hed) :to_i\n    (int 8)) :&\n  (int 255))  read_escape hr ","(send\n  (send\n    (send nil :mat src read hed) :to_i\n    (int 8)) :&\n  (int 255))  src read hr ","(send\n  (send\n    (send nil :mat src read downcase hed) :to_i\n    (int 8)) :&\n  (int 255))  src read downcase hr ","(send\n  (send\n    (send nil :mat src [] hed) :to_i\n    (int 8)) :&\n  (int 255))  src [] hr ","(send\n  (send\n    (send nil :mat ss [] hed) :to_i\n    (int 8)) :&\n  (int 255))  ss [] hr ","(send\n  (send\n    (send nil :mat match [] hed) :to_i\n    (int 8)) :&\n  (int 255))  match [] hr "," mat read_escape hed to_i & "," mat src read hed to_i & "," mat src read downcase hed to_i & "," mat src [] hed to_i & "," mat ss [] hed to_i & "," mat match [] hed to_i & "," mat read_escape hed to_i "," mat src read hed to_i "," mat src read downcase hed to_i "," mat src [] hed to_i "," mat ss [] hed to_i "," mat match [] hed to_i "," ss [] to_i  read_escape hr for read_escape e_en read_escape oding "," ss [] to_i  src read hr for src read e_en src read oding "," ss [] to_i  src read downcase hr for src read downcase e_en src read downcase oding "," ss [] to_i  src [] hr for src [] e_en src [] oding "," ss [] to_i  ss [] hr for ss [] e_en ss [] oding "," ss [] to_i  match [] hr for match [] e_en match [] oding ","(send\n  (send\n    (send nil :mat read_escape hed) :to_i\n    (int 8)) :&\n  (int 255))  read_escape hr for read_escape e_en read_escape oding ","(send\n  (send\n    (send nil :mat src read hed) :to_i\n    (int 8)) :&\n  (int 255))  src read hr for src read e_en src read oding ","(send\n  (send\n    (send nil :mat src read downcase hed) :to_i\n    (int 8)) :&\n  (int 255))  src read downcase hr for src read downcase e_en src read downcase oding ","(send\n  (send\n    (send nil :mat src [] hed) :to_i\n    (int 8)) :&\n  (int 255))  src [] hr for src [] e_en src [] oding ","(send\n  (send\n    (send nil :mat ss [] hed) :to_i\n    (int 8)) :&\n  (int 255))  ss [] hr for ss [] e_en ss [] oding ","(send\n  (send\n    (send nil :mat match [] hed) :to_i\n    (int 8)) :&\n  (int 255))  match [] hr for match [] e_en match [] oding "," get read_escape h "," get src read h "," get src read downcase h "," get src [] h "," get ss [] h "," get match [] h ","(send\n  (send\n    (send\n      (send nil :ss) :[]\n      (int 1)) :split) :map) pa read_escape k ","(send\n  (send\n    (send\n      (send nil :ss) :[]\n      (int 1)) :split) :map) pa src read k ","(send\n  (send\n    (send\n      (send nil :ss) :[]\n      (int 1)) :split) :map) pa src read downcase k ","(send\n  (send\n    (send\n      (send nil :ss) :[]\n      (int 1)) :split) :map) pa src [] k ","(send\n  (send\n    (send\n      (send nil :ss) :[]\n      (int 1)) :split) :map) pa ss [] k ","(send\n  (send\n    (send\n      (send nil :ss) :[]\n      (int 1)) :split) :map) pa match [] k ","(send\n  (send\n    (send nil :ss) :[]\n    (int 1)) :to_i\n  (int 16)) pa read_escape k ","(send\n  (send\n    (send nil :ss) :[]\n    (int 1)) :to_i\n  (int 16)) pa src read k ","(send\n  (send\n    (send nil :ss) :[]\n    (int 1)) :to_i\n  (int 16)) pa src read downcase k ","(send\n  (send\n    (send nil :ss) :[]\n    (int 1)) :to_i\n  (int 16)) pa src [] k ","(send\n  (send\n    (send nil :ss) :[]\n    (int 1)) :to_i\n  (int 16)) pa ss [] k ","(send\n  (send\n    (send nil :ss) :[]\n    (int 1)) :to_i\n  (int 16)) pa match [] k ","(send\n  (send\n    (send\n      (send nil :mat read_escape h) :[]\n      (int 1)) :split) :map) pa read_escape k ","(send\n  (send\n    (send\n      (send nil :mat src read h) :[]\n      (int 1)) :split) :map) pa src read k ","(send\n  (send\n    (send\n      (send nil :mat src read downcase h) :[]\n      (int 1)) :split) :map) pa src read downcase k ","(send\n  (send\n    (send\n      (send nil :mat src [] h) :[]\n      (int 1)) :split) :map) pa src [] k ","(send\n  (send\n    (send\n      (send nil :mat ss [] h) :[]\n      (int 1)) :split) :map) pa ss [] k ","(send\n  (send\n    (send\n      (send nil :mat match [] h) :[]\n      (int 1)) :split) :map) pa match [] k "," mat read_escape h [] split map "," mat src read h [] split map "," mat src read downcase h [] split map "," mat src [] h [] split map "," mat ss [] h [] split map "," mat match [] h [] split map "," mat read_escape h [] split "," mat src read h [] split "," mat src read downcase h [] split "," mat src [] h [] split "," mat ss [] h [] split "," mat match [] h [] split "," mat read_escape h [] "," mat src read h [] "," mat src read downcase h [] "," mat src [] h [] "," mat ss [] h [] "," mat match [] h [] "," mat read_escape h "," mat src read h "," mat src read downcase h "," mat src [] h "," mat ss [] h "," mat match [] h ","(send\n  (send\n    (send nil :mat read_escape h) :[]\n    (int 1)) :to_i\n  (int 16)) pa read_escape k ","(send\n  (send\n    (send nil :mat src read h) :[]\n    (int 1)) :to_i\n  (int 16)) pa src read k ","(send\n  (send\n    (send nil :mat src read downcase h) :[]\n    (int 1)) :to_i\n  (int 16)) pa src read downcase k ","(send\n  (send\n    (send nil :mat src [] h) :[]\n    (int 1)) :to_i\n  (int 16)) pa src [] k ","(send\n  (send\n    (send nil :mat ss [] h) :[]\n    (int 1)) :to_i\n  (int 16)) pa ss [] k ","(send\n  (send\n    (send nil :mat match [] h) :[]\n    (int 1)) :to_i\n  (int 16)) pa match [] k "," mat read_escape h [] to_i "," mat src read h [] to_i "," mat src read downcase h [] to_i "," mat src [] h [] to_i "," mat ss [] h [] to_i "," mat match [] h [] to_i "," mat read_escape h [] to_i  read_escape hr for read_escape e_en read_escape oding "," mat src read h [] to_i  src read hr for src read e_en src read oding "," mat src read downcase h [] to_i  src read downcase hr for src read downcase e_en src read downcase oding "," mat src [] h [] to_i  src [] hr for src [] e_en src [] oding "," mat ss [] h [] to_i  ss [] hr for ss [] e_en ss [] oding "," mat match [] h [] to_i  match [] hr for match [] e_en match [] oding "," mat read_escape h [] to_i  read_escape hr "," mat src read h [] to_i  src read hr "," mat src read downcase h [] to_i  src read downcase hr "," mat src [] h [] to_i  src [] hr "," mat ss [] h [] to_i  ss [] hr "," mat match [] h [] to_i  match [] hr ","(send\n  (send\n    (send\n      (send nil :sr read_escape ) :mat read_escape hed) :to_i\n    (int 8)) :&\n  (int 255))  read_escape hr ","(send\n  (send\n    (send\n      (send nil :sr src read ) :mat src read hed) :to_i\n    (int 8)) :&\n  (int 255))  src read hr ","(send\n  (send\n    (send\n      (send nil :sr src read downcase ) :mat src read downcase hed) :to_i\n    (int 8)) :&\n  (int 255))  src read downcase hr ","(send\n  (send\n    (send\n      (send nil :sr src [] ) :mat src [] hed) :to_i\n    (int 8)) :&\n  (int 255))  src [] hr ","(send\n  (send\n    (send\n      (send nil :sr ss [] ) :mat ss [] hed) :to_i\n    (int 8)) :&\n  (int 255))  ss [] hr ","(send\n  (send\n    (send\n      (send nil :sr match [] ) :mat match [] hed) :to_i\n    (int 8)) :&\n  (int 255))  match [] hr "," sr read_escape  mat read_escape hed to_i & "," sr src read  mat src read hed to_i & "," sr src read downcase  mat src read downcase hed to_i & "," sr src []  mat src [] hed to_i & "," sr ss []  mat ss [] hed to_i & "," sr match []  mat match [] hed to_i & "]}," RubyLexer tokadd_escape":{"type":"method","name":"tokadd_escape","children":[],"call":[" tokadd ","c != "," yyerror "," raise ","c == "," tokadd_escape ","(lvasgn :c\n  (send\n    (send nil :src) :read)) == "," src read "," src "," pushback ","(lvasgn :c\n  (send\n    (send nil :src) :read)) != "," src unread ","c =~ ","2 times ","7 < ","c < "," rb_compile_error "," string_buffer << "," src matched "," string_buffer "," src scan "," matched "," scan ","prev end_with? ","term == "," string_buffer last "," ss [] "," ss ","chr ascii_only? ","Invalid escape character syntax: %p % "," rest lines first "," rest lines "," rest "," match [] "," match "," check "," src read  != "," src read  == "," tokadd_es src read ape ","(lvasgn : src read \n  (send\n    (send nil :sr src read ) :read)) == "," sr src read  read "," sr src read  "," pushba src read k ","(lvasgn : src read \n  (send\n    (send nil :sr src read ) :read)) != "," sr src read  unread "," src read  =~ "," src read  < "," rb_ src read ompile_error "," sr src read  mat src read hed "," sr src read  s src read an "," mat src read hed "," s src read an "," string_buffer last  end_with? "," src read hr as src read ii_only? "," ss []  ascii_only? ","Invalid es src read ape  src read hara src read ter syntax: %p % "," mat src read h [] "," mat src read h ","  src read he src read k "]}," RubyLexer regx_options":{"type":"method","name":"regx_options","children":[],"call":["options join "," rb_compile_error ","unknown regexp option%s - %s % ","bad join inspect ","bad join ","bad size > ","bad size ","bad empty? "," src unread "," src ","bad << ","options << ","c =~ "," src read ","good join ","s =~ "," src matched split partition "," src matched split "," src matched "," src scan "," matched split partition "," matched split "," matched "," scan ","unknown regexp options: %s % ","options =~ "," newtok "," rb_ src read ompile_error ","bad join inspe src read t "," sr src read  unread "," sr src read  "," src read  =~ "," sr src read  read "," sr src read  mat src read hed split partition "," sr src read  mat src read hed split "," sr src read  mat src read hed "," sr src read  s src read an "," mat src read hed split partition "," mat src read hed split "," mat src read hed "," s src read an "]}," RubyLexer parse_string":{"type":"method","name":"parse_string","children":[],"call":[" yacc_value= "," s "," token_buffer join "," token_buffer "," raise "," tokadd_string == "," tokadd_string "," src unread "," src "," token_buffer << "," src read ","c == ","(send\n  (lvar :func) :&\n  (const nil :STR_FUNC_EXPAND)) != ","func & "," token_buffer= "," regx_options "," t ","func & != ","quote []= "," nest == "," nest ","c =~ ","String  === ","(send\n  (lvar :func) :&\n  (const nil :STR_FUNC_QWORDS)) != "," string_buffer join "," string_buffer "," rb_compile_error "," string_buffer << "," src scan "," string_buffer= "," lineno= ","(send\n  (lvar :func) :&\n  (const nil :STR_FUNC_REGEXP)) != ","(send\n  (lvar :func) :&\n  (const nil :STR_FUNC_AWORDS)) != ","Regexp  escape "," scan "," string_nest == "," string_nest "," eat_whitespace ","@@regexp_cache [] "," command_start= ","func =~ "," result "," lineno "," tokadd "," scan_variable_name "," check "," newtok "," string_term "," matched ","quote [] "," debug "," lex_strterm= "," regexp_cache [] "," regexp_cache "," ya src read  src read _value= ","  scan_variable_name oken_buffer join ","  scan_variable_name oken_buffer ","  scan_variable_name okadd_s scan_variable_name ring == ","  scan_variable_name okadd_s scan_variable_name ring "," sr src read  unread "," sr src read  ","  scan_variable_name oken_buffer << "," sr src read  read "," src read  == ","(send\n  (lvar :fun src read ) :&\n  ( src read onst nil :STR_FUNC_EXPAND)) != ","(send\n  (lvar :func) :&\n  (cons scan_variable_name  nil :STR_FUNC_EXPAND)) != ","fun src read  & ","  scan_variable_name oken_buffer= "," regx_op scan_variable_name ions ","  scan_variable_name  ","fun src read  & != ","quo scan_variable_name e []= "," nes scan_variable_name  == "," nes scan_variable_name  "," src read  =~ ","S scan_variable_name ring  === ","(send\n  (lvar :fun src read ) :&\n  ( src read onst nil :STR_FUNC_QWORDS)) != ","(send\n  (lvar :func) :&\n  (cons scan_variable_name  nil :STR_FUNC_QWORDS)) != "," s scan_variable_name ring_buffer join "," s scan_variable_name ring_buffer "," rb_ src read ompile_error "," s scan_variable_name ring_buffer << "," sr src read  s src read an "," s scan_variable_name ring_buffer= ","  lineno = ","(send\n  (lvar :fun src read ) :&\n  ( src read onst nil :STR_FUNC_REGEXP)) != ","(send\n  (lvar :func) :&\n  (cons scan_variable_name  nil :STR_FUNC_REGEXP)) != ","(send\n  (lvar :fun src read ) :&\n  ( src read onst nil :STR_FUNC_AWORDS)) != ","(send\n  (lvar :func) :&\n  (cons scan_variable_name  nil :STR_FUNC_AWORDS)) != ","Regexp  es src read ape "," s src read an "," s scan_variable_name ring_nes scan_variable_name  == "," s scan_variable_name ring_nes scan_variable_name  "," eat_whitespa src read e "," ea scan_variable_name _whi scan_variable_name espace ","@@regexp_ src read a src read he [] ","@@(send\n  (lvar :func) :&\n  (const nil :STR_FUNC_REGEXP)) != _cache [] ","@@func =~ _cache [] ","  src read ommand_start= "," command_s scan_variable_name ar scan_variable_name = ","fun src read  =~ "," resul scan_variable_name  ","  lineno  ","  scan_variable_name okadd "," s src read an_variable_name ","  src read he src read k "," new scan_variable_name ok "," s scan_variable_name ring_ scan_variable_name erm "," mat src read hed "," ma scan_variable_name ched ","quo scan_variable_name e [] "," lex_s scan_variable_name r scan_variable_name erm= "," regexp_ src read a src read he [] "," (send\n  (lvar :func) :&\n  (const nil :STR_FUNC_REGEXP)) != _cache [] "," func =~ _cache [] "," regexp_ src read a src read he "," (send\n  (lvar :func) :&\n  (const nil :STR_FUNC_REGEXP)) != _cache "," func =~ _cache "]}," RubyLexer advance":{"type":"method","name":"advance","children":[],"call":["r != "," token= "," yylex ","RubyLexer EOF  != "," raise "," ss rest [] inspect "," ss rest [] "," ss rest "," ss "," yylex  != ","RubyLexe yylex  EOF  != ","  yylex aise "," ss  yylex est [] inspect "," ss  yylex est [] "," ss  yylex est "]}," RubyLexer reset":{"type":"method","name":"reset","children":[],"call":[" command_start= "," lex_strterm= "," src= "," yacc_value= "," token= "," cond reset "," cond "," cmdarg reset "," cmdarg "," extra_lineno= "," string_nest= "," space_seen= "," paren_nest= "," lpar_beg= "," lineno= "," lex_state= "," comments= "," brace_nest= "," old_lineno= "," old_ss= "," string_buffer= "," cond= ","RubyParserStuff StackState  new "," cmdarg= "]}," RubyLexer initialize":{"type":"method","name":"initialize","children":[],"call":[" reset "," end_seen= "," nest= "," cmdarg= ","StackState  new "," cond= "," token_buffer= "," parser_support= ","RubyParser StackState  new "," tern= "," version= ","RubyParserStuff StackState  new "," lex_state= "," ss= ","RPStringScanner  new "," lpar_beg= "," brace_nest= "," paren_nest= "," string_nest= "]}," RubyLexer lex_state=":{"type":"method","name":"lex_state=","children":[],"call":[" raise ","Symbol  === "," warn ","lex_state: %p -> %p from %s % ","c clean_caller "," caller [] "," caller ","c =~ "," caller first ","@lex_state == ","bad state: %p % ","State  === ","lex_state: %p -> %p % "," lex_state ","ENV  [] ","lex_state: %p -> %p%s % "," at .%s:%s % ","path delete_prefix! ","File  dirname ","path split ","path =~ ","lex_state: %p -> %p  at .%s:%s %  %s % "," caller []   caller [] lean_ caller [] aller "," caller first   caller first lean_ caller first aller ","  caller [] aller [] ","  caller first aller [] ","  caller [] aller ","  caller first aller "," caller []  =~ "," caller first  =~ ","  caller [] aller first ","  caller first aller first "," caller []  delete_prefix! "," caller []  split "]}," RubyParser warning":{"type":"method","name":"warning","children":[],"call":[]}," RubyParser dyna_init":{"type":"method","name":"dyna_init","children":[],"call":[" block_append ","body [] == ","body [] "," s compact "," s "," env used? "," env ","vars each "," env dynamic keys - "," env dynamic keys "," env dynamic "," s compact s each "," env dynamic keys -  each "]}," RubyParser void_stmts":{"type":"method","name":"void_stmts","children":[],"call":["node []= "," remove_begin ","node [] map ","node [] ","node [] == "]}," RubyParser value_expr":{"type":"method","name":"value_expr","children":[],"call":["node []= "," value_expr ","node [] ","node [] == "," remove_begin ","node line= ","oldnode line "," remove_begin  []= "," remove_begin  [] "," remove_begin  [] == "," remove_begin  line= ","old remove_begin  line "]}," RubyParser ret_args":{"type":"method","name":"ret_args","children":[],"call":[" s ","node paren ! ","node paren ","node [] == ","node [] ","node last ","node size == ","node size "," raise ","node []= ","node [] [] == ","node [] [] "," s  paren ! ","node last  paren ! "," s  paren ","node last  paren "," s  [] == ","node last  [] == "," s  [] ","node last  [] "," s  last ","node last  last "," s  size == ","node last  size == "," s  size ","node last  size "," s  []= ","node last  []= "," s  [] [] == ","node last  [] [] == "," s  [] [] ","node last  [] [] "]}," RubyParser remove_begin":{"type":"method","name":"remove_begin","children":[],"call":["node [] ","node size == ","node size ","node [] == ","node line= ","oldnode line ","begin == ","node []  [] ","node []  size == ","node []  size ","node []  [] == ","node []  line= ","oldnode []  line "]}," RubyParser literal_concat":{"type":"method","name":"literal_concat","children":[],"call":["head push ","head []= ","head size == ","head size ","head [] << ","tail [] [] ","tail [] ","head [] ","tail [] [] == ","htype == ","tail delete_at ","tail [] == "," s ","tail []= ","head [] + ","head << "," raise ","x inspect ","tail size > ","tail size "," s  push "," s  []= "," s  size == "," s  size "," s  [] << "," s  [] "," s  [] + "," s  << "]}," RubyParser list_append":{"type":"method","name":"list_append","children":[],"call":["list << "," s ","list first == ","list first ","Sexp  === "," s  << "," s  first == "," s  first "]}," RubyParser arg_concat":{"type":"method","name":"arg_concat","children":[],"call":[" s ","node2 nil? ","node1 << "," s compact "," raise "]}," RubyParser aryset":{"type":"method","name":"aryset","children":[],"call":[" s ","index []= ","index [] == ","index [] "]}," RubyParser new_super":{"type":"method","name":"new_super","children":[],"call":["result << ","args != "," s ","args first == ","args first ","args [] ","args node_type == ","args node_type "," s  << "]}," RubyParser append_to_block":{"type":"method","name":"append_to_block","children":[],"call":["head << "," s ","head first == ","head first ","head nil? ","tail nil? ","head node_type == ","head node_type "," s  << "," s  first == "," s  first "," s  nil? "," s  node_type == "," s  node_type "]}," RubyParser cond":{"type":"method","name":"cond","children":[],"call":[" s ","node [] "," env []= "," env dynamic? "," env ","node hash "," cond ","Regexp  === ","node last ","$_ to_sym ","node first "," value_expr ","node nil? "," value_expr  [] "," value_expr  hash "," value_expr  last "," value_expr  first "," value_expr  nil? "]}," RubyParser get_match_node":{"type":"method","name":"get_match_node","children":[],"call":[" s ","Regexp  === ","rhs last ","rhs [] ","lhs last ","lhs [] "," s line ","lhs line "]}," RubyParser arg_blk_pass":{"type":"method","name":"arg_blk_pass","children":[],"call":["node2 insert ","node1 << "," s ","(sym :arglist) include? ","node1 first "," s  << "," s  first "]}," RubyParser new_fcall":{"type":"method","name":"new_fcall","children":[],"call":["r << ","args != "," s ","args << ","call << ","args splat ","args argscat ","args array ","args [] == ","args [] "," s  << ","a s gs != ","a s gs << ","a s gs splat ","a s gs a s gscat ","a s gs a s  s ay ","a s gs [] == ","a s gs [] "]}," RubyParser new_call":{"type":"method","name":"new_call","children":[],"call":["result << "," s ","args << ","call << ","args splat ","args argscat ","args array ","args [] == ","args [] ","args first == ","args first ","args []= ","result line= ","recv line "," s  << "," s  splat "," s   s cat "," s  array "," s  [] == "," s  [] "," s  first == "," s  first "," s  []= "," s  line= "]}," RubyParser logop":{"type":"method","name":"logop","children":[],"call":[" s ","node []= ","second paren ! ","second paren ","second [] == ","second [] ","node [] ","left paren ! ","left paren ","left [] == ","left [] "," value_expr ","node []  paren ! ","node []  paren ","node []  [] == ","node []  [] "," value_expr  paren ! "," value_expr  paren "," value_expr  [] == "," value_expr  [] "]}," RubyParser new_yield":{"type":"method","name":"new_yield","children":[],"call":[" s ","node last ","node size == ","node size ","node node_type == ","node node_type "," raise ","args [] ","(sym :arglist) include? ","args first ","args node_type == ","args node_type ","args first == ","args []= ","node last  last ","node last  size == ","node last  size ","node last  node last _type == ","node last  node last _type "," s  [] "," s  first ","args node last _type == "," s  node_type == ","args node last _type "," s  node_type "," s  first == "," s  []= "]}," RubyParser block_append":{"type":"method","name":"block_append","children":[],"call":["head << ","head push ","tail values ","tail [] == ","tail [] ","Sexp  === "," s ","head [] == ","head [] "," remove_begin ","head line= ","(send\n  (lvar :head) :line) compact min ","(send\n  (lvar :head) :line) compact ","tail line ","head line ","head node_type == ","head node_type ","head nil? ","tail nil? "," s  << "," remove_begin  << "," s  push "," remove_begin  push "," s  [] == "," remove_begin  [] == "," s  [] "," remove_begin  [] "," s  line= "," remove_begin  line= ","head (send\n  (lvar :head) :line) compact min = ","(send\n  (lvar : s ) :line) compact min ","(send\n  (lvar : remove_begin ) :line) compact min ","(send\n  (lvar :head) :(send\n  (lvar :head) :line) compact min ) compact min ","(send\n  (lvar : s ) :line) compact ","(send\n  (lvar : remove_begin ) :line) compact ","(send\n  (lvar :head) :(send\n  (lvar :head) :line) compact min ) compact ","tail (send\n  (lvar :head) :line) compact min  "," s  line "," remove_begin  line ","head (send\n  (lvar :head) :line) compact min  "," s  node_type == "," remove_begin  node_type == "," s  node_type "," remove_begin  node_type "," s  nil? "," remove_begin  nil? "]}," RubyParser gettable":{"type":"method","name":"gettable","children":[],"call":[" raise ","id inspect "," s ","dvar == "," env [] "," env "," env dynamic? ","id to_s "," lexer src current_line "," lexer src "," lexer ","id == "," file ","id to_sym ","String  === ","id last to_sym ","id last ","Sexp  === ","Token  === ","id to_sym  inspect ","id last to_sym  inspect ","id to_sym  to_s ","id last to_sym  to_s ","id to_sym  == ","id last to_sym  == ","id to_sym  to_sym ","id last to_sym  to_sym ","id to_sym  last to_sym ","id last to_sym  last to_sym ","id to_sym  last ","id last to_sym  last "]}," RubyParser node_assign":{"type":"method","name":"node_assign","children":[],"call":["lhs << "," arg_add ","lhs splat ","lhs argscat ","lhs array ","lhs [] "," value_expr "," raise ","lhs inspect ","lhs []= ","lhs pop ","Symbol  === ","lhs last ","lhs lhs pop cat "]}," RubyParser arg_add":{"type":"method","name":"arg_add","children":[],"call":[" s ","node1 << ","node1 [] == ","node1 [] ","node1 []= "]}," RubyParser warnings=":{"type":"method","name":"warnings=","children":[],"call":[" lexer warnings= "," lexer "]}," RubyParser assignable":{"type":"method","name":"assignable","children":[],"call":["result << "," env []= "," env dynamic? "," env "," env [] "," raise "," s "," env dynamic? ! "," env use "," env [] == "," env current [] == "," env current [] "," env current "," in_single > "," in_single "," in_def ","id to_s ","id to_s =~ ","id to_sym ","Token  === ","lhs to_sym ","Sexp  === ","id to_sym  to_s ","lhs to_sym  to_s ","id to_sym  to_s =~ ","lhs to_sym  to_s =~ ","id to_sym  to_sym ","lhs to_sym  to_sym "]}," RubyParser next_token":{"type":"method","name":"next_token","children":[],"call":[" lexer yacc_value "," lexer "," lexer token "," lexer advance "]}," RubyParser on_error":{"type":"method","name":"on_error","children":[],"call":[" raise "," p "]}," RubyParser yyparse":{"type":"method","name":"yyparse","children":[],"call":[" _racc_yyparse_rb "," _racc_setup "]}," RubyParser do_parse":{"type":"method","name":"do_parse","children":[],"call":[" _racc_do_parse_rb "," _racc_setup "]}," RubyParser parse":{"type":"method","name":"parse","children":[],"call":[" do_parse ","ENV  has_key? "," lexer src= ","StringIO  new "," lexer "," file= "," raise ","str inspect ","String  === ","@p18 parse ","@p19 parse "]}," RubyParser yyerror":{"type":"method","name":"yyerror","children":[],"call":[" old_yyerror "," warn "]}," RubyParser initialize":{"type":"method","name":"initialize","children":[],"call":["Environment  new "," in_single= "," in_def= "," lexer= ","RubyLexer  new "," reset "," lexer parser= "," lexer ","Ruby19Parser  new ","Ruby18Parser  new "," warn "," caller first "," caller ","Ruby20Parser  new ","Ruby21Parser  new ","Ruby22Parser  new ","Ruby23Parser  new "]}," Module kill":{"type":"method","name":"kill","children":[],"call":[" raise ","c [] "," caller "," define_method ","methods each "," caller  [] ","  caller aller ","methods ea caller h "]}," Sexp inspect":{"type":"method","name":"inspect","children":[],"call":[" line ","ENV  [] ","(send\n  (self) :map) join ","x inspect "," map "]}," Sexp to_sym":{"type":"method","name":"to_sym","children":[],"call":[" value to_sym "," value "," raise "," inspect "]}," Sexp line=":{"type":"method","name":"line=","children":[],"call":[]}," Sexp line":{"type":"method","name":"line","children":[],"call":[]}," Environment reset":{"type":"method","name":"reset","children":[],"call":[" extend ","@use clear ","@env clear ","@dyn clear "]}," RubyParser s":{"type":"method","name":"s","children":[],"call":["result file= "," file "," lexer lineno "," lexer ","result line "," lexer src ","Sexp  new ","Sexp  new  file= ","Sexp  new  line "]}," RubyParser reset":{"type":"method","name":"reset","children":[],"call":[" comments clear "," comments "," env reset "," env "," in_single= "," in_def= "," lexer reset "," lexer ","@p19 reset ","@p18 reset ","@p21 reset ","@p20 reset ","@p22 reset ","@p23 reset "]}," RubyParser process":{"type":"method","name":"process","children":[],"call":[" do_parse ","ENV  has_key? "," lexer src= "," lexer "," file= "," raise ","str inspect ","String  === ","Ruby18Parser  new process ","Ruby18Parser  new ","Ruby19Parser  new process ","Ruby19Parser  new ","@p18 process ","@p19 process ","parser process ","klass new ","VERSIONS  each "," current= ","@p20 process ","(ivar :@p21) each ","(ivar :@p22) each ","(ivar :@p23) each ","klass new  process "]}," RubyParser new_xstring":{"type":"method","name":"new_xstring","children":[],"call":[" s ","str []= ","str [] "," s  []= "," s  [] "]}," RubyParser new_while":{"type":"method","name":"new_while","children":[],"call":["result line= "," s ","expr last ","expr first == ","expr first "," cond ","block last ","block [] == ","block [] ","(and\n  (lvar :block)\n  (send\n    (lvar :block) :line)) compact min ","(and\n  (lvar :block)\n  (send\n    (lvar :block) :line)) compact ","expr line ","block line "," new_until_or_while "," s  line= ","result (and\n  (lvar :block)\n  (send\n    (lvar :block) :line)) compact min = "," cond  last "," cond  first == "," cond  first ","(and\n  (lvar :block)\n  (send\n    (lvar :block) :(and\n  (lvar :block)\n  (send\n    (lvar :block) :line)) compact min )) compact min ","(and\n  (lvar :block)\n  (send\n    (lvar :block) :(and\n  (lvar :block)\n  (send\n    (lvar :block) :line)) compact min )) compact "," cond  line ","expr (and\n  (lvar :block)\n  (send\n    (lvar :block) :line)) compact min  ","block (and\n  (lvar :block)\n  (send\n    (lvar :block) :line)) compact min  "]}," RubyParser new_until":{"type":"method","name":"new_until","children":[],"call":[" new_while ","(if\n  (send\n    (send\n      (lvar :expr) :first) :==\n    (sym :not))\n  (send\n    (lvar :expr) :last)\n  (send nil :s\n    (sym :not)\n    (lvar :expr))) line ","expr line "," s ","expr last ","expr first == ","expr first "," new_until_or_while ","(if\n  (send\n    (send\n      (lvar :(if\n  (send\n    (send\n      (lvar :expr) :first) :==\n    (sym :not))\n  (send\n    (lvar :expr) :last)\n  (send nil :s\n    (sym :not)\n    (lvar :expr))) line ) :first) :==\n    (sym :not))\n  (send\n    (lvar :(if\n  (send\n    (send\n      (lvar :expr) :first) :==\n    (sym :not))\n  (send\n    (lvar :expr) :last)\n  (send nil :s\n    (sym :not)\n    (lvar :expr))) line ) :last)\n  (send nil :s\n    (sym :not)\n    (lvar :(if\n  (send\n    (send\n      (lvar :expr) :first) :==\n    (sym :not))\n  (send\n    (lvar :expr) :last)\n  (send nil :s\n    (sym :not)\n    (lvar :expr))) line ))) line ","(if\n  (send\n    (send\n      (lvar :expr) :first) :==\n    (sym :not))\n  (send\n    (lvar :expr) :last)\n  (send nil :s\n    (sym :not)\n    (lvar :expr))) line  line ","(if\n  (send\n    (send\n      (lvar :expr) :first) :==\n    (sym :not))\n  (send\n    (lvar :expr) :last)\n  (send nil :s\n    (sym :not)\n    (lvar :expr))) line  last ","(if\n  (send\n    (send\n      (lvar :expr) :first) :==\n    (sym :not))\n  (send\n    (lvar :expr) :last)\n  (send nil :s\n    (sym :not)\n    (lvar :expr))) line  first == ","(if\n  (send\n    (send\n      (lvar :expr) :first) :==\n    (sym :not))\n  (send\n    (lvar :expr) :last)\n  (send nil :s\n    (sym :not)\n    (lvar :expr))) line  first "]}," RubyParser new_undef":{"type":"method","name":"new_undef","children":[],"call":[" s "," block_append "]}," RubyParser new_sclass":{"type":"method","name":"new_sclass","children":[],"call":[" in_single= "," in_def= ","result line= ","val [] "," s "," s compact "," s  line= "]}," RubyParser new_regexp":{"type":"method","name":"new_regexp","children":[],"call":["node << ","o != ","node []= ","options =~ "," s ","Regexp  new ","node [] ","c =~ "," raise ","(pair\n  (str \"x\")\n  (const\n    (const nil :Regexp) :EXTENDED)) [] ","options split each ","options split ","val [] ","options split uniq each ","options split uniq "," s  << "," s  []= ","val []  =~ "," s  [] ","val []  split each ","val []  split ","(pair\n  (str \"x\")\n  (const\n    (const nil :Regexp) :EXTENDED)) [] al [] ","val []  split uniq each ","val []  split uniq "]}," RubyParser new_op_asgn":{"type":"method","name":"new_op_asgn","children":[],"call":["result line= ","lhs line ","lhs []= "," new_call "," s "," gettable ","lhs << "," remove_begin ","lhs value ","val [] ","val [] to_sym "]}," RubyParser new_module":{"type":"method","name":"new_module","children":[],"call":["result comments= "," comments pop "," comments ","result line= "," s "," s compact ","val [] "," s  comments= "," s  line= "]}," RubyParser new_masgn":{"type":"method","name":"new_masgn","children":[],"call":["lhs << ","lhs delete_at ","lhs [] nil? ","lhs [] "," s "," value_expr "]}," RubyParser new_iter":{"type":"method","name":"new_iter","children":[],"call":["result << "," s "," s  << "]}," RubyParser new_if":{"type":"method","name":"new_if","children":[],"call":[" s line "," s ","c last ","c [] == ","c [] "," cond ","(send\n  (lvar :c) :line) compact min ","(send\n  (lvar :c) :line) compact ","f line ","t line ","c line "," canonicalize_conditions "," s (send\n  (lvar :c) :line) compact min ine "," cond  last ","c (send\n  (lvar :c) :line) compact min ast "," cond  [] == "," cond  [] ","  cond ond ","(send\n  (lvar : cond ) :line)  cond ompa cond t min ","(send\n  ((send\n  (lvar :c) :line) compact min var :c) :(send\n  (lvar :c) :line) compact min ine) compact min ","(send\n  (lvar : cond ) :line)  cond ompa cond t ","(send\n  ((send\n  (lvar :c) :line) compact min var :c) :(send\n  (lvar :c) :line) compact min ine) compact ","f (send\n  (lvar :c) :line) compact min ine ","t (send\n  (lvar :c) :line) compact min ine "," cond  line ","c (send\n  (lvar :c) :line) compact min ine ","  cond anoni cond alize_ cond onditions "," canonica(send\n  (lvar :c) :line) compact min ize_conditions "]}," RubyParser new_for":{"type":"method","name":"new_for","children":[],"call":["result << "," s line ","var line "," s "," s line  << "]}," RubyParser new_defs":{"type":"method","name":"new_defs","children":[],"call":["result comments= "," comments pop "," comments ","result line= ","recv line "," s ","name to_sym ","body first == ","body first ","val [] "," s  comments= "," s  line= "," s  first == "," s  first "]}," RubyParser new_defn":{"type":"method","name":"new_defn","children":[],"call":["result comments= "," comments pop "," comments ","result line= "," s ","name to_sym ","body first == ","body first ","val [] ","result line "," s  comments= "," s  line= "," s  first == "," s  first "," s  line "]}," RubyParser new_compstmt":{"type":"method","name":"new_compstmt","children":[],"call":[" remove_begin "," void_stmts ","val [] "]}," RubyParser new_class":{"type":"method","name":"new_class","children":[],"call":["result comments= "," comments pop "," comments ","result line= "," s "," s compact ","val [] "," s  comments= "," s  line= "]}," RubyParser new_case":{"type":"method","name":"new_case","children":[],"call":["result line= ","result << ","body == "," s ","body delete_at ","body node_type == ","body node_type ","(or\n  (lvar :expr)\n  (lvar :body)) line ","result (or\n  (lvar :expr)\n  (lvar :body)) line = "," s  line= "," s  << ","body delete_at  == ","body delete_at  delete_at ","body delete_at  node_type == ","body delete_at  node_type ","(or\n  (lvar :expr)\n  (lvar :body delete_at )) line ","(or\n  (lvar :expr)\n  (lvar :body)) (or\n  (lvar :expr)\n  (lvar :body)) line  "]}," RubyParser new_body":{"type":"method","name":"new_body","children":[],"call":[" s compact "," s ","val [] "," block_append "," warning ","val [] nil? ! ","val [] nil? ","result line= ","(or\n  (send\n    (lvar :val) :[]\n    (int 0))\n  (send\n    (lvar :val) :[]\n    (int 1))) line ","result << ","resbody resbody "," s compact  line= "," block_append  line= "," s  line= ","val []  line= "," s compact  << "," block_append  << "," s  << ","val []  << ","resbody resbody  resbody resbody  ","val []  val []  "]}," RubyParser new_aref":{"type":"method","name":"new_aref","children":[],"call":[" new_call ","val [] ","val [] node_type == ","val [] node_type ","val [] []= ","val [] [] == ","val [] [] "," s "]}," RubyParser list_prepend":{"type":"method","name":"list_prepend","children":[],"call":["list insert "," s ","list [] == ","list [] ","Sexp  === "," s  insert "," s  [] == "," s  [] "]}," RubyParser args":{"type":"method","name":"args","children":[],"call":["result << ","block_arg last ","lasgn [] "," raise ","lasgn inspect ","lasgn [] == ","optarg [] each ","optarg [] "," s "]}," RPStringScanner scan":{"type":"method","name":"scan","children":[],"call":[" p "," caller first "," caller "," old_scan "," d "," caller [] split first join "," caller [] split first "," caller [] split "," caller [] ","ENV  [] ","where split first join ","where split first ","where split ","(send\n  (send nil :caller) :drop_while) first ","x =~ "," caller drop_while "," caller first split first join "," caller first split first "," caller first split "," caller fir old_scan t "," old_ old_scan can "," caller []  old_scan plit fir old_scan t join "," caller []  old_scan plit fir old_scan t "," caller []  old_scan plit ","where  old_scan plit fir old_scan t join "," caller [] split first join  split first join ","where split first join  split first join ","(send\n  (send nil :caller) :drop_while) first  split first join "," caller first split first join  split first join ","where  old_scan plit fir old_scan t "," caller [] split first join  split first ","where split first join  split first ","(send\n  (send nil :caller) :drop_while) first  split first "," caller first split first join  split first ","where  old_scan plit "," caller [] split first join  split ","where split first join  split ","(send\n  (send nil :caller) :drop_while) first  split "," caller first split first join  split ","( old_scan end\n  ( old_scan end nil :caller) :drop_while) fir old_scan t "," caller fir old_scan t  old_scan plit fir old_scan t join "," caller fir old_scan t  old_scan plit fir old_scan t "," caller fir old_scan t  old_scan plit "]}," RPStringScanner getch":{"type":"method","name":"getch","children":[],"call":[" p "," caller first "," caller "," old_getch "," d ","ENV  [] ","where split first join ","where split first ","where split ","(send\n  (send nil :caller) :drop_while) first ","s =~ "," caller drop_while ","  old_getch aller first ","  old_getch aller "," old_get old_getch h ","where split first join  split first join ","(send\n  (send nil :caller) :drop_while) first  split first join ","where split first join  split first ","(send\n  (send nil :caller) :drop_while) first  split first ","where split first join  split ","(send\n  (send nil :caller) :drop_while) first  split ","(send\n  (send nil : old_getch aller) :drop_while) first ","  old_getch aller drop_while "]}," RPStringScanner was_begin_of_line":{"type":"method","name":"was_begin_of_line","children":[],"call":[" string [] == "," string [] "," pos - "," pos "," string "," pos <= "]}," RPStringScanner begin_of_line?":{"type":"method","name":"begin_of_line?","children":[],"call":[" string [] == "," string [] "," pos - "," pos "," string "," pos == "]}," RPStringScanner unread_many":{"type":"method","name":"unread_many","children":[],"call":[" string []= "," pos "," string "," warn ","(pair\n  (sym :unread_many)\n  (send\n    (send nil :caller) :[]\n    (int 0))) inspect "," caller [] "," caller ","ENV  [] ","str count "," extra_lines_added "," charpos ","str count - "]}," RPStringScanner unread":{"type":"method","name":"unread","children":[],"call":[" string []= "," pos "," string "," warn ","(pair\n  (sym :unread)\n  (send\n    (send nil :caller) :[]\n    (int 0))) inspect "," caller [] "," caller ","ENV  [] ","c nil? "]}," RPStringScanner lineno":{"type":"method","name":"lineno","children":[],"call":[" string [] count + "," string [] count "," string [] "," pos "," string "," string [] count + - "," extra_lines_added "," charpos "]}," RPStringScanner current_line":{"type":"method","name":"current_line","children":[],"call":[" string [] [] split size "," string [] [] split "," string [] [] "," string [] "," pos "," string "," string_to_pos [] split size "," string_to_pos [] split "," string_to_pos [] "," string_to_pos "]}," Fixnum ord":{"type":"method","name":"ord","children":[],"call":[]}," RubyParser _reduce_504":{"type":"method","name":"_reduce_504","children":[],"call":[" yyerrok "]}," RubyParser _reduce_503":{"type":"method","name":"_reduce_503","children":[],"call":[]}," RubyParser _reduce_502":{"type":"method","name":"_reduce_502","children":[],"call":[" yyerrok "]}," RubyParser _reduce_499":{"type":"method","name":"_reduce_499","children":[],"call":[" yyerrok "]}," RubyParser _reduce_479":{"type":"method","name":"_reduce_479","children":[],"call":[" s ","val [] "]}," RubyParser _reduce_478":{"type":"method","name":"_reduce_478","children":[],"call":["list push ","more empty? ","val [] [] ","val [] ","val [] dup "," yyerror ","val [] inspect ","size % != ","size % ","val [] size ","val [] dup  push ","val [] []  empty? ","val [] size  % != ","val [] size  % ","val [] val [] size  "]}," RubyParser _reduce_476":{"type":"method","name":"_reduce_476","children":[],"call":["val [] "," yyerror ","val [] inspect ","size % != ","size % ","val [] size "," s ","val [] size  % != ","val [] size  % ","val [] val [] size  "]}," RubyParser _reduce_475":{"type":"method","name":"_reduce_475","children":[],"call":["val [] "," yyerror ","result [] == ","result [] ","val []  [] == ","val []  [] "]}," RubyParser _reduce_474":{"type":"method","name":"_reduce_474","children":[],"call":[" s "," lexer lex_state= "," lexer "]}," RubyParser _reduce_473":{"type":"method","name":"_reduce_473","children":[],"call":[" yyerror ","result [] == ","result [] ","val [] ","val []  [] == ","val []  [] "]}," RubyParser _reduce_472":{"type":"method","name":"_reduce_472","children":[],"call":[" lexer lex_state= "," lexer "]}," RubyParser _reduce_470":{"type":"method","name":"_reduce_470","children":[],"call":[" s ","identifier to_sym "," env []= "," env ","val [] to_sym ","val [] ","val [] to_sym  to_sym "]}," RubyParser _reduce_469":{"type":"method","name":"_reduce_469","children":[],"call":["val [] "]}," RubyParser _reduce_468":{"type":"method","name":"_reduce_468","children":[],"call":[" s ","identifier to_sym "," env []= "," env ","val [] to_sym ","val [] ","val [] to_sym  to_sym "]}," RubyParser _reduce_465":{"type":"method","name":"_reduce_465","children":[],"call":[" env []= "," env "]}," RubyParser _reduce_464":{"type":"method","name":"_reduce_464","children":[],"call":[" assignable ","val [] to_sym ","val [] "]}," RubyParser _reduce_461":{"type":"method","name":"_reduce_461","children":[],"call":[" append_to_block ","val [] "," block_append "," assignable "]}," RubyParser _reduce_460":{"type":"method","name":"_reduce_460","children":[],"call":[" s ","val [] ","val [] << ","val [] to_sym "]}," RubyParser _reduce_459":{"type":"method","name":"_reduce_459","children":[],"call":[" assignable ","val [] ","result << ","val [] to_sym "," s "," assignable  << "," s  << "]}," RubyParser _reduce_458":{"type":"method","name":"_reduce_458","children":[],"call":["val [] ","val [] << ","val [] to_sym "," env []= "," env "]}," RubyParser _reduce_457":{"type":"method","name":"_reduce_457","children":[],"call":["result << ","val [] to_sym ","val [] "," s "," yyerror "," s  << "]}," RubyParser _reduce_456":{"type":"method","name":"_reduce_456","children":[],"call":["val [] "," env []= "," env ","val [] to_sym "," yyerror "]}," RubyParser _reduce_455":{"type":"method","name":"_reduce_455","children":[],"call":[" yyerror ","val [] "]}," RubyParser _reduce_454":{"type":"method","name":"_reduce_454","children":[],"call":[" yyerror "," args "]}," RubyParser _reduce_453":{"type":"method","name":"_reduce_453","children":[],"call":[" yyerror ","val [] "," args "]}," RubyParser _reduce_452":{"type":"method","name":"_reduce_452","children":[],"call":[" args ","val [] "]}," RubyParser _reduce_451":{"type":"method","name":"_reduce_451","children":[],"call":[" args ","val [] "]}," RubyParser _reduce_450":{"type":"method","name":"_reduce_450","children":[],"call":[" args ","val [] "]}," RubyParser _reduce_449":{"type":"method","name":"_reduce_449","children":[],"call":[" args ","val [] "]}," RubyParser _reduce_448":{"type":"method","name":"_reduce_448","children":[],"call":[" args ","val [] "]}," RubyParser _reduce_447":{"type":"method","name":"_reduce_447","children":[],"call":[" args ","val [] "]}," RubyParser _reduce_446":{"type":"method","name":"_reduce_446","children":[],"call":[" args ","val [] "]}," RubyParser _reduce_445":{"type":"method","name":"_reduce_445","children":[],"call":[" args ","val [] "]}," RubyParser _reduce_444":{"type":"method","name":"_reduce_444","children":[],"call":[" args ","val [] "," lexer lex_state= "," lexer "," lexer command_start= "]}," RubyParser _reduce_443":{"type":"method","name":"_reduce_443","children":[],"call":["val [] "," yyerrok "]}," RubyParser _reduce_442":{"type":"method","name":"_reduce_442","children":[],"call":[" lexer lex_state= "," lexer ","val [] "]}," RubyParser _reduce_441":{"type":"method","name":"_reduce_441","children":[],"call":[" yyerrok "," lexer lex_state= "," lexer "]}," RubyParser _reduce_440":{"type":"method","name":"_reduce_440","children":[],"call":["val [] "]}," RubyParser _reduce_439":{"type":"method","name":"_reduce_439","children":[],"call":[" lexer lex_state= "," lexer "," s ","val [] "]}," RubyParser _reduce_438":{"type":"method","name":"_reduce_438","children":[],"call":[" s ","val [] "]}," RubyParser _reduce_437":{"type":"method","name":"_reduce_437","children":[],"call":[" s ","val [] "," assignable "]}," RubyParser _reduce_436":{"type":"method","name":"_reduce_436","children":[],"call":[" s ","val [] "," gettable ","Sexp  === "]}," RubyParser _reduce_435":{"type":"method","name":"_reduce_435","children":[],"call":[" assignable ","val [] "," s "," lexer src current_line "," lexer src "," lexer "]}," RubyParser _reduce_434":{"type":"method","name":"_reduce_434","children":[],"call":[" gettable ","val [] "," s "," file "]}," RubyParser _reduce_433":{"type":"method","name":"_reduce_433","children":[],"call":[" s "]}," RubyParser _reduce_432":{"type":"method","name":"_reduce_432","children":[],"call":[" s "]}," RubyParser _reduce_431":{"type":"method","name":"_reduce_431","children":[],"call":[" s "]}," RubyParser _reduce_430":{"type":"method","name":"_reduce_430","children":[],"call":[" s "]}," RubyParser _reduce_429":{"type":"method","name":"_reduce_429","children":[],"call":[]}," RubyParser _reduce_428":{"type":"method","name":"_reduce_428","children":[],"call":[]}," RubyParser _reduce_422":{"type":"method","name":"_reduce_422","children":[],"call":["val [] -@ ","val [] "]}," RubyParser _reduce_421":{"type":"method","name":"_reduce_421","children":[],"call":["val [] -@ ","val [] "]}," RubyParser _reduce_418":{"type":"method","name":"_reduce_418","children":[],"call":[" s ","result last intern ","result last ","result []= ","result [] "," yyerror ","result empty? ","result nil? ","val [] "," lexer lex_state= "," lexer "," s  last intern ","val []  last intern "," s  last ","val []  last "," s  []= ","val []  []= "," s  [] ","val []  [] "," s  empty? ","val []  empty? "," s  nil? ","val []  nil? "]}," RubyParser _reduce_413":{"type":"method","name":"_reduce_413","children":[],"call":["val [] to_sym ","val [] "]}," RubyParser _reduce_412":{"type":"method","name":"_reduce_412","children":[],"call":["val [] to_sym ","val [] "," lexer lex_state= "," lexer "," s "]}," RubyParser _reduce_410":{"type":"method","name":"_reduce_410","children":[],"call":[" s ","val [] to_sym ","val [] "]}," RubyParser _reduce_409":{"type":"method","name":"_reduce_409","children":[],"call":[" s ","val [] to_sym ","val [] "," raise ","val [] inspect ","val [] [] "," lexer cmdarg lexpop "," lexer cmdarg "," lexer "," lexer cond lexpop "," lexer cond "," lexer lex_strterm= "]}," RubyParser _reduce_408":{"type":"method","name":"_reduce_408","children":[],"call":[" s ","val [] to_sym ","val [] "," lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cond push "," lexer cond "," lexer lex_state= "," lexer lex_strterm= "," lexer lex_strterm "]}," RubyParser _reduce_407":{"type":"method","name":"_reduce_407","children":[],"call":[" raise ","val [] inspect ","val [] "," s ","val [] [] "," lexer cmdarg lexpop "," lexer cmdarg "," lexer "," lexer cond lexpop "," lexer cond "," lexer lex_strterm= "]}," RubyParser _reduce_406":{"type":"method","name":"_reduce_406","children":[],"call":[" lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cond push "," lexer cond "," lexer lex_state= "," lexer lex_strterm= "," lexer lex_strterm "]}," RubyParser _reduce_405":{"type":"method","name":"_reduce_405","children":[],"call":[" s ","val [] "," lexer lex_strterm= "," lexer "]}," RubyParser _reduce_404":{"type":"method","name":"_reduce_404","children":[],"call":[" lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm "," literal_concat ","val [] "]}," RubyParser _reduce_403":{"type":"method","name":"_reduce_403","children":[],"call":[" s ","val [] "]}," RubyParser _reduce_402":{"type":"method","name":"_reduce_402","children":[],"call":[" literal_concat ","val [] "]}," RubyParser _reduce_401":{"type":"method","name":"_reduce_401","children":[],"call":[" s "]}," RubyParser _reduce_400":{"type":"method","name":"_reduce_400","children":[],"call":[" literal_concat ","val [] ","val [] << "," s "]}," RubyParser _reduce_399":{"type":"method","name":"_reduce_399","children":[],"call":[" s "]}," RubyParser _reduce_398":{"type":"method","name":"_reduce_398","children":[],"call":["val [] << "," s ","val [] "]}," RubyParser _reduce_397":{"type":"method","name":"_reduce_397","children":[],"call":[" s "]}," RubyParser _reduce_396":{"type":"method","name":"_reduce_396","children":[],"call":["val [] "," literal_concat "]}," RubyParser _reduce_395":{"type":"method","name":"_reduce_395","children":[],"call":[" s "]}," RubyParser _reduce_394":{"type":"method","name":"_reduce_394","children":[],"call":[" literal_concat ","val [] ","val [] << "," s ","val [] [] == ","val [] [] "]}," RubyParser _reduce_392":{"type":"method","name":"_reduce_392","children":[],"call":["val [] << ","val [] "," s ","val [] [] == ","val [] [] "]}," RubyParser _reduce_391":{"type":"method","name":"_reduce_391","children":[],"call":[" s "]}," RubyParser _reduce_390":{"type":"method","name":"_reduce_390","children":[],"call":["val [] "," new_regexp "]}," RubyParser _reduce_389":{"type":"method","name":"_reduce_389","children":[],"call":[" s "," new_xstring ","val [] "]}," RubyParser _reduce_388":{"type":"method","name":"_reduce_388","children":[],"call":[" new_regexp "," s ","val [] "]}," RubyParser _reduce_387":{"type":"method","name":"_reduce_387","children":[],"call":[" new_xstring ","val [] "]}," RubyParser _reduce_386":{"type":"method","name":"_reduce_386","children":[],"call":[" s ","val [] "," literal_concat "]}," RubyParser _reduce_385":{"type":"method","name":"_reduce_385","children":[],"call":["val [] "]}," RubyParser _reduce_384":{"type":"method","name":"_reduce_384","children":[],"call":[" literal_concat ","val [] ","val []= "," s ","val [] value ","val [] [] == ","val [] [] "]}," RubyParser _reduce_382":{"type":"method","name":"_reduce_382","children":[],"call":["val [] ","val []= "," s ","val [] value ","val [] [] == ","val [] [] "]}," RubyParser _reduce_380":{"type":"method","name":"_reduce_380","children":[],"call":[" s ","val [] "]}," RubyParser _reduce_379":{"type":"method","name":"_reduce_379","children":[],"call":[" s ","val [] ","val [] != "]}," RubyParser _reduce_377":{"type":"method","name":"_reduce_377","children":[],"call":[" s ","val [] ","val [] != "]}," RubyParser _reduce_375":{"type":"method","name":"_reduce_375","children":[],"call":["val [] "]}," RubyParser _reduce_372":{"type":"method","name":"_reduce_372","children":[],"call":[" s ","val [] ","result << ","klasses << "," node_assign "," s  << "]}," RubyParser _reduce_371":{"type":"method","name":"_reduce_371","children":[],"call":[]}," RubyParser _reduce_370":{"type":"method","name":"_reduce_370","children":[],"call":["result << "," s ","klasses << "," node_assign ","val [] "," s  << "]}," RubyParser _reduce_367":{"type":"method","name":"_reduce_367","children":[],"call":[" s ","val [] "]}," RubyParser _reduce_366":{"type":"method","name":"_reduce_366","children":[],"call":[" list_append "," s ","val [] ","result << ","result line= "," list_append  << "," s  << "," list_append  line= "," s  line= "]}," RubyParser _reduce_364":{"type":"method","name":"_reduce_364","children":[],"call":["result << ","val [] ","result line= "," s "," env unextend "," env "," new_iter "," s  << "," new_iter  << "," s  line= "," new_iter  line= "]}," RubyParser _reduce_363":{"type":"method","name":"_reduce_363","children":[],"call":[" lexer lineno "," lexer "," env dynamic keys "," env dynamic "," env "]}," RubyParser _reduce_362":{"type":"method","name":"_reduce_362","children":[],"call":["result line= ","val [] "," env unextend "," env "," new_iter "," lexer lineno "," lexer "," env extend "," new_iter  line= "," lexer lineno  line= "]}," RubyParser _reduce_361":{"type":"method","name":"_reduce_361","children":[],"call":[" env dynamic keys "," env dynamic "," env ","result line= ","val [] "," env unextend "," new_iter "," env dynamic keys  line= "," new_iter  line= "]}," RubyParser _reduce_360":{"type":"method","name":"_reduce_360","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," env dynamic keys "," env dynamic "]}," RubyParser _reduce_359":{"type":"method","name":"_reduce_359","children":[],"call":["result line= ","val [] "," env unextend "," env "," new_iter "," lexer lineno "," lexer "," env extend "," new_iter  line= "," lexer lineno  line= "]}," RubyParser _reduce_358":{"type":"method","name":"_reduce_358","children":[],"call":[" env dynamic keys "," env dynamic "," env "," s "]}," RubyParser _reduce_357":{"type":"method","name":"_reduce_357","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," new_super ","val [] "]}," RubyParser _reduce_356":{"type":"method","name":"_reduce_356","children":[],"call":[" s "," new_call ","val [] to_sym ","val [] "]}," RubyParser _reduce_355":{"type":"method","name":"_reduce_355","children":[],"call":[" new_super ","val [] "," new_call ","val [] to_sym "]}," RubyParser _reduce_354":{"type":"method","name":"_reduce_354","children":[],"call":[" new_call ","val [] to_sym ","val [] "]}," RubyParser _reduce_353":{"type":"method","name":"_reduce_353","children":[],"call":[" new_call ","val [] ","val [] to_sym "]}," RubyParser _reduce_352":{"type":"method","name":"_reduce_352","children":[],"call":[" new_call ","val [] ","val [] to_sym "," lexer lineno "," lexer "]}," RubyParser _reduce_351":{"type":"method","name":"_reduce_351","children":[],"call":[" new_call ","val [] ","val [] to_sym "]}," RubyParser _reduce_350":{"type":"method","name":"_reduce_350","children":[],"call":[" lexer lineno "," lexer "," new_call ","val [] "]}," RubyParser _reduce_349":{"type":"method","name":"_reduce_349","children":[],"call":[" new_call ","val [] ","result insert "," raise ","val [] [] == ","val [] [] "," new_call  insert ","val []  insert "]}," RubyParser _reduce_348":{"type":"method","name":"_reduce_348","children":[],"call":[" new_call ","val [] "," env unextend "," env ","result line= "," new_iter "," new_call  line= "," new_iter  line= "]}," RubyParser _reduce_347":{"type":"method","name":"_reduce_347","children":[],"call":["result insert ","val [] "," raise ","val [] [] == ","val [] [] "," env dynamic keys "," env dynamic "," env ","val []  insert "," env dynamic keys  insert "]}," RubyParser _reduce_346":{"type":"method","name":"_reduce_346","children":[],"call":[" env unextend "," env "," new_iter ","val [] "," lexer lineno "," lexer "," env extend "]}," RubyParser _reduce_345":{"type":"method","name":"_reduce_345","children":[],"call":[" env dynamic keys "," env dynamic "," env ","val [] "," lexer command_start= "," lexer "]}," RubyParser _reduce_344":{"type":"method","name":"_reduce_344","children":[],"call":[" env extend "," env "," lexer command_start= "," lexer "]}," RubyParser _reduce_343":{"type":"method","name":"_reduce_343","children":[],"call":["val [] "," lexer command_start= "," lexer "]}," RubyParser _reduce_342":{"type":"method","name":"_reduce_342","children":[],"call":[]}," RubyParser _reduce_341":{"type":"method","name":"_reduce_341","children":[],"call":["val [] delete_at ","val [] ","val [] [] nil? ","val [] [] "]}," RubyParser _reduce_339":{"type":"method","name":"_reduce_339","children":[],"call":["val [] delete_at ","val [] ","val [] [] nil? ","val [] [] "]}," RubyParser _reduce_337":{"type":"method","name":"_reduce_337","children":[],"call":["val [] "," s "]}," RubyParser _reduce_335":{"type":"method","name":"_reduce_335","children":[],"call":[" s ","val [] "]}," RubyParser _reduce_326":{"type":"method","name":"_reduce_326","children":[],"call":[" value_expr ","val [] "," s "]}," RubyParser _reduce_325":{"type":"method","name":"_reduce_325","children":[],"call":[" s "]}," RubyParser _reduce_324":{"type":"method","name":"_reduce_324","children":[],"call":[" s "]}," RubyParser _reduce_323":{"type":"method","name":"_reduce_323","children":[],"call":[" s "," in_single "," env unextend "," env "," new_defs "]}," RubyParser _reduce_322":{"type":"method","name":"_reduce_322","children":[],"call":[" s "," lexer lex_state= "," lexer "," env extend "," env "," in_single "]}," RubyParser _reduce_321":{"type":"method","name":"_reduce_321","children":[],"call":[" in_single "," env unextend "," env "," new_defs "," lexer lex_state= "," lexer "," comments push "," lexer comments "," comments "]}," RubyParser _reduce_320":{"type":"method","name":"_reduce_320","children":[],"call":[" lexer lex_state= "," lexer "," env extend "," env "," in_single "," in_def= "," env unextend "," new_defn "]}," RubyParser _reduce_319":{"type":"method","name":"_reduce_319","children":[],"call":[" lexer lex_state= "," lexer "," comments push "," lexer comments "," comments "," lexer src beginning_of_line? "," lexer src "," lexer lineno "," env extend "," env "," in_def= "]}," RubyParser _reduce_318":{"type":"method","name":"_reduce_318","children":[],"call":[" in_def= "," env unextend "," env "," new_defn "," new_module "]}," RubyParser _reduce_317":{"type":"method","name":"_reduce_317","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," in_def= "," comments push "," lexer comments "," comments "," lexer src beginning_of_line? "," lexer src "," yyerror "," in_single > "," in_single "," in_def "]}," RubyParser _reduce_316":{"type":"method","name":"_reduce_316","children":[],"call":[" env unextend "," env "," new_module "," lexer lineno "," lexer "]}," RubyParser _reduce_315":{"type":"method","name":"_reduce_315","children":[],"call":[" env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," lexer "," comments "," env unextend "," new_sclass "]}," RubyParser _reduce_314":{"type":"method","name":"_reduce_314","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," in_single= "," in_single "]}," RubyParser _reduce_313":{"type":"method","name":"_reduce_313","children":[],"call":[" env unextend "," env "," new_sclass "," in_def= "," in_def "]}," RubyParser _reduce_312":{"type":"method","name":"_reduce_312","children":[],"call":[" env extend "," env "," in_single= "," in_single "," lexer lineno "," lexer "]}," RubyParser _reduce_311":{"type":"method","name":"_reduce_311","children":[],"call":[" in_def= "," in_def "," env unextend "," env "," new_class "]}," RubyParser _reduce_310":{"type":"method","name":"_reduce_310","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," comments "]}," RubyParser _reduce_309":{"type":"method","name":"_reduce_309","children":[],"call":[" env unextend "," env "," new_class "," lexer lineno "," lexer "]}," RubyParser _reduce_308":{"type":"method","name":"_reduce_308","children":[],"call":[" env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," lexer "," comments "," new_for ","val [] "]}," RubyParser _reduce_307":{"type":"method","name":"_reduce_307","children":[],"call":[" lexer lineno "," lexer "," lexer cond pop "," lexer cond "]}," RubyParser _reduce_306":{"type":"method","name":"_reduce_306","children":[],"call":[" new_for ","val [] "," lexer cond push "," lexer cond "," lexer "]}," RubyParser _reduce_305":{"type":"method","name":"_reduce_305","children":[],"call":[" lexer cond pop "," lexer cond "," lexer "," new_case ","val [] "]}," RubyParser _reduce_304":{"type":"method","name":"_reduce_304","children":[],"call":[" lexer cond push "," lexer cond "," lexer "," new_case ","val [] "]}," RubyParser _reduce_303":{"type":"method","name":"_reduce_303","children":[],"call":[" new_case ","val [] "]}," RubyParser _reduce_302":{"type":"method","name":"_reduce_302","children":[],"call":[" new_case ","val [] "," new_until "]}," RubyParser _reduce_301":{"type":"method","name":"_reduce_301","children":[],"call":[" new_case ","val [] "," lexer cond pop "," lexer cond "," lexer "]}," RubyParser _reduce_300":{"type":"method","name":"_reduce_300","children":[],"call":[" new_until ","val [] "," lexer cond push "," lexer cond "," lexer "]}," RubyParser _reduce_299":{"type":"method","name":"_reduce_299","children":[],"call":[" lexer cond pop "," lexer cond "," lexer "," new_while ","val [] "]}," RubyParser _reduce_298":{"type":"method","name":"_reduce_298","children":[],"call":[" lexer cond push "," lexer cond "," lexer "," lexer cond pop "]}," RubyParser _reduce_297":{"type":"method","name":"_reduce_297","children":[],"call":[" new_while ","val [] "," lexer cond push "," lexer cond "," lexer "]}," RubyParser _reduce_296":{"type":"method","name":"_reduce_296","children":[],"call":[" lexer cond pop "," lexer cond "," lexer "," new_if ","val [] "]}," RubyParser _reduce_295":{"type":"method","name":"_reduce_295","children":[],"call":[" lexer cond push "," lexer cond "," lexer "," new_if ","val [] "]}," RubyParser _reduce_294":{"type":"method","name":"_reduce_294","children":[],"call":[" new_if ","val [] ","iter insert "]}," RubyParser _reduce_293":{"type":"method","name":"_reduce_293","children":[],"call":[" new_if ","val [] "]}," RubyParser _reduce_292":{"type":"method","name":"_reduce_292","children":[],"call":["iter insert ","val [] ","call line= ","iter line "," new_call ","oper to_sym "," new_call  line= "," new_ new_call  "]}," RubyParser _reduce_290":{"type":"method","name":"_reduce_290","children":[],"call":["iter line ","call line ","iter insert "," new_call ","oper to_sym ","val [] "," new_yield "," new_call  line "," new_ new_call  "]}," RubyParser _reduce_289":{"type":"method","name":"_reduce_289","children":[],"call":[" s ","val [] "," new_yield "]}," RubyParser _reduce_288":{"type":"method","name":"_reduce_288","children":[],"call":[" new_yield ","val [] "]}," RubyParser _reduce_287":{"type":"method","name":"_reduce_287","children":[],"call":[" new_yield "," s "]}," RubyParser _reduce_286":{"type":"method","name":"_reduce_286","children":[],"call":[" new_yield ","val [] "," s ","val [] values "]}," RubyParser _reduce_285":{"type":"method","name":"_reduce_285","children":[],"call":[" s ","val [] "]}," RubyParser _reduce_284":{"type":"method","name":"_reduce_284","children":[],"call":[" s ","val [] values ","val [] "," new_aref "]}," RubyParser _reduce_283":{"type":"method","name":"_reduce_283","children":[],"call":[" s ","val [] ","val [] to_sym "]}," RubyParser _reduce_282":{"type":"method","name":"_reduce_282","children":[],"call":[" new_aref "," s ","val [] to_sym ","val [] "]}," RubyParser _reduce_281":{"type":"method","name":"_reduce_281","children":[],"call":[" s ","val [] to_sym ","val [] ","result paren= "," s  paren= "]}," RubyParser _reduce_280":{"type":"method","name":"_reduce_280","children":[],"call":[" s ","val [] to_sym ","val [] "," warning "]}," RubyParser _reduce_279":{"type":"method","name":"_reduce_279","children":[],"call":["result paren= "," s ","val [] "," lexer lex_state= "," lexer "]}," RubyParser _reduce_278":{"type":"method","name":"_reduce_278","children":[],"call":["val [] "," warning ","result line= "," s ","val []  line= "," s  line= "]}," RubyParser _reduce_277":{"type":"method","name":"_reduce_277","children":[],"call":[" lexer lex_state= "," lexer "," lexer lineno "]}," RubyParser _reduce_276":{"type":"method","name":"_reduce_276","children":[],"call":["result line= ","val [] "," s "," new_call ","val [] to_sym "," s  line= "," new_call  line= "]}," RubyParser _reduce_275":{"type":"method","name":"_reduce_275","children":[],"call":[" lexer lineno "," lexer "]}," RubyParser _reduce_274":{"type":"method","name":"_reduce_274","children":[],"call":[" new_call ","val [] to_sym ","val [] "]}," RubyParser _reduce_265":{"type":"method","name":"_reduce_265","children":[],"call":[" s ","val [] ","val [] << "]}," RubyParser _reduce_264":{"type":"method","name":"_reduce_264","children":[],"call":[" arg_concat ","val [] "," list_append "]}," RubyParser _reduce_263":{"type":"method","name":"_reduce_263","children":[],"call":["val [] << ","val [] "," s "]}," RubyParser _reduce_262":{"type":"method","name":"_reduce_262","children":[],"call":[" list_append ","val [] "]}," RubyParser _reduce_261":{"type":"method","name":"_reduce_261","children":[],"call":[" s ","val [] "]}," RubyParser _reduce_259":{"type":"method","name":"_reduce_259","children":[],"call":["val [] "," warning "]}," RubyParser _reduce_258":{"type":"method","name":"_reduce_258","children":[],"call":[" s ","val [] "," lexer lex_state= "," lexer "]}," RubyParser _reduce_257":{"type":"method","name":"_reduce_257","children":[],"call":["val [] "," warning "]}," RubyParser _reduce_256":{"type":"method","name":"_reduce_256","children":[],"call":[" lexer lex_state= "," lexer "]}," RubyParser _reduce_255":{"type":"method","name":"_reduce_255","children":[],"call":[" warning "]}," RubyParser _reduce_254":{"type":"method","name":"_reduce_254","children":[],"call":[" lexer lex_state= "," lexer ","val [] "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "]}," RubyParser _reduce_252":{"type":"method","name":"_reduce_252","children":[],"call":["val [] "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "]}," RubyParser _reduce_251":{"type":"method","name":"_reduce_251","children":[],"call":[" lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg stack dup "," lexer cmdarg stack "," arg_blk_pass ","val [] "," s "]}," RubyParser _reduce_249":{"type":"method","name":"_reduce_249","children":[],"call":[" arg_blk_pass ","val [] "," s "," arg_concat "," s add ","val [] values "]}," RubyParser _reduce_248":{"type":"method","name":"_reduce_248","children":[],"call":[" arg_blk_pass ","val [] "," arg_concat "," s add_all add "," s ","val [] values "," s add_all "]}," RubyParser _reduce_247":{"type":"method","name":"_reduce_247","children":[],"call":[" arg_blk_pass ","val [] "," arg_concat "," s add "," s ","val [] values "]}," RubyParser _reduce_246":{"type":"method","name":"_reduce_246","children":[],"call":[" arg_blk_pass ","val [] "," s add_all add "," s ","val [] values "," s add_all "]}," RubyParser _reduce_245":{"type":"method","name":"_reduce_245","children":[],"call":[" arg_blk_pass ","val [] "," s ","val [] values "]}," RubyParser _reduce_244":{"type":"method","name":"_reduce_244","children":[],"call":[" arg_blk_pass ","val [] "," s ","val [] values "," arg_concat "]}," RubyParser _reduce_243":{"type":"method","name":"_reduce_243","children":[],"call":[" arg_blk_pass ","val [] "," s ","val [] values "," arg_concat "]}," RubyParser _reduce_242":{"type":"method","name":"_reduce_242","children":[],"call":[" arg_blk_pass ","val [] "," arg_concat "," s ","val [] values "]}," RubyParser _reduce_241":{"type":"method","name":"_reduce_241","children":[],"call":[" arg_blk_pass ","val [] "," arg_concat "," s "," list_prepend "]}," RubyParser _reduce_240":{"type":"method","name":"_reduce_240","children":[],"call":[" arg_blk_pass ","val [] "]}," RubyParser _reduce_239":{"type":"method","name":"_reduce_239","children":[],"call":[" arg_blk_pass ","val [] "," list_prepend "," s "]}," RubyParser _reduce_237":{"type":"method","name":"_reduce_237","children":[],"call":[" arg_blk_pass ","val [] "," s ","val [] << ","val [] values "]}," RubyParser _reduce_236":{"type":"method","name":"_reduce_236","children":[],"call":[" arg_blk_pass ","val [] "," arg_concat ","val [] << "," s ","val [] values "]}," RubyParser _reduce_235":{"type":"method","name":"_reduce_235","children":[],"call":[" arg_blk_pass ","val [] ","val [] << "," s ","val [] values "]}," RubyParser _reduce_234":{"type":"method","name":"_reduce_234","children":[],"call":[" arg_blk_pass ","val [] "," arg_concat "," s ","val [] values "]}," RubyParser _reduce_233":{"type":"method","name":"_reduce_233","children":[],"call":[" arg_blk_pass ","val [] "," s ","val [] values "]}," RubyParser _reduce_232":{"type":"method","name":"_reduce_232","children":[],"call":[" arg_blk_pass ","val [] "," arg_concat "," s "," warning "]}," RubyParser _reduce_231":{"type":"method","name":"_reduce_231","children":[],"call":[" arg_blk_pass ","val [] "]}," RubyParser _reduce_230":{"type":"method","name":"_reduce_230","children":[],"call":[" s ","val [] "," warning "]}," RubyParser _reduce_227":{"type":"method","name":"_reduce_227","children":[],"call":["val [] add ","val [] "," warning "]}," RubyParser _reduce_226":{"type":"method","name":"_reduce_226","children":[],"call":[" s ","val [] "," warning "]}," RubyParser _reduce_225":{"type":"method","name":"_reduce_225","children":[],"call":["val [] "," s "]}," RubyParser _reduce_224":{"type":"method","name":"_reduce_224","children":[],"call":["val [] "," s ","val [] values "]}," RubyParser _reduce_223":{"type":"method","name":"_reduce_223","children":[],"call":["result paren= "," s ","val [] "," arg_concat "," s  paren= "," arg_concat  paren= "]}," RubyParser _reduce_222":{"type":"method","name":"_reduce_222","children":[],"call":[" s ","val [] values ","val [] "]}," RubyParser _reduce_221":{"type":"method","name":"_reduce_221","children":[],"call":[" arg_concat ","val [] "," s "," warning "]}," RubyParser _reduce_220":{"type":"method","name":"_reduce_220","children":[],"call":["val [] "]}," RubyParser _reduce_219":{"type":"method","name":"_reduce_219","children":[],"call":[" s ","val [] "," warning "," value_expr "]}," RubyParser _reduce_217":{"type":"method","name":"_reduce_217","children":[],"call":[" value_expr ","val [] "," s "]}," RubyParser _reduce_215":{"type":"method","name":"_reduce_215","children":[],"call":[" s ","val [] "," logop "]}," RubyParser _reduce_214":{"type":"method","name":"_reduce_214","children":[],"call":[" s ","val [] "," logop "]}," RubyParser _reduce_213":{"type":"method","name":"_reduce_213","children":[],"call":[" logop ","val [] "," new_call "," s ","val []= "," value_expr "]}," RubyParser _reduce_212":{"type":"method","name":"_reduce_212","children":[],"call":[" logop ","val [] "," new_call "," s ","val []= "," value_expr "]}," RubyParser _reduce_211":{"type":"method","name":"_reduce_211","children":[],"call":[" new_call "," s ","val [] ","val []= "," value_expr "]}," RubyParser _reduce_210":{"type":"method","name":"_reduce_210","children":[],"call":[" new_call "," s ","val [] ","val []= "," value_expr "]}," RubyParser _reduce_209":{"type":"method","name":"_reduce_209","children":[],"call":[" new_call "," s ","val [] ","val []= "," value_expr "," get_match_node "]}," RubyParser _reduce_208":{"type":"method","name":"_reduce_208","children":[],"call":[" s ","val [] "," get_match_node "]}," RubyParser _reduce_207":{"type":"method","name":"_reduce_207","children":[],"call":[" s "," get_match_node ","val [] "," new_call ","val []= "," value_expr "]}," RubyParser _reduce_206":{"type":"method","name":"_reduce_206","children":[],"call":[" get_match_node ","val [] "," new_call "," s "]}," RubyParser _reduce_205":{"type":"method","name":"_reduce_205","children":[],"call":[" s "," new_call ","val [] ","val []= "," value_expr "]}," RubyParser _reduce_204":{"type":"method","name":"_reduce_204","children":[],"call":[" new_call "," s ","val [] "]}," RubyParser _reduce_203":{"type":"method","name":"_reduce_203","children":[],"call":[" new_call "," s ","val [] "]}," RubyParser _reduce_202":{"type":"method","name":"_reduce_202","children":[],"call":[" new_call "," s ","val [] "]}," RubyParser _reduce_201":{"type":"method","name":"_reduce_201","children":[],"call":[" new_call "," s ","val [] "]}," RubyParser _reduce_200":{"type":"method","name":"_reduce_200","children":[],"call":[" new_call "," s ","val [] "]}," RubyParser _reduce_199":{"type":"method","name":"_reduce_199","children":[],"call":[" new_call "," s ","val [] "]}," RubyParser _reduce_198":{"type":"method","name":"_reduce_198","children":[],"call":[" new_call "," s ","val [] "]}," RubyParser _reduce_197":{"type":"method","name":"_reduce_197","children":[],"call":[" new_call "," s ","val [] "]}," RubyParser _reduce_196":{"type":"method","name":"_reduce_196","children":[],"call":[" new_call "," s ","val [] "]}," RubyParser _reduce_195":{"type":"method","name":"_reduce_195","children":[],"call":[" new_call "," s ","val [] ","val [] [] == ","val [] [] "]}," RubyParser _reduce_194":{"type":"method","name":"_reduce_194","children":[],"call":[" new_call "," s ","val [] "]}," RubyParser _reduce_193":{"type":"method","name":"_reduce_193","children":[],"call":[" new_call "," s ","val [] ","val [] [] == ","val [] [] "]}," RubyParser _reduce_192":{"type":"method","name":"_reduce_192","children":[],"call":[" new_call "," s ","val [] "]}," RubyParser _reduce_191":{"type":"method","name":"_reduce_191","children":[],"call":[" new_call "," s ","val [] "]}," RubyParser _reduce_190":{"type":"method","name":"_reduce_190","children":[],"call":[" new_call "," s ","val [] "]}," RubyParser _reduce_189":{"type":"method","name":"_reduce_189","children":[],"call":[" new_call "," s ","val [] "]}," RubyParser _reduce_188":{"type":"method","name":"_reduce_188","children":[],"call":[" new_call "," s ","val [] "]}," RubyParser _reduce_187":{"type":"method","name":"_reduce_187","children":[],"call":[" new_call "," s ","val [] "]}," RubyParser _reduce_186":{"type":"method","name":"_reduce_186","children":[],"call":[" new_call "," s ","val [] ","v2 last ","v1 last ","Fixnum  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type "]}," RubyParser _reduce_185":{"type":"method","name":"_reduce_185","children":[],"call":[" new_call "," s ","val [] ","v2 last ","v1 last ","Fixnum  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type "]}," RubyParser _reduce_184":{"type":"method","name":"_reduce_184","children":[],"call":[" s ","v2 last ","v1 last ","Fixnum  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type ","val [] "," backref_assign_error "]}," RubyParser _reduce_183":{"type":"method","name":"_reduce_183","children":[],"call":[" s ","v2 last ","v1 last ","Fixnum  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type ","val [] "," yyerror "]}," RubyParser _reduce_182":{"type":"method","name":"_reduce_182","children":[],"call":[" backref_assign_error ","val [] "," yyerror "]}," RubyParser _reduce_181":{"type":"method","name":"_reduce_181","children":[],"call":[" yyerror "," s ","val [] "]}," RubyParser _reduce_180":{"type":"method","name":"_reduce_180","children":[],"call":[" yyerror "," s ","val [] ","val [] to_sym "]}," RubyParser _reduce_179":{"type":"method","name":"_reduce_179","children":[],"call":[" s ","val [] ","val [] to_sym "]}," RubyParser _reduce_178":{"type":"method","name":"_reduce_178","children":[],"call":[" s ","val [] ","val [] to_sym ","val [] []= "]}," RubyParser _reduce_177":{"type":"method","name":"_reduce_177","children":[],"call":[" s ","val [] ","val [] to_sym "," new_op_asgn "]}," RubyParser _reduce_176":{"type":"method","name":"_reduce_176","children":[],"call":["val [] []= ","val [] "," s ","val [] to_sym "," node_assign "]}," RubyParser _reduce_175":{"type":"method","name":"_reduce_175","children":[],"call":[" new_op_asgn "," node_assign ","val [] "]}," RubyParser _reduce_174":{"type":"method","name":"_reduce_174","children":[],"call":[" node_assign "," s ","val [] "]}," RubyParser _reduce_173":{"type":"method","name":"_reduce_173","children":[],"call":[" node_assign ","val [] "]}," RubyParser _reduce_105":{"type":"method","name":"_reduce_105","children":[],"call":[" new_undef ","val [] "]}," RubyParser _reduce_104":{"type":"method","name":"_reduce_104","children":[],"call":[" lexer lex_state= "," lexer "]}," RubyParser _reduce_103":{"type":"method","name":"_reduce_103","children":[],"call":[" new_undef ","val [] "," s ","val [] to_sym "]}," RubyParser _reduce_102":{"type":"method","name":"_reduce_102","children":[],"call":[" s ","val [] "]}," RubyParser _reduce_101":{"type":"method","name":"_reduce_101","children":[],"call":[" s ","val [] to_sym ","val [] "]}," RubyParser _reduce_100":{"type":"method","name":"_reduce_100","children":[],"call":["val [] "," lexer lex_state= "," lexer "]}," RubyParser _reduce_99":{"type":"method","name":"_reduce_99","children":[],"call":["val [] "," lexer lex_state= "," lexer "]}," RubyParser _reduce_95":{"type":"method","name":"_reduce_95","children":[],"call":[" s ","val [] to_sym ","val [] "]}," RubyParser _reduce_94":{"type":"method","name":"_reduce_94","children":[],"call":["val [] to_sym ","val [] "]}," RubyParser _reduce_93":{"type":"method","name":"_reduce_93","children":[],"call":[" s ","val [] to_sym ","val [] "]}," RubyParser _reduce_91":{"type":"method","name":"_reduce_91","children":[],"call":[" yyerror "]}," RubyParser _reduce_90":{"type":"method","name":"_reduce_90","children":[],"call":[" backref_assign_error ","val [] "]}," RubyParser _reduce_89":{"type":"method","name":"_reduce_89","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," in_single > "," in_single "," in_def "]}," RubyParser _reduce_88":{"type":"method","name":"_reduce_88","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," in_single > "," in_single "," in_def "]}," RubyParser _reduce_87":{"type":"method","name":"_reduce_87","children":[],"call":[" s ","val [] "]}," RubyParser _reduce_86":{"type":"method","name":"_reduce_86","children":[],"call":[" s ","val [] "]}," RubyParser _reduce_85":{"type":"method","name":"_reduce_85","children":[],"call":[" s ","val [] "]}," RubyParser _reduce_84":{"type":"method","name":"_reduce_84","children":[],"call":[" aryset ","val [] "]}," RubyParser _reduce_83":{"type":"method","name":"_reduce_83","children":[],"call":[" assignable ","val [] "]}," RubyParser _reduce_82":{"type":"method","name":"_reduce_82","children":[],"call":[" backref_assign_error ","val [] "]}," RubyParser _reduce_81":{"type":"method","name":"_reduce_81","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," in_single > "," in_single "," in_def "]}," RubyParser _reduce_80":{"type":"method","name":"_reduce_80","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," in_single > "," in_single "," in_def "]}," RubyParser _reduce_79":{"type":"method","name":"_reduce_79","children":[],"call":[" s ","val [] "]}," RubyParser _reduce_78":{"type":"method","name":"_reduce_78","children":[],"call":[" s ","val [] "]}," RubyParser _reduce_77":{"type":"method","name":"_reduce_77","children":[],"call":[" s ","val [] "]}," RubyParser _reduce_76":{"type":"method","name":"_reduce_76","children":[],"call":[" aryset ","val [] "]}," RubyParser _reduce_75":{"type":"method","name":"_reduce_75","children":[],"call":[" assignable ","val [] "]}," RubyParser _reduce_74":{"type":"method","name":"_reduce_74","children":[],"call":["val [] << ","val [] compact ","val [] "]}," RubyParser _reduce_73":{"type":"method","name":"_reduce_73","children":[],"call":[" s ","val [] "]}," RubyParser _reduce_72":{"type":"method","name":"_reduce_72","children":[],"call":["val [] "]}," RubyParser _reduce_70":{"type":"method","name":"_reduce_70","children":[],"call":[" s "]}," RubyParser _reduce_69":{"type":"method","name":"_reduce_69","children":[],"call":[" s ","val [] "]}," RubyParser _reduce_68":{"type":"method","name":"_reduce_68","children":[],"call":[" s ","val [] << ","val [] "]}," RubyParser _reduce_67":{"type":"method","name":"_reduce_67","children":[],"call":[" s ","val [] << ","val [] "]}," RubyParser _reduce_66":{"type":"method","name":"_reduce_66","children":[],"call":[" s ","val [] << ","val [] compact ","val [] "]}," RubyParser _reduce_65":{"type":"method","name":"_reduce_65","children":[],"call":[" s ","val [] "]}," RubyParser _reduce_64":{"type":"method","name":"_reduce_64","children":[],"call":[" s ","val [] "]}," RubyParser _reduce_62":{"type":"method","name":"_reduce_62","children":[],"call":["val [] "]}," RubyParser _reduce_60":{"type":"method","name":"_reduce_60","children":[],"call":[" new_yield ","val [] "]}," RubyParser _reduce_59":{"type":"method","name":"_reduce_59","children":[],"call":[" new_super ","val [] "]}," RubyParser _reduce_58":{"type":"method","name":"_reduce_58","children":[],"call":["val [] ","val [] << "," raise ","result [] == ","result [] "," new_call ","val [] to_sym ","val []  [] == "," new_call  [] == ","val []  [] "," new_call  [] "]}," RubyParser _reduce_57":{"type":"method","name":"_reduce_57","children":[],"call":[" new_call ","val [] ","val [] to_sym "]}," RubyParser _reduce_56":{"type":"method","name":"_reduce_56","children":[],"call":[" new_call ","val [] ","val [] to_sym "]}," RubyParser _reduce_55":{"type":"method","name":"_reduce_55","children":[],"call":[" new_call ","val [] ","val [] to_sym "]}," RubyParser _reduce_54":{"type":"method","name":"_reduce_54","children":[],"call":["result insert ","val [] "," raise ","result [] == ","result [] "," new_call ","val [] to_sym "," new_call  insert "," new_call  [] == "," new_call  [] "]}," RubyParser _reduce_53":{"type":"method","name":"_reduce_53","children":[],"call":[" new_call ","val [] ","val [] to_sym "]}," RubyParser _reduce_52":{"type":"method","name":"_reduce_52","children":[],"call":[" env unextend "," env "," new_iter ","val [] "]}," RubyParser _reduce_51":{"type":"method","name":"_reduce_51","children":[],"call":[" env dynamic keys "," env dynamic "," env "]}," RubyParser _reduce_50":{"type":"method","name":"_reduce_50","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "]}," RubyParser _reduce_49":{"type":"method","name":"_reduce_49","children":[],"call":[" new_call ","val [] "]}," RubyParser _reduce_48":{"type":"method","name":"_reduce_48","children":[],"call":[" new_call ","val [] "]}," RubyParser _reduce_46":{"type":"method","name":"_reduce_46","children":[],"call":[" s "," ret_args ","val [] "," s line ","val [] last "," s val [] last  "]}," RubyParser _reduce_45":{"type":"method","name":"_reduce_45","children":[],"call":[" s "," ret_args ","val [] "," s line ","val [] last "," s val [] last  "]}," RubyParser _reduce_44":{"type":"method","name":"_reduce_44","children":[],"call":[" s "," ret_args ","val [] "," s line ","val [] last "," s val [] last  "]}," RubyParser _reduce_41":{"type":"method","name":"_reduce_41","children":[],"call":[" value_expr ","val [] "]}," RubyParser _reduce_39":{"type":"method","name":"_reduce_39","children":[],"call":[" s ","val [] "]}," RubyParser _reduce_38":{"type":"method","name":"_reduce_38","children":[],"call":[" s ","val [] "]}," RubyParser _reduce_37":{"type":"method","name":"_reduce_37","children":[],"call":[" logop ","val [] "]}," RubyParser _reduce_36":{"type":"method","name":"_reduce_36","children":[],"call":[" logop ","val [] "]}," RubyParser _reduce_33":{"type":"method","name":"_reduce_33","children":[],"call":[" new_masgn ","val [] "]}," RubyParser _reduce_32":{"type":"method","name":"_reduce_32","children":[],"call":[" new_masgn ","val [] "]}," RubyParser _reduce_31":{"type":"method","name":"_reduce_31","children":[],"call":[" node_assign "," s ","val [] "]}," RubyParser _reduce_30":{"type":"method","name":"_reduce_30","children":[],"call":[" backref_assign_error ","val [] "]}," RubyParser _reduce_29":{"type":"method","name":"_reduce_29","children":[],"call":[" s ","val [] "]}," RubyParser _reduce_28":{"type":"method","name":"_reduce_28","children":[],"call":[" s ","val [] "]}," RubyParser _reduce_27":{"type":"method","name":"_reduce_27","children":[],"call":[" s ","val [] "]}," RubyParser _reduce_26":{"type":"method","name":"_reduce_26","children":[],"call":[" s ","val [] ","val [] to_sym "]}," RubyParser _reduce_25":{"type":"method","name":"_reduce_25","children":[],"call":[" new_op_asgn "]}," RubyParser _reduce_24":{"type":"method","name":"_reduce_24","children":[],"call":[" new_masgn ","val [] "]}," RubyParser _reduce_23":{"type":"method","name":"_reduce_23","children":[],"call":[" node_assign ","val [] "]}," RubyParser _reduce_22":{"type":"method","name":"_reduce_22","children":[],"call":[" new_iter ","val [] "," s "," yyerror "," in_single > "," in_single "," in_def "]}," RubyParser _reduce_21":{"type":"method","name":"_reduce_21","children":[],"call":[" new_iter ","val [] "," s "]}," RubyParser _reduce_20":{"type":"method","name":"_reduce_20","children":[],"call":[" env extend "," env "," yyerror "," in_single > "," in_single "," in_def "]}," RubyParser _reduce_19":{"type":"method","name":"_reduce_19","children":[],"call":[" s ","val [] "]}," RubyParser _reduce_18":{"type":"method","name":"_reduce_18","children":[],"call":[" new_until ","val [] "]}," RubyParser _reduce_17":{"type":"method","name":"_reduce_17","children":[],"call":[" new_while ","val [] "]}," RubyParser _reduce_16":{"type":"method","name":"_reduce_16","children":[],"call":[" new_if ","val [] "]}," RubyParser _reduce_15":{"type":"method","name":"_reduce_15","children":[],"call":[" new_if ","val [] "]}," RubyParser _reduce_14":{"type":"method","name":"_reduce_14","children":[],"call":["val [] "]}," RubyParser _reduce_13":{"type":"method","name":"_reduce_13","children":[],"call":[" yyerror "]}," RubyParser _reduce_12":{"type":"method","name":"_reduce_12","children":[],"call":[" s ","val [] ","val [] to_sym "]}," RubyParser _reduce_11":{"type":"method","name":"_reduce_11","children":[],"call":[" s ","val [] to_sym ","val [] "]}," RubyParser _reduce_10":{"type":"method","name":"_reduce_10","children":[],"call":[" s line ","val [] "," s "]}," RubyParser _reduce_9":{"type":"method","name":"_reduce_9","children":[],"call":[" lexer lineno "," lexer "," lexer lex_state= "]}," RubyParser _reduce_8":{"type":"method","name":"_reduce_8","children":[],"call":["val [] "]}," RubyParser _reduce_7":{"type":"method","name":"_reduce_7","children":[],"call":[" block_append ","val [] "]}," RubyParser _reduce_4":{"type":"method","name":"_reduce_4","children":[],"call":[" new_compstmt "]}," RubyParser _reduce_3":{"type":"method","name":"_reduce_3","children":[],"call":[" new_body "]}," RubyParser _reduce_2":{"type":"method","name":"_reduce_2","children":[],"call":["val [] "]}," RubyParser _reduce_1":{"type":"method","name":"_reduce_1","children":[],"call":[" lexer lex_state= "," lexer "]}," RubyLexer yylex_string":{"type":"method","name":"yylex_string","children":[],"call":[" lex_state= "," lex_strterm= "," lineno= ","token == "," parse_string "," lex_strterm "," heredoc "," lex_strterm [] == "," lex_strterm [] "," parse_string  == "," heredoc  == "]}," RubyLexer process_token":{"type":"method","name":"process_token","children":[],"call":[" lex_state= "," parser env [] == "," parser env [] "," token to_sym "," token "," parser env "," parser ","last_state != "," yacc_value= "," lex_state == "," lex_state ","keyword id1 ","keyword id0 != ","keyword id0 ","state == ","state != "," cmdarg is_in_state "," cmdarg "," cond is_in_state "," cond "," command_start= ","keyword id0 == ","keyword state ","Keyword  keyword "," token =~ "," token << "," src matched "," src "," src scan ","RubyParser Keyword  keyword ","keyword name "," src lineno "," src unscan "," src peek != "," src peek ","command_state ! "," ruby18 "," tern is_in_state "," tern ","RubyParserStuff Keyword  keyword19 ","RubyParserStuff Keyword  keyword18 "," ruby19 "," is_arg? "," is_beg? "," result ","token lineno= "," lineno ","token to_sym ","(sym :expr_dot) include? ! ","(sym :expr_dot) include? "," last_state "," in_lex_state? "," ruby18 ! "," command_state "," process_token_keyword "," scan "," is_label_suffix? "," is_label_possible? ","token =~ ","token << "," matched "," token= "," lvar_defined? ","tok_id == "," cmd_state ","RubyParserStuff Keyword  keyword "," last_state= ","EXPR_END  | "," last_state !~ ","EXPR_DOT  | "," lex_state =~ "," lex_state !~ "," is_local_id ","EXPR_BEG_ANY  | | ","EXPR_BEG_ANY  | ","(sym :expr_beg) include? "," paren_nest "," lpar_beg= "," lpar_beg == "," lpar_beg "," ss lineno "," ss "," lex_ lex_state = "," lex_EXPR_END  | = ","  token=  to_sym ","  token  to_sym ","  token=  ","  token  ","last_ lex_state  != ","last_EXPR_END  |  != "," lex_state  != "," lex_ lex_state  == "," lex_EXPR_END  |  == "," lex_ lex_state  "," lex_EXPR_END  |  ","Keyword  keyword  id1 ","RubyParser Keyword  keyword  id1 ","RubyParserStuff Keyword  keyword19  id1 ","RubyParserStuff Keyword  keyword18  id1 ","RubyParserStuff Keyword  keyword  id1 ","Keyword  keyword  id0 != ","RubyParser Keyword  keyword  id0 != ","RubyParserStuff Keyword  keyword19  id0 != ","RubyParserStuff Keyword  keyword18  id0 != ","RubyParserStuff Keyword  keyword  id0 != ","Keyword  keyword  id0 ","RubyParser Keyword  keyword  id0 ","RubyParserStuff Keyword  keyword19  id0 ","RubyParserStuff Keyword  keyword18  id0 ","RubyParserStuff Keyword  keyword  id0 "," lex_state  == ","EXPR_END  |  == ","EXPR_END  |  != "," cmdarg is_in_ lex_state  "," cmdarg is_in_EXPR_END  |  "," cond is_in_ lex_state  "," cond is_in_EXPR_END  |  ","Keyword  keyword  id0 == ","RubyParser Keyword  keyword  id0 == ","RubyParserStuff Keyword  keyword19  id0 == ","RubyParserStuff Keyword  keyword18  id0 == ","RubyParserStuff Keyword  keyword  id0 == ","keyword  lex_state  ","keyword EXPR_END  |  ","Keyword  keyword  state ","RubyParser Keyword  keyword  state ","RubyParserStuff Keyword  keyword19  state ","RubyParserStuff Keyword  keyword18  state ","RubyParserStuff Keyword  keyword  state ","Keyword  Keyword  keyword  ","Keyword  RubyParser Keyword  keyword  ","Keyword  RubyParserStuff Keyword  keyword19  ","Keyword  RubyParserStuff Keyword  keyword18  ","Keyword  RubyParserStuff Keyword  keyword  ","  token=  =~ ","  token  =~ ","  token=  << ","  token  << ","RubyParser Keyword  Keyword  keyword  ","RubyParser Keyword  RubyParser Keyword  keyword  ","RubyParser Keyword  RubyParserStuff Keyword  keyword19  ","RubyParser Keyword  RubyParserStuff Keyword  keyword18  ","RubyParser Keyword  RubyParserStuff Keyword  keyword  ","Keyword  keyword  name ","RubyParser Keyword  keyword  name ","RubyParserStuff Keyword  keyword19  name ","RubyParserStuff Keyword  keyword18  name ","RubyParserStuff Keyword  keyword  name ","command_ lex_state  ! ","command_EXPR_END  |  ! "," tern is_in_ lex_state  "," tern is_in_EXPR_END  |  ","RubyParserStuff Keyword  Keyword  keyword 19 ","RubyParserStuff Keyword  RubyParser Keyword  keyword 19 ","RubyParserStuff Keyword  RubyParserStuff Keyword  keyword19 19 ","RubyParserStuff Keyword  RubyParserStuff Keyword  keyword18 19 ","RubyParserStuff Keyword  RubyParserStuff Keyword  keyword 19 ","RubyParserStuff Keyword  Keyword  keyword 18 ","RubyParserStuff Keyword  RubyParser Keyword  keyword 18 ","RubyParserStuff Keyword  RubyParserStuff Keyword  keyword19 18 ","RubyParserStuff Keyword  RubyParserStuff Keyword  keyword18 18 ","RubyParserStuff Keyword  RubyParserStuff Keyword  keyword 18 "," token=  lineno= "," token  lineno= "," token=  to_sym "," token  to_sym "," last_ lex_state  "," last_EXPR_END  |  ","  lex_state  "," in_lex_ lex_state ? "," in_lex_EXPR_END  | ? "," command_ lex_state  "," command_EXPR_END  |  "," process_token_Keyword  keyword  "," process_token_RubyParser Keyword  keyword  "," process_token_RubyParserStuff Keyword  keyword19  "," process_token_RubyParserStuff Keyword  keyword18  "," process_token_RubyParserStuff Keyword  keyword  "," process_ token= _keyword "," process_ token _keyword "," token=  =~ "," token  =~ "," token=  << "," token  << ","  token= = ","  token = "," cmd_ lex_state  "," cmd_EXPR_END  |  ","RubyParserStuff Keyword  Keyword  keyword  ","RubyParserStuff Keyword  RubyParser Keyword  keyword  ","RubyParserStuff Keyword  RubyParserStuff Keyword  keyword19  ","RubyParserStuff Keyword  RubyParserStuff Keyword  keyword18  ","RubyParserStuff Keyword  RubyParserStuff Keyword  keyword  "," last_ lex_state = "," last_EXPR_END  | = ","  lex_state = "," last_ lex_state  !~ "," last_EXPR_END  |  !~ ","  lex_state  !~ "," lex_ lex_state  =~ "," lex_EXPR_END  |  =~ "," lex_ lex_state  !~ "," lex_EXPR_END  |  !~ "]}," RubyLexer unescape":{"type":"method","name":"unescape","children":[],"call":[" rb_compile_error ","(send\n  (send\n    (send\n      (nth-ref 2) :[]\n      (int 0)) :ord) :&\n  (int 159)) chr ","2 [] ord & ","2 [] ord ","2 [] ","(send\n  (send\n    (send\n      (nth-ref 1) :[]\n      (int 0)) :ord) :|\n  (int 128)) chr ","1 [] ord | ","1 [] ord ","1 [] ","1 to_i chr ","1 to_i ","$& to_i chr ","$& to_i ","(pair\n  (str \"a\")\n  (str \"\\a\")) [] ","127 chr ","x force_encoding ","(send\n  (send\n    (nth-ref 1) :delete\n    (str \"{}\")) :to_i\n  (int 16)) pack ","1 delete to_i ","1 delete ","(send\n  (send\n    (back-ref :$&) :to_i\n    (int 8)) :&\n  (int 255)) chr ","$& to_i & "," extra_lineno ","s == ","ESCAPES  [] ","(send\n  (send\n    (nth-ref 1) :split) :map) pack ","s to_i ","1 split map ","1 split ","cp to_i "," (pair\n  (str \"a\")\n  (str \"\\a\")) [] b_compile_e(pair\n  (str \"a\")\n  (str \"\\a\")) [] (pair\n  (str \"a\")\n  (str \"\\a\")) [] o(pair\n  (str \"a\")\n  (str \"\\a\")) []  "," ESCAPES  [] b_compile_eESCAPES  [] ESCAPES  [] oESCAPES  []  ","(send\n  (send\n    (send\n      (nth-(pair\n  (str \"a\")\n  (str \"\\a\")) [] ef 2) :[]\n      (int 0)) :o(pair\n  (str \"a\")\n  (str \"\\a\")) [] d) :&\n  (int 159)) ch(pair\n  (str \"a\")\n  (str \"\\a\")) []  ","(send\n  (send\n    (send\n      (nth-ESCAPES  [] ef 2) :[]\n      (int 0)) :oESCAPES  [] d) :&\n  (int 159)) chESCAPES  []  ","2 [] o(pair\n  (str \"a\")\n  (str \"\\a\")) [] d & ","2 [] oESCAPES  [] d & ","2 [] o(pair\n  (str \"a\")\n  (str \"\\a\")) [] d ","2 [] oESCAPES  [] d ","(send\n  (send\n    (send\n      (nth-(pair\n  (str \"a\")\n  (str \"\\a\")) [] ef 1) :[]\n      (int 0)) :o(pair\n  (str \"a\")\n  (str \"\\a\")) [] d) :|\n  (int 128)) ch(pair\n  (str \"a\")\n  (str \"\\a\")) []  ","(send\n  (send\n    (send\n      (nth-ESCAPES  [] ef 1) :[]\n      (int 0)) :oESCAPES  [] d) :|\n  (int 128)) chESCAPES  []  ","1 [] o(pair\n  (str \"a\")\n  (str \"\\a\")) [] d | ","1 [] oESCAPES  [] d | ","1 [] o(pair\n  (str \"a\")\n  (str \"\\a\")) [] d ","1 [] oESCAPES  [] d ","1 to_i ch(pair\n  (str \"a\")\n  (str \"\\a\")) []  ","1 to_i chESCAPES  []  ","$& to_i ch(pair\n  (str \"a\")\n  (str \"\\a\")) []  ","$& to_i chESCAPES  []  ","(pai(pair\n  (str \"a\")\n  (str \"\\a\")) [] \n  (st(pair\n  (str \"a\")\n  (str \"\\a\")) []  \"a\")\n  (st(pair\n  (str \"a\")\n  (str \"\\a\")) []  \"\\a\")) [] ","(paiESCAPES  [] \n  (stESCAPES  []  \"a\")\n  (stESCAPES  []  \"\\a\")) [] ","127 ch(pair\n  (str \"a\")\n  (str \"\\a\")) []  ","127 chESCAPES  []  ","x fo(pair\n  (str \"a\")\n  (str \"\\a\")) [] ce_encoding ","x foESCAPES  [] ce_encoding ","(send\n  (send\n    (nth-(pair\n  (str \"a\")\n  (str \"\\a\")) [] ef 1) :delete\n    (st(pair\n  (str \"a\")\n  (str \"\\a\")) []  \"{}\")) :to_i\n  (int 16)) pack ","(send\n  (send\n    (nth-ESCAPES  [] ef 1) :delete\n    (stESCAPES  []  \"{}\")) :to_i\n  (int 16)) pack ","(send\n  (send\n    (back-(pair\n  (str \"a\")\n  (str \"\\a\")) [] ef :$&) :to_i\n    (int 8)) :&\n  (int 255)) ch(pair\n  (str \"a\")\n  (str \"\\a\")) []  ","(send\n  (send\n    (back-ESCAPES  [] ef :$&) :to_i\n    (int 8)) :&\n  (int 255)) chESCAPES  []  "," ext(pair\n  (str \"a\")\n  (str \"\\a\")) [] a_lineno "," extESCAPES  [] a_lineno ","(send\n  (send\n    (nth-(pair\n  (str \"a\")\n  (str \"\\a\")) [] ef 1) :split) :map) pack ","(send\n  (send\n    (nth-ESCAPES  [] ef 1) :split) :map) pack "]}," RubyLexer src=":{"type":"method","name":"src=","children":[],"call":["RPStringScanner  new "," raise ","src inspect ","String  === "]}," RubyLexer lineno":{"type":"method","name":"lineno","children":[],"call":[" src lineno "," src "," ss lineno "," ss "]}," RubyLexer int_with_base":{"type":"method","name":"int_with_base","children":[],"call":[" yacc_value= "," src matched to_i "," src matched "," src "," rb_compile_error "," src matched =~ "," result ","text to_i "," Complex ","text chop to_i ","text chop ","text end_with? "," Rational ","text chop chop to_i ","text chop chop "," matched "," matched =~ "," matched to_i "," matched  to_i "," matched  chop to_i "," matched  chop "," matched  end_with? "," matched  chop chop to_i "," matched  chop chop "]}," RubyLexer fix_arg_lex_state":{"type":"method","name":"fix_arg_lex_state","children":[],"call":[" lex_state= "," lex_state == "," lex_state "," in_lex_state? "]}," RubyLexer expr_beg_push":{"type":"method","name":"expr_beg_push","children":[],"call":[" yacc_value= "," lex_state= "," cmdarg push "," cmdarg "," cond push "," cond "]}," RubyLexer comments":{"type":"method","name":"comments","children":[],"call":["@comments clear ","@comments join ","@@comments join omments @comments join lear ","@@comments join omments join "]}," RubyParserGauntlet run":{"type":"method","name":"run","children":[],"call":[" dirty= "," data []= "," data "," warn ","v == "," data [] values all? "," data [] values "," data [] "," process "," data [] [] == "," data [] [] ","path =~ ","Dir  [] sort each ","Dir  [] sort ","Dir  [] "]}," RubyParserGauntlet process":{"type":"method","name":"process","children":[],"call":[" broke ","e message strip ","e message "," exit "," puts "," warn "," dirty= "," data [] []= "," data [] "," data "," diff_pp ","old_sexp != ","rp process ","r2r process ","old_sexp deep_clone ","File  read ","Ruby2Ruby  new ","RubyParser  new ","$stderr print ","rp process  != ","RubyParser  new  process ","Ruby2Ruby  new  process ","rp process  deep_clone "]}," RubyParserGauntlet broke":{"type":"method","name":"broke","children":[],"call":[" dirty= "," data [] []= "," data [] "," data "," warn "]}," RubyParserGauntlet diff_pp":{"type":"method","name":"diff_pp","children":[],"call":["File  unlink ","PP  pp ","File  open "," require ","file_b path ","file_a path ","Tempfile  new "]}," RubyParserGauntlet should_skip?":{"type":"method","name":"should_skip?","children":[],"call":[" data [] == "," data [] "," data "," data [] empty? ! "," data [] empty? ","Hash  === "]}," RubyParserGauntlet initialize":{"type":"method","name":"initialize","children":[],"call":[" data merge! "," data "," load_yaml "," data_file "," data= ","h []= ","Hash  new "]}," RubyParser new_until_or_while":{"type":"method","name":"new_until_or_while","children":[],"call":["result line= "," s ","expr last "," canonicalize_conditions ","expr first == ","expr first "," cond ","block last ","block [] == ","block [] ","(and\n  (lvar :block)\n  (send\n    (lvar :block) :line)) compact min ","(and\n  (lvar :block)\n  (send\n    (lvar :block) :line)) compact ","expr line ","block line ","type == "," s  line= ","result (and\n  (lvar :block)\n  (send\n    (lvar :block) :line)) compact min = "," cond  last "," cond  first == "," cond  first ","(and\n  (lvar :block)\n  (send\n    (lvar :block) :(and\n  (lvar :block)\n  (send\n    (lvar :block) :line)) compact min )) compact min ","(and\n  (lvar :block)\n  (send\n    (lvar :block) :(and\n  (lvar :block)\n  (send\n    (lvar :block) :line)) compact min )) compact "," cond  line ","expr (and\n  (lvar :block)\n  (send\n    (lvar :block) :line)) compact min  ","block (and\n  (lvar :block)\n  (send\n    (lvar :block) :line)) compact min  "]}," RPStringScanner extra_lines_added=":{"type":"method","name":"extra_lines_added=","children":[],"call":[]}," RPStringScanner extra_lines_added":{"type":"method","name":"extra_lines_added","children":[],"call":[]}," RubyParser StackState push":{"type":"method","name":"push","children":[],"call":["@stack push "]}," RubyParser StackState pop":{"type":"method","name":"pop","children":[],"call":["@stack push ","@stack size == ","@stack size ","@stack pop "]}," RubyParser StackState lexpop":{"type":"method","name":"lexpop","children":[],"call":["@stack push ","@stack pop "," raise ","@stack size == ","@stack size ","@st@stack pop ck push ","@st@stack pop ck pop "," r@stack pop ise ","@st@stack pop ck size == ","@st@stack pop ck size "]}," RubyParser StackState is_in_state":{"type":"method","name":"is_in_state","children":[],"call":["@stack last "]}," RubyParser StackState inspect":{"type":"method","name":"inspect","children":[],"call":["@stack inspect "]}," RubyParser StackState initialize":{"type":"method","name":"initialize","children":[],"call":[]}," RubyParser Environment used?":{"type":"method","name":"used?","children":[],"call":["u [] ","env merge ","@use [] reverse inject ","@use [] reverse ","@use [] ","@dyn index "]}," RubyParser Environment use":{"type":"method","name":"use","children":[],"call":["@use [] []= ","@use [] ","env [] ","@env each_with_index "]}," RubyParser Environment unextend":{"type":"method","name":"unextend","children":[],"call":[" raise ","@env empty? ","@use shift ","@env shift ","@dyn shift "]}," RubyParser Environment reset":{"type":"method","name":"reset","children":[],"call":[" extend ","@use clear ","@env clear ","@dyn clear "]}," RubyParser Environment initialize":{"type":"method","name":"initialize","children":[],"call":[" reset "]}," RubyParser Environment extend":{"type":"method","name":"extend","children":[],"call":["@use unshift ","@env unshift ","@dyn unshift "]}," RubyParser Environment dynamic?":{"type":"method","name":"dynamic?","children":[],"call":["@dyn [] != ","@dyn [] "]}," RubyParser Environment dynamic":{"type":"method","name":"dynamic","children":[],"call":["env merge ","@env [] reverse inject ","@env [] reverse ","@env [] ","@dyn index "]}," RubyParser Environment current":{"type":"method","name":"current","children":[],"call":["@env first "]}," RubyParser Environment all":{"type":"method","name":"all","children":[],"call":["env merge ","@env [] reverse inject ","@env [] reverse ","@env [] ","@dyn index "]}," RubyParser Environment []=":{"type":"method","name":"[]=","children":[],"call":[" current []= "," current "," raise ","v == "]}," RubyParser Environment []":{"type":"method","name":"[]","children":[],"call":[" all [] "," all "]}," RubyParser Keyword keyword":{"type":"method","name":"keyword","children":[],"call":[]}," RubyParser Keyword KWtable initialize":{"type":"method","name":"initialize","children":[],"call":[]}," RubyParser _reduce_506":{"type":"method","name":"_reduce_506","children":[],"call":[]}," RubyParser _reduce_505":{"type":"method","name":"_reduce_505","children":[],"call":[]}," RubyParser _reduce_501":{"type":"method","name":"_reduce_501","children":[],"call":[" yyerrok "]}," RubyParser _reduce_481":{"type":"method","name":"_reduce_481","children":[],"call":[" s ","val [] "]}," RubyParser _reduce_480":{"type":"method","name":"_reduce_480","children":[],"call":["list push ","more empty? ","val [] [] ","val [] ","val [] dup ","val [] dup  push ","val [] []  empty? "]}," RubyParser _reduce_477":{"type":"method","name":"_reduce_477","children":[],"call":["val [] "]}," RubyParser _reduce_471":{"type":"method","name":"_reduce_471","children":[],"call":["val [] "]}," RubyParser _reduce_467":{"type":"method","name":"_reduce_467","children":[],"call":[" env []= "," env "]}," RubyParser _reduce_466":{"type":"method","name":"_reduce_466","children":[],"call":[" assignable ","val [] to_sym ","val [] "]}," RubyParser _reduce_463":{"type":"method","name":"_reduce_463","children":[],"call":[" block_append ","val [] "]}," RubyParser _reduce_462":{"type":"method","name":"_reduce_462","children":[],"call":[" s ","val [] "]}," RubyParser _reduce_424":{"type":"method","name":"_reduce_424","children":[],"call":["val [] -@ ","val [] "]}," RubyParser _reduce_423":{"type":"method","name":"_reduce_423","children":[],"call":["val [] -@ ","val [] "]}," RubyParser _reduce_420":{"type":"method","name":"_reduce_420","children":[],"call":[" s ","result last intern ","result last ","result []= ","result [] "," yyerror ","result empty? ","result nil? ","val [] "," lexer lex_state= "," lexer "," s  last intern ","val []  last intern "," s  last ","val []  last "," s  []= ","val []  []= "," s  [] ","val []  [] "," s  empty? ","val []  empty? "," s  nil? ","val []  nil? "]}," RubyParser _reduce_415":{"type":"method","name":"_reduce_415","children":[],"call":["val [] to_sym ","val [] "]}," RubyParser _reduce_414":{"type":"method","name":"_reduce_414","children":[],"call":["val [] to_sym ","val [] "," lexer lex_state= "," lexer "]}," RubyParser _reduce_411":{"type":"method","name":"_reduce_411","children":[],"call":[" s ","val [] to_sym ","val [] "]}," RubyParser _reduce_393":{"type":"method","name":"_reduce_393","children":[],"call":[" s "]}," RubyParser _reduce_381":{"type":"method","name":"_reduce_381","children":[],"call":[" s ","val [] "]}," RubyParser _reduce_374":{"type":"method","name":"_reduce_374","children":[],"call":[" s ","val [] "]}," RubyParser _reduce_373":{"type":"method","name":"_reduce_373","children":[],"call":[]}," RubyParser _reduce_369":{"type":"method","name":"_reduce_369","children":[],"call":[" s ","val [] "]}," RubyParser _reduce_368":{"type":"method","name":"_reduce_368","children":[],"call":[" list_append "," s ","val [] "]}," RubyParser _reduce_365":{"type":"method","name":"_reduce_365","children":[],"call":[" lexer lineno "," lexer "]}," RubyParser _reduce_328":{"type":"method","name":"_reduce_328","children":[],"call":[" value_expr ","val [] "]}," RubyParser _reduce_327":{"type":"method","name":"_reduce_327","children":[],"call":[" s "]}," RubyParser _reduce_291":{"type":"method","name":"_reduce_291","children":[],"call":[" s ","val [] "]}," RubyParser _reduce_267":{"type":"method","name":"_reduce_267","children":[],"call":[" s ","val [] "]}," RubyParser _reduce_266":{"type":"method","name":"_reduce_266","children":[],"call":[" arg_concat ","val [] "]}," RubyParser _reduce_260":{"type":"method","name":"_reduce_260","children":[],"call":[" s ","val [] "]}," RubyParser _reduce_253":{"type":"method","name":"_reduce_253","children":[],"call":[" lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg stack dup "," lexer cmdarg stack "]}," RubyParser _reduce_250":{"type":"method","name":"_reduce_250","children":[],"call":[" arg_blk_pass ","val [] "," arg_concat "," s add_all add "," s ","val [] values "," s add_all "]}," RubyParser _reduce_238":{"type":"method","name":"_reduce_238","children":[],"call":[" arg_blk_pass ","val [] "," arg_concat ","val [] << "," s ","val [] values "]}," RubyParser _reduce_229":{"type":"method","name":"_reduce_229","children":[],"call":["val [] add ","val [] "," warning "]}," RubyParser _reduce_228":{"type":"method","name":"_reduce_228","children":[],"call":[" s ","val [] "," warning "]}," RubyParser _reduce_216":{"type":"method","name":"_reduce_216","children":[],"call":[" s ","val [] "]}," RubyParser _reduce_107":{"type":"method","name":"_reduce_107","children":[],"call":[" new_undef ","val [] "]}," RubyParser _reduce_106":{"type":"method","name":"_reduce_106","children":[],"call":[" lexer lex_state= "," lexer "]}," Sexp block_pass?":{"type":"method","name":"block_pass?","children":[],"call":["s [] == ","s [] ","Sexp  === "," any? ","s sexp_type == ","s sexp_type "]}," Sexp add_all":{"type":"method","name":"add_all","children":[],"call":[" raise ","x inspect "," inspect "," concat ","x sexp_body "]}," Sexp add":{"type":"method","name":"add","children":[],"call":[" concat "," raise "]}," String grep":{"type":"method","name":"grep","children":[],"call":[" lines grep "," lines "]}," RubyParserStuff StackState push":{"type":"method","name":"push","children":[],"call":[" p "," caller first "," caller "," name "," debug ","@stack push "," warn ","c clean_caller "," caller [] ","c =~ "," log ","  caller [] aller first ","  caller first aller first ","  caller [] aller ","  caller first aller ","@sta caller [] k push ","@sta caller first k push "," caller []   caller [] lean_ caller [] aller "," caller first   caller first lean_ caller first aller ","  caller [] aller [] ","  caller first aller [] "," caller []  =~ "," caller first  =~ "]}," RubyParserStuff StackState pop":{"type":"method","name":"pop","children":[],"call":["@stack push ","@stack size == ","@stack size "," p "," caller first "," caller "," name "," debug ","@stack pop "," warn "," log ","@stack empty? "," calle@stack pop  fi@stack pop st "," calle@stack pop  "," wa@stack pop n "]}," RubyParserStuff StackState lexpop":{"type":"method","name":"lexpop","children":[],"call":["@stack push ","@stack pop "," raise ","@stack size == ","@stack size "," p "," caller first "," caller "," debug "," warn "," name "," log ","@st@stack pop ck push ","@st@stack pop ck pop "," r@stack pop ise ","@st@stack pop ck size == ","@st@stack pop ck size "," c@stack pop ller first "," c@stack pop ller "," de@stack pop ug "," w@stack pop rn "," n@stack pop me "]}," RubyParserStuff StackState is_in_state":{"type":"method","name":"is_in_state","children":[],"call":["@stack last "," p "," caller first "," caller "," name "," debug "," log "]}," RubyParserStuff StackState inspect":{"type":"method","name":"inspect","children":[],"call":["@stack inspect "]}," RubyParserStuff StackState initialize":{"type":"method","name":"initialize","children":[],"call":[]}," RubyParserStuff Environment used?":{"type":"method","name":"used?","children":[],"call":["u [] ","env merge ","@use [] reverse inject ","@use [] reverse ","@use [] ","@dyn index "]}," RubyParserStuff Environment use":{"type":"method","name":"use","children":[],"call":["@use [] []= ","@use [] ","env [] ","@env each_with_index "]}," RubyParserStuff Environment unextend":{"type":"method","name":"unextend","children":[],"call":[" raise ","@env empty? ","@use shift ","@env shift ","@dyn shift "]}," RubyParserStuff Environment reset":{"type":"method","name":"reset","children":[],"call":[" extend ","@use clear ","@env clear ","@dyn clear "]}," RubyParserStuff Environment initialize":{"type":"method","name":"initialize","children":[],"call":[" reset "]}," RubyParserStuff Environment extend":{"type":"method","name":"extend","children":[],"call":["@use unshift ","@env unshift ","@dyn unshift "]}," RubyParserStuff Environment dynamic?":{"type":"method","name":"dynamic?","children":[],"call":["@dyn [] != ","@dyn [] "]}," RubyParserStuff Environment dynamic":{"type":"method","name":"dynamic","children":[],"call":["env merge ","@env [] reverse inject ","@env [] reverse ","@env [] ","@dyn index "]}," RubyParserStuff Environment current":{"type":"method","name":"current","children":[],"call":["@env first "]}," RubyParserStuff Environment all":{"type":"method","name":"all","children":[],"call":["env merge ","@env [] reverse inject ","@env [] reverse ","@env [] ","@dyn index "]}," RubyParserStuff Environment []=":{"type":"method","name":"[]=","children":[],"call":[" current []= "," current "," raise ","v == "]}," RubyParserStuff Environment []":{"type":"method","name":"[]","children":[],"call":[" all [] "," all "]}," RubyParserStuff Keyword keyword19":{"type":"method","name":"keyword19","children":[],"call":[]}," RubyParserStuff Keyword keyword18":{"type":"method","name":"keyword18","children":[],"call":[]}," RubyParserStuff Keyword KWtable initialize":{"type":"method","name":"initialize","children":[],"call":[]}," RubyParserStuff on_error":{"type":"method","name":"on_error","children":[],"call":[" raise "," warn ","# ERROR: %s:%p :: %s % ","e message strip ","e message "," lexer lineno "," lexer "," file ","e message replace ","%s:%p :: %s % ","ev first ","ev last is_a? ","ev last ","ev size == ","ev size ","ev instance_of? ","ev first  first ","ev first  last is_a? ","ev first  last ","ev first  size == ","ev first  size ","ev first  instance_of? "]}," RubyParserStuff yyerror":{"type":"method","name":"yyerror","children":[],"call":[" warn "]}," RubyParserStuff warning":{"type":"method","name":"warning","children":[],"call":[]}," RubyParserStuff void_stmts":{"type":"method","name":"void_stmts","children":[],"call":["node []= "," remove_begin ","node [] map ","node [] ","node [] == ","node sexp_body= ","node sexp_body map ","node sexp_body ","node respond_to? ","node sexp_type == ","node sexp_type "]}," RubyParserStuff value_expr":{"type":"method","name":"value_expr","children":[],"call":["node []= "," value_expr ","node [] ","node [] == ","node line= ","oldnode line "," remove_begin ","node sexp_type == ","node sexp_type "," remove_begin  []= "," remove_begin  [] "," remove_begin  [] == "," remove_begin  line= ","old remove_begin  line "," remove_begin  sexp_type == "," remove_begin  sexp_type "]}," RubyParserStuff s":{"type":"method","name":"s","children":[],"call":["result file= "," file "," lexer lineno "," lexer ","result line "," lexer src ","Sexp  new "," lexer ss ","Sexp  new  file= ","Sexp  new  line "]}," RubyParserStuff ret_args":{"type":"method","name":"ret_args","children":[],"call":["node []= ","node [] [] == ","node [] [] ","node [] ","node [] == "," s ","node paren ! ","node paren ","node last ","node size == ","node size "," raise ","node sexp_type= ","node [] sexp_type == ","node [] sexp_type ","node sexp_type == ","node sexp_type "," s line ","node line "," s  []= ","node last  []= "," s line  []= "," s  [] [] == ","node last  [] [] == "," s line  [] [] == "," s  [] [] ","node last  [] [] "," s line  [] [] "," s  [] ","node last  [] "," s line  [] "," s  [] == ","node last  [] == "," s line  [] == "," s  paren ! ","node last  paren ! "," s line  paren ! "," s  paren ","node last  paren "," s line  paren "," s  last ","node last  last "," s line  last "," s  size == ","node last  size == "," s line  size == "," s  size ","node last  size "," s line  size "," s  sexp_type= ","node last  sexp_type= "," s line  sexp_type= "," s  [] sexp_type == ","node last  [] sexp_type == "," s line  [] sexp_type == "," s  [] sexp_type ","node last  [] sexp_type "," s line  [] sexp_type "," s  sexp_type == ","node last  sexp_type == "," s line  sexp_type == "," s  sexp_type ","node last  sexp_type "," s line  sexp_type "," s  line ","node last  line "," s line  line "]}," RubyParserStuff block_dup_check":{"type":"method","name":"block_dup_check","children":[],"call":[" syntax_error ","call_or_args block_pass? "]}," RubyParserStuff reset":{"type":"method","name":"reset","children":[],"call":[" comments clear "," comments "," env reset "," env "," in_single= "," in_def= "," lexer reset "," lexer "," last_token_type= "]}," RubyParserStuff remove_begin":{"type":"method","name":"remove_begin","children":[],"call":["node line= ","oldnode line ","node [] ","node size == ","node size ","begin == ","node last ","node sexp_type == ","node sexp_type ","node line "," s ","node == ","node []  line= ","node last  line= "," s  line= ","node node line = ","oldnode []  line ","oldnode last  line ","old s  line ","oldnode node line  ","node []  [] ","node last  [] "," s  [] ","node []  size == ","node last  size == "," s  size == ","node []  size ","node last  size "," s  size ","node []  last ","node last  last "," s  last ","node []  sexp_type == ","node last  sexp_type == "," s  sexp_type == ","node []  sexp_type ","node last  sexp_type "," s  sexp_type ","node []  line ","node last  line "," s  line ","node node line  ","node []  == ","node last  == "," s  == "]}," RubyParserStuff process":{"type":"method","name":"process","children":[],"call":[" do_parse ","ENV  has_key? "," lexer src= "," lexer "," file= ","file dup "," handle_encoding "," raise ","str inspect ","String  === ","Timeout  timeout ","str dup "," warn ","str force_encoding encode! ","str force_encoding ","s [] ","str lines first find ","str lines first ","str lines "," lexer ss= ","RPStringScanner  new "," lexer string= ","str freeze "," handle_encoding  inspect ","str dup  inspect "," handle_encoding  dup ","str dup  dup "," handle_encoding  force_encoding encode! ","str dup  force_encoding encode! "," handle_encoding  force_encoding ","str dup  force_encoding "," handle_encoding  lines first find ","str dup  lines first find "," handle_encoding  lines first ","str dup  lines first "," handle_encoding  lines ","str dup  lines "," lexer  handle_encoding ing= "," lexer str dup ing= "," handle_encoding  freeze ","str dup  freeze "]}," RubyParserStuff hack_encoding":{"type":"method","name":"hack_encoding","children":[],"call":[" raise ","str encoding name == ","str encoding name ","str encoding ","str encode! ","str valid_encoding? ","str force_encoding ","encodings each ","(lvar :extra) compact ","encodings unshift ","extra nil? ","ENCODING_ORDER  dup ","(lvar :extra) compact  each ","ENCODING_ORDER  dup  each ","(lvar :extra) compact  unshift ","ENCODING_ORDER  dup  unshift "]}," RubyParserStuff handle_encoding":{"type":"method","name":"handle_encoding","children":[],"call":[" hack_encoding "," warn ","encoding sub! ","1 strip ","s [] ","header find ","str [] ","first =~ ","header first ","s force_encoding ","header map! ","str lines first ","str lines ","str respond_to? ","str dup ","str encode! ","str each_line first ","str each_line ","str b [] ","str b ","utf-8 +@ "," hack_1 strip  ","1 strip  sub! ","1 str dup ip ","str lines first  find ","str each_line first  find ","str dup  [] ","str lines first  first ","str each_line first  first ","s force_1 strip  ","str lines first  map! ","str each_line first  map! ","str dup  lines first ","str dup  lines ","str dup  respond_to? ","str dup  dup ","str dup  encode! ","str dup  each_line first ","str dup  each_line ","str dup  b [] ","str dup  b "]}," RubyParserStuff node_assign":{"type":"method","name":"node_assign","children":[],"call":[" raise ","lhs inspect ","lhs << ","lhs []= ","lhs concat "," arg_add [] "," arg_add ","lhs pop ","Symbol  === ","lhs last ","lhs [] "," value_expr ","rhs inspect "," value_expr  inspect "]}," RubyParserStuff next_token":{"type":"method","name":"next_token","children":[],"call":[" lexer yacc_value "," lexer "," lexer token "," lexer advance ","token first != ","token first "," lexer next_token "," last_token_type= ","token ! "," lexer  lexer next_token  "," lexer next_token  first != "," lexer next_token  first "," lexer next_ lexer next_token  "," last_ lexer next_token _type= "," lexer next_token  ! "]}," RubyParserStuff new_yield":{"type":"method","name":"new_yield","children":[],"call":[" s ","args [] ","args first == ","args first ","args []= "," raise ","args node_type == ","args node_type ","args sexp_body ","args sexp_type == ","args sexp_type ","args sexp_type= ","(sym :call_args) include? "," s line ","args line "," lexer lineno "," lexer "," s  [] "," s line  [] "," s  first == "," s line  first == "," s  first "," s line  first "," s  []= "," s line  []= "," s  node_type == "," s line  node_type == "," s  node_type "," s line  node_type "," s  sexp_body "," s line  sexp_body "," s  sexp_type == "," s line  sexp_type == "," s  sexp_type "," s line  sexp_type "," s  sexp_type= "," s line  sexp_type= ","(sym :call_ s ) include? ","(sym :call_ s line ) include? "," s  line "," s line  line "]}," RubyParserStuff new_xstring":{"type":"method","name":"new_xstring","children":[],"call":[" s ","str []= ","str [] ","str sexp_type= ","str sexp_type "," s line ","str line ","node line ","node sexp_type= ","node sexp_type "," lexer lineno "," lexer "," s  []= "," s line  []= "," s  [] "," s line  [] "," s  sexp_type= "," s line  sexp_type= "," s  sexp_type "," s line  sexp_type "," s  line "," s line  line "]}," RubyParserStuff new_while":{"type":"method","name":"new_while","children":[],"call":[" new_until_or_while "]}," RubyParserStuff new_when":{"type":"method","name":"new_when","children":[],"call":[" s "]}," RubyParserStuff new_until_or_while":{"type":"method","name":"new_until_or_while","children":[],"call":["result line= "," s ","expr last "," canonicalize_conditions ","expr first == ","expr first "," cond ","block last ","block [] == ","block [] ","(and\n  (lvar :block)\n  (send\n    (lvar :block) :line)) compact min ","(and\n  (lvar :block)\n  (send\n    (lvar :block) :line)) compact ","expr line ","block line ","type == ","expr sexp_type == ","expr sexp_type ","block sexp_type == ","block sexp_type "," s  line= ","result (and\n  (lvar :block)\n  (send\n    (lvar :block) :line)) compact min = "," cond  last "," cond  first == "," cond  first ","(and\n  (lvar :block)\n  (send\n    (lvar :block) :(and\n  (lvar :block)\n  (send\n    (lvar :block) :line)) compact min )) compact min ","(and\n  (lvar :block)\n  (send\n    (lvar :block) :(and\n  (lvar :block)\n  (send\n    (lvar :block) :line)) compact min )) compact "," cond  line ","expr (and\n  (lvar :block)\n  (send\n    (lvar :block) :line)) compact min  ","block (and\n  (lvar :block)\n  (send\n    (lvar :block) :line)) compact min  "," cond  sexp_type == "," cond  sexp_type "]}," RubyParserStuff new_until":{"type":"method","name":"new_until","children":[],"call":[" new_until_or_while "]}," RubyParserStuff new_undef":{"type":"method","name":"new_undef","children":[],"call":[" s "," block_append "," s line ","n line ","m line "]}," RubyParserStuff new_super":{"type":"method","name":"new_super","children":[],"call":[" s ","args [] ","args node_type == ","args node_type ","args sexp_body "," s line ","args line "," lexer lineno "," lexer ","args sexp_type == ","args sexp_type "]}," RubyParserStuff new_sclass":{"type":"method","name":"new_sclass","children":[],"call":[" in_single= "," in_def= ","result line= ","val [] ","result push ","body [] ","body first == ","body first "," s ","body sexp_body ","body sexp_type == ","body sexp_type "," s  line= "," s  push "]}," RubyParserStuff new_resbody":{"type":"method","name":"new_resbody","children":[],"call":[" s ","body shift ","body first == ","body first "," s line ","cond line ","body sexp_type == ","body sexp_type "]}," RubyParserStuff new_regexp":{"type":"method","name":"new_regexp","children":[],"call":["node << ","o != ","node []= ","options =~ "," s ","node [] ","Regexp  new ","c =~ "," raise ","(pair\n  (str \"x\")\n  (const\n    (const nil :Regexp) :EXTENDED)) [] ","options split uniq each ","options split uniq ","options split ","val [] "," warn ","e message ","node sexp_type= ","options inspect ","node [] inspect ","node sexp_type ","RUBY_VERSION  < "," s line ","node line "," lexer lineno "," lexer ","node line_max= "," s  << "," s line  << "," s  []= "," s line  []= ","val []  =~ "," s  [] "," s line  [] ","val []  split uniq each ","val []  split uniq ","val []  split ","(pair\n  (str \"x\")\n  (const\n    (const nil :Regexp) :EXTENDED)) [] al [] "," s  sexp_type= "," s line  sexp_type= ","val []  inspect "," s  [] inspect "," s line  [] inspect "," s  sexp_type "," s line  sexp_type "," s  line "," s line  line "," s  line_max= "," s line  line_max= "]}," RubyParserStuff new_op_asgn":{"type":"method","name":"new_op_asgn","children":[],"call":["result line= ","lhs line ","lhs []= "," new_call "," argl "," gettable "," s ","lhs << "," remove_begin ","lhs value ","val [] ","val [] to_sym "," gettable line "," s line ","lhs last ","op to_sym ","  remove_begin l ","op to_sym  to_sym "]}," RubyParserStuff new_module":{"type":"method","name":"new_module","children":[],"call":["result comments= "," comments pop "," comments ","result line= ","result push ","body [] ","body first == ","body first "," s ","val [] "," s compact ","body sexp_body ","body sexp_type == ","body sexp_type "," s line ","path first ","path instance_of? ","result line_max= "," s  comments= "," s line  comments= "," s  line= "," s line  line= "," s  push "," s line  push "," s compact  [] "," s compact  first == "," s compact  first "," s compact  sexp_ s compact  "," s compact  sexp_type == "," s compact  sexp_type ","path first  first ","path first  instance_of? "," s  line_max= "," s line  line_max= "]}," RubyParserStuff new_masgn":{"type":"method","name":"new_masgn","children":[],"call":["lhs << ","lhs delete_at ","lhs [] nil? ","lhs [] "," s "," value_expr ","ary nil? ","rhs line "," s  line "," value_expr  line ","rhs rhs line  "]}," RubyParserStuff new_iter":{"type":"method","name":"new_iter","children":[],"call":["args []= ","args == ","result << "," s ","Symbol  === ","args sexp_type= ","args line ","call line ","result line "," s  []= "," s  == "," s  << "," s  sexp_type= "," s  line "]}," RubyParserStuff new_if":{"type":"method","name":"new_if","children":[],"call":[" s line "," s ","c last "," canonicalize_conditions ","c [] == ","c [] "," cond ","(send\n  (lvar :c) :line) compact min ","(send\n  (lvar :c) :line) compact ","f line ","t line ","c line ","c sexp_type == ","c sexp_type "," s (send\n  (lvar :c) :line) compact min ine "," cond  last ","c (send\n  (lvar :c) :line) compact min ast ","  cond anoni cond alize_ cond onditions "," canonica(send\n  (lvar :c) :line) compact min ize_conditions "," cond  [] == "," cond  [] ","  cond ond ","(send\n  (lvar : cond ) :line)  cond ompa cond t min ","(send\n  ((send\n  (lvar :c) :line) compact min var :c) :(send\n  (lvar :c) :line) compact min ine) compact min ","(send\n  (lvar : cond ) :line)  cond ompa cond t ","(send\n  ((send\n  (lvar :c) :line) compact min var :c) :(send\n  (lvar :c) :line) compact min ine) compact ","f (send\n  (lvar :c) :line) compact min ine ","t (send\n  (lvar :c) :line) compact min ine "," cond  line ","c (send\n  (lvar :c) :line) compact min ine "," cond  sexp_type == "," cond  sexp_type "]}," RubyParserStuff new_for":{"type":"method","name":"new_for","children":[],"call":["result << "," s line ","var line "," s "," s line  << "]}," RubyParserStuff new_defs":{"type":"method","name":"new_defs","children":[],"call":["result comments= "," comments pop "," comments ","result line= ","recv line ","result push ","body [] ","body first == ","body first "," s ","name to_sym ","val [] ","body sexp_body ","body sexp_type == ","body sexp_type ","args line "," s line ","result line_max= "," s  comments= "," s line  comments= "," s  line= "," s line  line= "," s  push "," s line  push "," s  line_max= "," s line  line_max= "]}," RubyParserStuff new_defn":{"type":"method","name":"new_defn","children":[],"call":["result comments= "," comments pop "," comments ","result line= ","result push ","body [] ","body first == ","body first "," s ","name to_sym ","val [] ","args line ","body sexp_body ","body sexp_type == ","body sexp_type "," s line ","result line_max= "," s  comments= "," s line  comments= "," s  line= "," s line  line= "," s  push "," s line  push "," s  line_max= "," s line  line_max= "]}," RubyParserStuff new_compstmt":{"type":"method","name":"new_compstmt","children":[],"call":[" remove_begin "," void_stmts ","val grep [] ","val grep ","val [] "]}," RubyParserStuff new_class":{"type":"method","name":"new_class","children":[],"call":["result comments= "," comments pop "," comments ","result line= ","result push ","body [] ","body first == ","body first "," s ","val [] ","body sexp_body ","body sexp_type == ","body sexp_type ","path first ","path instance_of? ","result line_max= "," s  comments= "," s  line= "," s  push ","path first  first ","path first  instance_of? "," s  line_max= "]}," RubyParserStuff new_case":{"type":"method","name":"new_case","children":[],"call":["result line= ","result << ","body == "," s ","node concat ","block [] ","node block ","result [] each ","result [] ","body delete_at ","body node_type == ","body node_type ","(or\n  (lvar :expr)\n  (lvar :body)) line ","block sexp_body ","(sym :when) include? ","body sexp_type ","result (or\n  (lvar :expr)\n  (lvar :body)) line = "," s  line= "," s  << ","body delete_at  == ","node block  [] ","node node block  "," s  [] each "," s  [] ","body delete_at  delete_at ","body delete_at  node_type == ","body delete_at  node_type ","(or\n  (lvar :expr)\n  (lvar :body delete_at )) line ","(or\n  (lvar :expr)\n  (lvar :body)) (or\n  (lvar :expr)\n  (lvar :body)) line  ","node block  sexp_body ","block sexp_body delete_at  ","body delete_at  sexp_type "]}," RubyParserStuff new_call":{"type":"method","name":"new_call","children":[],"call":["result concat ","args [] "," s ","args first == ","args first ","args []= ","result line= ","recv line ","result grep map compact min ","result grep map compact ","result grep map ","result grep ","result << ","args sexp_body ","(sym :arglist) include? ","args sexp_type "," raise "," type inspect "," type ","call_op to_sym "," lexer lineno "," lexer ","result line ","ARG_TYPES  [] ","call_op first ","Array  === ","(sym :array) include? ","(sym :args) include? ","result line_max= ","args line_max "," s  concat "," s  [] "," s  first == "," s  first "," s  []= "," s  line= ","result result grep map compact min = ","recv result grep map compact min  "," s  grep map compact min "," s  grep map compact "," s  grep map "," s  grep "," s  << "," s  sexp_body "," s  sexp_type ","call_op first  to_sym "," lexer result grep map compact min no "," s  line ","result result grep map compact min  ","call_op first  first ","(sym : s ) include? "," s  line_max= ","result result grep map compact min _max= "," s  line_max ","args result grep map compact min _max "]}," RubyParserStuff backref_assign_error":{"type":"method","name":"backref_assign_error","children":[],"call":[" raise ","ref inspect ","Can't set back reference %p % ","ref last ","Can't set variable %p % ","ref first ","ref sexp_type "]}," RubyParserStuff argl":{"type":"method","name":"argl","children":[],"call":[" s ","x [] != ","x [] ","x sexp_type == ","x sexp_type ","x [] == "," s  [] != "," s  [] "," s  se s p_type == "," s  se s p_type "," s  [] == "]}," RubyParserStuff new_body":{"type":"method","name":"new_body","children":[],"call":[" s compact "," s ","val [] "," block_append "," warning ","val [] nil? ! ","val [] nil? ","result line= ","(or\n  (send\n    (lvar :val) :[]\n    (int 0))\n  (send\n    (lvar :val) :[]\n    (int 1))) line ","result << ","resbody resbody ","resbody ! ","(or\n  (lvar :body)\n  (lvar :resbody)) line ","res resbody "," s compact line ","result line "," s line ","(or\n  (lvar :result)\n  (lvar :ensurebody)) line "," s compact  line= "," block_append  line= "," s  line= ","val []  line= "," s compact line  line= "," s line  line= ","res resbody ult line= "," s compact  << "," block_append  << "," s  << ","val []  << "," s compact line  << "," s line  << ","res resbody ult << ","resbody resbody  resbody resbody  ","val []  val []  ","res resbody body res resbody body ","resbody resbody  ! ","val []  ! ","res resbody body ! ","(or\n  (lvar :body)\n  (lvar :resbody resbody )) line ","(or\n  (lvar :body)\n  (lvar :val [] )) line ","(or\n  (lvar :body)\n  (lvar :res resbody body)) line ","res resbody resbody  ","res val []  ","res resbody  res resbody body "," s compact  line "," block_append  line "," s  line ","val []  line "," s compact line  line "," s line  line ","res resbody ult line ","(or\n  (lvar : s compact )\n  (lvar :ensurebody)) line ","(or\n  (lvar : block_append )\n  (lvar :ensurebody)) line ","(or\n  (lvar : s )\n  (lvar :ensurebody)) line ","(or\n  (lvar :val [] )\n  (lvar :ensurebody)) line ","(or\n  (lvar : s compact line )\n  (lvar :ensurebody)) line ","(or\n  (lvar : s line )\n  (lvar :ensurebody)) line ","(or\n  (lvar :res resbody ult)\n  (lvar :ensurebody)) line "]}," RubyParserStuff new_aref":{"type":"method","name":"new_aref","children":[],"call":[" new_call ","val [] ","val [] node_type == ","val [] node_type ","val [] []= ","val [] [] == ","val [] [] "," s ","val [] sexp_type= ","val [] sexp_type == ","val [] sexp_type "]}," RubyParserStuff logop":{"type":"method","name":"logop","children":[],"call":[" s ","node []= ","second paren ! ","second paren ","second [] == ","second [] ","node [] ","left paren ! ","left paren ","left [] == ","left [] "," value_expr ","node []  paren ! ","node []  paren ","node []  [] == ","node []  [] "," value_expr  paren ! "," value_expr  paren "," value_expr  [] == "," value_expr  [] "]}," RubyParserStuff literal_concat":{"type":"method","name":"literal_concat","children":[],"call":[" raise ","x inspect ","head push ","head []= ","head size == ","head size ","head [] << ","tail [] [] ","tail [] ","head [] ","tail [] [] == ","tail size > ","tail size ","htype == ","tail delete_at ","tail [] == "," s ","tail []= ","head [] + ","head << ","head sexp_type= ","head last << ","tail [] last ","head last ","tail [] sexp_type == ","tail [] sexp_type ","head line= ","head file= ","head sexp_body ","head line ","head file ","tail sexp_body ","tail sexp_type= ","head last + ","tail last ","tail sexp_type ","head sexp_type "," s line ","tail line ","a << ","b dup force_encoding ","a encoding ","b dup ","Encoding  compatible? "," s  push "," s line  push "," s  []= "," s line  []= "," s  size == "," s line  size == "," s  size "," s line  size "," s  [] << "," s line  [] << "," s  [] "," s line  [] "," s  [] + "," s line  [] + "," s  << "," s line  << "," s  sexp_type= "," s line  sexp_type= "," s  last << "," s line  last << "," s  last "," s line  last "," s  line= "," s line  line= "," s  file= "," s line  file= "," s  sexp_body "," s line  sexp_body ","head sexp_b dup force_encoding ody "," s  line "," s line  line "," s  file "," s line  file ","tail sexp_b dup force_encoding ody "," s  last + "," s line  last + "," s  sexp_type "," s line  sexp_type ","b dup force_encoding  dup force_encoding ","b dup force_encoding  dup ","Encoding  compatib dup force_encoding le? "]}," RubyParserStuff list_prepend":{"type":"method","name":"list_prepend","children":[],"call":["list insert "," s ","list [] == ","list [] ","Sexp  === ","list sexp_type == ","list sexp_type "," s  insert "," s  [] == "," s  [] "," s  sexp_type == "," s  sexp_type "]}," RubyParserStuff list_append":{"type":"method","name":"list_append","children":[],"call":["list << "," s ","list first == ","list first ","Sexp  === ","list sexp_type == ","list sexp_type "," s  << "," s  first == "," s  first "," s  sexp_type == "," s  sexp_type "]}," RubyParserStuff initialize":{"type":"method","name":"initialize","children":[],"call":[" reset ","RubyParserStuff Environment  new "," lexer parser= "," lexer "," lexer= ","RubyLexer  new ","v to_i "," class name [] "," class name "," class ","Environment  new "," in_kwarg= "," raise "," in_argdef= ","RubyParserStuff En class name [] ironment  new "," class name []  to_i ","En class name [] ironment  new "]}," RubyParserStuff gettable":{"type":"method","name":"gettable","children":[],"call":[" raise ","id inspect "," new_call "," s "," env [] "," env ","id to_s ","id to_sym ","String  === ","result line ","result line - "," lexer src bol? "," lexer src "," lexer ","id lineno ","id respond_to? ","id to_sym  inspect ","id to_sym  to_s ","id to_sym  to_sym ","id to_sym  lineno ","id id lineno  ","id to_sym  respond_to? "]}," RubyParserStuff get_match_node":{"type":"method","name":"get_match_node","children":[],"call":[" new_call line ","lhs line "," new_call "," argl "," s line "," s ","Regexp  === ","rhs last ","rhs [] ","lhs last ","lhs [] "]}," RubyParserStuff do_parse":{"type":"method","name":"do_parse","children":[],"call":[" _racc_do_parse_rb "," _racc_setup "]}," RubyParserStuff cond":{"type":"method","name":"cond","children":[],"call":[" s ","node [] "," env []= "," env ","node hash "," cond ","Regexp  === ","node last ","node first "," value_expr ","node nil? ","node sexp_type ","(send\n  (lvar :node) :sexp_type) line ","node line "," value_expr  [] "," value_expr  hash "," value_expr  last "," value_expr  first "," value_expr  nil? "," value_expr  sexp_type ","(send\n  (lvar : value_expr ) :sexp_type) line "," value_expr  line "]}," RubyParserStuff block_append":{"type":"method","name":"block_append","children":[],"call":["head << ","head line= "," s ","head node_type == ","head node_type "," remove_begin ","(send\n  (lvar :head) :line) compact min ","(send\n  (lvar :head) :line) compact ","tail line ","head line ","head [] ","head nil? ","tail nil? "," s line ","head sexp_type == ","head sexp_type "," s  << "," remove_begin  << "," s line  << "," s  line= "," remove_begin  line= "," s line  line= ","head (send\n  (lvar :head) :line) compact min = "," s  node_type == "," remove_begin  node_type == "," s line  node_type == "," s  node_type "," remove_begin  node_type "," s line  node_type ","(send\n  (lvar : s ) :line) compact min ","(send\n  (lvar : remove_begin ) :line) compact min ","(send\n  (lvar : s line ) :line) compact min ","(send\n  (lvar :head) :(send\n  (lvar :head) :line) compact min ) compact min ","(send\n  (lvar : s ) :line) compact ","(send\n  (lvar : remove_begin ) :line) compact ","(send\n  (lvar : s line ) :line) compact ","(send\n  (lvar :head) :(send\n  (lvar :head) :line) compact min ) compact ","tail (send\n  (lvar :head) :line) compact min  "," s  line "," remove_begin  line "," s line  line ","head (send\n  (lvar :head) :line) compact min  "," s  [] "," remove_begin  [] "," s line  [] "," s  nil? "," remove_begin  nil? "," s line  nil? "," s (send\n  (lvar :head) :line) compact min  "," s  sexp_type == "," remove_begin  sexp_type == "," s line  sexp_type == "," s  sexp_type "," remove_begin  sexp_type "," s line  sexp_type "]}," RubyParserStuff assignable":{"type":"method","name":"assignable","children":[],"call":["result << "," env [] "," env "," raise "," s "," env dynamic? ! "," env dynamic? "," env use "," env [] == "," env current [] == "," env current [] "," env current "," in_single > "," in_single "," in_def ","id to_s ","id to_s =~ ","id to_sym ","Sexp  === ","lhs to_sym ","result sexp_type == ","result sexp_type ","result line= "," lexer lineno "," lexer ","value line ","lhs line ","result line ","id to_sym  to_s ","lhs to_sym  to_s ","id to_sym  to_s =~ ","lhs to_sym  to_s =~ ","id to_sym  to_sym ","lhs to_sym  to_sym "]}," RubyParserStuff aryset":{"type":"method","name":"aryset","children":[],"call":[" s ","index [] "," s compact ","index sexp_body ","result line= ","receiver line "," s compact  line= ","resureceiver line t receiver line ine= ","receiver receiver line ine "]}," RubyParserStuff args":{"type":"method","name":"args","children":[],"call":[" raise ","arg inspect ","result << ","arg last ","result concat ","arg [] ","arg sexp_type ","args each "," s ","post_arg [] each ","post_arg [] ","block_arg last ","lasgn [] ","lasgn inspect ","lasgn [] == ","optarg [] each ","optarg [] ","args inspect "," env []= ","name to_sym "," env ","name empty? ","arg to_s delete ","arg to_s ","result last << ","result last ","result last sexp_type == ","result last sexp_type ","Sexp  === ","arg sexp_body ","result line ","ss first line ","ss first "," lexer lineno "," lexer ","ss empty? ","args grep "," in_kwarg= ","x first ","Numeric  === ","x last ","x size == ","x size ","x instance_of? ","rest map! ","arg first ","arg last is_a? ","arg size == ","arg size ","arg instance_of? ","result line_max= ","ss first line_max ","arg first  inspect "," s  << ","arg first  last "," s  concat ","arg first  [] ","arg first  sexp_type ","arg first s each ","post_arg first  [] each ","post_arg first  [] ","block_arg first  last ","optarg first  [] each ","optarg first  [] ","arg first s inspect ","arg to_s delete  to_sym ","arg last  to_sym ","arg to_s delete  empty? ","arg last  empty? ","arg first  to_s delete ","arg first  to_s "," s  last << "," s  last "," s  last sexp_type == "," s  last sexp_type ","arg first  sexp_body "," s  line ","args grep  first line ","args grep  first ","args grep  empty? ","arg first s grep "," in_kwarg first = ","arg sexp_body  map! ","arg first  first ","arg first  last is_a? ","arg first  size == ","arg first  size ","arg first  instance_of? "," s  line_max= ","args grep  first line_max "]}," RubyParserStuff block_var18":{"type":"method","name":"block_var18","children":[],"call":["ary last "," s ","ary [] ","ary splat ","ary length > ","ary length ","ary << ","(str \"&\") to_sym ","block [] ","(str \"*\") to_sym ","splat [] ","Symbol  === ","ary sexp_body ","ary splat []  ","splat []  [] "]}," RubyParserStuff block_var":{"type":"method","name":"block_var","children":[],"call":["result []= "," args ","ary last "," s ","ary splat ","ary length > ","ary length ","ary << ","block []= ","block [] ","splat == ","result sexp_type= "," args  []= ","ary last  []= "," s  []= "," args  sexp_type= ","ary last  sexp_type= "," s  sexp_type= "]}," RubyParserStuff clean_mlhs":{"type":"method","name":"clean_mlhs","children":[],"call":[" raise ","sexp inspect ","sexp last ","sexp size == ","sexp size "," s "," clean_mlhs ","sexp [] [] map ","sexp [] [] ","sexp [] ","sexp [] sexp_type == ","sexp [] sexp_type ","sexp sexp_type "," debug20 ","sexp [] sexp_body map ","sexp [] sexp_body "]}," RubyParserStuff arg_concat":{"type":"method","name":"arg_concat","children":[],"call":["node1 << "," s compact "," s "," raise ","splat line ","node2 line "," s  line "]}," RubyParserStuff arg_blk_pass":{"type":"method","name":"arg_blk_pass","children":[],"call":["node1 << "," s ","(sym :arglist) include? ","node1 first ","node1 sexp_type ","ARG_TYPES  [] "," s  << "," s  first "," s  sexp_type "]}," RubyParserStuff arg_add":{"type":"method","name":"arg_add","children":[],"call":[" s ","node1 << ","node1 [] == ","node1 [] ","node1 []= "]}," RubyParserStuff syntax_error":{"type":"method","name":"syntax_error","children":[],"call":[" raise "]}," RPStringScanner d":{"type":"method","name":"d","children":[],"call":["$stderr puts ","o inspect ","STDERR  puts "]}," RPStringScanner string_to_pos":{"type":"method","name":"string_to_pos","children":[],"call":[" string [] "," pos "," string "," string byteslice "," string bytes first pack force_encoding "," string encoding "," string bytes first pack "," string bytes first "," string bytes "]}," RPStringScanner charpos":{"type":"method","name":"charpos","children":[],"call":[" string_to_pos length "," string_to_pos "]}," Ruby19Parser _reduce_none":{"type":"method","name":"_reduce_none","children":[],"call":["val [] "]}," Ruby19Parser _reduce_577":{"type":"method","name":"_reduce_577","children":[],"call":[" yyerrok "]}," Ruby19Parser _reduce_576":{"type":"method","name":"_reduce_576","children":[],"call":[" yyerrok "]}," Ruby19Parser _reduce_573":{"type":"method","name":"_reduce_573","children":[],"call":[" yyerrok "]}," Ruby19Parser _reduce_551":{"type":"method","name":"_reduce_551","children":[],"call":[" s ","val [] ","val [] [] to_sym ","val [] [] ","list push ","more empty? ","val [] sexp_body ","val [] dup ","val [] dup  push ","val [] sexp_body  empty? ","val [] []  empty? "]}," Ruby19Parser _reduce_550":{"type":"method","name":"_reduce_550","children":[],"call":[" s ","val [] ","list push ","more empty? ","val [] [] ","val [] dup ","val [] dup  push ","val [] []  empty? "]}," Ruby19Parser _reduce_549":{"type":"method","name":"_reduce_549","children":[],"call":["list push ","more empty? ","val [] [] ","val [] ","val [] dup ","val [] dup  push ","val [] []  empty? "]}," Ruby19Parser _reduce_547":{"type":"method","name":"_reduce_547","children":[],"call":["val [] "," yyerror ","result sexp_type == ","result sexp_type "," s ","result [] == ","result [] ","val []  sexp_type == "," s  sexp_type == ","val []  sexp_type "," s  sexp_type ","val []  [] == "," s  [] == ","val []  [] "," s  [] "]}," Ruby19Parser _reduce_546":{"type":"method","name":"_reduce_546","children":[],"call":[" s "," lexer lex_state= "," lexer "," yyerror ","result [] == ","result [] ","val [] "," s  [] == ","val []  [] == "," s  [] ","val []  [] "]}," Ruby19Parser _reduce_545":{"type":"method","name":"_reduce_545","children":[],"call":[" yyerror ","result [] == ","result [] ","val [] "," lexer lex_state= "," lexer ","val []  [] == ","val []  [] "]}," Ruby19Parser _reduce_544":{"type":"method","name":"_reduce_544","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby19Parser _reduce_542":{"type":"method","name":"_reduce_542","children":[],"call":["(str \"&\") to_sym "," env []= "," env ","val [] to_sym ","val [] "]}," Ruby19Parser _reduce_541":{"type":"method","name":"_reduce_541","children":[],"call":["val [] ","(str \"&\") to_sym "," env []= "," env ","val [] to_sym "]}," Ruby19Parser _reduce_540":{"type":"method","name":"_reduce_540","children":[],"call":["(str \"&\") to_sym "," env []= "," env ","val [] to_sym ","val [] "," s ","identifier to_sym ","val [] to_sym  to_sym "]}," Ruby19Parser _reduce_537":{"type":"method","name":"_reduce_537","children":[],"call":[" env []= "," env "," s ","val [] "," assignable ","val [] to_sym "]}," Ruby19Parser _reduce_536":{"type":"method","name":"_reduce_536","children":[],"call":[" assignable ","val [] to_sym ","val [] ","list push ","more empty? ","val [] [] ","val [] dup ","val [] dup  push ","val [] []  empty? "]}," Ruby19Parser _reduce_533":{"type":"method","name":"_reduce_533","children":[],"call":[" block_append ","val [] ","result << "," s "," block_append  << ","val []  << "," s  << "]}," Ruby19Parser _reduce_532":{"type":"method","name":"_reduce_532","children":[],"call":[" s ","val [] ","result << "," s  << ","val []  << "]}," Ruby19Parser _reduce_531":{"type":"method","name":"_reduce_531","children":[],"call":["result << ","val [] "," yyerror ","result [] == ","result [] "," raise ","val inspect "," assignable "," s ","val []  << "," assignable  << "," s  << ","val []  [] == "," assignable  [] == "," s  [] == ","val []  [] "," assignable  [] "," s  [] "]}," Ruby19Parser _reduce_530":{"type":"method","name":"_reduce_530","children":[],"call":[" s ","val [] "," lexer lex_state= "," lexer "," raise ","val inspect "," assignable "]}," Ruby19Parser _reduce_529":{"type":"method","name":"_reduce_529","children":[],"call":[" assignable ","val [] "," raise ","val inspect ","result << "," s ","list sexp_type == ","list sexp_type "," assignable  << "," s  << "]}," Ruby19Parser _reduce_528":{"type":"method","name":"_reduce_528","children":[],"call":[" assignable ","val [] "," raise ","val inspect ","result << "," s ","list sexp_type == ","list sexp_type "," assignable  << ","val []  << "," s  << "]}," Ruby19Parser _reduce_527":{"type":"method","name":"_reduce_527","children":[],"call":["result << "," s ","list sexp_type == ","list sexp_type ","val [] ","val [] << ","val [] to_sym "," raise ","val inspect "," s  << ","val []  << "]}," Ruby19Parser _reduce_526":{"type":"method","name":"_reduce_526","children":[],"call":[" raise ","val inspect ","val [] ","result << "," s ","identifier to_sym "," env []= "," env ","val [] to_sym ","val []  << "," s  << ","val [] to_sym  to_sym "]}," Ruby19Parser _reduce_525":{"type":"method","name":"_reduce_525","children":[],"call":["val [] "," raise ","val inspect "," env []= "," env ","val [] to_sym "]}," Ruby19Parser _reduce_523":{"type":"method","name":"_reduce_523","children":[],"call":[" env []= "," env ","val [] to_sym ","val [] "," yyerror "]}," Ruby19Parser _reduce_521":{"type":"method","name":"_reduce_521","children":[],"call":[" yyerror "]}," Ruby19Parser _reduce_520":{"type":"method","name":"_reduce_520","children":[],"call":[" yyerror "]}," Ruby19Parser _reduce_519":{"type":"method","name":"_reduce_519","children":[],"call":[" yyerror "," block_append ","val [] "," args "]}," Ruby19Parser _reduce_518":{"type":"method","name":"_reduce_518","children":[],"call":[" yyerror "," s ","val [] "," args "]}," Ruby19Parser _reduce_517":{"type":"method","name":"_reduce_517","children":[],"call":[" args "," assignable ","val [] "," args19 "]}," Ruby19Parser _reduce_516":{"type":"method","name":"_reduce_516","children":[],"call":[" args ","val [] ","val [] << ","val [] to_sym "," args19 "]}," Ruby19Parser _reduce_515":{"type":"method","name":"_reduce_515","children":[],"call":[" args ","result << ","val [] to_sym ","val [] "," s "," args19 "," args  << "," s  << "," args19  << "]}," Ruby19Parser _reduce_514":{"type":"method","name":"_reduce_514","children":[],"call":[" args ","val [] "," env []= "," env ","val [] to_sym "," args19 "]}," Ruby19Parser _reduce_513":{"type":"method","name":"_reduce_513","children":[],"call":[" args "," args19 "]}," Ruby19Parser _reduce_512":{"type":"method","name":"_reduce_512","children":[],"call":[" args "," yyerror "," args19 "]}," Ruby19Parser _reduce_511":{"type":"method","name":"_reduce_511","children":[],"call":[" args "," yyerror "," args19 "]}," Ruby19Parser _reduce_510":{"type":"method","name":"_reduce_510","children":[],"call":[" args "," yyerror "," args19 "]}," Ruby19Parser _reduce_509":{"type":"method","name":"_reduce_509","children":[],"call":[" args "," yyerror "," args19 "]}," Ruby19Parser _reduce_508":{"type":"method","name":"_reduce_508","children":[],"call":[" args "," args19 "]}," Ruby19Parser _reduce_507":{"type":"method","name":"_reduce_507","children":[],"call":[" args "," args19 "]}," Ruby19Parser _reduce_506":{"type":"method","name":"_reduce_506","children":[],"call":[" args "," args19 "]}," Ruby19Parser _reduce_505":{"type":"method","name":"_reduce_505","children":[],"call":[" args "," args19 "]}," Ruby19Parser _reduce_504":{"type":"method","name":"_reduce_504","children":[],"call":[" args "," args19 ","val [] "]}," Ruby19Parser _reduce_503":{"type":"method","name":"_reduce_503","children":[],"call":[" args "," args19 "," lexer command_start= "," lexer "," lexer lex_state= ","val [] "]}," Ruby19Parser _reduce_502":{"type":"method","name":"_reduce_502","children":[],"call":["val [] "," args19 "," yyerrok "," lexer command_start= "," lexer "," lexer lex_state= "]}," Ruby19Parser _reduce_501":{"type":"method","name":"_reduce_501","children":[],"call":[" lexer command_start= "," lexer "," lexer lex_state= ","val [] "," args19 "," yyerrok "]}," Ruby19Parser _reduce_500":{"type":"method","name":"_reduce_500","children":[],"call":[" yyerrok "," args19 "," lexer lex_state= "," lexer ","val [] "]}," Ruby19Parser _reduce_499":{"type":"method","name":"_reduce_499","children":[],"call":["val [] "," args19 "," lexer lex_state= "," lexer "]}," Ruby19Parser _reduce_498":{"type":"method","name":"_reduce_498","children":[],"call":[" lexer lex_state= "," lexer "," args19 "," s ","val [] "]}," Ruby19Parser _reduce_497":{"type":"method","name":"_reduce_497","children":[],"call":[" args19 "," s ","val [] "]}," Ruby19Parser _reduce_496":{"type":"method","name":"_reduce_496","children":[],"call":[" s ","val [] "," args19 "," assignable "]}," Ruby19Parser _reduce_495":{"type":"method","name":"_reduce_495","children":[],"call":[" s ","val [] "," args19 "," assignable "]}," Ruby19Parser _reduce_494":{"type":"method","name":"_reduce_494","children":[],"call":[" assignable ","val [] "," args19 "," gettable ","Sexp  === "]}," Ruby19Parser _reduce_493":{"type":"method","name":"_reduce_493","children":[],"call":[" assignable ","val [] "," gettable ","Sexp  === "]}," Ruby19Parser _reduce_492":{"type":"method","name":"_reduce_492","children":[],"call":[" gettable ","Sexp  === ","val [] "," lexer command_start= "," lexer "," lexer lex_state= "," s "]}," Ruby19Parser _reduce_491":{"type":"method","name":"_reduce_491","children":[],"call":[" gettable ","Sexp  === ","val [] "," yyerrok "," s "," lexer lineno "," lexer "]}," Ruby19Parser _reduce_490":{"type":"method","name":"_reduce_490","children":[],"call":[" s ","val [] "," file "," lexer src current_line "," lexer src "," lexer "," lexer lineno "]}," Ruby19Parser _reduce_489":{"type":"method","name":"_reduce_489","children":[],"call":[" s "," lexer src current_line "," lexer src "," lexer "," lexer lex_state= "," file "]}," Ruby19Parser _reduce_488":{"type":"method","name":"_reduce_488","children":[],"call":[" s "," file "]}," Ruby19Parser _reduce_487":{"type":"method","name":"_reduce_487","children":[],"call":[" s ","val [] "]}," Ruby19Parser _reduce_486":{"type":"method","name":"_reduce_486","children":[],"call":[" s ","val [] "]}," Ruby19Parser _reduce_485":{"type":"method","name":"_reduce_485","children":[],"call":[" s "," assignable ","val [] "]}," Ruby19Parser _reduce_484":{"type":"method","name":"_reduce_484","children":[],"call":[" s "," assignable ","val [] "]}," Ruby19Parser _reduce_478":{"type":"method","name":"_reduce_478","children":[],"call":["val [] -@ ","val [] "," s "]}," Ruby19Parser _reduce_477":{"type":"method","name":"_reduce_477","children":[],"call":["val [] -@ ","val [] "," s "]}," Ruby19Parser _reduce_474":{"type":"method","name":"_reduce_474","children":[],"call":[" s ","result last intern ","result last ","result []= ","result [] "," yyerror ","result empty? ","result nil? ","val [] "," lexer lex_state= "," lexer "," s  last intern ","val []  last intern "," s  last ","val []  last "," s  []= ","val []  []= "," s  [] ","val []  [] "," s  empty? ","val []  empty? "," s  nil? ","val []  nil? "]}," Ruby19Parser _reduce_469":{"type":"method","name":"_reduce_469","children":[],"call":["val [] to_sym ","val [] ","val [] -@ "," lexer lex_state= "," lexer "]}," Ruby19Parser _reduce_468":{"type":"method","name":"_reduce_468","children":[],"call":["val [] to_sym ","val [] "," lexer lex_state= "," lexer "," s "]}," Ruby19Parser _reduce_466":{"type":"method","name":"_reduce_466","children":[],"call":[" s ","val [] to_sym ","val [] ","result last intern ","result last ","result []= ","result [] "," yyerror ","result empty? ","result nil? "," lexer lex_state= "," lexer "," s  last intern ","val []  last intern "," s  last ","val []  last "," s  []= ","val []  []= "," s  [] ","val []  [] "," s  empty? ","val []  empty? "," s  nil? ","val []  nil? "]}," Ruby19Parser _reduce_465":{"type":"method","name":"_reduce_465","children":[],"call":[" s ","val [] to_sym ","val [] "," raise ","stmt inspect ","stmt sexp_type "," lexer cmdarg restore "," lexer cmdarg "," lexer "," lexer cond restore "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= ","stmt [] "]}," Ruby19Parser _reduce_464":{"type":"method","name":"_reduce_464","children":[],"call":[" s ","val [] to_sym ","val [] "," lexer lex_state= "," lexer "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer cmdarg store "," lexer cmdarg "," lexer cond store "," lexer cond "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "," raise ","stmt inspect ","stmt [] "," lexer cmdarg lexpop "," lexer cond lexpop "," lexer cmdarg restore "," lexer cond restore "]}," Ruby19Parser _reduce_463":{"type":"method","name":"_reduce_463","children":[],"call":[" raise ","val [] inspect ","val [] "," s ","val [] [] "," lexer cmdarg lexpop "," lexer cmdarg "," lexer "," lexer cond lexpop "," lexer cond "," lexer lex_strterm= "," lexer lex_state= "," lexer cmdarg push "," lexer cond push "," lexer string_nest= "," lexer brace_nest= "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "," lexer cmdarg store "," lexer cond store "]}," Ruby19Parser _reduce_462":{"type":"method","name":"_reduce_462","children":[],"call":[" lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cond push "," lexer cond "," lexer lex_state= "," lexer lex_strterm= "," lexer lex_strterm "," s ","val [] "]}," Ruby19Parser _reduce_461":{"type":"method","name":"_reduce_461","children":[],"call":[" s ","val [] "," lexer lex_strterm= "," lexer ","val [] to_sym "," new_string "," lexer lex_state= "," lexer lex_strterm "]}," Ruby19Parser _reduce_460":{"type":"method","name":"_reduce_460","children":[],"call":[" lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm ","val [] to_sym ","val [] "," literal_concat "," s "," new_string "]}," Ruby19Parser _reduce_459":{"type":"method","name":"_reduce_459","children":[],"call":[" s ","val [] "," literal_concat "]}," Ruby19Parser _reduce_458":{"type":"method","name":"_reduce_458","children":[],"call":[" literal_concat ","val [] "," s ","val [] to_sym "]}," Ruby19Parser _reduce_457":{"type":"method","name":"_reduce_457","children":[],"call":[" s ","val [] to_sym ","val [] "," literal_concat "]}," Ruby19Parser _reduce_456":{"type":"method","name":"_reduce_456","children":[],"call":[" literal_concat ","val [] "," s ","val [] to_sym "]}," Ruby19Parser _reduce_455":{"type":"method","name":"_reduce_455","children":[],"call":[" raise ","val [] inspect ","val [] "," s ","val [] [] "," lexer cmdarg lexpop "," lexer cmdarg "," lexer "," lexer cond lexpop "," lexer cond "," lexer lex_strterm= "," literal_concat "]}," Ruby19Parser _reduce_454":{"type":"method","name":"_reduce_454","children":[],"call":[" literal_concat ","val [] "," lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cond push "," lexer cond "," lexer lex_state= "," lexer lex_strterm= "," lexer lex_strterm ","val [] << "," new_qword_list_entry "," s "]}," Ruby19Parser _reduce_453":{"type":"method","name":"_reduce_453","children":[],"call":[" s ","val [] "," lexer lex_strterm= "," lexer "," new_qword_list ","val [] << "," new_qword_list_entry "]}," Ruby19Parser _reduce_452":{"type":"method","name":"_reduce_452","children":[],"call":["val [] << "," s ","val [] "," lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm "," new_qword_list "]}," Ruby19Parser _reduce_451":{"type":"method","name":"_reduce_451","children":[],"call":[" s ","val [] "]}," Ruby19Parser _reduce_450":{"type":"method","name":"_reduce_450","children":[],"call":["val [] "," literal_concat "," s "]}," Ruby19Parser _reduce_449":{"type":"method","name":"_reduce_449","children":[],"call":[" s "," literal_concat ","val [] "]}," Ruby19Parser _reduce_448":{"type":"method","name":"_reduce_448","children":[],"call":[" literal_concat ","val [] ","val [] << "," new_word_list_entry "]}," Ruby19Parser _reduce_446":{"type":"method","name":"_reduce_446","children":[],"call":["val [] << ","val [] "," s ","val [] [] == ","val [] [] "," literal_concat "," new_word_list "," new_val [] _list "," new_ s _list "]}," Ruby19Parser _reduce_445":{"type":"method","name":"_reduce_445","children":[],"call":[" s ","val [] "]}," Ruby19Parser _reduce_444":{"type":"method","name":"_reduce_444","children":[],"call":["val [] ","val [] << "," s "," new_regexp "]}," Ruby19Parser _reduce_443":{"type":"method","name":"_reduce_443","children":[],"call":[" s "," new_xstring ","val [] "," new_regexp "]}," Ruby19Parser _reduce_442":{"type":"method","name":"_reduce_442","children":[],"call":[" new_regexp ","val [] "," new_string "," new_xstring "]}," Ruby19Parser _reduce_441":{"type":"method","name":"_reduce_441","children":[],"call":[" new_xstring ","val [] "," s "," new_string "]}," Ruby19Parser _reduce_440":{"type":"method","name":"_reduce_440","children":[],"call":[" s ","val [] "," literal_concat "]}," Ruby19Parser _reduce_439":{"type":"method","name":"_reduce_439","children":[],"call":["val [] "," literal_concat "]}," Ruby19Parser _reduce_438":{"type":"method","name":"_reduce_438","children":[],"call":[" literal_concat ","val [] ","val [] << "," s ","val [] [] == ","val [] [] ","val []= ","val [] value ","val [] sexp_type == ","val [] sexp_type "]}," Ruby19Parser _reduce_436":{"type":"method","name":"_reduce_436","children":[],"call":["val [] ","val []= "," s ","val [] value ","val [] [] == ","val [] [] "]}," Ruby19Parser _reduce_434":{"type":"method","name":"_reduce_434","children":[],"call":[" s ","val [] "," new_regexp "]}," Ruby19Parser _reduce_433":{"type":"method","name":"_reduce_433","children":[],"call":[" s ","val [] "," new_xstring "]}," Ruby19Parser _reduce_431":{"type":"method","name":"_reduce_431","children":[],"call":[" s ","val [] ","val [] != "]}," Ruby19Parser _reduce_429":{"type":"method","name":"_reduce_429","children":[],"call":["val [] "]}," Ruby19Parser _reduce_426":{"type":"method","name":"_reduce_426","children":[],"call":[" s ","val [] ","result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s  << "," new_resbody  << "]}," Ruby19Parser _reduce_425":{"type":"method","name":"_reduce_425","children":[],"call":[" s ","val [] ","result << "," new_resbody ","klasses << "," node_assign "," s  << "," new_resbody  << "]}," Ruby19Parser _reduce_424":{"type":"method","name":"_reduce_424","children":[],"call":["result << "," new_resbody ","klasses << "," node_assign "," s ","val [] "," new_resbody  << "]}," Ruby19Parser _reduce_421":{"type":"method","name":"_reduce_421","children":[],"call":["result << ","val [] ","result line= "," new_when "," env unextend "," env "," new_iter "," lexer lineno "," lexer "," new_when  << ","val []  << "," new_iter  << "," lexer lineno  << "," new_when  line= ","val []  line= "," new_iter  line= "," lexer lineno  line= "]}," Ruby19Parser _reduce_420":{"type":"method","name":"_reduce_420","children":[],"call":[" lexer lineno "," lexer "," env unextend "," env ","result line= "," new_iter "," lexer lineno  line= "," new_iter  line= "]}," Ruby19Parser _reduce_419":{"type":"method","name":"_reduce_419","children":[],"call":[" env unextend "," env ","result line= "," new_iter ","val [] "," lexer lineno "," lexer "," env extend "," env dynamic keys "," env dynamic "," new_iter  line= "," lexer lineno  line= "," env dynamic keys  line= "]}," Ruby19Parser _reduce_418":{"type":"method","name":"_reduce_418","children":[],"call":[" env dynamic keys "," env dynamic "," env "," s ","val [] "," env unextend ","result line= "," new_iter "," lexer lineno "," lexer "," env extend "," env dynamic keys  line= "," s  line= "," new_iter  line= "," lexer lineno  line= "]}," Ruby19Parser _reduce_417":{"type":"method","name":"_reduce_417","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," env unextend ","result line= "," new_iter "," lexer lineno  line= "," new_iter  line= "]}," Ruby19Parser _reduce_416":{"type":"method","name":"_reduce_416","children":[],"call":[" env unextend "," env ","result line= "," new_iter ","result << "," new_resbody ","klasses << "," node_assign "," s ","val [] "," lexer lineno "," lexer "," env extend "," env dynamic keys "," env dynamic "," new_iter  line= "," new_resbody  line= "," lexer lineno  line= "," env dynamic keys  line= "," new_iter  << "," new_resbody  << "," lexer lineno  << "," env dynamic keys  << "," new_resval []  "]}," Ruby19Parser _reduce_415":{"type":"method","name":"_reduce_415","children":[],"call":[" env dynamic keys "," env dynamic "," env "," new_aref "," lexer lineno "," lexer "," env extend "]}," Ruby19Parser _reduce_414":{"type":"method","name":"_reduce_414","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," s "," new_aref "]}," Ruby19Parser _reduce_413":{"type":"method","name":"_reduce_413","children":[],"call":[" new_aref "," s "," new_when ","val [] "," new_super "]}," Ruby19Parser _reduce_412":{"type":"method","name":"_reduce_412","children":[],"call":[" s "," list_append "," new_when ","val [] "," new_call "," new_super "]}," Ruby19Parser _reduce_411":{"type":"method","name":"_reduce_411","children":[],"call":[" new_super ","val [] "," new_call "]}," Ruby19Parser _reduce_410":{"type":"method","name":"_reduce_410","children":[],"call":[" new_call ","val [] ","result << ","result line= "," new_when ","val [] to_sym "," new_call  << "," new_when  << "," new_call  line= "," new_when  line= "]}," Ruby19Parser _reduce_409":{"type":"method","name":"_reduce_409","children":[],"call":[" new_call ","val [] "," lexer lineno "," lexer ","val [] to_sym "]}," Ruby19Parser _reduce_408":{"type":"method","name":"_reduce_408","children":[],"call":[" new_call ","val [] to_sym ","val [] ","result line= "," env unextend "," env "," new_iter "," new_call  line= "," new_iter  line= "]}," Ruby19Parser _reduce_407":{"type":"method","name":"_reduce_407","children":[],"call":[" new_call ","val [] ","val [] to_sym "," env dynamic keys "," env dynamic "," env "]}," Ruby19Parser _reduce_406":{"type":"method","name":"_reduce_406","children":[],"call":[" new_call ","val [] ","val [] to_sym "," lexer lineno "," lexer "," env extend "," env "]}," Ruby19Parser _reduce_405":{"type":"method","name":"_reduce_405","children":[],"call":[" new_call ","val [] ","val [] to_sym ","result line= "," env unextend "," env "," new_iter "," lexer lineno "," lexer "," new_call  line= "," new_iter  line= "," lexer lineno  line= "]}," Ruby19Parser _reduce_404":{"type":"method","name":"_reduce_404","children":[],"call":[" lexer lineno "," lexer "," env dynamic keys "," env dynamic "," env "," new_call ","val [] ","val [] to_sym "]}," Ruby19Parser _reduce_403":{"type":"method","name":"_reduce_403","children":[],"call":[" new_call ","val [] "," lexer lineno "," lexer "," env extend "," env ","result insert "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? ","val [] to_sym "," invert_block_call  [] "," new_call  insert "," lexer lineno  insert ","val []  insert "," invert_block_call  [] block_pass? "," invert_block_call  [] to_sym "]}," Ruby19Parser _reduce_402":{"type":"method","name":"_reduce_402","children":[],"call":[" new_call ","val [] "," s "," env unextend "," env ","result line= "," new_iter ","result insert "," syntax_error ","val [] block_pass? "," invert_block_call "," inverted? "," invert_block_call  [] "," new_call  line= "," s  line= "," new_iter  line= ","val []  line= "," new_call  insert "," s  insert "," new_iter  insert ","val []  insert "," invert_block_call  [] block_pass? "]}," Ruby19Parser _reduce_401":{"type":"method","name":"_reduce_401","children":[],"call":["result insert ","val [] "," syntax_error ","val [] block_pass? "," new_super "," raise ","val [] [] == ","val [] [] "," env unextend "," env ","result line= "," new_iter ","val []  insert "," new_super  insert "," new_iter  insert ","val []  line= "," new_super  line= "," new_iter  line= "]}," Ruby19Parser _reduce_400":{"type":"method","name":"_reduce_400","children":[],"call":[" env unextend "," env ","result line= ","val [] "," new_iter "," new_call ","val [] to_sym "," lexer lineno "," lexer "," env extend "," env dynamic keys "," env dynamic "," new_iter  line= "," new_call  line= "," lexer lineno  line= "," env dynamic keys  line= "]}," Ruby19Parser _reduce_399":{"type":"method","name":"_reduce_399","children":[],"call":[" env dynamic keys "," env dynamic "," env "," new_call ","val [] ","val [] to_sym "," lexer lineno "," lexer "," env extend "]}," Ruby19Parser _reduce_398":{"type":"method","name":"_reduce_398","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," new_call ","val [] ","val [] to_sym "]}," Ruby19Parser _reduce_397":{"type":"method","name":"_reduce_397","children":[],"call":["val [] "," new_call ","val [] to_sym ","result == "," s ","val []  == "," new_call  == "]}," Ruby19Parser _reduce_396":{"type":"method","name":"_reduce_396","children":[],"call":["val [] "," lexer lineno "," lexer "," args ","result == "," s ","val []  == "," lexer lineno  == "," args  == "]}," Ruby19Parser _reduce_395":{"type":"method","name":"_reduce_395","children":[],"call":["val [] "," new_call "," new_iter "," lexer lpar_beg= "," lexer "," args "," new_ new_call  "]}," Ruby19Parser _reduce_394":{"type":"method","name":"_reduce_394","children":[],"call":[" raise ","val inspect ","val [] "," new_call "," lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," new_iter ","args == "," s "," new_ new_call  "]}," Ruby19Parser _reduce_393":{"type":"method","name":"_reduce_393","children":[],"call":[" new_iter "," new_call ","args == "," s ","result insert ","val [] "," raise ","val [] [] == ","val [] [] ","val [] [] map ","val [] size "," lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," new_ new_call  "," s  == "," new_iter  insert ","val []  insert "," s  insert "," lexer lpar_beg  insert "]}," Ruby19Parser _reduce_390":{"type":"method","name":"_reduce_390","children":[],"call":[" raise ","val inspect ","val [] concat ","val [] "," lexer lineno "," lexer "," env extend "," env ","val [] << "," args "]}," Ruby19Parser _reduce_389":{"type":"method","name":"_reduce_389","children":[],"call":["val [] "," args "]}," Ruby19Parser _reduce_388":{"type":"method","name":"_reduce_388","children":[],"call":["val [] "]}," Ruby19Parser _reduce_386":{"type":"method","name":"_reduce_386","children":[],"call":["result concat ","val [] "," lexer command_start= "," lexer "," s "," args ","val []  concat "," s  concat "," args  concat "]}," Ruby19Parser _reduce_385":{"type":"method","name":"_reduce_385","children":[],"call":[" lexer command_start= "," lexer "," s ","val [] "," new_call ","val [] [] map ","val [] [] ","val [] size "," args "," new_ new_call  ","  s  "]}," Ruby19Parser _reduce_384":{"type":"method","name":"_reduce_384","children":[],"call":["val [] "," s "," new_call "," raise ","val inspect ","result == "," args "," new_ new_call  "," s  == "," args  == "]}," Ruby19Parser _reduce_381":{"type":"method","name":"_reduce_381","children":[],"call":[" args ","val [] << ","val [] "," block_args19 "]}," Ruby19Parser _reduce_380":{"type":"method","name":"_reduce_380","children":[],"call":[" args "," block_args19 ","result << ","(str \"&\") to_sym ","block last ","result []= "," args  << "," block_args19  << "," args  []= "," block_args19  []= "]}," Ruby19Parser _reduce_379":{"type":"method","name":"_reduce_379","children":[],"call":[" args ","val [] "," block_args19 "]}," Ruby19Parser _reduce_378":{"type":"method","name":"_reduce_378","children":[],"call":[" args "," block_args19 "]}," Ruby19Parser _reduce_377":{"type":"method","name":"_reduce_377","children":[],"call":[" args "," lexer command_start= "," lexer "," s "," block_args19 ","result << ","(str \"&\") to_sym ","block last ","result concat ","s [] ","opt [] map ","opt [] "," args  << "," s  << "," block_args19  << "," args  concat "," s  concat "," block_args19  concat "]}," Ruby19Parser _reduce_376":{"type":"method","name":"_reduce_376","children":[],"call":[" args "," lexer command_start= "," lexer ","val [] "," block_args19 "]}," Ruby19Parser _reduce_375":{"type":"method","name":"_reduce_375","children":[],"call":[" args "," lexer command_start= "," lexer "," block_args19 "]}," Ruby19Parser _reduce_374":{"type":"method","name":"_reduce_374","children":[],"call":[" args "," lexer command_start= "," lexer "," block_args19 "]}," Ruby19Parser _reduce_373":{"type":"method","name":"_reduce_373","children":[],"call":[" args "," block_args19 "]}," Ruby19Parser _reduce_372":{"type":"method","name":"_reduce_372","children":[],"call":[" args "," block_var ","val [] "," block_args19 "]}," Ruby19Parser _reduce_371":{"type":"method","name":"_reduce_371","children":[],"call":[" args "," block_var "," s "," block_args19 "]}," Ruby19Parser _reduce_370":{"type":"method","name":"_reduce_370","children":[],"call":[" args "," block_var ","val [] "," block_args19 "]}," Ruby19Parser _reduce_369":{"type":"method","name":"_reduce_369","children":[],"call":[" args "," block_var ","val [] "," s "," block_args19 ","result << ","(str \"&\") to_sym ","block last ","result concat ","s [] ","opt [] map ","opt [] "," args  << "," block_var  << "," block_args19  << "," args  concat "," block_var  concat "," block_args19  concat "]}," Ruby19Parser _reduce_368":{"type":"method","name":"_reduce_368","children":[],"call":[" args "," block_var ","val [] "," block_args19 "]}," Ruby19Parser _reduce_367":{"type":"method","name":"_reduce_367","children":[],"call":[" args "," block_var "," s ","val [] "," block_args19 "]}," Ruby19Parser _reduce_366":{"type":"method","name":"_reduce_366","children":[],"call":[" block_var ","val [] "," raise ","val inspect "]}," Ruby19Parser _reduce_365":{"type":"method","name":"_reduce_365","children":[],"call":[" block_var ","val [] "," s "," raise ","val inspect "]}," Ruby19Parser _reduce_364":{"type":"method","name":"_reduce_364","children":[],"call":[" block_var ","val [] "," raise ","val inspect "]}," Ruby19Parser _reduce_363":{"type":"method","name":"_reduce_363","children":[],"call":[" block_var ","val [] "," raise ","val inspect "]}," Ruby19Parser _reduce_362":{"type":"method","name":"_reduce_362","children":[],"call":[" block_var ","val [] "," raise ","val inspect "]}," Ruby19Parser _reduce_361":{"type":"method","name":"_reduce_361","children":[],"call":[" block_var ","val [] "," raise ","val inspect ","(str \"*\") to_sym "]}," Ruby19Parser _reduce_360":{"type":"method","name":"_reduce_360","children":[],"call":[" block_var ","(str \"*\") to_sym "," list_append ","val [] "," raise ","val inspect "]}," Ruby19Parser _reduce_359":{"type":"method","name":"_reduce_359","children":[],"call":[" block_var ","(str \"*\") to_sym "," s ","val [] "," raise ","val inspect "]}," Ruby19Parser _reduce_358":{"type":"method","name":"_reduce_358","children":[],"call":[" block_var ","val [] delete_at ","val [] ","val [] [] nil? ","val [] [] "," raise ","val inspect "," list_append "]}," Ruby19Parser _reduce_357":{"type":"method","name":"_reduce_357","children":[],"call":[" list_append ","val [] "," raise ","val inspect "," s "]}," Ruby19Parser _reduce_356":{"type":"method","name":"_reduce_356","children":[],"call":[" s ","val [] "," raise ","val inspect "]}," Ruby19Parser _reduce_355":{"type":"method","name":"_reduce_355","children":[],"call":["val [] "," raise ","val inspect "]}," Ruby19Parser _reduce_353":{"type":"method","name":"_reduce_353","children":[],"call":["val [] delete_at ","val [] ","val [] [] nil? ","val [] [] "]}," Ruby19Parser _reduce_351":{"type":"method","name":"_reduce_351","children":[],"call":["val [] "]}," Ruby19Parser _reduce_349":{"type":"method","name":"_reduce_349","children":[],"call":[" s ","val [] "]}," Ruby19Parser _reduce_331":{"type":"method","name":"_reduce_331","children":[],"call":[" value_expr ","val [] "," s "]}," Ruby19Parser _reduce_330":{"type":"method","name":"_reduce_330","children":[],"call":[" s "]}," Ruby19Parser _reduce_329":{"type":"method","name":"_reduce_329","children":[],"call":[" s "," in_single "," env unextend "," env "," new_defs "]}," Ruby19Parser _reduce_328":{"type":"method","name":"_reduce_328","children":[],"call":[" s "," lexer lex_state= "," lexer "," env extend "," env "," in_single "]}," Ruby19Parser _reduce_327":{"type":"method","name":"_reduce_327","children":[],"call":[" s "," lexer lex_state= "," lexer "," comments push "," lexer comments "," comments "," in_single "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg ","result [] line ","result [] "," new_defs ","val [] "," s  [] line "," new_defs  [] line "," s  [] "," new_defs  [] "]}," Ruby19Parser _reduce_326":{"type":"method","name":"_reduce_326","children":[],"call":[" in_single "," env unextend "," env "," new_defs "," in_def= "," new_defn ","result [] line ","val [] ","result [] "," lexer comments "," lexer "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer cmdarg stack dup "," lexer lineno "," lexer lex_state= "," env extend "," new_defs  [] line "," new_defn  [] line "," lexer lineno  [] line "," new_defs  [] "," new_defn  [] "," lexer lineno  [] "]}," Ruby19Parser _reduce_325":{"type":"method","name":"_reduce_325","children":[],"call":[" lexer lex_state= "," lexer "," env extend "," env "," in_single "," lexer src beginning_of_line? "," lexer src "," lexer lineno "," in_def= "," comments push "," lexer comments "," comments "]}," Ruby19Parser _reduce_324":{"type":"method","name":"_reduce_324","children":[],"call":[" lexer lex_state= "," lexer "," comments push "," lexer comments "," comments "," env unextend "," env "," new_module "," in_def= "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," new_defn ","val [] "]}," Ruby19Parser _reduce_323":{"type":"method","name":"_reduce_323","children":[],"call":[" in_def= "," env unextend "," env "," new_defn "," env extend "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," lexer "," comments ","result [] line ","val [] ","result [] "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer cmdarg stack dup "," val [] = "," val []  "," new_defn  [] line "," new_defn  [] "]}," Ruby19Parser _reduce_322":{"type":"method","name":"_reduce_322","children":[],"call":[" lexer src beginning_of_line? "," lexer src "," lexer "," lexer lineno "," env extend "," env "," in_def= "," comments push "," lexer comments "," comments "," env unextend "," new_module "," in_def "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer cmdarg stack dup "]}," Ruby19Parser _reduce_321":{"type":"method","name":"_reduce_321","children":[],"call":[" env unextend "," env "," new_module "," new_sclass "," lexer comments "," lexer "," env extend "," yyerror "," in_single > "," in_single "," in_def "," comments push "," comments "]}," Ruby19Parser _reduce_320":{"type":"method","name":"_reduce_320","children":[],"call":[" env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," lexer "," comments "," in_single= "," lexer lineno "]}," Ruby19Parser _reduce_319":{"type":"method","name":"_reduce_319","children":[],"call":[" lexer lineno "," lexer "," in_def= "," in_def "," lexer comments "," env unextend "," env "," new_sclass "]}," Ruby19Parser _reduce_318":{"type":"method","name":"_reduce_318","children":[],"call":[" env unextend "," env "," new_sclass "," lexer lineno "," lexer "," lexer comments "," env extend "," in_single= "," in_single "]}," Ruby19Parser _reduce_317":{"type":"method","name":"_reduce_317","children":[],"call":[" env extend "," env "," in_single= "," in_single "," env unextend "," new_class "," in_def= "," in_def "]}," Ruby19Parser _reduce_316":{"type":"method","name":"_reduce_316","children":[],"call":[" in_def= "," in_def "," env extend "," env "," yyerror "," in_single > "," in_single "," comments push "," lexer comments "," lexer "," comments "," lexer lineno "]}," Ruby19Parser _reduce_315":{"type":"method","name":"_reduce_315","children":[],"call":[" lexer lineno "," lexer "," lexer comments "," env unextend "," env "," new_class "]}," Ruby19Parser _reduce_314":{"type":"method","name":"_reduce_314","children":[],"call":[" env unextend "," env "," new_class "," new_for ","val [] "," lexer comments "," lexer "," env extend "," yyerror "," in_single > "," in_single "," in_def "," comments push "," comments "]}," Ruby19Parser _reduce_313":{"type":"method","name":"_reduce_313","children":[],"call":[" env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," lexer "," comments "," lexer cond pop "," lexer cond "," lexer lineno "]}," Ruby19Parser _reduce_312":{"type":"method","name":"_reduce_312","children":[],"call":[" lexer lineno "," lexer "," lexer cond push "," lexer cond "," new_for ","val [] "]}," Ruby19Parser _reduce_311":{"type":"method","name":"_reduce_311","children":[],"call":[" new_for ","val [] "," new_case "," lexer cond pop "," lexer cond "," lexer "]}," Ruby19Parser _reduce_310":{"type":"method","name":"_reduce_310","children":[],"call":[" lexer cond pop "," lexer cond "," lexer "," new_case ","val [] "," lexer cond push "]}," Ruby19Parser _reduce_309":{"type":"method","name":"_reduce_309","children":[],"call":[" lexer cond push "," lexer cond "," lexer "," new_case ","val [] "]}," Ruby19Parser _reduce_308":{"type":"method","name":"_reduce_308","children":[],"call":[" new_case ","val [] "," new_until "]}," Ruby19Parser _reduce_307":{"type":"method","name":"_reduce_307","children":[],"call":[" new_case ","val [] "," lexer cond pop "," lexer cond "," lexer "," new_until "]}," Ruby19Parser _reduce_306":{"type":"method","name":"_reduce_306","children":[],"call":[" new_until ","val [] "," lexer cond push "," lexer cond "," lexer "," lexer cond pop "]}," Ruby19Parser _reduce_305":{"type":"method","name":"_reduce_305","children":[],"call":[" lexer cond pop "," lexer cond "," lexer "," new_while ","val [] "," lexer cond push "]}," Ruby19Parser _reduce_304":{"type":"method","name":"_reduce_304","children":[],"call":[" lexer cond push "," lexer cond "," lexer "," lexer cond pop "," new_while ","val [] "]}," Ruby19Parser _reduce_303":{"type":"method","name":"_reduce_303","children":[],"call":[" new_while ","val [] "," lexer cond push "," lexer cond "," lexer "," lexer cond pop "]}," Ruby19Parser _reduce_302":{"type":"method","name":"_reduce_302","children":[],"call":[" lexer cond pop "," lexer cond "," lexer "," new_if ","val [] "," lexer cond push "]}," Ruby19Parser _reduce_301":{"type":"method","name":"_reduce_301","children":[],"call":[" lexer cond push "," lexer cond "," lexer "," new_if ","val [] "]}," Ruby19Parser _reduce_300":{"type":"method","name":"_reduce_300","children":[],"call":[" new_if ","val [] "]}," Ruby19Parser _reduce_299":{"type":"method","name":"_reduce_299","children":[],"call":[" new_if ","val [] ","iter insert "]}," Ruby19Parser _reduce_298":{"type":"method","name":"_reduce_298","children":[],"call":["val [] ","iter insert "," block_dup_check "]}," Ruby19Parser _reduce_297":{"type":"method","name":"_reduce_297","children":[],"call":["iter insert "," block_dup_check ","val [] ","call line= ","iter line "," new_call ","oper to_sym "," new_call  line= "," new_ new_call  "]}," Ruby19Parser _reduce_295":{"type":"method","name":"_reduce_295","children":[],"call":["call line= ","iter line ","iter insert "," new_call ","oper to_sym ","val [] "," new_yield "," raise ","val inspect "," new_call  line= "," new_ new_call  "]}," Ruby19Parser _reduce_294":{"type":"method","name":"_reduce_294","children":[],"call":[" raise ","val inspect "," new_yield "," s ","val [] "]}," Ruby19Parser _reduce_293":{"type":"method","name":"_reduce_293","children":[],"call":[" s ","val [] "," new_yield "," raise ","val inspect "]}," Ruby19Parser _reduce_292":{"type":"method","name":"_reduce_292","children":[],"call":[" s ","val [] "," new_yield "]}," Ruby19Parser _reduce_291":{"type":"method","name":"_reduce_291","children":[],"call":[" new_yield "," s ","val [] values ","val [] "]}," Ruby19Parser _reduce_290":{"type":"method","name":"_reduce_290","children":[],"call":[" new_yield "," s ","val [] "]}," Ruby19Parser _reduce_289":{"type":"method","name":"_reduce_289","children":[],"call":[" new_yield ","val [] "," new_aref "," s "]}," Ruby19Parser _reduce_288":{"type":"method","name":"_reduce_288","children":[],"call":[" s ","val [] to_sym ","val [] "," new_hash "]}," Ruby19Parser _reduce_287":{"type":"method","name":"_reduce_287","children":[],"call":[" s ","val [] values ","val [] ","val [] to_sym "," lexer lineno "," lexer "]}," Ruby19Parser _reduce_286":{"type":"method","name":"_reduce_286","children":[],"call":[" s ","val [] ","result paren= "]}," Ruby19Parser _reduce_285":{"type":"method","name":"_reduce_285","children":[],"call":[" s ","val [] to_sym ","val [] "," warning "]}," Ruby19Parser _reduce_284":{"type":"method","name":"_reduce_284","children":[],"call":[" s ","val [] to_sym ","val [] "," lexer lex_state= "," lexer "]}," Ruby19Parser _reduce_283":{"type":"method","name":"_reduce_283","children":[],"call":["result paren= "," s ","val [] ","result line= "," s  paren= "," s  line= "]}," Ruby19Parser _reduce_282":{"type":"method","name":"_reduce_282","children":[],"call":["val [] "," warning "," lexer lineno "," lexer "]}," Ruby19Parser _reduce_281":{"type":"method","name":"_reduce_281","children":[],"call":[" lexer lex_state= "," lexer "," new_call ","val [] to_sym ","val [] "]}," Ruby19Parser _reduce_280":{"type":"method","name":"_reduce_280","children":[],"call":["result line= ","val [] "," s "," s  line= "]}," Ruby19Parser _reduce_279":{"type":"method","name":"_reduce_279","children":[],"call":[" lexer lineno "," lexer "]}," Ruby19Parser _reduce_278":{"type":"method","name":"_reduce_278","children":[],"call":[" new_call ","val [] to_sym ","val [] "]}," Ruby19Parser _reduce_269":{"type":"method","name":"_reduce_269","children":[],"call":[" s ","val [] "," list_append "]}," Ruby19Parser _reduce_268":{"type":"method","name":"_reduce_268","children":[],"call":[" arg_concat ","val [] "," s "]}," Ruby19Parser _reduce_267":{"type":"method","name":"_reduce_267","children":[],"call":["val [] << ","val [] "]}," Ruby19Parser _reduce_266":{"type":"method","name":"_reduce_266","children":[],"call":[" list_append "," s ","val [] "]}," Ruby19Parser _reduce_265":{"type":"method","name":"_reduce_265","children":[],"call":[" list_append ","val [] "," s "]}," Ruby19Parser _reduce_264":{"type":"method","name":"_reduce_264","children":[],"call":[" s ","val [] "," warning "]}," Ruby19Parser _reduce_263":{"type":"method","name":"_reduce_263","children":[],"call":[" s ","val [] "," lexer lex_state= "," lexer "]}," Ruby19Parser _reduce_261":{"type":"method","name":"_reduce_261","children":[],"call":["val [] "," lexer lex_state= "," lexer "]}," Ruby19Parser _reduce_260":{"type":"method","name":"_reduce_260","children":[],"call":[" s ","val [] "]}," Ruby19Parser _reduce_259":{"type":"method","name":"_reduce_259","children":[],"call":["val [] "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "]}," Ruby19Parser _reduce_258":{"type":"method","name":"_reduce_258","children":[],"call":[" lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg stack dup "," lexer cmdarg stack "]}," Ruby19Parser _reduce_256":{"type":"method","name":"_reduce_256","children":[],"call":[" arg_blk_pass ","val [] ","val [] << "," s ","val [] values "]}," Ruby19Parser _reduce_255":{"type":"method","name":"_reduce_255","children":[],"call":[" arg_blk_pass ","val [] "," s ","val [] values "," arg_concat "," s add_all add "," s add_all "]}," Ruby19Parser _reduce_254":{"type":"method","name":"_reduce_254","children":[],"call":[" arg_blk_pass ","val [] "," arg_concat "," s add "," s ","val [] values "]}," Ruby19Parser _reduce_253":{"type":"method","name":"_reduce_253","children":[],"call":[" s ","val [] "," warning "," arg_blk_pass "," s add_all add ","val [] values "," s add_all "]}," Ruby19Parser _reduce_252":{"type":"method","name":"_reduce_252","children":[],"call":["val [] "," arg_blk_pass "," s ","val [] values "]}," Ruby19Parser _reduce_251":{"type":"method","name":"_reduce_251","children":[],"call":["val [] << "," s ","val [] [] ","val [] "," arg_blk_pass ","val [] values ","val [] add "," warning ","val [] sexp_body "]}," Ruby19Parser _reduce_250":{"type":"method","name":"_reduce_250","children":[],"call":["val [] "," arg_blk_pass "," s ","val [] values "]}," Ruby19Parser _reduce_249":{"type":"method","name":"_reduce_249","children":[],"call":["val [] "," arg_blk_pass "," arg_concat "," s ","val [] values "]}," Ruby19Parser _reduce_248":{"type":"method","name":"_reduce_248","children":[],"call":["val [] "," arg_blk_pass "," arg_concat "," s "]}," Ruby19Parser _reduce_245":{"type":"method","name":"_reduce_245","children":[],"call":["val [] "]}," Ruby19Parser _reduce_244":{"type":"method","name":"_reduce_244","children":[],"call":[" s ","val [] values ","val [] "," arg_blk_pass "]}," Ruby19Parser _reduce_243":{"type":"method","name":"_reduce_243","children":[],"call":["val [] << "," s ","val [] values ","val [] "," arg_blk_pass "," arg_concat "]}," Ruby19Parser _reduce_242":{"type":"method","name":"_reduce_242","children":[],"call":["val [] "," arg_blk_pass ","val [] << "," s ","val [] values "]}," Ruby19Parser _reduce_240":{"type":"method","name":"_reduce_240","children":[],"call":[" value_expr ","val [] "," arg_blk_pass "," s ","val [] values "]}," Ruby19Parser _reduce_238":{"type":"method","name":"_reduce_238","children":[],"call":[" s ","val [] "," lexer tern pop "," lexer tern "," lexer "," arg_blk_pass "," arg_concat "]}," Ruby19Parser _reduce_237":{"type":"method","name":"_reduce_237","children":[],"call":[" s ","val [] "," arg_blk_pass "]}," Ruby19Parser _reduce_236":{"type":"method","name":"_reduce_236","children":[],"call":[" logop ","val [] "," s "," warning "," logical_op "]}," Ruby19Parser _reduce_235":{"type":"method","name":"_reduce_235","children":[],"call":[" logop ","val [] "," logical_op "]}," Ruby19Parser _reduce_234":{"type":"method","name":"_reduce_234","children":[],"call":[" new_call "," argl ","val [] ","val []= "," value_expr "]}," Ruby19Parser _reduce_233":{"type":"method","name":"_reduce_233","children":[],"call":[" new_call "," argl ","val [] ","val []= "," value_expr ","val [] add "," warning "]}," Ruby19Parser _reduce_232":{"type":"method","name":"_reduce_232","children":[],"call":[" new_call ","val [] ","val []= "," value_expr "," s "," warning "]}," Ruby19Parser _reduce_231":{"type":"method","name":"_reduce_231","children":[],"call":[" new_call ","val [] "]}," Ruby19Parser _reduce_230":{"type":"method","name":"_reduce_230","children":[],"call":[" s "," get_match_node ","val [] "," new_match "]}," Ruby19Parser _reduce_229":{"type":"method","name":"_reduce_229","children":[],"call":[" get_match_node ","val [] "," new_match "]}," Ruby19Parser _reduce_228":{"type":"method","name":"_reduce_228","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby19Parser _reduce_227":{"type":"method","name":"_reduce_227","children":[],"call":[" new_call "," argl ","val [] "," s "]}," Ruby19Parser _reduce_226":{"type":"method","name":"_reduce_226","children":[],"call":[" new_call "," argl ","val [] ","val [] << "," s ","val [] values "]}," Ruby19Parser _reduce_225":{"type":"method","name":"_reduce_225","children":[],"call":[" new_call "," argl ","val [] "," s ","val [] values "]}," Ruby19Parser _reduce_224":{"type":"method","name":"_reduce_224","children":[],"call":[" new_call "," argl ","val [] "," arg_concat "]}," Ruby19Parser _reduce_223":{"type":"method","name":"_reduce_223","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby19Parser _reduce_222":{"type":"method","name":"_reduce_222","children":[],"call":[" new_call "," argl ","val [] "," s "," warning "]}," Ruby19Parser _reduce_221":{"type":"method","name":"_reduce_221","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby19Parser _reduce_220":{"type":"method","name":"_reduce_220","children":[],"call":[" new_call "," argl ","val [] "," value_expr "]}," Ruby19Parser _reduce_219":{"type":"method","name":"_reduce_219","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby19Parser _reduce_218":{"type":"method","name":"_reduce_218","children":[],"call":[" new_call "," argl ","val [] "," s "," lexer tern pop "," lexer tern "," lexer "]}," Ruby19Parser _reduce_217":{"type":"method","name":"_reduce_217","children":[],"call":[" new_call ","val [] "," s "]}," Ruby19Parser _reduce_216":{"type":"method","name":"_reduce_216","children":[],"call":[" new_call ","val [] ","val [] [] == ","val [] [] "," logop "]}," Ruby19Parser _reduce_215":{"type":"method","name":"_reduce_215","children":[],"call":[" new_call "," argl ","val [] "," s "," logop "]}," Ruby19Parser _reduce_214":{"type":"method","name":"_reduce_214","children":[],"call":[" new_call "," argl ","val [] "," s ","val []= "," value_expr "]}," Ruby19Parser _reduce_213":{"type":"method","name":"_reduce_213","children":[],"call":[" new_call "," argl ","val [] ","val []= "," value_expr "]}," Ruby19Parser _reduce_212":{"type":"method","name":"_reduce_212","children":[],"call":[" new_call "," argl ","val [] ","val []= "," value_expr "]}," Ruby19Parser _reduce_211":{"type":"method","name":"_reduce_211","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby19Parser _reduce_210":{"type":"method","name":"_reduce_210","children":[],"call":[" new_call "," argl ","val [] "," s "," get_match_node "]}," Ruby19Parser _reduce_209":{"type":"method","name":"_reduce_209","children":[],"call":[" new_call "," argl ","val [] "," get_match_node "]}," Ruby19Parser _reduce_208":{"type":"method","name":"_reduce_208","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby19Parser _reduce_207":{"type":"method","name":"_reduce_207","children":[],"call":[" s ","v2 last ","v1 last ","Fixnum  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type ","val [] "," new_call "," argl ","Integer  === "]}," Ruby19Parser _reduce_206":{"type":"method","name":"_reduce_206","children":[],"call":[" s ","v2 last ","v1 last ","Fixnum  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type ","val [] "," new_call "," argl ","Integer  === "]}," Ruby19Parser _reduce_205":{"type":"method","name":"_reduce_205","children":[],"call":[" backref_assign_error ","val [] "," new_call "," argl "]}," Ruby19Parser _reduce_204":{"type":"method","name":"_reduce_204","children":[],"call":[" yyerror "," new_call "," argl ","val [] "]}," Ruby19Parser _reduce_203":{"type":"method","name":"_reduce_203","children":[],"call":[" yyerror "," new_call "," argl ","val [] "]}," Ruby19Parser _reduce_202":{"type":"method","name":"_reduce_202","children":[],"call":[" s ","val [] "," new_call "," argl ","val [] to_sym "]}," Ruby19Parser _reduce_201":{"type":"method","name":"_reduce_201","children":[],"call":[" s ","val [] ","val [] to_sym "," new_call "," argl "]}," Ruby19Parser _reduce_200":{"type":"method","name":"_reduce_200","children":[],"call":[" s ","val [] ","val [] to_sym "," new_call "," argl "]}," Ruby19Parser _reduce_199":{"type":"method","name":"_reduce_199","children":[],"call":[" s ","val [] ","val [] to_sym ","val [] []= "," new_call "," argl ","val [] sexp_type= "]}," Ruby19Parser _reduce_198":{"type":"method","name":"_reduce_198","children":[],"call":[" s "," new_resbody ","val [] "," new_op_asgn "," new_call "," argl "," node_assign "]}," Ruby19Parser _reduce_197":{"type":"method","name":"_reduce_197","children":[],"call":[" new_op_asgn "," new_call ","val [] "]}," Ruby19Parser _reduce_196":{"type":"method","name":"_reduce_196","children":[],"call":[" node_assign "," s "," new_resbody ","val [] "," new_call ","val [] [] == ","val [] [] "," new_assign "]}," Ruby19Parser _reduce_195":{"type":"method","name":"_reduce_195","children":[],"call":[" node_assign ","val [] "," new_call "," argl "," s "," new_assign "]}," Ruby19Parser _reduce_124":{"type":"method","name":"_reduce_124","children":[],"call":[" new_undef ","val [] "]}," Ruby19Parser _reduce_123":{"type":"method","name":"_reduce_123","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby19Parser _reduce_122":{"type":"method","name":"_reduce_122","children":[],"call":[" new_undef ","val [] "]}," Ruby19Parser _reduce_120":{"type":"method","name":"_reduce_120","children":[],"call":[" s ","val [] to_sym ","val [] "]}," Ruby19Parser _reduce_117":{"type":"method","name":"_reduce_117","children":[],"call":["val [] "," lexer lex_state= "," lexer "]}," Ruby19Parser _reduce_116":{"type":"method","name":"_reduce_116","children":[],"call":["val [] "," lexer lex_state= "," lexer "]}," Ruby19Parser _reduce_112":{"type":"method","name":"_reduce_112","children":[],"call":[" s ","val [] to_sym ","val [] "]}," Ruby19Parser _reduce_111":{"type":"method","name":"_reduce_111","children":[],"call":["val [] to_sym ","val [] "]}," Ruby19Parser _reduce_110":{"type":"method","name":"_reduce_110","children":[],"call":[" s ","val [] to_sym ","val [] "]}," Ruby19Parser _reduce_108":{"type":"method","name":"_reduce_108","children":[],"call":[" yyerror "," lexer lex_state= "," lexer "]}," Ruby19Parser _reduce_107":{"type":"method","name":"_reduce_107","children":[],"call":[" backref_assign_error ","val [] "," new_undef "]}," Ruby19Parser _reduce_106":{"type":"method","name":"_reduce_106","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," in_single > "," in_single "," in_def "]}," Ruby19Parser _reduce_105":{"type":"method","name":"_reduce_105","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," in_single > "," in_single "," in_def "]}," Ruby19Parser _reduce_104":{"type":"method","name":"_reduce_104","children":[],"call":[" s ","val [] "]}," Ruby19Parser _reduce_103":{"type":"method","name":"_reduce_103","children":[],"call":[" s ","val [] "]}," Ruby19Parser _reduce_102":{"type":"method","name":"_reduce_102","children":[],"call":[" s ","val [] "," lexer lex_state= "," lexer "]}," Ruby19Parser _reduce_101":{"type":"method","name":"_reduce_101","children":[],"call":[" aryset ","val [] "," lexer lex_state= "," lexer "]}," Ruby19Parser _reduce_100":{"type":"method","name":"_reduce_100","children":[],"call":[" assignable ","val [] "]}," Ruby19Parser _reduce_99":{"type":"method","name":"_reduce_99","children":[],"call":[" assignable ","val [] "]}," Ruby19Parser _reduce_98":{"type":"method","name":"_reduce_98","children":[],"call":[" backref_assign_error ","val [] "]}," Ruby19Parser _reduce_97":{"type":"method","name":"_reduce_97","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," in_single > "," in_single "," in_def "]}," Ruby19Parser _reduce_96":{"type":"method","name":"_reduce_96","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," in_single > "," in_single "," in_def "]}," Ruby19Parser _reduce_95":{"type":"method","name":"_reduce_95","children":[],"call":[" s ","val [] ","val [] to_sym "]}," Ruby19Parser _reduce_94":{"type":"method","name":"_reduce_94","children":[],"call":[" s ","val [] "]}," Ruby19Parser _reduce_93":{"type":"method","name":"_reduce_93","children":[],"call":[" s ","val [] "," yyerror "]}," Ruby19Parser _reduce_92":{"type":"method","name":"_reduce_92","children":[],"call":[" aryset ","val [] "," backref_assign_error "]}," Ruby19Parser _reduce_91":{"type":"method","name":"_reduce_91","children":[],"call":[" assignable ","val [] "," s ","val [] to_sym "," yyerror "," in_single > "," in_single "," in_def "]}," Ruby19Parser _reduce_90":{"type":"method","name":"_reduce_90","children":[],"call":[" assignable ","val [] "," s ","val [] to_sym "," yyerror "," in_single > "," in_single "," in_def "]}," Ruby19Parser _reduce_89":{"type":"method","name":"_reduce_89","children":[],"call":[" list_append ","val [] "," s "]}," Ruby19Parser _reduce_88":{"type":"method","name":"_reduce_88","children":[],"call":[" s ","val [] "]}," Ruby19Parser _reduce_87":{"type":"method","name":"_reduce_87","children":[],"call":["val [] << ","val [] compact ","val [] "," s "]}," Ruby19Parser _reduce_86":{"type":"method","name":"_reduce_86","children":[],"call":[" s ","val [] "," aryset "]}," Ruby19Parser _reduce_85":{"type":"method","name":"_reduce_85","children":[],"call":["val [] "," assignable "]}," Ruby19Parser _reduce_83":{"type":"method","name":"_reduce_83","children":[],"call":[" s ","ary concat ","val [] [] ","val [] "," backref_assign_error ","val [] sexp_body "," s  concat "]}," Ruby19Parser _reduce_82":{"type":"method","name":"_reduce_82","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," in_single > "," in_single "," in_def "]}," Ruby19Parser _reduce_81":{"type":"method","name":"_reduce_81","children":[],"call":[" s ","ary concat ","val [] [] ","val [] ","val [] to_sym "," yyerror "," in_single > "," in_single "," in_def ","val [] sexp_body "," s  concat "]}," Ruby19Parser _reduce_80":{"type":"method","name":"_reduce_80","children":[],"call":[" s ","val [] "]}," Ruby19Parser _reduce_79":{"type":"method","name":"_reduce_79","children":[],"call":[" s ","ary concat ","val [] [] ","val [] "," list_append ","val [] sexp_body "," list_append  concat "]}," Ruby19Parser _reduce_78":{"type":"method","name":"_reduce_78","children":[],"call":[" s ","val [] << ","val [] "]}," Ruby19Parser _reduce_77":{"type":"method","name":"_reduce_77","children":[],"call":[" s ","ary concat ","val [] [] ","val [] "," list_append "," aryset ","val [] sexp_body "," list_append  concat ","  list_append set "]}," Ruby19Parser _reduce_76":{"type":"method","name":"_reduce_76","children":[],"call":[" s ","val [] << ","val [] "," assignable "]}," Ruby19Parser _reduce_75":{"type":"method","name":"_reduce_75","children":[],"call":[" s ","val [] << ","val [] compact ","val [] "," assignable "]}," Ruby19Parser _reduce_74":{"type":"method","name":"_reduce_74","children":[],"call":[" s ","val [] ","val [] << ","val [] compact "]}," Ruby19Parser _reduce_73":{"type":"method","name":"_reduce_73","children":[],"call":[" s ","val [] "]}," Ruby19Parser _reduce_71":{"type":"method","name":"_reduce_71","children":[],"call":["val [] "]}," Ruby19Parser _reduce_69":{"type":"method","name":"_reduce_69","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last "," s val [] last  "]}," Ruby19Parser _reduce_68":{"type":"method","name":"_reduce_68","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last ","val [] << "," s val [] last  "]}," Ruby19Parser _reduce_67":{"type":"method","name":"_reduce_67","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last ","val [] << "," s val [] last  "]}," Ruby19Parser _reduce_66":{"type":"method","name":"_reduce_66","children":[],"call":[" new_yield ","val [] "," s ","val [] << ","val [] compact "]}," Ruby19Parser _reduce_65":{"type":"method","name":"_reduce_65","children":[],"call":[" new_super ","val [] "," s "]}," Ruby19Parser _reduce_64":{"type":"method","name":"_reduce_64","children":[],"call":["block insert "," block_dup_check "," new_call ","msg to_sym "," s ","val [] ","val [] << "," raise ","result [] == ","result [] ","val [] to_sym "," new_ new_call  "," s  [] == ","val []  [] == "," new_call  [] == "," s  [] ","val []  [] "," new_call  [] "]}," Ruby19Parser _reduce_63":{"type":"method","name":"_reduce_63","children":[],"call":[" new_call ","val [] ","val [] to_sym "]}," Ruby19Parser _reduce_62":{"type":"method","name":"_reduce_62","children":[],"call":["block insert "," block_dup_check "," new_call ","msg to_sym ","val [] ","val [] to_sym "," new_ new_call  "]}," Ruby19Parser _reduce_61":{"type":"method","name":"_reduce_61","children":[],"call":[" new_call ","val [] ","val [] to_sym "]}," Ruby19Parser _reduce_60":{"type":"method","name":"_reduce_60","children":[],"call":["result insert ","val [] "," block_dup_check "," new_call ","val [] to_sym "," new_yield "," raise ","result [] == ","result [] "," new_call  insert "," new_yield  insert "," new_call  [] == "," new_yield  [] == "," new_call  [] "," new_yield  [] "]}," Ruby19Parser _reduce_59":{"type":"method","name":"_reduce_59","children":[],"call":[" new_call ","val [] ","val [] to_sym "," new_super "]}," Ruby19Parser _reduce_58":{"type":"method","name":"_reduce_58","children":[],"call":[" env unextend "," env ","result line= ","val [] "," new_iter ","val [] << "," raise ","result [] == ","result [] "," new_call ","val [] to_sym "," new_iter  line= ","val []  line= "," new_call  line= "," new_iter  [] == ","val []  [] == "," new_call  [] == "," new_iter  [] ","val []  [] "," new_call  [] "]}," Ruby19Parser _reduce_57":{"type":"method","name":"_reduce_57","children":[],"call":[" env dynamic keys "," env dynamic "," env "," new_call ","val [] ","val [] to_sym "]}," Ruby19Parser _reduce_56":{"type":"method","name":"_reduce_56","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," new_call ","val [] ","val [] to_sym "]}," Ruby19Parser _reduce_55":{"type":"method","name":"_reduce_55","children":[],"call":[" new_call ","val [] ","val [] to_sym "]}," Ruby19Parser _reduce_54":{"type":"method","name":"_reduce_54","children":[],"call":[" new_call ","val [] ","result insert "," raise ","result [] == ","result [] ","val [] to_sym "," new_call  insert "," new_call  [] == "," new_call  [] "]}," Ruby19Parser _reduce_50":{"type":"method","name":"_reduce_50","children":[],"call":[" value_expr ","val [] "," lexer lineno "," lexer "," env extend "," env "]}," Ruby19Parser _reduce_48":{"type":"method","name":"_reduce_48","children":[],"call":[" s ","val [] "," new_call "]}," Ruby19Parser _reduce_47":{"type":"method","name":"_reduce_47","children":[],"call":[" s ","val [] "]}," Ruby19Parser _reduce_46":{"type":"method","name":"_reduce_46","children":[],"call":[" logop ","val [] "," s line "," s "," ret_args ","val [] last "," logical_op "," s val [] last  "]}," Ruby19Parser _reduce_45":{"type":"method","name":"_reduce_45","children":[],"call":[" logop ","val [] "," s line "," s "," ret_args ","val [] last "," logical_op "," s val [] last  "]}," Ruby19Parser _reduce_43":{"type":"method","name":"_reduce_43","children":[],"call":[" node_assign ","val [] "," new_assign "]}," Ruby19Parser _reduce_42":{"type":"method","name":"_reduce_42","children":[],"call":[" node_assign ","val [] "," new_assign "]}," Ruby19Parser _reduce_40":{"type":"method","name":"_reduce_40","children":[],"call":[" new_masgn ","val [] "]}," Ruby19Parser _reduce_39":{"type":"method","name":"_reduce_39","children":[],"call":[" new_masgn ","val [] "," s "]}," Ruby19Parser _reduce_38":{"type":"method","name":"_reduce_38","children":[],"call":[" node_assign "," s ","val [] "," new_assign "]}," Ruby19Parser _reduce_37":{"type":"method","name":"_reduce_37","children":[],"call":[" backref_assign_error ","val [] "," logop "]}," Ruby19Parser _reduce_36":{"type":"method","name":"_reduce_36","children":[],"call":[" s ","val [] "," logop "]}," Ruby19Parser _reduce_35":{"type":"method","name":"_reduce_35","children":[],"call":[" s ","val [] "]}," Ruby19Parser _reduce_34":{"type":"method","name":"_reduce_34","children":[],"call":[" s ","val [] ","val [] to_sym "]}," Ruby19Parser _reduce_33":{"type":"method","name":"_reduce_33","children":[],"call":[" s ","val [] "," new_masgn ","val [] to_sym "]}," Ruby19Parser _reduce_32":{"type":"method","name":"_reduce_32","children":[],"call":[" s ","val [] ","val [] to_sym "," new_masgn "]}," Ruby19Parser _reduce_31":{"type":"method","name":"_reduce_31","children":[],"call":[" new_op_asgn "," node_assign "," s ","val [] "]}," Ruby19Parser _reduce_30":{"type":"method","name":"_reduce_30","children":[],"call":[" new_masgn ","val [] "," backref_assign_error "]}," Ruby19Parser _reduce_28":{"type":"method","name":"_reduce_28","children":[],"call":[" new_iter ","val [] "," s "," yyerror "," in_single > "," in_single "," in_def "]}," Ruby19Parser _reduce_27":{"type":"method","name":"_reduce_27","children":[],"call":[" s "," new_resbody ","val [] "]}," Ruby19Parser _reduce_26":{"type":"method","name":"_reduce_26","children":[],"call":[" new_until ","val [] "," s ","val [] to_sym "]}," Ruby19Parser _reduce_25":{"type":"method","name":"_reduce_25","children":[],"call":[" new_while ","val [] "," new_op_asgn "]}," Ruby19Parser _reduce_24":{"type":"method","name":"_reduce_24","children":[],"call":[" new_if ","val [] "," new_masgn "]}," Ruby19Parser _reduce_23":{"type":"method","name":"_reduce_23","children":[],"call":[" new_if ","val [] "," node_assign "]}," Ruby19Parser _reduce_22":{"type":"method","name":"_reduce_22","children":[],"call":["val [] "," new_iter "," s "," yyerror "," in_single > "," in_single "," in_def "]}," Ruby19Parser _reduce_21":{"type":"method","name":"_reduce_21","children":[],"call":[" yyerror "," new_iter ","val [] "," s "]}," Ruby19Parser _reduce_20":{"type":"method","name":"_reduce_20","children":[],"call":[" s ","val [] ","val [] to_sym "," env extend "," env "," yyerror "," in_single > "," in_single "," in_def "]}," Ruby19Parser _reduce_19":{"type":"method","name":"_reduce_19","children":[],"call":[" s ","val [] to_sym ","val [] "," new_resbody "]}," Ruby19Parser _reduce_18":{"type":"method","name":"_reduce_18","children":[],"call":[" s line ","val [] "," s "," new_until "]}," Ruby19Parser _reduce_17":{"type":"method","name":"_reduce_17","children":[],"call":[" lexer lineno "," lexer "," lexer lex_state= "," new_while ","val [] "]}," Ruby19Parser _reduce_16":{"type":"method","name":"_reduce_16","children":[],"call":["val [] "," new_if "]}," Ruby19Parser _reduce_15":{"type":"method","name":"_reduce_15","children":[],"call":[" block_append ","val [] "," new_if "]}," Ruby19Parser _reduce_12":{"type":"method","name":"_reduce_12","children":[],"call":[" new_compstmt "," s ","val [] ","val [] to_sym "]}," Ruby19Parser _reduce_11":{"type":"method","name":"_reduce_11","children":[],"call":[" new_body "," s ","val [] to_sym ","val [] "]}," Ruby19Parser _reduce_10":{"type":"method","name":"_reduce_10","children":[],"call":[" new_iter ","val [] "," s "," s line "]}," Ruby19Parser _reduce_9":{"type":"method","name":"_reduce_9","children":[],"call":[" env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," lexer lineno "," lexer "," lexer lex_state= "]}," Ruby19Parser _reduce_6":{"type":"method","name":"_reduce_6","children":[],"call":[" block_append ","val [] "]}," Ruby19Parser _reduce_3":{"type":"method","name":"_reduce_3","children":[],"call":["val [] "," new_body "]}," Ruby19Parser _reduce_2":{"type":"method","name":"_reduce_2","children":[],"call":[" new_compstmt ","val [] "]}," Ruby19Parser _reduce_1":{"type":"method","name":"_reduce_1","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby18Parser _reduce_none":{"type":"method","name":"_reduce_none","children":[],"call":["val [] "]}," Ruby18Parser _reduce_519":{"type":"method","name":"_reduce_519","children":[],"call":[" yyerrok "]}," Ruby18Parser _reduce_518":{"type":"method","name":"_reduce_518","children":[],"call":[" yyerrok "]}," Ruby18Parser _reduce_515":{"type":"method","name":"_reduce_515","children":[],"call":[" yyerrok "]}," Ruby18Parser _reduce_495":{"type":"method","name":"_reduce_495","children":[],"call":[" s ","val [] ","list push ","more empty? ","val [] sexp_body ","val [] dup ","val [] [] ","val [] dup  push ","val [] sexp_body  empty? ","val [] []  empty? "]}," Ruby18Parser _reduce_494":{"type":"method","name":"_reduce_494","children":[],"call":["list push ","more empty? ","val [] [] ","val [] ","val [] dup ","val [] dup  push ","val [] []  empty? "]}," Ruby18Parser _reduce_492":{"type":"method","name":"_reduce_492","children":[],"call":["val [] "," yyerror ","val [] inspect ","size % != ","size % ","val [] size ","val [] size  % != ","val [] size  % ","val [] val [] size  "]}," Ruby18Parser _reduce_491":{"type":"method","name":"_reduce_491","children":[],"call":["val [] "," s "]}," Ruby18Parser _reduce_490":{"type":"method","name":"_reduce_490","children":[],"call":[" s "," yyerror ","result sexp_type == ","result sexp_type ","val [] ","result [] == ","result [] "," s  sexp_type == ","val []  sexp_type == "," s  sexp_type ","val []  sexp_type "," s  [] == ","val []  [] == "," s  [] ","val []  [] "]}," Ruby18Parser _reduce_489":{"type":"method","name":"_reduce_489","children":[],"call":[" yyerror ","result [] == ","result [] ","val [] "," lexer lex_state= "," lexer ","val []  [] == ","val []  [] "]}," Ruby18Parser _reduce_488":{"type":"method","name":"_reduce_488","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby18Parser _reduce_486":{"type":"method","name":"_reduce_486","children":[],"call":["val [] "]}," Ruby18Parser _reduce_485":{"type":"method","name":"_reduce_485","children":[],"call":["val [] "," s ","identifier to_sym "," env []= "," env ","val [] to_sym ","val [] to_sym  to_sym "]}," Ruby18Parser _reduce_484":{"type":"method","name":"_reduce_484","children":[],"call":[" s ","identifier to_sym "," env []= "," env ","val [] to_sym ","val [] ","val [] to_sym  to_sym "]}," Ruby18Parser _reduce_481":{"type":"method","name":"_reduce_481","children":[],"call":[" env []= "," env "," assignable ","val [] to_sym ","val [] "]}," Ruby18Parser _reduce_480":{"type":"method","name":"_reduce_480","children":[],"call":[" assignable ","val [] to_sym ","val [] "]}," Ruby18Parser _reduce_477":{"type":"method","name":"_reduce_477","children":[],"call":[" block_append ","val [] "," s "]}," Ruby18Parser _reduce_476":{"type":"method","name":"_reduce_476","children":[],"call":[" s ","val [] "," assignable "]}," Ruby18Parser _reduce_475":{"type":"method","name":"_reduce_475","children":[],"call":[" assignable ","val [] ","val [] << ","val [] to_sym "]}," Ruby18Parser _reduce_474":{"type":"method","name":"_reduce_474","children":[],"call":["val [] ","val [] << ","val [] to_sym ","result << "," s ","val []  << "," s  << "]}," Ruby18Parser _reduce_473":{"type":"method","name":"_reduce_473","children":[],"call":["result << ","val [] to_sym ","val [] "," s "," env []= "," env "," s  << ","val []  << "]}," Ruby18Parser _reduce_472":{"type":"method","name":"_reduce_472","children":[],"call":["val [] "," env []= "," env ","val [] to_sym "," yyerror "]}," Ruby18Parser _reduce_471":{"type":"method","name":"_reduce_471","children":[],"call":[" yyerror "]}," Ruby18Parser _reduce_470":{"type":"method","name":"_reduce_470","children":[],"call":[" yyerror "]}," Ruby18Parser _reduce_469":{"type":"method","name":"_reduce_469","children":[],"call":[" yyerror "]}," Ruby18Parser _reduce_468":{"type":"method","name":"_reduce_468","children":[],"call":[" yyerror "," args "]}," Ruby18Parser _reduce_467":{"type":"method","name":"_reduce_467","children":[],"call":[" args "]}," Ruby18Parser _reduce_466":{"type":"method","name":"_reduce_466","children":[],"call":[" args ","val [] "]}," Ruby18Parser _reduce_465":{"type":"method","name":"_reduce_465","children":[],"call":[" args ","val [] "]}," Ruby18Parser _reduce_464":{"type":"method","name":"_reduce_464","children":[],"call":[" args ","val [] "]}," Ruby18Parser _reduce_463":{"type":"method","name":"_reduce_463","children":[],"call":[" args ","val [] "]}," Ruby18Parser _reduce_462":{"type":"method","name":"_reduce_462","children":[],"call":[" args ","val [] "]}," Ruby18Parser _reduce_461":{"type":"method","name":"_reduce_461","children":[],"call":[" args ","val [] "]}," Ruby18Parser _reduce_460":{"type":"method","name":"_reduce_460","children":[],"call":[" args ","val [] "]}," Ruby18Parser _reduce_459":{"type":"method","name":"_reduce_459","children":[],"call":[" args ","val [] "]}," Ruby18Parser _reduce_458":{"type":"method","name":"_reduce_458","children":[],"call":["val [] "," lexer command_start= "," lexer "," lexer lex_state= "]}," Ruby18Parser _reduce_457":{"type":"method","name":"_reduce_457","children":[],"call":[" lexer command_start= "," lexer "," lexer lex_state= ","val [] "," yyerrok "]}," Ruby18Parser _reduce_456":{"type":"method","name":"_reduce_456","children":[],"call":[" yyerrok ","val [] "]}," Ruby18Parser _reduce_455":{"type":"method","name":"_reduce_455","children":[],"call":["val [] "," lexer lex_state= "," lexer "]}," Ruby18Parser _reduce_454":{"type":"method","name":"_reduce_454","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby18Parser _reduce_453":{"type":"method","name":"_reduce_453","children":[],"call":[" s ","val [] "]}," Ruby18Parser _reduce_452":{"type":"method","name":"_reduce_452","children":[],"call":[" s ","val [] "]}," Ruby18Parser _reduce_451":{"type":"method","name":"_reduce_451","children":[],"call":[" s ","val [] "," assignable "]}," Ruby18Parser _reduce_450":{"type":"method","name":"_reduce_450","children":[],"call":[" assignable ","val [] "," gettable ","Sexp  === "]}," Ruby18Parser _reduce_449":{"type":"method","name":"_reduce_449","children":[],"call":[" gettable ","Sexp  === ","val [] "," s "," lexer lineno "," lexer "]}," Ruby18Parser _reduce_448":{"type":"method","name":"_reduce_448","children":[],"call":[" s "," lexer src current_line "," lexer src "," lexer "," file "," lexer lineno "]}," Ruby18Parser _reduce_447":{"type":"method","name":"_reduce_447","children":[],"call":[" s "," file "]}," Ruby18Parser _reduce_446":{"type":"method","name":"_reduce_446","children":[],"call":[" s "]}," Ruby18Parser _reduce_445":{"type":"method","name":"_reduce_445","children":[],"call":[" s "]}," Ruby18Parser _reduce_444":{"type":"method","name":"_reduce_444","children":[],"call":[" s "]}," Ruby18Parser _reduce_443":{"type":"method","name":"_reduce_443","children":[],"call":[" s "]}," Ruby18Parser _reduce_437":{"type":"method","name":"_reduce_437","children":[],"call":["val [] -@ ","val [] "]}," Ruby18Parser _reduce_436":{"type":"method","name":"_reduce_436","children":[],"call":["val [] -@ ","val [] "]}," Ruby18Parser _reduce_433":{"type":"method","name":"_reduce_433","children":[],"call":[" s ","result last intern ","result last ","result []= ","result [] "," yyerror ","result empty? ","result nil? ","val [] "," lexer lex_state= "," lexer ","result last to_sym "," s  last intern ","val []  last intern "," s  last ","val []  last "," s  []= ","val []  []= "," s  [] ","val []  [] "," s  empty? ","val []  empty? "," s  nil? ","val []  nil? "," s  last to_sym ","val []  last to_sym "]}," Ruby18Parser _reduce_428":{"type":"method","name":"_reduce_428","children":[],"call":["val [] to_sym ","val [] "," lexer lex_state= "," lexer "]}," Ruby18Parser _reduce_427":{"type":"method","name":"_reduce_427","children":[],"call":["val [] to_sym ","val [] "," lexer lex_state= "," lexer "]}," Ruby18Parser _reduce_425":{"type":"method","name":"_reduce_425","children":[],"call":[" s ","val [] to_sym ","val [] "]}," Ruby18Parser _reduce_424":{"type":"method","name":"_reduce_424","children":[],"call":[" s ","val [] to_sym ","val [] "]}," Ruby18Parser _reduce_423":{"type":"method","name":"_reduce_423","children":[],"call":[" s ","val [] to_sym ","val [] "," raise ","stmt inspect ","stmt sexp_type "," lexer cmdarg restore "," lexer cmdarg "," lexer "," lexer cond restore "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= ","stmt [] "]}," Ruby18Parser _reduce_422":{"type":"method","name":"_reduce_422","children":[],"call":[" raise ","val [] inspect ","val [] "," s ","val [] [] "," lexer cmdarg lexpop "," lexer cmdarg "," lexer "," lexer cond lexpop "," lexer cond "," lexer lex_strterm= "," lexer lex_state= "," lexer string_nest= "," lexer brace_nest= "," lexer cmdarg store "," lexer cond store "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm ","stmt inspect ","stmt [] "," lexer cmdarg restore "," lexer cond restore "]}," Ruby18Parser _reduce_421":{"type":"method","name":"_reduce_421","children":[],"call":[" lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cond push "," lexer cond "," lexer lex_state= "," lexer lex_strterm= "," lexer lex_strterm "," s ","val [] "," lexer string_nest= "," lexer brace_nest= "," lexer string_nest "," lexer brace_nest "," lexer cmdarg store "," lexer cond store "]}," Ruby18Parser _reduce_420":{"type":"method","name":"_reduce_420","children":[],"call":[" s ","val [] "," lexer lex_strterm= "," lexer "," lexer lex_state= "," lexer lex_strterm "]}," Ruby18Parser _reduce_419":{"type":"method","name":"_reduce_419","children":[],"call":[" lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm "," new_string "]}," Ruby18Parser _reduce_418":{"type":"method","name":"_reduce_418","children":[],"call":[" s ","val [] "," literal_concat "," new_string "]}," Ruby18Parser _reduce_417":{"type":"method","name":"_reduce_417","children":[],"call":[" literal_concat ","val [] "]}," Ruby18Parser _reduce_416":{"type":"method","name":"_reduce_416","children":[],"call":[" literal_concat ","val [] "]}," Ruby18Parser _reduce_415":{"type":"method","name":"_reduce_415","children":[],"call":[" literal_concat ","val [] "," s "]}," Ruby18Parser _reduce_414":{"type":"method","name":"_reduce_414","children":[],"call":[" s ","val [] << "," new_qword_list_entry ","val [] "]}," Ruby18Parser _reduce_413":{"type":"method","name":"_reduce_413","children":[],"call":["val [] << "," s ","val [] "," new_qword_list "," new_qword_list_entry "]}," Ruby18Parser _reduce_412":{"type":"method","name":"_reduce_412","children":[],"call":[" s ","val [] "," new_qword_list "]}," Ruby18Parser _reduce_411":{"type":"method","name":"_reduce_411","children":[],"call":["val [] "," s "]}," Ruby18Parser _reduce_410":{"type":"method","name":"_reduce_410","children":[],"call":[" s "," literal_concat ","val [] "]}," Ruby18Parser _reduce_409":{"type":"method","name":"_reduce_409","children":[],"call":[" literal_concat ","val [] "]}," Ruby18Parser _reduce_407":{"type":"method","name":"_reduce_407","children":[],"call":["val [] << ","val [] "," s ","val [] [] == ","val [] [] "," new_word_list "," new_word_list_entry "," new_val [] _list "," new_ s _list "," new_val [] _list_entry "," new_ s _list_entry "]}," Ruby18Parser _reduce_406":{"type":"method","name":"_reduce_406","children":[],"call":[" s ","val [] "," new_word_list "]}," Ruby18Parser _reduce_405":{"type":"method","name":"_reduce_405","children":[],"call":["val [] "," s "]}," Ruby18Parser _reduce_404":{"type":"method","name":"_reduce_404","children":[],"call":[" s "," new_regexp "]}," Ruby18Parser _reduce_403":{"type":"method","name":"_reduce_403","children":[],"call":[" new_regexp "," new_xstring ","val [] "]}," Ruby18Parser _reduce_402":{"type":"method","name":"_reduce_402","children":[],"call":[" new_xstring ","val [] "," new_string "]}," Ruby18Parser _reduce_401":{"type":"method","name":"_reduce_401","children":[],"call":[" s ","val [] "," new_string "]}," Ruby18Parser _reduce_400":{"type":"method","name":"_reduce_400","children":[],"call":["val [] "," literal_concat "]}," Ruby18Parser _reduce_399":{"type":"method","name":"_reduce_399","children":[],"call":[" literal_concat ","val [] "]}," Ruby18Parser _reduce_397":{"type":"method","name":"_reduce_397","children":[],"call":["val [] ","val []= "," s ","val [] value ","val [] [] == ","val [] [] "]}," Ruby18Parser _reduce_395":{"type":"method","name":"_reduce_395","children":[],"call":[" s ","val [] "]}," Ruby18Parser _reduce_394":{"type":"method","name":"_reduce_394","children":[],"call":[" s ","val [] "]}," Ruby18Parser _reduce_392":{"type":"method","name":"_reduce_392","children":[],"call":[" s ","val [] ","val [] != "]}," Ruby18Parser _reduce_390":{"type":"method","name":"_reduce_390","children":[],"call":["val [] "]}," Ruby18Parser _reduce_387":{"type":"method","name":"_reduce_387","children":[],"call":[" s ","val [] "]}," Ruby18Parser _reduce_386":{"type":"method","name":"_reduce_386","children":[],"call":["result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s ","val [] "," new_resbody  << "]}," Ruby18Parser _reduce_385":{"type":"method","name":"_reduce_385","children":[],"call":["result << "," new_resbody ","klasses << "," node_assign "," s ","val [] "," new_resbody  << "]}," Ruby18Parser _reduce_382":{"type":"method","name":"_reduce_382","children":[],"call":[" s ","val [] "," new_when "," list_append "]}," Ruby18Parser _reduce_381":{"type":"method","name":"_reduce_381","children":[],"call":[" list_append "," s ","val [] "," new_when "]}," Ruby18Parser _reduce_379":{"type":"method","name":"_reduce_379","children":[],"call":["result << ","val [] ","result line= "," new_when "," lexer lineno "," lexer "," new_when  << "," lexer lineno  << "," new_when  line= "," lexer lineno  line= "]}," Ruby18Parser _reduce_378":{"type":"method","name":"_reduce_378","children":[],"call":[" lexer lineno "," lexer ","result line= ","val [] "," env unextend "," env "," new_iter "," lexer lineno  line= "," new_iter  line= "]}," Ruby18Parser _reduce_377":{"type":"method","name":"_reduce_377","children":[],"call":["result line= ","val [] "," env unextend "," env "," new_iter "," new_iter  line= "]}," Ruby18Parser _reduce_376":{"type":"method","name":"_reduce_376","children":[],"call":[" env dynamic keys "," env dynamic "," env "," lexer lineno "," lexer "," env extend "]}," Ruby18Parser _reduce_375":{"type":"method","name":"_reduce_375","children":[],"call":[" lexer lineno "," lexer "," env extend "," env ","result line= ","val [] "," env unextend "," new_iter "," lexer lineno  line= "," new_iter  line= "]}," Ruby18Parser _reduce_374":{"type":"method","name":"_reduce_374","children":[],"call":["result line= ","val [] "," env unextend "," env "," new_iter "," new_iter  line= "]}," Ruby18Parser _reduce_373":{"type":"method","name":"_reduce_373","children":[],"call":[" env dynamic keys "," env dynamic "," env "," lexer lineno "," lexer "," env extend "]}," Ruby18Parser _reduce_372":{"type":"method","name":"_reduce_372","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," s "]}," Ruby18Parser _reduce_371":{"type":"method","name":"_reduce_371","children":[],"call":[" s "," new_super ","val [] "]}," Ruby18Parser _reduce_370":{"type":"method","name":"_reduce_370","children":[],"call":[" new_super ","val [] "," new_call ","val [] to_sym "]}," Ruby18Parser _reduce_369":{"type":"method","name":"_reduce_369","children":[],"call":[" new_call ","val [] to_sym ","val [] "]}," Ruby18Parser _reduce_368":{"type":"method","name":"_reduce_368","children":[],"call":[" new_call ","val [] ","val [] to_sym "]}," Ruby18Parser _reduce_367":{"type":"method","name":"_reduce_367","children":[],"call":[" new_call ","val [] ","val [] to_sym "]}," Ruby18Parser _reduce_366":{"type":"method","name":"_reduce_366","children":[],"call":[" new_call ","val [] ","val [] to_sym "," lexer lineno "," lexer "]}," Ruby18Parser _reduce_365":{"type":"method","name":"_reduce_365","children":[],"call":[" lexer lineno "," lexer "," new_call ","val [] "]}," Ruby18Parser _reduce_364":{"type":"method","name":"_reduce_364","children":[],"call":[" new_call ","val [] "]}," Ruby18Parser _reduce_363":{"type":"method","name":"_reduce_363","children":[],"call":[" new_call ","val [] ","result insert "," block_dup_check "," new_call  insert ","val []  insert "]}," Ruby18Parser _reduce_362":{"type":"method","name":"_reduce_362","children":[],"call":["result insert ","val [] "," block_dup_check "," raise ","val [] [] == ","val [] [] "," env unextend "," env ","result line= "," new_iter ","val []  insert "," new_iter  insert ","val []  line= "," new_iter  line= "]}," Ruby18Parser _reduce_361":{"type":"method","name":"_reduce_361","children":[],"call":[" env unextend "," env ","result line= ","val [] "," new_iter "," new_iter  line= "]}," Ruby18Parser _reduce_360":{"type":"method","name":"_reduce_360","children":[],"call":[" env dynamic keys "," env dynamic "," env "," lexer lineno "," lexer "," env extend "]}," Ruby18Parser _reduce_359":{"type":"method","name":"_reduce_359","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," lexer command_start= ","val [] "]}," Ruby18Parser _reduce_358":{"type":"method","name":"_reduce_358","children":[],"call":[" lexer command_start= "," lexer ","val [] "," s "]}," Ruby18Parser _reduce_357":{"type":"method","name":"_reduce_357","children":[],"call":[" lexer command_start= "," lexer "," s "]}," Ruby18Parser _reduce_356":{"type":"method","name":"_reduce_356","children":[],"call":[" lexer command_start= "," lexer "," s "]}," Ruby18Parser _reduce_354":{"type":"method","name":"_reduce_354","children":[],"call":[" block_var18 ","val [] "," block_var "," s "]}," Ruby18Parser _reduce_353":{"type":"method","name":"_reduce_353","children":[],"call":[" block_var18 "," s "," block_var ","val [] "]}," Ruby18Parser _reduce_352":{"type":"method","name":"_reduce_352","children":[],"call":[" block_var18 ","val [] "," block_var "," s "]}," Ruby18Parser _reduce_351":{"type":"method","name":"_reduce_351","children":[],"call":[" block_var18 ","val [] "," s "," block_var "]}," Ruby18Parser _reduce_350":{"type":"method","name":"_reduce_350","children":[],"call":[" block_var18 ","val [] "," block_var "," s "]}," Ruby18Parser _reduce_349":{"type":"method","name":"_reduce_349","children":[],"call":[" block_var18 "," s ","val [] "," block_var "]}," Ruby18Parser _reduce_348":{"type":"method","name":"_reduce_348","children":[],"call":[" block_var18 ","val [] "," block_var "," s "]}," Ruby18Parser _reduce_347":{"type":"method","name":"_reduce_347","children":[],"call":[" block_var18 ","val [] "," s "," block_var "]}," Ruby18Parser _reduce_346":{"type":"method","name":"_reduce_346","children":[],"call":[" block_var18 ","val [] "," block_var "]}," Ruby18Parser _reduce_345":{"type":"method","name":"_reduce_345","children":[],"call":[" block_var18 ","val [] "," block_var "]}," Ruby18Parser _reduce_344":{"type":"method","name":"_reduce_344","children":[],"call":[" block_var18 ","val [] "," block_var "]}," Ruby18Parser _reduce_343":{"type":"method","name":"_reduce_343","children":[],"call":[" block_var18 ","val [] "," block_var "," list_append "," clean_mlhs "]}," Ruby18Parser _reduce_342":{"type":"method","name":"_reduce_342","children":[],"call":[" list_append "," clean_mlhs ","val [] "," s "]}," Ruby18Parser _reduce_341":{"type":"method","name":"_reduce_341","children":[],"call":[" s "," clean_mlhs ","val [] ","val [] delete_at ","val [] [] nil? ","val [] [] "]}," Ruby18Parser _reduce_340":{"type":"method","name":"_reduce_340","children":[],"call":["val [] delete_at ","val [] ","val [] [] nil? ","val [] [] "]}," Ruby18Parser _reduce_338":{"type":"method","name":"_reduce_338","children":[],"call":["val [] "]}," Ruby18Parser _reduce_336":{"type":"method","name":"_reduce_336","children":[],"call":[" s ","val [] "]}," Ruby18Parser _reduce_327":{"type":"method","name":"_reduce_327","children":[],"call":[" value_expr ","val [] "," s "]}," Ruby18Parser _reduce_326":{"type":"method","name":"_reduce_326","children":[],"call":[" s "]}," Ruby18Parser _reduce_325":{"type":"method","name":"_reduce_325","children":[],"call":[" s "]}," Ruby18Parser _reduce_324":{"type":"method","name":"_reduce_324","children":[],"call":[" s "]}," Ruby18Parser _reduce_323":{"type":"method","name":"_reduce_323","children":[],"call":[" s "," lexer comments "," lexer "," in_single "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg ","result [] line ","result [] "," new_defs ","val [] "," s  [] line "," new_defs  [] line "," s  [] "," new_defs  [] "]}," Ruby18Parser _reduce_322":{"type":"method","name":"_reduce_322","children":[],"call":[" in_single "," env unextend "," env "," new_defs "," lexer comments "," lexer "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer cmdarg stack dup "," lexer lineno "," lexer lex_state= "," env extend "]}," Ruby18Parser _reduce_321":{"type":"method","name":"_reduce_321","children":[],"call":[" lexer lex_state= "," lexer "," env extend "," env "," in_single "," comments push "," lexer comments "," comments "]}," Ruby18Parser _reduce_320":{"type":"method","name":"_reduce_320","children":[],"call":[" lexer lex_state= "," lexer "," comments push "," lexer comments "," comments "," in_def= "," env unextend "," env "," new_defn ","val [] "," val [] = "]}," Ruby18Parser _reduce_319":{"type":"method","name":"_reduce_319","children":[],"call":[" in_def= "," env unextend "," env "," new_defn "," lexer comments "," lexer "," env extend "," comments push "," comments "," in_def ","result [] line ","result [] ","val [] "," val [] = "," val []  "," new_defn  [] line "," in_def  [] line "," new_defn  [] "," in_def  [] "]}," Ruby18Parser _reduce_318":{"type":"method","name":"_reduce_318","children":[],"call":[" lexer src beginning_of_line? "," lexer src "," lexer "," lexer lineno "," env extend "," env "," in_def= "," comments push "," lexer comments "," comments "," env unextend "," new_module "," in_def "]}," Ruby18Parser _reduce_317":{"type":"method","name":"_reduce_317","children":[],"call":[" env unextend "," env "," new_module "," lexer comments "," lexer "," env extend "," yyerror "," in_single > "," in_single "," in_def "," comments push "," comments "]}," Ruby18Parser _reduce_316":{"type":"method","name":"_reduce_316","children":[],"call":[" env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," lexer "," comments "," lexer lineno "]}," Ruby18Parser _reduce_315":{"type":"method","name":"_reduce_315","children":[],"call":[" lexer lineno "," lexer "," lexer comments "," env unextend "," env "," new_sclass "]}," Ruby18Parser _reduce_314":{"type":"method","name":"_reduce_314","children":[],"call":[" env unextend "," env "," new_sclass "," lexer comments "," lexer "," env extend "," in_single= "," in_single "]}," Ruby18Parser _reduce_313":{"type":"method","name":"_reduce_313","children":[],"call":[" env extend "," env "," in_single= "," in_single "," in_def= "," in_def "]}," Ruby18Parser _reduce_312":{"type":"method","name":"_reduce_312","children":[],"call":[" in_def= "," in_def "," lexer lineno "," lexer "]}," Ruby18Parser _reduce_311":{"type":"method","name":"_reduce_311","children":[],"call":[" lexer lineno "," lexer "," lexer comments "," env unextend "," env "," new_class "]}," Ruby18Parser _reduce_310":{"type":"method","name":"_reduce_310","children":[],"call":[" env unextend "," env "," new_class "," lexer comments "," lexer "," env extend "," yyerror "," in_single > "," in_single "," in_def "," comments push "," comments "]}," Ruby18Parser _reduce_309":{"type":"method","name":"_reduce_309","children":[],"call":[" env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," lexer "," comments "," lexer lineno "]}," Ruby18Parser _reduce_308":{"type":"method","name":"_reduce_308","children":[],"call":[" lexer lineno "," lexer "," new_for ","val [] "]}," Ruby18Parser _reduce_307":{"type":"method","name":"_reduce_307","children":[],"call":[" new_for ","val [] "," lexer cond pop "," lexer cond "," lexer "]}," Ruby18Parser _reduce_306":{"type":"method","name":"_reduce_306","children":[],"call":[" lexer cond pop "," lexer cond "," lexer "," lexer cond push "]}," Ruby18Parser _reduce_305":{"type":"method","name":"_reduce_305","children":[],"call":[" lexer cond push "," lexer cond "," lexer "," new_case "]}," Ruby18Parser _reduce_304":{"type":"method","name":"_reduce_304","children":[],"call":[" new_case ","val [] "]}," Ruby18Parser _reduce_303":{"type":"method","name":"_reduce_303","children":[],"call":[" new_case ","val [] "]}," Ruby18Parser _reduce_302":{"type":"method","name":"_reduce_302","children":[],"call":[" new_case ","val [] "," new_until "]}," Ruby18Parser _reduce_301":{"type":"method","name":"_reduce_301","children":[],"call":[" new_until ","val [] "," lexer cond pop "," lexer cond "," lexer "]}," Ruby18Parser _reduce_300":{"type":"method","name":"_reduce_300","children":[],"call":[" lexer cond pop "," lexer cond "," lexer "," lexer cond push "]}," Ruby18Parser _reduce_299":{"type":"method","name":"_reduce_299","children":[],"call":[" lexer cond push "," lexer cond "," lexer "," new_while ","val [] "]}," Ruby18Parser _reduce_298":{"type":"method","name":"_reduce_298","children":[],"call":[" new_while ","val [] "," lexer cond pop "," lexer cond "," lexer "]}," Ruby18Parser _reduce_297":{"type":"method","name":"_reduce_297","children":[],"call":[" lexer cond pop "," lexer cond "," lexer "," lexer cond push "]}," Ruby18Parser _reduce_296":{"type":"method","name":"_reduce_296","children":[],"call":[" lexer cond push "," lexer cond "," lexer "," new_if ","val [] "]}," Ruby18Parser _reduce_295":{"type":"method","name":"_reduce_295","children":[],"call":[" new_if ","val [] "]}," Ruby18Parser _reduce_294":{"type":"method","name":"_reduce_294","children":[],"call":[" new_if ","val [] ","iter insert "," block_dup_check "]}," Ruby18Parser _reduce_293":{"type":"method","name":"_reduce_293","children":[],"call":["iter insert "," block_dup_check ","val [] "]}," Ruby18Parser _reduce_291":{"type":"method","name":"_reduce_291","children":[],"call":["call line= ","iter line ","iter insert "," new_call ","oper to_sym ","val [] "," s "," new_call  line= "," new_ new_call  "]}," Ruby18Parser _reduce_290":{"type":"method","name":"_reduce_290","children":[],"call":[" s ","val [] "," new_yield "]}," Ruby18Parser _reduce_289":{"type":"method","name":"_reduce_289","children":[],"call":[" new_yield "]}," Ruby18Parser _reduce_288":{"type":"method","name":"_reduce_288","children":[],"call":[" new_yield ","val [] "]}," Ruby18Parser _reduce_287":{"type":"method","name":"_reduce_287","children":[],"call":[" new_yield ","val [] "," s "]}," Ruby18Parser _reduce_286":{"type":"method","name":"_reduce_286","children":[],"call":[" s "," new_hash "]}," Ruby18Parser _reduce_285":{"type":"method","name":"_reduce_285","children":[],"call":[" s ","val [] values ","val [] "," lexer lineno "," lexer "]}," Ruby18Parser _reduce_284":{"type":"method","name":"_reduce_284","children":[],"call":[" s ","val [] "]}," Ruby18Parser _reduce_283":{"type":"method","name":"_reduce_283","children":[],"call":[" new_aref "]}," Ruby18Parser _reduce_282":{"type":"method","name":"_reduce_282","children":[],"call":[" s ","val [] to_sym ","val [] "]}," Ruby18Parser _reduce_281":{"type":"method","name":"_reduce_281","children":[],"call":[" s ","val [] to_sym ","val [] "]}," Ruby18Parser _reduce_280":{"type":"method","name":"_reduce_280","children":[],"call":["result paren= "," s ","val [] "]}," Ruby18Parser _reduce_279":{"type":"method","name":"_reduce_279","children":[],"call":["val [] "," warning "]}," Ruby18Parser _reduce_278":{"type":"method","name":"_reduce_278","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby18Parser _reduce_277":{"type":"method","name":"_reduce_277","children":[],"call":["result line= ","val [] "," s "," s  line= "]}," Ruby18Parser _reduce_276":{"type":"method","name":"_reduce_276","children":[],"call":[" lexer lineno "," lexer "]}," Ruby18Parser _reduce_275":{"type":"method","name":"_reduce_275","children":[],"call":[" new_call ","val [] to_sym ","val [] "]}," Ruby18Parser _reduce_266":{"type":"method","name":"_reduce_266","children":[],"call":[" s ","val [] "]}," Ruby18Parser _reduce_265":{"type":"method","name":"_reduce_265","children":[],"call":[" arg_concat ","val [] "]}," Ruby18Parser _reduce_264":{"type":"method","name":"_reduce_264","children":[],"call":["val [] << ","val [] "]}," Ruby18Parser _reduce_263":{"type":"method","name":"_reduce_263","children":[],"call":[" list_append ","val [] "]}," Ruby18Parser _reduce_262":{"type":"method","name":"_reduce_262","children":[],"call":[" s ","val [] "]}," Ruby18Parser _reduce_260":{"type":"method","name":"_reduce_260","children":[],"call":["val [] "]}," Ruby18Parser _reduce_259":{"type":"method","name":"_reduce_259","children":[],"call":[" s ","val [] "]}," Ruby18Parser _reduce_258":{"type":"method","name":"_reduce_258","children":[],"call":["val [] "," warning "]}," Ruby18Parser _reduce_257":{"type":"method","name":"_reduce_257","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby18Parser _reduce_256":{"type":"method","name":"_reduce_256","children":[],"call":[" warning "]}," Ruby18Parser _reduce_255":{"type":"method","name":"_reduce_255","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby18Parser _reduce_253":{"type":"method","name":"_reduce_253","children":[],"call":["val [] "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "]}," Ruby18Parser _reduce_252":{"type":"method","name":"_reduce_252","children":[],"call":[" lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg stack dup "," lexer cmdarg stack "]}," Ruby18Parser _reduce_250":{"type":"method","name":"_reduce_250","children":[],"call":[" arg_blk_pass ","val [] "," s "]}," Ruby18Parser _reduce_249":{"type":"method","name":"_reduce_249","children":[],"call":[" arg_blk_pass ","val [] "," arg_concat "," s add_all add "," s ","val [] values "," s add_all "]}," Ruby18Parser _reduce_248":{"type":"method","name":"_reduce_248","children":[],"call":[" arg_blk_pass ","val [] "," arg_concat "," s add "," s ","val [] values ","val [] sexp_body "]}," Ruby18Parser _reduce_247":{"type":"method","name":"_reduce_247","children":[],"call":[" arg_blk_pass ","val [] "," s add_all add "," s ","val [] values "," s add_all ","result add ","assocs sexp_body "," arg_blk_pass  add "," s add_all add  add "," s add_all  add "]}," Ruby18Parser _reduce_246":{"type":"method","name":"_reduce_246","children":[],"call":[" arg_blk_pass ","val [] "," s ","val [] values "]}," Ruby18Parser _reduce_245":{"type":"method","name":"_reduce_245","children":[],"call":[" arg_blk_pass ","val [] "," s ","val [] values "]}," Ruby18Parser _reduce_244":{"type":"method","name":"_reduce_244","children":[],"call":[" arg_blk_pass ","val [] "," s ","val [] values "]}," Ruby18Parser _reduce_243":{"type":"method","name":"_reduce_243","children":[],"call":[" arg_blk_pass ","val [] "," arg_concat "," s ","val [] values "]}," Ruby18Parser _reduce_242":{"type":"method","name":"_reduce_242","children":[],"call":[" arg_blk_pass ","val [] "," arg_concat "," s "]}," Ruby18Parser _reduce_241":{"type":"method","name":"_reduce_241","children":[],"call":[" arg_blk_pass ","val [] "]}," Ruby18Parser _reduce_240":{"type":"method","name":"_reduce_240","children":[],"call":[" arg_blk_pass ","val [] "," list_prepend "]}," Ruby18Parser _reduce_238":{"type":"method","name":"_reduce_238","children":[],"call":[" arg_blk_pass ","val [] "," s "]}," Ruby18Parser _reduce_237":{"type":"method","name":"_reduce_237","children":[],"call":[" arg_blk_pass ","val [] "," arg_concat ","val [] << "," s ","val [] values "]}," Ruby18Parser _reduce_236":{"type":"method","name":"_reduce_236","children":[],"call":[" arg_blk_pass ","val [] ","val [] << "," s ","val [] values "]}," Ruby18Parser _reduce_235":{"type":"method","name":"_reduce_235","children":[],"call":[" arg_blk_pass ","val [] "," arg_concat "," s ","val [] values "]}," Ruby18Parser _reduce_234":{"type":"method","name":"_reduce_234","children":[],"call":[" arg_blk_pass ","val [] "," s ","val [] values "]}," Ruby18Parser _reduce_233":{"type":"method","name":"_reduce_233","children":[],"call":[" arg_blk_pass ","val [] "," arg_concat "]}," Ruby18Parser _reduce_232":{"type":"method","name":"_reduce_232","children":[],"call":[" arg_blk_pass ","val [] "]}," Ruby18Parser _reduce_231":{"type":"method","name":"_reduce_231","children":[],"call":[" s ","val [] "," warning "]}," Ruby18Parser _reduce_228":{"type":"method","name":"_reduce_228","children":[],"call":["val [] add ","val [] "," warning "]}," Ruby18Parser _reduce_227":{"type":"method","name":"_reduce_227","children":[],"call":[" s ","val [] "," warning "]}," Ruby18Parser _reduce_226":{"type":"method","name":"_reduce_226","children":[],"call":["val [] "]}," Ruby18Parser _reduce_225":{"type":"method","name":"_reduce_225","children":[],"call":["val [] "]}," Ruby18Parser _reduce_224":{"type":"method","name":"_reduce_224","children":[],"call":[" s ","val [] "]}," Ruby18Parser _reduce_223":{"type":"method","name":"_reduce_223","children":[],"call":[" s ","val [] values ","val [] "]}," Ruby18Parser _reduce_222":{"type":"method","name":"_reduce_222","children":[],"call":[" arg_concat ","val [] "]}," Ruby18Parser _reduce_221":{"type":"method","name":"_reduce_221","children":[],"call":["val [] "]}," Ruby18Parser _reduce_220":{"type":"method","name":"_reduce_220","children":[],"call":[" s ","val [] "," warning "]}," Ruby18Parser _reduce_218":{"type":"method","name":"_reduce_218","children":[],"call":[" value_expr ","val [] "]}," Ruby18Parser _reduce_216":{"type":"method","name":"_reduce_216","children":[],"call":[" s ","val [] "," lexer tern pop "," lexer tern "," lexer "]}," Ruby18Parser _reduce_215":{"type":"method","name":"_reduce_215","children":[],"call":[" s ","val [] "]}," Ruby18Parser _reduce_214":{"type":"method","name":"_reduce_214","children":[],"call":[" logop ","val [] "," logical_op "]}," Ruby18Parser _reduce_213":{"type":"method","name":"_reduce_213","children":[],"call":[" logop ","val [] "," logical_op "]}," Ruby18Parser _reduce_212":{"type":"method","name":"_reduce_212","children":[],"call":[" new_call "," argl ","val [] ","val []= "," value_expr "]}," Ruby18Parser _reduce_211":{"type":"method","name":"_reduce_211","children":[],"call":[" new_call "," argl ","val [] ","val []= "," value_expr "]}," Ruby18Parser _reduce_210":{"type":"method","name":"_reduce_210","children":[],"call":[" new_call ","val [] ","val []= "," value_expr "]}," Ruby18Parser _reduce_209":{"type":"method","name":"_reduce_209","children":[],"call":[" s ","val [] "]}," Ruby18Parser _reduce_208":{"type":"method","name":"_reduce_208","children":[],"call":[" s "," get_match_node ","val [] "," new_match "]}," Ruby18Parser _reduce_207":{"type":"method","name":"_reduce_207","children":[],"call":[" get_match_node ","val [] "," new_match "]}," Ruby18Parser _reduce_206":{"type":"method","name":"_reduce_206","children":[],"call":[" s "," new_call "," argl ","val [] ","val []= "," value_expr "]}," Ruby18Parser _reduce_205":{"type":"method","name":"_reduce_205","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby18Parser _reduce_204":{"type":"method","name":"_reduce_204","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby18Parser _reduce_203":{"type":"method","name":"_reduce_203","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby18Parser _reduce_202":{"type":"method","name":"_reduce_202","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby18Parser _reduce_201":{"type":"method","name":"_reduce_201","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby18Parser _reduce_200":{"type":"method","name":"_reduce_200","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby18Parser _reduce_199":{"type":"method","name":"_reduce_199","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby18Parser _reduce_198":{"type":"method","name":"_reduce_198","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby18Parser _reduce_197":{"type":"method","name":"_reduce_197","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby18Parser _reduce_196":{"type":"method","name":"_reduce_196","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby18Parser _reduce_195":{"type":"method","name":"_reduce_195","children":[],"call":[" new_call ","val [] "]}," Ruby18Parser _reduce_194":{"type":"method","name":"_reduce_194","children":[],"call":[" new_call ","val [] ","val [] [] == ","val [] [] ","val [] sexp_type == ","val [] sexp_type "]}," Ruby18Parser _reduce_193":{"type":"method","name":"_reduce_193","children":[],"call":[" new_call "," argl ","val [] "," s "]}," Ruby18Parser _reduce_192":{"type":"method","name":"_reduce_192","children":[],"call":[" new_call "," argl ","val [] "," s "]}," Ruby18Parser _reduce_191":{"type":"method","name":"_reduce_191","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby18Parser _reduce_190":{"type":"method","name":"_reduce_190","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby18Parser _reduce_189":{"type":"method","name":"_reduce_189","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby18Parser _reduce_188":{"type":"method","name":"_reduce_188","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby18Parser _reduce_187":{"type":"method","name":"_reduce_187","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby18Parser _reduce_186":{"type":"method","name":"_reduce_186","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby18Parser _reduce_185":{"type":"method","name":"_reduce_185","children":[],"call":[" s ","v2 last ","v1 last ","Fixnum  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type ","val [] ","Integer  === "]}," Ruby18Parser _reduce_184":{"type":"method","name":"_reduce_184","children":[],"call":[" s ","v2 last ","v1 last ","Fixnum  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type ","val [] ","Integer  === "]}," Ruby18Parser _reduce_183":{"type":"method","name":"_reduce_183","children":[],"call":[" backref_assign_error ","val [] "]}," Ruby18Parser _reduce_182":{"type":"method","name":"_reduce_182","children":[],"call":[" yyerror "]}," Ruby18Parser _reduce_181":{"type":"method","name":"_reduce_181","children":[],"call":[" yyerror "]}," Ruby18Parser _reduce_180":{"type":"method","name":"_reduce_180","children":[],"call":[" s ","val [] ","val [] to_sym "]}," Ruby18Parser _reduce_179":{"type":"method","name":"_reduce_179","children":[],"call":[" s ","val [] ","val [] to_sym "]}," Ruby18Parser _reduce_178":{"type":"method","name":"_reduce_178","children":[],"call":[" s ","val [] ","val [] to_sym "]}," Ruby18Parser _reduce_177":{"type":"method","name":"_reduce_177","children":[],"call":["val [] []= ","val [] "," s ","val [] to_sym ","val [] sexp_type= "]}," Ruby18Parser _reduce_176":{"type":"method","name":"_reduce_176","children":[],"call":[" new_op_asgn "]}," Ruby18Parser _reduce_175":{"type":"method","name":"_reduce_175","children":[],"call":[" node_assign "," s "," new_resbody ","val [] "," new_assign "]}," Ruby18Parser _reduce_174":{"type":"method","name":"_reduce_174","children":[],"call":[" node_assign ","val [] "," new_assign "]}," Ruby18Parser _reduce_107":{"type":"method","name":"_reduce_107","children":[],"call":[" new_undef ","val [] "]}," Ruby18Parser _reduce_106":{"type":"method","name":"_reduce_106","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby18Parser _reduce_105":{"type":"method","name":"_reduce_105","children":[],"call":[" new_undef ","val [] "]}," Ruby18Parser _reduce_103":{"type":"method","name":"_reduce_103","children":[],"call":[" s ","val [] to_sym ","val [] "]}," Ruby18Parser _reduce_100":{"type":"method","name":"_reduce_100","children":[],"call":["val [] "," lexer lex_state= "," lexer "]}," Ruby18Parser _reduce_99":{"type":"method","name":"_reduce_99","children":[],"call":["val [] "," lexer lex_state= "," lexer "]}," Ruby18Parser _reduce_95":{"type":"method","name":"_reduce_95","children":[],"call":[" s ","val [] to_sym ","val [] "]}," Ruby18Parser _reduce_94":{"type":"method","name":"_reduce_94","children":[],"call":["val [] to_sym ","val [] "]}," Ruby18Parser _reduce_93":{"type":"method","name":"_reduce_93","children":[],"call":[" s ","val [] to_sym ","val [] "]}," Ruby18Parser _reduce_91":{"type":"method","name":"_reduce_91","children":[],"call":[" yyerror "]}," Ruby18Parser _reduce_90":{"type":"method","name":"_reduce_90","children":[],"call":[" backref_assign_error ","val [] "]}," Ruby18Parser _reduce_89":{"type":"method","name":"_reduce_89","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," in_single > "," in_single "," in_def "]}," Ruby18Parser _reduce_88":{"type":"method","name":"_reduce_88","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," in_single > "," in_single "," in_def "]}," Ruby18Parser _reduce_87":{"type":"method","name":"_reduce_87","children":[],"call":[" s ","val [] "]}," Ruby18Parser _reduce_86":{"type":"method","name":"_reduce_86","children":[],"call":[" s ","val [] "]}," Ruby18Parser _reduce_85":{"type":"method","name":"_reduce_85","children":[],"call":[" s ","val [] "]}," Ruby18Parser _reduce_84":{"type":"method","name":"_reduce_84","children":[],"call":[" aryset ","val [] "]}," Ruby18Parser _reduce_83":{"type":"method","name":"_reduce_83","children":[],"call":[" assignable ","val [] "]}," Ruby18Parser _reduce_82":{"type":"method","name":"_reduce_82","children":[],"call":[" backref_assign_error ","val [] "]}," Ruby18Parser _reduce_81":{"type":"method","name":"_reduce_81","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," in_single > "," in_single "," in_def "]}," Ruby18Parser _reduce_80":{"type":"method","name":"_reduce_80","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," in_single > "," in_single "," in_def "]}," Ruby18Parser _reduce_79":{"type":"method","name":"_reduce_79","children":[],"call":[" s ","val [] "]}," Ruby18Parser _reduce_78":{"type":"method","name":"_reduce_78","children":[],"call":[" s ","val [] "]}," Ruby18Parser _reduce_77":{"type":"method","name":"_reduce_77","children":[],"call":[" s ","val [] "]}," Ruby18Parser _reduce_76":{"type":"method","name":"_reduce_76","children":[],"call":[" aryset ","val [] "]}," Ruby18Parser _reduce_75":{"type":"method","name":"_reduce_75","children":[],"call":[" assignable ","val [] "]}," Ruby18Parser _reduce_74":{"type":"method","name":"_reduce_74","children":[],"call":["val [] << ","val [] compact ","val [] "]}," Ruby18Parser _reduce_73":{"type":"method","name":"_reduce_73","children":[],"call":[" s ","val [] "]}," Ruby18Parser _reduce_72":{"type":"method","name":"_reduce_72","children":[],"call":["val [] "]}," Ruby18Parser _reduce_70":{"type":"method","name":"_reduce_70","children":[],"call":[" s "]}," Ruby18Parser _reduce_69":{"type":"method","name":"_reduce_69","children":[],"call":[" s ","val [] "]}," Ruby18Parser _reduce_68":{"type":"method","name":"_reduce_68","children":[],"call":[" s ","val [] << ","val [] "]}," Ruby18Parser _reduce_67":{"type":"method","name":"_reduce_67","children":[],"call":[" s ","val [] << ","val [] "]}," Ruby18Parser _reduce_66":{"type":"method","name":"_reduce_66","children":[],"call":[" s ","val [] << ","val [] compact ","val [] "]}," Ruby18Parser _reduce_65":{"type":"method","name":"_reduce_65","children":[],"call":[" s ","val [] "]}," Ruby18Parser _reduce_64":{"type":"method","name":"_reduce_64","children":[],"call":[" s ","val [] "]}," Ruby18Parser _reduce_62":{"type":"method","name":"_reduce_62","children":[],"call":["val [] "]}," Ruby18Parser _reduce_60":{"type":"method","name":"_reduce_60","children":[],"call":[" new_yield ","val [] "]}," Ruby18Parser _reduce_59":{"type":"method","name":"_reduce_59","children":[],"call":[" new_super ","val [] "]}," Ruby18Parser _reduce_58":{"type":"method","name":"_reduce_58","children":[],"call":["val [] ","val [] << "," block_dup_check "," raise "," new_call ","val [] to_sym ","result [] == ","result [] ","val []  [] == "," new_call  [] == ","val []  [] "," new_call  [] "]}," Ruby18Parser _reduce_57":{"type":"method","name":"_reduce_57","children":[],"call":[" new_call ","val [] ","val [] to_sym "]}," Ruby18Parser _reduce_56":{"type":"method","name":"_reduce_56","children":[],"call":["val [] ","val [] << "," block_dup_check "," raise "," new_call ","val [] to_sym "]}," Ruby18Parser _reduce_55":{"type":"method","name":"_reduce_55","children":[],"call":[" new_call ","val [] ","val [] to_sym "]}," Ruby18Parser _reduce_54":{"type":"method","name":"_reduce_54","children":[],"call":["result insert ","val [] "," block_dup_check "," new_call ","val [] to_sym "," raise ","result [] == ","result [] "," new_call  insert "," new_call  [] == "," new_call  [] "]}," Ruby18Parser _reduce_53":{"type":"method","name":"_reduce_53","children":[],"call":[" new_call ","val [] ","val [] to_sym "]}," Ruby18Parser _reduce_52":{"type":"method","name":"_reduce_52","children":[],"call":[" env unextend "," env "," new_iter ","val [] "]}," Ruby18Parser _reduce_51":{"type":"method","name":"_reduce_51","children":[],"call":[" env dynamic keys "," env dynamic "," env "]}," Ruby18Parser _reduce_50":{"type":"method","name":"_reduce_50","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "]}," Ruby18Parser _reduce_49":{"type":"method","name":"_reduce_49","children":[],"call":[" new_call ","val [] "]}," Ruby18Parser _reduce_48":{"type":"method","name":"_reduce_48","children":[],"call":[" new_call ","val [] "]}," Ruby18Parser _reduce_46":{"type":"method","name":"_reduce_46","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last "," s val [] last  "]}," Ruby18Parser _reduce_45":{"type":"method","name":"_reduce_45","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last "," s val [] last  "]}," Ruby18Parser _reduce_44":{"type":"method","name":"_reduce_44","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last "," s val [] last  "]}," Ruby18Parser _reduce_41":{"type":"method","name":"_reduce_41","children":[],"call":[" value_expr ","val [] "]}," Ruby18Parser _reduce_39":{"type":"method","name":"_reduce_39","children":[],"call":[" s ","val [] "]}," Ruby18Parser _reduce_38":{"type":"method","name":"_reduce_38","children":[],"call":[" s ","val [] "]}," Ruby18Parser _reduce_37":{"type":"method","name":"_reduce_37","children":[],"call":[" logop ","val [] "," logical_op "]}," Ruby18Parser _reduce_36":{"type":"method","name":"_reduce_36","children":[],"call":[" logop ","val [] "," logical_op "]}," Ruby18Parser _reduce_33":{"type":"method","name":"_reduce_33","children":[],"call":[" new_masgn ","val [] "]}," Ruby18Parser _reduce_32":{"type":"method","name":"_reduce_32","children":[],"call":[" new_masgn ","val [] "]}," Ruby18Parser _reduce_31":{"type":"method","name":"_reduce_31","children":[],"call":[" node_assign "," s ","val [] "," new_assign "]}," Ruby18Parser _reduce_30":{"type":"method","name":"_reduce_30","children":[],"call":[" backref_assign_error ","val [] "]}," Ruby18Parser _reduce_29":{"type":"method","name":"_reduce_29","children":[],"call":[" s ","val [] "]}," Ruby18Parser _reduce_28":{"type":"method","name":"_reduce_28","children":[],"call":[" s ","val [] ","val [] to_sym "]}," Ruby18Parser _reduce_27":{"type":"method","name":"_reduce_27","children":[],"call":[" s ","val [] ","val [] to_sym "]}," Ruby18Parser _reduce_26":{"type":"method","name":"_reduce_26","children":[],"call":[" s ","val [] ","val [] to_sym "]}," Ruby18Parser _reduce_25":{"type":"method","name":"_reduce_25","children":[],"call":[" new_op_asgn "]}," Ruby18Parser _reduce_24":{"type":"method","name":"_reduce_24","children":[],"call":[" new_masgn ","val [] "]}," Ruby18Parser _reduce_23":{"type":"method","name":"_reduce_23","children":[],"call":[" node_assign ","val [] "," new_assign "]}," Ruby18Parser _reduce_22":{"type":"method","name":"_reduce_22","children":[],"call":[" new_iter ","val [] "," s "," yyerror "," in_single > "," in_single "," in_def "]}," Ruby18Parser _reduce_21":{"type":"method","name":"_reduce_21","children":[],"call":[" new_iter ","val [] "," s "]}," Ruby18Parser _reduce_20":{"type":"method","name":"_reduce_20","children":[],"call":[" env extend "," env "," yyerror "," in_single > "," in_single "," in_def "]}," Ruby18Parser _reduce_19":{"type":"method","name":"_reduce_19","children":[],"call":[" s "," new_resbody ","val [] "]}," Ruby18Parser _reduce_18":{"type":"method","name":"_reduce_18","children":[],"call":[" new_until ","val [] "]}," Ruby18Parser _reduce_17":{"type":"method","name":"_reduce_17","children":[],"call":[" new_while ","val [] "]}," Ruby18Parser _reduce_16":{"type":"method","name":"_reduce_16","children":[],"call":[" new_if ","val [] "]}," Ruby18Parser _reduce_15":{"type":"method","name":"_reduce_15","children":[],"call":[" new_if ","val [] "]}," Ruby18Parser _reduce_14":{"type":"method","name":"_reduce_14","children":[],"call":["val [] "]}," Ruby18Parser _reduce_13":{"type":"method","name":"_reduce_13","children":[],"call":[" yyerror "]}," Ruby18Parser _reduce_12":{"type":"method","name":"_reduce_12","children":[],"call":[" s ","val [] ","val [] to_sym "]}," Ruby18Parser _reduce_11":{"type":"method","name":"_reduce_11","children":[],"call":[" s ","val [] to_sym ","val [] "]}," Ruby18Parser _reduce_10":{"type":"method","name":"_reduce_10","children":[],"call":[" s line ","val [] "," s "]}," Ruby18Parser _reduce_9":{"type":"method","name":"_reduce_9","children":[],"call":[" lexer lineno "," lexer "," lexer lex_state= "]}," Ruby18Parser _reduce_8":{"type":"method","name":"_reduce_8","children":[],"call":["val [] "]}," Ruby18Parser _reduce_7":{"type":"method","name":"_reduce_7","children":[],"call":[" block_append ","val [] "]}," Ruby18Parser _reduce_4":{"type":"method","name":"_reduce_4","children":[],"call":[" new_compstmt "]}," Ruby18Parser _reduce_3":{"type":"method","name":"_reduce_3","children":[],"call":[" new_body "]}," Ruby18Parser _reduce_2":{"type":"method","name":"_reduce_2","children":[],"call":["val [] "]}," Ruby18Parser _reduce_1":{"type":"method","name":"_reduce_1","children":[],"call":[" lexer lex_state= "," lexer "]}," RubyParserStuff Keyword keyword":{"type":"method","name":"keyword","children":[],"call":[]}," RubyParserStuff args19":{"type":"method","name":"args19","children":[],"call":["result << "," raise ","vals inspect ","val inspect ","lasgn [] ","lasgn [] == ","val [] each ","val [] ","val last ","val first ","vals each "," s "," s  << "]}," d":{"type":"method","name":"d","children":[],"call":["$stderr puts ","o inspect "]}," RubyLexer yylex_paren19":{"type":"method","name":"yylex_paren19","children":[],"call":[" tern push "," tern "," lex_state == "," lex_state "," space_seen "," is_space_arg? "," is_beg? "]}," RubyLexer yylex_paren18":{"type":"method","name":"yylex_paren18","children":[],"call":[" tern push "," tern "," warning "," lex_state == "," lex_state "," command_start= "," space_seen "," in_lex_state? "]}," RubyLexer ruby18":{"type":"method","name":"ruby18","children":[],"call":["Ruby18Parser  === "," parser ","RubyParser V18  === "]}," Ruby19Parser _reduce_564":{"type":"method","name":"_reduce_564","children":[],"call":[]}," Ruby19Parser _reduce_563":{"type":"method","name":"_reduce_563","children":[],"call":[" yyerrok "]}," Ruby19Parser _reduce_560":{"type":"method","name":"_reduce_560","children":[],"call":[" yyerrok "]}," Ruby19Parser _reduce_538":{"type":"method","name":"_reduce_538","children":[],"call":[" s ","val [] ","val [] [] to_sym ","val [] [] "," assignable ","val [] to_sym "," env []= "," env "]}," Ruby19Parser _reduce_534":{"type":"method","name":"_reduce_534","children":[],"call":["val [] "," yyerror ","val [] inspect ","size % != ","size % ","val [] size "," s "," block_append ","val [] size  % != ","val [] size  % ","val [] val [] size  "]}," Ruby19Parser _reduce_522":{"type":"method","name":"_reduce_522","children":[],"call":[" assignable ","val [] to_sym ","val [] "," yyerror "]}," Ruby19Parser _reduce_483":{"type":"method","name":"_reduce_483","children":[],"call":[" gettable ","Sexp  === ","val [] "]}," Ruby19Parser _reduce_482":{"type":"method","name":"_reduce_482","children":[],"call":[" gettable ","Sexp  === ","val [] "]}," Ruby19Parser _reduce_481":{"type":"method","name":"_reduce_481","children":[],"call":[" s "," lexer src current_line "," lexer src "," lexer "]}," Ruby19Parser _reduce_480":{"type":"method","name":"_reduce_480","children":[],"call":[" s "," file ","val [] -@ ","val [] "]}," Ruby19Parser _reduce_479":{"type":"method","name":"_reduce_479","children":[],"call":[" s ","val [] -@ ","val [] "]}," Ruby19Parser _reduce_476":{"type":"method","name":"_reduce_476","children":[],"call":[" s ","result last intern ","result last ","result sexp_type= ","result sexp_type ","val [] "," lexer lex_state= "," lexer ","result []= ","result [] "," s  last intern ","val []  last intern "," s  last ","val []  last "," s  sexp_type= ","val []  sexp_type= "," s  sexp_type ","val []  sexp_type "," s  []= ","val []  []= "," s  [] ","val []  [] "]}," Ruby19Parser _reduce_470":{"type":"method","name":"_reduce_470","children":[],"call":["val [] -@ ","val [] ","val [] to_sym "," lexer lex_state= "," lexer "]}," Ruby19Parser _reduce_447":{"type":"method","name":"_reduce_447","children":[],"call":[" new_word_list ","val [] << ","val [] "," s ","val [] [] == ","val [] [] "," new_word_list_entry "," new_val [] _list "," new_ s _list "," new_val [] _list_entry "," new_ s _list_entry "]}," Ruby19Parser _reduce_437":{"type":"method","name":"_reduce_437","children":[],"call":[" s ","val [] ","val []= ","val [] value ","val [] [] == ","val [] [] "]}," Ruby19Parser _reduce_435":{"type":"method","name":"_reduce_435","children":[],"call":[" s ","val [] "]}," Ruby19Parser _reduce_432":{"type":"method","name":"_reduce_432","children":[],"call":[" s ","val [] "]}," Ruby19Parser _reduce_430":{"type":"method","name":"_reduce_430","children":[],"call":[" literal_concat ","val [] "]}," Ruby19Parser _reduce_428":{"type":"method","name":"_reduce_428","children":[],"call":["val [] ","val []= "," s ","val [] value ","val [] [] == ","val [] [] "]}," Ruby19Parser _reduce_423":{"type":"method","name":"_reduce_423","children":[],"call":[" s ","val [] ","val [] != ","result << ","result line= "," new_when "," s  << ","val []  << "," new_when  << "," s  line= ","val []  line= "," new_when  line= "]}," Ruby19Parser _reduce_392":{"type":"method","name":"_reduce_392","children":[],"call":[" env unextend "," env ","result line= ","val [] "," new_iter "," s ","val [] to_sym "," new_iter  line= "," s  line= "]}," Ruby19Parser _reduce_391":{"type":"method","name":"_reduce_391","children":[],"call":[" env dynamic keys "," env dynamic "," env "," args "," s ","val [] to_sym ","val [] "]}," Ruby19Parser _reduce_387":{"type":"method","name":"_reduce_387","children":[],"call":["val [] "," args "]}," Ruby19Parser _reduce_354":{"type":"method","name":"_reduce_354","children":[],"call":[" s ","val [] "," raise ","val inspect "," assignable ","val [] delete_at ","val [] [] nil? ","val [] [] "]}," Ruby19Parser _reduce_334":{"type":"method","name":"_reduce_334","children":[],"call":[" value_expr ","val [] "]}," Ruby19Parser _reduce_333":{"type":"method","name":"_reduce_333","children":[],"call":[" s "]}," Ruby19Parser _reduce_332":{"type":"method","name":"_reduce_332","children":[],"call":[" s "," value_expr ","val [] "]}," Ruby19Parser _reduce_296":{"type":"method","name":"_reduce_296","children":[],"call":[" s ","val [] ","call line= ","iter line ","iter insert "," new_call ","oper to_sym "," new_call  line= "," new_ new_call  "]}," Ruby19Parser _reduce_272":{"type":"method","name":"_reduce_272","children":[],"call":[" s ","val [] "]}," Ruby19Parser _reduce_271":{"type":"method","name":"_reduce_271","children":[],"call":[" arg_concat ","val [] "]}," Ruby19Parser _reduce_270":{"type":"method","name":"_reduce_270","children":[],"call":["val [] << ","val [] "]}," Ruby19Parser _reduce_262":{"type":"method","name":"_reduce_262","children":[],"call":[" warning "]}," Ruby19Parser _reduce_247":{"type":"method","name":"_reduce_247","children":[],"call":[" arg_blk_pass ","val [] "]}," Ruby19Parser _reduce_246":{"type":"method","name":"_reduce_246","children":[],"call":[" arg_blk_pass ","val [] "," list_prepend "]}," Ruby19Parser _reduce_241":{"type":"method","name":"_reduce_241","children":[],"call":[" arg_blk_pass ","val [] "," arg_concat "," s ","val [] values "]}," Ruby19Parser _reduce_239":{"type":"method","name":"_reduce_239","children":[],"call":[" arg_blk_pass ","val [] ","result << ","val [] [] each ","val [] [] "," arg_concat "," arg_blk_pass  << "," arg_concat  << "]}," Ruby19Parser _reduce_194":{"type":"method","name":"_reduce_194","children":[],"call":[" new_call "," argl ","val [] "," s "]}," Ruby19Parser _reduce_193":{"type":"method","name":"_reduce_193","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby19Parser _reduce_192":{"type":"method","name":"_reduce_192","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby19Parser _reduce_191":{"type":"method","name":"_reduce_191","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby19Parser _reduce_190":{"type":"method","name":"_reduce_190","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby19Parser _reduce_189":{"type":"method","name":"_reduce_189","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby19Parser _reduce_188":{"type":"method","name":"_reduce_188","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby19Parser _reduce_187":{"type":"method","name":"_reduce_187","children":[],"call":[" s ","v2 last ","v1 last ","Fixnum  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type ","val [] "]}," Ruby19Parser _reduce_186":{"type":"method","name":"_reduce_186","children":[],"call":[" s ","v2 last ","v1 last ","Fixnum  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type ","val [] "]}," Ruby19Parser _reduce_185":{"type":"method","name":"_reduce_185","children":[],"call":[" backref_assign_error ","val [] "]}," Ruby19Parser _reduce_184":{"type":"method","name":"_reduce_184","children":[],"call":[" yyerror "]}," Ruby19Parser _reduce_183":{"type":"method","name":"_reduce_183","children":[],"call":[" yyerror "]}," Ruby19Parser _reduce_182":{"type":"method","name":"_reduce_182","children":[],"call":[" s ","val [] "]}," Ruby19Parser _reduce_181":{"type":"method","name":"_reduce_181","children":[],"call":[" s ","val [] ","val [] to_sym "]}," Ruby19Parser _reduce_180":{"type":"method","name":"_reduce_180","children":[],"call":[" s ","val [] ","val [] to_sym "]}," Ruby19Parser _reduce_179":{"type":"method","name":"_reduce_179","children":[],"call":[" s ","val [] ","val [] to_sym ","val [] []= "]}," Ruby19Parser _reduce_178":{"type":"method","name":"_reduce_178","children":[],"call":[" new_op_asgn "]}," Ruby19Parser _reduce_177":{"type":"method","name":"_reduce_177","children":[],"call":[" node_assign "," s "," new_resbody ","val [] "]}," Ruby19Parser _reduce_176":{"type":"method","name":"_reduce_176","children":[],"call":[" node_assign ","val [] "]}," Ruby19Parser _reduce_109":{"type":"method","name":"_reduce_109","children":[],"call":[" new_undef ","val [] "]}," Ruby19Parser _reduce_84":{"type":"method","name":"_reduce_84","children":[],"call":[" assignable ","val [] "]}," Ruby19Parser _reduce_72":{"type":"method","name":"_reduce_72","children":[],"call":["val [] "]}," Ruby19Parser _reduce_70":{"type":"method","name":"_reduce_70","children":[],"call":[" s "]}," Ruby19Parser _reduce_53":{"type":"method","name":"_reduce_53","children":[],"call":[" new_call ","val [] ","val [] to_sym "]}," Ruby19Parser _reduce_52":{"type":"method","name":"_reduce_52","children":[],"call":[" env unextend "," env "," new_iter ","val [] "]}," Ruby19Parser _reduce_51":{"type":"method","name":"_reduce_51","children":[],"call":[" env dynamic keys "," env dynamic "," env "]}," Ruby19Parser _reduce_49":{"type":"method","name":"_reduce_49","children":[],"call":[" new_call ","val [] "]}," Ruby19Parser _reduce_44":{"type":"method","name":"_reduce_44","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last "," s val [] last  "]}," Ruby19Parser _reduce_41":{"type":"method","name":"_reduce_41","children":[],"call":[" value_expr ","val [] "]}," Ruby19Parser _reduce_29":{"type":"method","name":"_reduce_29","children":[],"call":[" s ","val [] "]}," Ruby19Parser _reduce_14":{"type":"method","name":"_reduce_14","children":[],"call":["val [] "]}," Ruby19Parser _reduce_13":{"type":"method","name":"_reduce_13","children":[],"call":[" yyerror "]}," Ruby19Parser _reduce_8":{"type":"method","name":"_reduce_8","children":[],"call":["val [] "]}," Ruby19Parser _reduce_7":{"type":"method","name":"_reduce_7","children":[],"call":[" block_append ","val [] "]}," Ruby19Parser _reduce_4":{"type":"method","name":"_reduce_4","children":[],"call":[" new_compstmt "]}," RubyParserStuff block_args19":{"type":"method","name":"block_args19","children":[],"call":[" raise ","r inspect ","r last "," s ","r last first ","r size == ","r size ","r size > ","v inspect ","r << ","1 to_sym ","v to_s ","v last ","r concat ","v [] map ","v [] ","v first ","(str \",\") include? ","val compact each ","val compact ","untested include? ","s inspect ","val inspect "," r last aise ","  s aise ","r last  inspect "," s  inspect ","r last  last "," s  last ","r last  last fir last st "," s  last fi s st ","r last  size == "," s  size == ","r last  size "," s  size ","r last  size > "," s  size > ","r last  << "," s  << ","r last  concat "," s  concat ","v fir last st ","v fi s st ","(str last  \",\") include? ","(st s  \",\") include? "]}," RubyLexer is_space_arg?":{"type":"method","name":"is_space_arg?","children":[],"call":["c !~ "," space_seen "," is_arg? "]}," RubyLexer is_beg?":{"type":"method","name":"is_beg?","children":[],"call":[" lex_state == "," lex_state "," in_lex_state? "," lex_state =~ "]}," RubyLexer is_arg?":{"type":"method","name":"is_arg?","children":[],"call":[" lex_state == "," lex_state "," in_lex_state? "," lex_state =~ "]}," RubyLexer is_end?":{"type":"method","name":"is_end?","children":[],"call":[" lex_state == "," lex_state "," in_lex_state? "," lex_state =~ "]}," RubyLexer ruby19":{"type":"method","name":"ruby19","children":[],"call":["Ruby19Parser  === "," parser "]}," RubyParser for_current_ruby":{"type":"method","name":"for_current_ruby","children":[],"call":[]}," RubyParserStuff StackState restore":{"type":"method","name":"restore","children":[],"call":["@stack replace "," log "," debug "]}," RubyParserStuff StackState store":{"type":"method","name":"store","children":[],"call":["@stack replace ","@stack dup "," log "," debug "]}," RubyParserStuff StackState reset":{"type":"method","name":"reset","children":[],"call":[" warn "," name "," debug "," log "]}," RubyParserStuff invert_block_call":{"type":"method","name":"invert_block_call","children":[],"call":[" s ","iter insert "," s line ","ret line "," s line  line "]}," RubyParserStuff inverted?":{"type":"method","name":"inverted?","children":[],"call":["(sym :return) include? ","val [] sexp_type ","val [] ","JUMP_TYPE  [] "]}," RubyParserStuff new_assign":{"type":"method","name":"new_assign","children":[],"call":[" raise ","rhs inspect ","lhs inspect ","lhs << ","lhs sexp_type= ","lhs sexp_type "," value_expr ","lhs line_max= ","rhs line_max ","lhs []= ","lhs [] "," value_expr  inspect "," value_expr  line_max "]}," RubyParserStuff new_symbol_list_entry":{"type":"method","name":"new_symbol_list_entry","children":[],"call":[" lexer fixup_lineno "," lexer "," s "," debug20 ","sym last to_sym ","sym last ","sym sexp_type= ","sym sexp_type ","val [] ","sym line "," s line "," lexer lineno ","sym []= ","sym [] "," lexer fixup_ lexer lineno no "," s  last to_ s  "," s line  last to_ s line  "," s  last "," s line  last "," s  sexp_type= "," s line  sexp_type= "," s  sexp_type "," s line  sexp_type "," s  line "," s line  line ","sym  lexer lineno  "," s  lexer lineno  "," lexer  lexer lineno no "," s  []= "," s line  []= "," s  [] "," s line  [] "]}," RubyParserStuff new_symbol_list":{"type":"method","name":"new_symbol_list","children":[],"call":[" lexer fixup_lineno "," lexer "," s "," s line "," lexer lineno "]}," RubyParserStuff new_qsym_list_entry":{"type":"method","name":"new_qsym_list_entry","children":[],"call":[" lexer fixup_lineno "," lexer "," s ","val [] to_sym ","val [] "," s line "," lexer lineno ","str to_sym "]}," RubyParserStuff new_qsym_list":{"type":"method","name":"new_qsym_list","children":[],"call":[" lexer fixup_lineno "," lexer "," s "," s line "," lexer lineno "]}," RubyParserStuff new_word_list_entry":{"type":"method","name":"new_word_list_entry","children":[],"call":[" lexer fixup_lineno "," lexer ","val [] "," s ","val [] sexp_type == ","val [] sexp_type "," s line ","word line ","word sexp_type == ","word sexp_type ","val [] [] == ","val [] [] "]}," RubyParserStuff new_word_list":{"type":"method","name":"new_word_list","children":[],"call":[" lexer fixup_lineno "," lexer "," s "," s line "," lexer lineno "]}," RubyParserStuff new_qword_list":{"type":"method","name":"new_qword_list","children":[],"call":[" lexer fixup_lineno "," lexer "," s "," s line "," lexer lineno "]}," RubyParserStuff new_qword_list_entry":{"type":"method","name":"new_qword_list_entry","children":[],"call":[" lexer fixup_lineno "," lexer "," s ","str force_encoding ","str valid_encoding? ","RUBY_VERSION  < ","val [] "," s line "," lexer lineno ","val []  force_encoding ","val []  valid_encoding? "]}," RubyParserStuff new_string":{"type":"method","name":"new_string","children":[],"call":[" lexer fixup_lineno ","str count "," lexer "," s ","str force_encoding ","str valid_encoding? ","RUBY_VERSION  < ","val [] "," s line "," lexer lineno "," lexer extra_lineno= ","str count + "," lexer extra_lineno ","val []  count ","val []  force_encoding ","val []  valid_encoding? ","val []  count + "]}," RubyParserStuff new_op_asgn2":{"type":"method","name":"new_op_asgn2","children":[],"call":["result line= ","recv line "," raise "," type inspect "," type "," s ","op to_sym ","call_op to_sym "]}," RubyParserStuff new_masgn_arg":{"type":"method","name":"new_masgn_arg","children":[],"call":[" s "," value_expr "," s line ","rhs line "," s  line "," value_expr  line "," s line  line "]}," RubyParserStuff new_hash":{"type":"method","name":"new_hash","children":[],"call":[" s line ","val [] "," s ","val [] values "," s line concat ","assocs values ","assocs sexp_body "]}," RubyParserStuff new_attrasgn":{"type":"method","name":"new_attrasgn","children":[],"call":["result line= ","recv line "," raise "," type inspect "," type "," s ","call_op to_sym ","call_op first ","Array  === ","call_op first  to_sym ","call_op first  first "]}," RubyParserStuff logical_op":{"type":"method","name":"logical_op","children":[],"call":[" s ","node []= ","rhs paren ! ","rhs paren ","rhs sexp_type == ","rhs sexp_type "," loop ","left paren ! ","left paren ","left sexp_type == ","left sexp_type "," value_expr ","result line ","left line ","node << "," s line ","rhs line ","node pop ","second paren ! ","second paren ","second [] == ","second [] ","node [] ","left [] == ","left [] "," value_expr  paren ! "," value_expr  paren "," value_expr  sexp_type == "," value_expr  sexp_type "," s  line "," value_expr  line ","node []  paren ! ","node []  paren ","node []  [] == ","node []  [] "," value_expr  [] == "," value_expr  [] "]}," RubyParserStuff new_match":{"type":"method","name":"new_match","children":[],"call":[" new_call line ","lhs line "," new_call "," argl "," s line "," s ","Regexp  === ","rhs last ","rhs sexp_type ","lhs last ","lhs sexp_type ","rhs [] ","lhs [] "]}," RubyParserStuff call_args":{"type":"method","name":"call_args","children":[],"call":[" raise ","args inspect ","arg inspect ","result << ","result concat ","arg sexp_body ","arg sexp_type ","args each "," s ","result line "," lexer lineno "," lexer ","a line ","args grep first ","args grep ","arg first ","arg last is_a? ","arg last ","arg size == ","arg size ","arg instance_of? ","arg [] ","arg map == ","arg map ","arg class == ","arg class "," rargs grep first ise ","args grep first rgs inspect ","arg first s inspect ","args grep first rg inspect ","arg first  inspect "," s  << "," s  concat ","result concargs grep first t ","args grep first rg sexp_body ","arg first  sexp_body ","args grep first rg sexp_type ","arg first  sexp_type ","args grep first rgs eargs grep first ch ","arg first s each "," s  line ","args grep first  line ","args grep first rgs grep first ","arg first s grep first ","args grep first rgs grep ","arg first s grep ","args grep first rg first ","arg first  first ","args grep first rg largs grep first st is_args grep first ? ","arg first  last is_a? ","args grep first rg largs grep first st ","arg first  last ","args grep first rg size == ","arg first  size == ","args grep first rg size ","arg first  size ","args grep first rg instargs grep first nce_of? ","arg first  instance_of? ","args grep first rg [] ","arg first  [] ","args grep first rg margs grep first p == ","arg first  map == ","args grep first rg margs grep first p ","arg first  map ","args grep first rg clargs grep first ss == ","arg first  class == ","args grep first rg clargs grep first ss ","arg first  class "]}," RubyParserStuff array_to_hash":{"type":"method","name":"array_to_hash","children":[],"call":[" s ","array sexp_body ","array sexp_type "," s line ","array line ","array [] "]}," RubyParserStuff deprecate":{"type":"method","name":"deprecate","children":[],"call":[]}," RubyParserStuff debug20":{"type":"method","name":"debug20","children":[],"call":[" raise ","r inspect ","v inspect ","$good20 [] "]}," RubyParser latest":{"type":"method","name":"latest","children":[],"call":[]}," RubyParser Parser version":{"type":"method","name":"version","children":[],"call":[]}," RubyParser Parser inherited":{"type":"method","name":"inherited","children":[],"call":[]}," RubyLexer next_token":{"type":"method","name":"next_token","children":[],"call":[" state= ","token last ","token first == ","token first "," raise ","token inspect "," location ","token size >= ","token size ","Array  === ","token nil? "," state "," state inspect "," ss string [] "," ss pos "," ss "," ss string "," rb_compile_error ","text inspect "," action "," ss scan "," ss skip "," process_token "," process_underscore "," process_gvar "," process_gvar_oddity "," process_nthref "," in_fname? "," process_backref "," ss match? "," process_percent "," space_seen= "," lineno "," result "," in_arg_state? "," command_start= "," process_slash "," process_amper "," process_questionmark "," string "," command_state "," expr_dot? "," expr_fname? "," process_lchevron "," space_vs_beginning "," process_curly_brace "," process_label_or_string "," was_label? "," process_square_bracket "," int_with_base "," process_float "," process_plus_minus "," process_colon1 "," process_colon2 "," process_symbol "," not_end? "," process_ivar "," unescape ","text [] gsub ","text [] "," process_label "," ruby22_label? ","TOKENS  [] "," arg_state "," process_begin "," bol? "," process_paren "," process_bracing "," process_newline_or_comment "," ss eos? "," last_state= "," lex_state "," command_state= "," command_start "," process_string "," lex_strterm "," cmd_state "," process_brace_open "," lex_state= "," process_brace_close "," cmd_state= "," is_after_operator? "," process_simple_string "," process_dots "," old_pos= "," start_of_current_line_pos= "," ss pos + "," ss check "," process_string_or_heredoc "," maybe_pop_stack "," process_backtick "," matched [] gsub gsub "," matched [] gsub "," matched [] "," matched "," process_bang "," ss string []  inspect "," ss scan  inspect "," ss string []  [] gsub "," ss scan  [] gsub "," ss string []  [] "," ss scan  [] "]}," RubyLexer location":{"type":"method","name":"location","children":[],"call":["(begin\n  (or\n    (send nil :filename)\n    (str \"<input>\"))) compact join ","(begin\n  (or\n    (send nil :filename)\n    (str \"<input>\"))) compact "," filename "," column "," lineno "]}," RubyLexer parse_file":{"type":"method","name":"parse_file","children":[],"call":[" parse ","f read "," open "," filename= "]}," RubyLexer parse":{"type":"method","name":"parse","children":[],"call":[" do_parse "," state "," ss= "," scanner_class new "," scanner_class "," start_of_current_line_pos= "," lineno= "]}," RubyLexer scanner_class":{"type":"method","name":"scanner_class","children":[],"call":[]}," RubyLexer action":{"type":"method","name":"action","children":[],"call":[]}," RubyLexer matches":{"type":"method","name":"matches","children":[],"call":["m pop ","m empty? ","m [] "," ss [] "," ss ","(irange\n  (int 1)\n  (int 9)) map "]}," RubyLexer lineno=":{"type":"method","name":"lineno=","children":[],"call":[" d "," ss rest [] "," ss rest "," ss "," caller first split first join "," caller first split first "," caller first split "," caller first "," caller "," old_lineno= ","$stderr puts "]}," RubyLexer d":{"type":"method","name":"d","children":[],"call":["$stderr puts ","o inspect "]}," RubyLexer process_string":{"type":"method","name":"process_string","children":[],"call":[" lex_state= ","token_type == "," lex_strterm= ","(sym :tSTRING_END) include? ","token []= "," scan "," is_label_suffix? "," is_arg? "," cond is_in_state ! "," cond is_in_state "," cond ","(sym :expr_beg) include? "," lex_state ","(str \"'\") include? "," ruby22plus? "," parse_string "," lex_strterm "," heredoc "," lex_strterm [] == "," lex_strterm [] "," lex_state =~ ","EXPR_BEG  | ","EXPR_END  | "," ruby22? ","token []=  == "," parse_string _type == "," heredoc _type == "," parse_string  []= "," heredoc  []= "]}," RubyLexer ruby23?":{"type":"method","name":"ruby23?","children":[],"call":["Ruby23Parser  === "," parser "]}," RubyLexer ruby22plus?":{"type":"method","name":"ruby22plus?","children":[],"call":[" parser class version >= "," parser class version "," parser class "," parser "]}," RubyLexer string":{"type":"method","name":"string","children":[],"call":[" lex_strterm= "," is_label_possible? "]}," RubyLexer space_vs_beginning":{"type":"method","name":"space_vs_beginning","children":[],"call":[" is_beg? "," warning "," is_space_arg? "," check "]}," RubyLexer fixup_lineno":{"type":"method","name":"fixup_lineno","children":[],"call":[" extra_lineno= "," extra_lineno + "," extra_lineno "," lineno "]}," RubyLexer eat_whitespace":{"type":"method","name":"eat_whitespace","children":[],"call":["r count "," extra_lineno "," scan "," eat_whitespace "," in_heredoc? "," eos? "," lineno "," scan  count "," ext scan a_lineno "," in_he scan edoc? "]}," RubyLexer check":{"type":"method","name":"check","children":[],"call":[" ss check "," ss "]}," RubyLexer scan":{"type":"method","name":"scan","children":[],"call":[" ss scan "," ss "]}," RubyLexer result":{"type":"method","name":"result","children":[],"call":[" lex_state= "," arg_state ","lex_state == ","new_state == "," yacc_value= ","  arg_state = "," arg_state  == "]}," RubyLexer process_underscore":{"type":"method","name":"process_underscore","children":[],"call":[" process_token "," matched "," scan "," beginning_of_line? "," ss unscan "," ss "," ss terminate "," unscan "]}," RubyLexer process_token_keyword":{"type":"method","name":"process_token_keyword","children":[],"call":[" result ","keyword id1 ","keyword id0 != ","keyword id0 "," in_lex_state? "," lex_state != "," lex_state "," cmdarg is_in_state "," cmdarg "," cond is_in_state "," cond "," expr_result "," paren_nest "," lpar_beg= "," lpar_beg == "," lpar_beg ","keyword id0 == ","keyword name "," lex_state == "," command_start= ","state == "," lineno "," token ","keyword state ","(sym :expr_beg) include? ","state != "," lambda_beginning? "," lex_state= ","state =~ ","EXPR_BEG  | "," lex_state =~ "," ss lineno "," ss "," in_lex_keyword state ? "," in_lex_ lex_state ? "," lex_keyword state  != "," lex_ lex_state  != "," lex_keyword state  "," lex_ lex_state  "," cmdarg is_in_keyword state  "," cmdarg is_in_ lex_state  "," cond is_in_keyword state  "," cond is_in_ lex_state  "," lex_keyword state  == "," lex_ lex_state  == ","keyword state  == "," lex_state  == ","keyword keyword state  ","keyword  lex_state  ","keyword state  != "," lex_state  != "," lex_keyword state = "," lex_ lex_state = ","keyword state  =~ "," lex_state  =~ "," lex_keyword state  =~ "," lex_ lex_state  =~ "]}," RubyLexer process_label":{"type":"method","name":"process_label","children":[],"call":[" result "," lineno "," unescape ","text [] gsub ","text [] "," possibly_escape_string ","result []= "," process_symbol ","  process_symbol  "," process_symbol  []= "," process_ possibly_escape_string  "]}," RubyLexer process_label_or_string":{"type":"method","name":"process_label_or_string","children":[],"call":[" result ","text [] gsub gsub ","text [] gsub ","text [] "," ss pos "," ss ","text =~ "," process_label ","str count "," lineno "," pos ","text []  [] gsub gsub ","text []  [] gsub ","text []  [] ","text []  =~ ","text [] gsub gsub  count "]}," RubyLexer was_label?":{"type":"method","name":"was_label?","children":[],"call":[" ruby22_label? "]}," RubyLexer process_symbol":{"type":"method","name":"process_symbol","children":[],"call":[" result "," rb_compile_error ","symbol =~ "," ruby18 "," unescape "," match [] gsub "," match [] "," match "," possibly_escape_string ","EXPR_END  | "," possibly_escape_string  =~ "]}," RubyLexer process_square_bracket":{"type":"method","name":"process_square_bracket","children":[],"call":[" expr_result "," space_seen "," is_arg? "," is_beg? "," rb_compile_error "," result "," paren_nest "," scan "," in_arg_state? "," cmdarg push "," cmdarg "," cond push "," cond "," lex_state =~ "," lex_state "," is_after_operator? "]}," RubyLexer process_slash":{"type":"method","name":"process_slash","children":[],"call":[" result "," string "," arg_ambiguous "," scan "," space_seen "," is_arg? "," is_beg? "," matched "]}," RubyLexer process_questionmark":{"type":"method","name":"process_questionmark","children":[],"call":[" result ","c [] ord & ","c [] ord ","c [] "," version == "," version "," ss getch "," ss "," read_escape "," scan "," check "," ruby18 "," warning ","invalid character syntax; use ?\\ + ","(pair\n  (str \" \")\n  (str \"s\")) [] "," matched "," is_arg? "," rb_compile_error ","text inspect "," end_of_stream? "," is_end? "," getch "," ss getch  [] ord & "," read_escape  [] ord & "," getch  [] ord & "," ss getch  [] ord "," read_escape  [] ord "," getch  [] ord "," ss getch  [] "," read_escape  [] "," getch  [] "," ss get ss getch h "," ss get read_escape h "," ss get getch h "," read_es ss getch ape "," read_es read_escape ape "," read_es getch ape "," s ss getch an "," s read_escape an "," s getch an ","  ss getch he ss getch k ","  read_escape he read_escape k ","  getch he getch k ","invalid  ss getch hara ss getch ter syntax; use ?\\ + ","invalid  read_escape hara read_escape ter syntax; use ?\\ + ","invalid  getch hara getch ter syntax; use ?\\ + "," mat ss getch hed "," mat read_escape hed "," mat getch hed "," rb_ ss getch ompile_error "," rb_ read_escape ompile_error "," rb_ getch ompile_error ","text inspe ss getch t ","text inspe read_escape t ","text inspe getch t "," get ss getch h "," get read_escape h "," get getch h "]}," RubyLexer process_plus_minus":{"type":"method","name":"process_plus_minus","children":[],"call":[" result ","utype == "," check "," arg_ambiguous "," is_arg? "," check ! "," space_seen "," is_beg? "," scan "," in_arg_state? ","sign == "," matched "," is_after_operator? "," matched  == "]}," RubyLexer process_percent":{"type":"method","name":"process_percent","children":[],"call":[" result "," parse_quote "," check ! "," check "," space_seen "," is_arg? "," scan "," is_beg? "," lex_state =~ "," lex_state "," is_space_arg? "," process_percent_quote "]}," RubyLexer process_paren19":{"type":"method","name":"process_paren19","children":[],"call":[" is_space_arg? "," is_beg? "]}," RubyLexer process_paren18":{"type":"method","name":"process_paren18","children":[],"call":[" warning "," in_lex_state? "," space_seen "," command_start= "]}," RubyLexer process_paren":{"type":"method","name":"process_paren","children":[],"call":[" expr_result "," paren_nest "," process_paren19 "," process_paren18 "," ruby18 "," result "," cmdarg push "," cmdarg "," cond push "," cond "," lambda_beginning? ! "," lambda_beginning? "," lex_state =~ "," lex_state "," is_space_arg? "," space_seen ! "," space_seen "," is_beg? "]}," RubyLexer process_nthref":{"type":"method","name":"process_nthref","children":[],"call":[" result "," ss [] to_i "," ss [] "," ss "," match [] to_i "," match [] "," match "]}," RubyLexer process_newline_or_comment":{"type":"method","name":"process_newline_or_comment","children":[],"call":[" result "," command_start= "," check "," ss pos "," ss "," space_seen= "," ss [] empty? "," ss [] "," scan "," in_lex_state? "," matched lines to_a size "," matched lines to_a "," matched lines "," matched "," lineno "," end_of_stream? ","@comments << "," matched gsub gsub "," matched gsub ","c == "," parser in_kwarg "," parser ","c ! "," lex_state == "," lex_state "," in_lex_state? ! "," lex_state !~ "," lex_state =~ ","EXPR_BEG  | | | ","EXPR_BEG  | | ","EXPR_BEG  | "," maybe_pop_stack "," matched count "," pos ","  matched ommand_start= ","  matched he matched k "," spa matched e_seen= "," s matched an "," mat matched hed lines to_a size "," mat matched hed lines to_a "," mat matched hed lines "," mat matched hed ","@ matched omments << "," mat matched hed gsub gsub "," mat matched hed gsub "," matched  == "," matched  ! "," maybe_pop_sta matched k "," mat matched hed  matched ount "]}," RubyLexer process_lchevron":{"type":"method","name":"process_lchevron","children":[],"call":[" result "," heredoc_identifier "," space_seen "," is_arg? ! "," is_arg? "," is_end? ! "," is_end? "," in_lex_state? ! "," in_lex_state? "," lex_state "," lex_state= "," command_start= "," lex_state == "," in_arg_state? "," lex_state =~ "," is_after_operator? "," lex_state !~ ","EXPR_DOT  | "]}," RubyLexer process_ivar":{"type":"method","name":"process_ivar","children":[],"call":[" result ","text lineno= "," lineno ","text =~ "]}," RubyLexer process_gvar_oddity":{"type":"method","name":"process_gvar_oddity","children":[],"call":[" rb_compile_error ","text inspect "," result ","text == "]}," RubyLexer process_gvar":{"type":"method","name":"process_gvar","children":[],"call":[" result ","text lineno= "," lineno "," rb_compile_error ","text == "," parser class version > "," parser class version "," parser class "," parser "]}," RubyLexer process_float":{"type":"method","name":"process_float","children":[],"call":[" result ","text to_f "," Complex ","text chop to_f ","text chop ","text end_with? "," Rational ","text chop chop "," rb_compile_error ","text =~ "]}," RubyLexer process_curly_brace":{"type":"method","name":"process_curly_brace","children":[],"call":[" expr_result "," command_start= ","token == "," in_lex_state? "," is_arg? "," paren_nest "," lpar_beg= "," lpar_beg == "," lpar_beg "," brace_nest "]}," RubyLexer process_colon2":{"type":"method","name":"process_colon2","children":[],"call":[" result "," is_space_arg? "," in_lex_state? "," is_beg? "," lex_state =~ "," lex_state "]}," RubyLexer process_colon1":{"type":"method","name":"process_colon1","children":[],"call":[" result "," string "," scan "," check "," is_end? "," matched "]}," RubyLexer process_bracing":{"type":"method","name":"process_bracing","children":[],"call":[" raise "," matched inspect "," matched "," lex_state= "," paren_nest "," brace_nest "," cmdarg lexpop "," cmdarg "," cond lexpop "," cond "]}," RubyLexer process_begin":{"type":"method","name":"process_begin","children":[],"call":[" matched count "," matched "," lineno ","@comments << "," rb_compile_error ","@comments clear "," scan "]}," RubyLexer process_backref":{"type":"method","name":"process_backref","children":[],"call":[" result "," ss [] to_sym "," ss [] "," ss "," match [] to_sym "," match [] "," match "]}," RubyLexer process_amper":{"type":"method","name":"process_amper","children":[],"call":[" result "," in_lex_state? "," warning "," check ! "," check "," space_seen "," is_arg? "," lex_state =~ ","EXPR_BEG  | "," lex_state "]}," RubyLexer not_end?":{"type":"method","name":"not_end?","children":[],"call":[" is_end? ! "," is_end? "]}," RubyLexer matched":{"type":"method","name":"matched","children":[],"call":[" ss matched "," ss "]}," RubyLexer is_label_suffix?":{"type":"method","name":"is_label_suffix?","children":[],"call":[" check "]}," RubyLexer is_label_possible?":{"type":"method","name":"is_label_possible?","children":[],"call":[" is_arg? "," command_state ! "," command_state "," in_lex_state? "," cmd_state ! "," cmd_state "," lex_state =~ ","EXPR_LABEL  | "," lex_state ","command_state ! "]}," RubyLexer ruby22_label?":{"type":"method","name":"ruby22_label?","children":[],"call":[" is_label_possible? "," ruby22plus? "," ruby22? "]}," RubyLexer in_lex_state?":{"type":"method","name":"in_lex_state?","children":[],"call":["states include? "," lex_state "]}," RubyLexer in_arg_state?":{"type":"method","name":"in_arg_state?","children":[],"call":[" in_lex_state? "]}," RubyLexer in_fname?":{"type":"method","name":"in_fname?","children":[],"call":[" in_lex_state? "," lex_state =~ "," lex_state "]}," RubyLexer heredoc_whitespace_indent_size":{"type":"method","name":"heredoc_whitespace_indent_size","children":[],"call":["size + ","char == ","whitespace chars inject ","whitespace chars "]}," RubyLexer dedent_string":{"type":"method","name":"dedent_string","children":[],"call":["string [] ","proposed > ","TAB_WIDTH  * ","indentation_skipped / + ","indentation_skipped / ","char == ","indentation_skipped >= ","string chars each ","string chars ","TAB_WIDTH  *  > "]}," RubyLexer heredoc_dedent":{"type":"method","name":"heredoc_dedent","children":[],"call":["(send\n  (send\n    (lvar :string_content) :split\n    (str \"\\n\")\n    (int -1)) :map) join "," dedent_string ","string_content split map ","string_content split ","(send\n  (send\n    (lvar :string_content) :scan\n    (regexp\n      (str \"^[ \\\\t]*(?=\\\\S)\")\n      (regopt))) :map) min "," heredoc_whitespace_indent_size ","string_content scan map ","string_content scan "]}," RubyLexer expr_result":{"type":"method","name":"expr_result","children":[],"call":[" result "," cmdarg push "," cmdarg "," cond push "," cond "]}," RubyLexer expr_fname?":{"type":"method","name":"expr_fname?","children":[],"call":[" lex_state == "," lex_state "," lex_state =~ "]}," RubyLexer expr_dot?":{"type":"method","name":"expr_dot?","children":[],"call":[" lex_state == "," lex_state "," lex_state =~ "]}," RubyLexer end_of_stream?":{"type":"method","name":"end_of_stream?","children":[],"call":[" ss eos? "," ss "]}," RubyLexer beginning_of_line?":{"type":"method","name":"beginning_of_line?","children":[],"call":[" ss bol? "," ss "]}," RubyLexer arg_state":{"type":"method","name":"arg_state","children":[],"call":[" in_arg_state? "," is_after_operator? "]}," Ruby24Parser _reduce_none":{"type":"method","name":"_reduce_none","children":[],"call":["val [] "]}," Ruby24Parser _reduce_627":{"type":"method","name":"_reduce_627","children":[],"call":[]}," Ruby24Parser _reduce_626":{"type":"method","name":"_reduce_626","children":[],"call":[" yyerrok "]}," Ruby24Parser _reduce_623":{"type":"method","name":"_reduce_623","children":[],"call":[" yyerrok "," s line "," s ","arg line "," s arg line  ","arg arg line  "]}," Ruby24Parser _reduce_599":{"type":"method","name":"_reduce_599","children":[],"call":[" s ","val [] "," assignable ","result << "," lexer lineno "," lexer "," env []= "," env "," s  << "," assignable  << "]}," Ruby24Parser _reduce_598":{"type":"method","name":"_reduce_598","children":[],"call":[" raise ","val inspect "," block_append ","val [] "," assignable "," s line ","optblk line "," s ","id to_sym "]}," Ruby24Parser _reduce_597":{"type":"method","name":"_reduce_597","children":[],"call":[" s ","sym sexp_type= "," block_append ","val [] "," assignable "," s line ","opt line "," raise ","val inspect "]}," Ruby24Parser _reduce_596":{"type":"method","name":"_reduce_596","children":[],"call":[" s ","val [] ","val [] [] to_sym ","val [] [] ","val last ","result << "," assignable ","val [] to_sym ","sym []= "," s  << ","val []  << "," assignable  << "]}," Ruby24Parser _reduce_595":{"type":"method","name":"_reduce_595","children":[],"call":[" s ","val [] ","result << "," env []= "," env "," s line ","optblk line "," block_append ","val [] [] to_sym ","val [] [] "," s  << ","val []  << "," s line  << "," block_append  << "]}," Ruby24Parser _reduce_594":{"type":"method","name":"_reduce_594","children":[],"call":["result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] ","val [] dup "," s "," assignable ","val [] to_sym "," s line ","opt line "," s  sexp_type= "," assignable  sexp_type= "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "]}," Ruby24Parser _reduce_592":{"type":"method","name":"_reduce_592","children":[],"call":["val [] "," assignable "," lexer lineno "," lexer "," env []= "," env "," s line ","optblk line "," s "]}," Ruby24Parser _reduce_591":{"type":"method","name":"_reduce_591","children":[],"call":[" s "," assignable ","val [] to_sym ","val [] ","list << ","item last "," args ","id to_sym "]}," Ruby24Parser _reduce_590":{"type":"method","name":"_reduce_590","children":[],"call":[" yyerror ","result sexp_type == ","result sexp_type ","val [] "," assignable ","val [] to_sym "," s ","val []  sexp_type == "," assignable  sexp_type == "," s  sexp_type == ","val []  sexp_type "," assignable  sexp_type "," s  sexp_type "]}," Ruby24Parser _reduce_589":{"type":"method","name":"_reduce_589","children":[],"call":[" lexer lex_state= "," lexer "," s line "," s "," env []= "," env ","label to_sym ","list << ","item last "," lexer lineno "," yyerror ","result [] == ","result [] ","val [] "," s line  [] == ","list <<  [] == ","val []  [] == "," s line  [] ","list <<  [] ","val []  [] "]}," Ruby24Parser _reduce_587":{"type":"method","name":"_reduce_587","children":[],"call":[" args "," s line "," s "," env []= "," env ","label to_sym "]}," Ruby24Parser _reduce_586":{"type":"method","name":"_reduce_586","children":[],"call":["val [] ","list << ","item last "," s line "," s "," env []= "," env ","label to_sym "]}," Ruby24Parser _reduce_585":{"type":"method","name":"_reduce_585","children":[],"call":["(str \"&\") to_sym "," env []= "," env ","val [] to_sym ","val [] ","list << ","item last "," s line "," s ","label to_sym "," args "]}," Ruby24Parser _reduce_582":{"type":"method","name":"_reduce_582","children":[],"call":[" env []= "," env "," s ","val [] ","label to_sym ","result << "," s line ","list line ","list sexp_type == ","list sexp_type "," s  << ","val []  << "," s line  << "]}," Ruby24Parser _reduce_581":{"type":"method","name":"_reduce_581","children":[],"call":[" assignable ","val [] to_sym ","val [] "," s "," env []= "," env ","label to_sym "," raise ","val inspect "," debug20 "," s line "," lexer lineno "," lexer "]}," Ruby24Parser _reduce_578":{"type":"method","name":"_reduce_578","children":[],"call":[" block_append ","val [] ","result << "," s ","list sexp_type == ","list sexp_type "," raise ","val inspect "," debug20 "," new_arg "," s line "," env []= "," env ","label to_sym "," block_append  << "," s  << ","val []  << "," new_arg  << "," s line  << "]}," Ruby24Parser _reduce_577":{"type":"method","name":"_reduce_577","children":[],"call":[" s ","val [] "," raise ","val inspect "," debug20 ","result << "," yyerror "," env []= "," env ","val [] to_sym "," block_append "," s  << ","val []  << "," block_append  << "]}," Ruby24Parser _reduce_576":{"type":"method","name":"_reduce_576","children":[],"call":["result << ","val [] "," yyerror ","result line_max= ","item line_max ","Sexp  === "," s line ","list line "," s ","list sexp_type == ","list sexp_type ","val []  << "," s line  << "," s  << ","val []  line_max= "," s line  line_max= "," s  line_max= ","result item line_max = ","item item line_max  "]}," Ruby24Parser _reduce_575":{"type":"method","name":"_reduce_575","children":[],"call":[" s ","val [] "," yyerror "," new_arg ","result << "," s  << "," new_arg  << ","val []  << "]}," Ruby24Parser _reduce_574":{"type":"method","name":"_reduce_574","children":[],"call":[" assignable ","val [] "," env []= "," env ","val [] to_sym "," yyerror ","id to_sym "," s "]}," Ruby24Parser _reduce_573":{"type":"method","name":"_reduce_573","children":[],"call":[" assignable ","val [] "," env []= "," env ","val [] to_sym "," args "," yyerror "]}," Ruby24Parser _reduce_572":{"type":"method","name":"_reduce_572","children":[],"call":[" yyerror "," args "," assignable ","val [] "]}," Ruby24Parser _reduce_571":{"type":"method","name":"_reduce_571","children":[],"call":["val [] "," yyerror "," args "," env []= "," env ","id to_sym "]}," Ruby24Parser _reduce_568":{"type":"method","name":"_reduce_568","children":[],"call":[" args "," yyerror "]}," Ruby24Parser _reduce_566":{"type":"method","name":"_reduce_566","children":[],"call":["list << ","item last "," args "," yyerror "]}," Ruby24Parser _reduce_564":{"type":"method","name":"_reduce_564","children":[],"call":[" s "," env []= "," env ","label to_sym ","val [] "," args "]}," Ruby24Parser _reduce_563":{"type":"method","name":"_reduce_563","children":[],"call":[" s ","val [] "," env []= "," env ","label to_sym "," args "]}," Ruby24Parser _reduce_562":{"type":"method","name":"_reduce_562","children":[],"call":[" s "," env []= "," env ","label to_sym ","val [] "," args "]}," Ruby24Parser _reduce_561":{"type":"method","name":"_reduce_561","children":[],"call":[" s ","val [] "," env []= "," env ","label to_sym "," args "]}," Ruby24Parser _reduce_559":{"type":"method","name":"_reduce_559","children":[],"call":["result << "," s ","list sexp_type == ","list sexp_type "," args "," s  << "," args  << "]}," Ruby24Parser _reduce_558":{"type":"method","name":"_reduce_558","children":[],"call":[" raise ","val inspect "," debug20 ","val [] ","result << "," s "," args ","list sexp_type == ","list sexp_type ","val []  << "," s  << "," args  << "]}," Ruby24Parser _reduce_557":{"type":"method","name":"_reduce_557","children":[],"call":["val [] "," args "," raise ","val inspect "," debug20 ","result << "," s ","val []  << "," args  << "," s  << "]}," Ruby24Parser _reduce_554":{"type":"method","name":"_reduce_554","children":[],"call":[" env []= "," env ","val [] to_sym ","val [] "," args "]}," Ruby24Parser _reduce_552":{"type":"method","name":"_reduce_552","children":[],"call":[" yyerror ","val [] "," lexer command_start= "," lexer "," lexer lex_state= "," in_kwarg= "," args "]}," Ruby24Parser _reduce_551":{"type":"method","name":"_reduce_551","children":[],"call":[" yyerror ","val [] "," lexer lex_state "," lexer "," in_kwarg= "," in_kwarg "," args "]}," Ruby24Parser _reduce_550":{"type":"method","name":"_reduce_550","children":[],"call":[" yyerror "," args "," lexer command_start= "," lexer "," lexer lex_state= ","val [] "," in_kwarg= "]}," Ruby24Parser _reduce_549":{"type":"method","name":"_reduce_549","children":[],"call":[" yyerror "," args "," lexer lex_state "," lexer "," in_kwarg= "," in_kwarg ","val [] "]}," Ruby24Parser _reduce_548":{"type":"method","name":"_reduce_548","children":[],"call":[" args ","val [] "," lexer command_start= "," lexer "," lexer lex_state= "," yyerror "]}," Ruby24Parser _reduce_547":{"type":"method","name":"_reduce_547","children":[],"call":[" args "," lexer command_start= "," lexer "," lexer lex_state= "," in_kwarg= "," end_args "]}," Ruby24Parser _reduce_546":{"type":"method","name":"_reduce_546","children":[],"call":[" args "," lexer command_start= "," lexer "," lexer lex_state= "," in_kwarg= "," lexer lex_state "," in_kwarg "," s line "," lexer lineno "," s ","val [] "]}," Ruby24Parser _reduce_545":{"type":"method","name":"_reduce_545","children":[],"call":[" args "," in_kwarg= "," in_kwarg "," lexer command_start= "," lexer "," lexer lex_state= ","val [] "," s line "," lexer lineno "," s "," end_args "]}," Ruby24Parser _reduce_544":{"type":"method","name":"_reduce_544","children":[],"call":[" args "," lexer command_start= "," lexer "," lexer lex_state= ","val [] "," debug20 "," assignable "," s line "," lexer lineno "," s "," end_args "]}," Ruby24Parser _reduce_543":{"type":"method","name":"_reduce_543","children":[],"call":[" args ","val [] "," assignable "," s line "," lexer lineno "," lexer "," s "," lexer lex_state "," in_kwarg= "," in_kwarg "]}," Ruby24Parser _reduce_542":{"type":"method","name":"_reduce_542","children":[],"call":[" args ","val [] "," lexer command_start= "," lexer "," lexer lex_state= "," gettable ","Sexp  === "," debug20 "," assignable "," end_args "]}," Ruby24Parser _reduce_541":{"type":"method","name":"_reduce_541","children":[],"call":[" args "," lexer command_start= "," lexer "," lexer lex_state= "," s ","val [] "," gettable ","Sexp  === "," assignable "," s line "]}," Ruby24Parser _reduce_540":{"type":"method","name":"_reduce_540","children":[],"call":[" args "," s ","val [] "," s line "," lexer lineno "," lexer "," gettable ","Sexp  === ","va lexer lineno  [] "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "," gettab lexer lineno e "]}," Ruby24Parser _reduce_539":{"type":"method","name":"_reduce_539","children":[],"call":[" args "," s ","val [] "," debug20 "," assignable "," s line "," lexer lineno "," lexer "," gettable ","Sexp  === "," debug "," lexer command_start= "," lexer lex_state= "]}," Ruby24Parser _reduce_538":{"type":"method","name":"_reduce_538","children":[],"call":[" args "," debug20 "," assignable ","val [] "," s line "," lexer lineno "," lexer "," s "," file "," assignab lexer lineno e ","va lexer lineno  [] "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "," fi lexer lineno e "]}," Ruby24Parser _reduce_537":{"type":"method","name":"_reduce_537","children":[],"call":[" args "," assignable ","val [] "," gettable ","Sexp  === "," s line "," lexer lineno "," lexer "," s "]}," Ruby24Parser _reduce_536":{"type":"method","name":"_reduce_536","children":[],"call":[" args "," gettable ","Sexp  === ","val [] "," s line "," lexer lineno "," lexer "," s "," file ","result line "," raise ","val inspect ","val first "," debug "," assignable "," args  line "," gettable  line "," s line  line "," assignable  line "]}," Ruby24Parser _reduce_535":{"type":"method","name":"_reduce_535","children":[],"call":[" args "," gettable ","Sexp  === ","val [] "," s "," s line "," lexer lineno "," lexer "," assignable "," gettab lexer lineno e ","va lexer lineno  [] "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "," assignab lexer lineno e "]}," Ruby24Parser _reduce_534":{"type":"method","name":"_reduce_534","children":[],"call":[" args "," s "," lexer lineno "," lexer "," s line "," gettable ","Sexp  === ","val [] "]}," Ruby24Parser _reduce_533":{"type":"method","name":"_reduce_533","children":[],"call":[" s "," lexer lineno "," lexer "," file "," s line ","result line "," gettable ","Sexp  === "," raise ","val inspect ","val first "," args "," s  line "," s line  line "," gettable  line "," args  line "]}," Ruby24Parser _reduce_532":{"type":"method","name":"_reduce_532","children":[],"call":["val [] "," s "," file "," s line "," lexer lineno "," lexer ","va lexer lineno  [] "," fi lexer lineno e "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "]}," Ruby24Parser _reduce_530":{"type":"method","name":"_reduce_530","children":[],"call":[" args "," s "," s line "," lexer lineno "," lexer "," file "]}," Ruby24Parser _reduce_529":{"type":"method","name":"_reduce_529","children":[],"call":[" args "," s "," s line "," lexer lineno "," lexer "]}," Ruby24Parser _reduce_528":{"type":"method","name":"_reduce_528","children":[],"call":[" args "," s "," s line "," lexer lineno "," lexer "]}," Ruby24Parser _reduce_527":{"type":"method","name":"_reduce_527","children":[],"call":[" lexer command_start= "," lexer "," lexer lex_state= ","val [] "," s line "," lexer lineno "," s "," args "]}," Ruby24Parser _reduce_526":{"type":"method","name":"_reduce_526","children":[],"call":[" lexer command_start= "," lexer "," lexer lex_state= ","val [] "," s line "," lexer lineno "," s "]}," Ruby24Parser _reduce_525":{"type":"method","name":"_reduce_525","children":[],"call":[" debug20 "," yyerrok "," lexer command_start= "," lexer "," lexer lex_state= ","val [] "]}," Ruby24Parser _reduce_524":{"type":"method","name":"_reduce_524","children":[],"call":["val [] ","val [] -@ "," debug20 "," yyerrok "]}," Ruby24Parser _reduce_523":{"type":"method","name":"_reduce_523","children":[],"call":[" lexer lex_state= "," lexer ","val [] "]}," Ruby24Parser _reduce_522":{"type":"method","name":"_reduce_522","children":[],"call":[" debug20 "," s line ","result line "," s ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," lexer lineno "," lexer "," lexer lex_state= ","val [] -@ ","val [] "," s line  line ","val [] -@  line "," s line  last to_sym ","val [] -@  last to_sym "," s line  last ","val [] -@  last "," s line  sexp_type= ","val [] -@  sexp_type= "," s line  sexp_type ","val [] -@  sexp_type "]}," Ruby24Parser _reduce_521":{"type":"method","name":"_reduce_521","children":[],"call":[" s ","val [] "]}," Ruby24Parser _reduce_520":{"type":"method","name":"_reduce_520","children":[],"call":[" s ","val [] "," debug20 "," s line ","result line ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," lexer lineno "," lexer "," lexer lex_state= "," s  line "," s line  line "," s  last to_sym "," s line  last to_sym "," s  last "," s line  last "," s  sexp_type= "," s line  sexp_type= "," s  sexp_type "," s line  sexp_type "]}," Ruby24Parser _reduce_519":{"type":"method","name":"_reduce_519","children":[],"call":[" debug20 "," assignable ","val [] ","val [] -@ ","num -@ "," s "]}," Ruby24Parser _reduce_518":{"type":"method","name":"_reduce_518","children":[],"call":[" assignable ","val [] ","val [] -@ "," debug20 "]}," Ruby24Parser _reduce_517":{"type":"method","name":"_reduce_517","children":[],"call":[" gettable ","Sexp  === ","val [] "," debug20 "," s ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," lexer lex_state= "," lexer ","val [] to_sym "," debug "," s line ","result line "," lexer lineno "," assignable "," gettable  last to_sym "," s  last to_sym ","val []  last to_sym ","val [] to_sym  last to_sym "," s line  last to_sym "," assignable  last to_sym "," gettable  last "," s  last ","val []  last ","val [] to_sym  last "," s line  last "," assignable  last "," gettable  sexp_type= "," s  sexp_type= ","val []  sexp_type= ","val [] to_sym  sexp_type= "," s line  sexp_type= "," assignable  sexp_type= "," gettable  sexp_type "," s  sexp_type ","val []  sexp_type ","val [] to_sym  sexp_type "," s line  sexp_type "," assignable  sexp_type "," gettable  line "," s  line ","val []  line ","val [] to_sym  line "," s line  line "," assignable  line "]}," Ruby24Parser _reduce_516":{"type":"method","name":"_reduce_516","children":[],"call":[" gettable ","Sexp  === ","val [] "," debug20 "," s ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," lexer lex_state= "," lexer ","val [] to_sym ","num -@ "," gettable  last to_sym "," s  last to_sym ","val []  last to_sym ","val [] to_sym  last to_sym "," gettable  last "," s  last ","val []  last ","val [] to_sym  last "," gettable  sexp_type= "," s  sexp_type= ","val []  sexp_type= ","val [] to_sym  sexp_type= "," gettable  sexp_type "," s  sexp_type ","val []  sexp_type ","val [] to_sym  sexp_type "]}," Ruby24Parser _reduce_515":{"type":"method","name":"_reduce_515","children":[],"call":[" s ","val [] to_sym ","val [] "," gettable ","Sexp  === "]}," Ruby24Parser _reduce_514":{"type":"method","name":"_reduce_514","children":[],"call":[" s "," lexer lineno "," lexer "," s line ","val [] to_sym ","val [] "," lexer lex_state= "," debug ","result line ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," s  line "," s line  line ","val [] to_sym  line "," s  last to_sym "," s line  last to_sym ","val [] to_sym  last to_sym "," s  last "," s line  last ","val [] to_sym  last "," s  sexp_type= "," s line  sexp_type= ","val [] to_sym  sexp_type= "," s  sexp_type "," s line  sexp_type ","val [] to_sym  sexp_type "]}," Ruby24Parser _reduce_513":{"type":"method","name":"_reduce_513","children":[],"call":[" s "," file "," s line "," lexer lineno "," lexer ","val [] to_sym ","val [] "]}," Ruby24Parser _reduce_512":{"type":"method","name":"_reduce_512","children":[],"call":[" s ","val [] to_sym ","val [] "," s line "," lexer lineno "," lexer ","id to_sym "," lexer lex_state= "," wrap "," file "]}," Ruby24Parser _reduce_511":{"type":"method","name":"_reduce_511","children":[],"call":[" s ","val [] to_sym ","val [] "," lexer lex_state= "," lexer "," raise ","stmt inspect "," debug20 "," s line ","stmt sexp_type "," lexer cmdarg restore "," lexer cmdarg "," lexer cond restore "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer lineno ","id to_sym "," wrap "]}," Ruby24Parser _reduce_510":{"type":"method","name":"_reduce_510","children":[],"call":[" s ","val [] to_sym ","val [] "," lexer lex_state= "," lexer "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer lineno "," lexer lex_state "," lexer cmdarg store "," lexer cmdarg "," lexer cond store "," lexer cond "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "," s line "]}," Ruby24Parser _reduce_509":{"type":"method","name":"_reduce_509","children":[],"call":[" s ","val [] to_sym ","val [] "," s line ","str line "," lexer lex_strterm= "," lexer "," raise ","stmt inspect "," debug20 ","stmt sexp_type "," lexer lex_state= "," lexer cond pop "," lexer cond "," lexer cmdarg pop "," lexer cmdarg "," lexer string_nest= "," lexer brace_nest= "," wrap "]}," Ruby24Parser _reduce_499":{"type":"method","name":"_reduce_499","children":[],"call":["val [] -@ ","val [] "," literal_concat "," new_qsym_list "," s line "," lexer lineno "," lexer "," s ","str line "," lexer lex_strterm= "]}," Ruby24Parser _reduce_497":{"type":"method","name":"_reduce_497","children":[],"call":[" debug20 "," s ","result last to_sym ","result last ","result sexp_type= ","result sexp_type ","val [] "," lexer lex_state= "," lexer "," literal_concat "," new_qword_list "," new_qsym_list "," new_string "," s  last to_sym ","val []  last to_sym "," literal_concat  last to_sym "," new_qword_list  last to_sym "," new_qsym_list  last to_sym "," new_string  last to_sym "," s  last ","val []  last "," literal_concat  last "," new_qword_list  last "," new_qsym_list  last "," new_string  last "," s  sexp_type= ","val []  sexp_type= "," literal_concat  sexp_type= "," new_qword_list  sexp_type= "," new_qsym_list  sexp_type= "," new_string  sexp_type= "," s  sexp_type ","val []  sexp_type "," literal_concat  sexp_type "," new_qword_list  sexp_type "," new_qsym_list  sexp_type "," new_string  sexp_type "]}," Ruby24Parser _reduce_492":{"type":"method","name":"_reduce_492","children":[],"call":["val [] to_sym ","val [] ","val [] dup << "," new_qword_list_entry ","val [] dup "," new_qword_list ","list dup << "," new_symbol_list_entry ","list dup "," new_qsym_list "," literal_concat "]}," Ruby24Parser _reduce_491":{"type":"method","name":"_reduce_491","children":[],"call":["val [] to_sym ","val [] "," lexer lex_state= "," lexer "," new_qword_list "," new_symbol_list line "," lexer lineno "," new_symbol_list "," s line "," s ","val [] dup << "," new_qword_list_entry ","val [] dup "," +@ "," prev_value_to_lineno ","_values last "," new_symbol_list  prev_value_to_lineno  "," lexer  prev_value_to_lineno no "," s  prev_value_to_lineno  "," prev_value_to_ prev_value_to_lineno no "]}," Ruby24Parser _reduce_489":{"type":"method","name":"_reduce_489","children":[],"call":[" s ","val [] to_sym ","val [] "," lexer lineno "," lexer "," new_symbol_list line "," new_symbol_list ","list line ","result line_max= "," new_qsym_list "," s  line_max= ","val []  line_max= "," lexer lineno  line_max= "," new_symbol_list line  line_max= ","list line  line_max= "," new_qsym_list  line_max= "]}," Ruby24Parser _reduce_488":{"type":"method","name":"_reduce_488","children":[],"call":[" s ","val [] to_sym ","val [] "," s line "," lexer lineno "," lexer ","list line= ","result line_max= ","val [] dup << "," new_qword_list_entry ","val [] dup "," s  line_max= ","val []  line_max= "," s line  line_max= ","val [] dup <<  line_max= "]}," Ruby24Parser _reduce_487":{"type":"method","name":"_reduce_487","children":[],"call":[" s ","val [] to_sym ","val [] ","val [] dup << "," new_symbol_list_entry ","val [] dup "," literal_concat "," lexer lineno "," lexer ","list line ","result line_max= "," new_qword_list "," s  line_max= ","val [] dup <<  line_max= "," literal_concat  line_max= "," lexer lineno  line_max= ","list line  line_max= "," new_qword_list  line_max= "]}," Ruby24Parser _reduce_486":{"type":"method","name":"_reduce_486","children":[],"call":[" raise ","stmt inspect "," debug20 "," s ","stmt sexp_type "," lexer lex_state= "," lexer "," lexer cmdarg restore "," lexer cmdarg "," lexer cond restore "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= ","val [] dup << "," new_symbol_list_entry ","val [] dup ","val [] "," new_symbol_list "," s line "," lexer lineno ","result line_max= ","list line ","val [] to_sym "," s  line_max= ","val [] dup <<  line_max= "," new_symbol_list  line_max= "," s line  line_max= ","list line  line_max= "]}," Ruby24Parser _reduce_485":{"type":"method","name":"_reduce_485","children":[],"call":[" lexer lex_state= "," lexer "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer lex_state "," lexer cmdarg store "," lexer cmdarg "," lexer cond store "," lexer cond "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "," new_symbol_list ","val [] ","val [] dup << "," new_word_list_entry ","val [] dup "," literal_concat ","list dup << "," new_symbol_list_entry ","list dup ","result line_max= "," s line "," s "," raise ","stmt inspect "," debug20 ","stmt [] "," lexer cmdarg restore "," lexer cond restore "," new_symbol_list  line_max= ","val []  line_max= ","val [] dup <<  line_max= "," literal_concat  line_max= ","list dup <<  line_max= "," s line  line_max= "," s  line_max= "]}," Ruby24Parser _reduce_484":{"type":"method","name":"_reduce_484","children":[],"call":[" s ","val [] "," lexer lex_strterm= "," lexer "," new_word_list "," new_symbol_list ","result line_max= ","list line "," lexer lex_state= "," lexer string_nest= "," lexer brace_nest= "," lexer lex_state "," lexer cmdarg store "," lexer cmdarg "," lexer cond store "," lexer cond "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "," s  line_max= ","val []  line_max= "," new_word_list  line_max= "," new_symbol_list  line_max= ","list line  line_max= "]}," Ruby24Parser _reduce_483":{"type":"method","name":"_reduce_483","children":[],"call":[" lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm "," s "," literal_concat ","val [] ","val [] dup << "," new_word_list_entry ","val [] dup ","list line ","result line_max= "," s line "," lexer lex_strterm  line_max= "," s  line_max= "," literal_concat  line_max= ","val []  line_max= ","val [] dup <<  line_max= ","list line  line_max= "," s line  line_max= "]}," Ruby24Parser _reduce_482":{"type":"method","name":"_reduce_482","children":[],"call":[" new_string "," literal_concat ","val [] "," s line "," lexer lineno "," lexer "," s "," new_word_list ","result line_max= ","list dup << "," new_symbol_list_entry ","list dup "," lexer lex_state= "," lexer lex_strterm= "," lexer lex_strterm "," new_string  line_max= "," literal_concat  line_max= "," s line  line_max= "," new_word_list  line_max= ","list dup <<  line_max= "," lexer lex_strterm  line_max= "]}," Ruby24Parser _reduce_481":{"type":"method","name":"_reduce_481","children":[],"call":[" literal_concat ","val [] ","val [] dup << "," new_word_list_entry ","val [] dup "," new_regexp "," new_symbol_list "," new_string "]}," Ruby24Parser _reduce_480":{"type":"method","name":"_reduce_480","children":[],"call":["val [] dup << "," new_word_list_entry ","val [] dup ","val [] "," new_word_list "," new_xstring "," s line "," lexer lineno "," lexer "," s ","result line_max= ","list line "," literal_concat ","val [] dup <<  line_max= "," new_word_list  line_max= "," new_xstring  line_max= "," s line  line_max= ","list line  line_max= "," literal_concat  line_max= "]}," Ruby24Parser _reduce_479":{"type":"method","name":"_reduce_479","children":[],"call":[" literal_concat ","val [] "," new_word_list "," new_string "," new_regexp ","val [] dup << "," new_word_list_entry ","val [] dup ","result line_max= "," s line "," s "," literal_concat  line_max= "," new_word_list  line_max= ","val []  line_max= "," new_string  line_max= "," new_regexp  line_max= ","val [] dup <<  line_max= "," s line  line_max= "]}," Ruby24Parser _reduce_478":{"type":"method","name":"_reduce_478","children":[],"call":["val [] "," s "," dedent ","func =~ "," new_xstring "," new_word_list "," literal_concat "," new_x dedent ing "]}," Ruby24Parser _reduce_477":{"type":"method","name":"_reduce_477","children":[],"call":[" literal_concat ","val [] "," s "," new_regexp "," new_string ","list line ","result line_max= "," literal_concat  line_max= "," s  line_max= "," new_regexp  line_max= "," new_string  line_max= ","list line  line_max= "]}," Ruby24Parser _reduce_476":{"type":"method","name":"_reduce_476","children":[],"call":[" s "," new_regexp "," new_xstring ","val [] "," dedent ","func =~ "," s line ","result line_max= ","val [] dup << "," new_word_list_entry ","val [] dup "," literal_concat "," new_x dedent ing "," s  line_max= "," new_regexp  line_max= "," new_xstring  line_max= "," s line  line_max= ","val [] dup <<  line_max= "," literal_concat  line_max= "]}," Ruby24Parser _reduce_475":{"type":"method","name":"_reduce_475","children":[],"call":["val [] dup << "," new_qsym_list_entry ","val [] dup ","val [] "," new_xstring "," new_string "," debug20 "," literal_concat "," new_regexp "," new_word_list "," s "]}," Ruby24Parser _reduce_474":{"type":"method","name":"_reduce_474","children":[],"call":[" new_qsym_list "," new_string ","val [] "," s ","str value ","str sexp_type == ","str sexp_type "," new_xstring ","result line_max= ","list line ","val [] dup << "," new_qsym_list_entry ","val [] dup "," new_ s ing "," s  value "," s  sexp_type == "," s  sexp_type "," new_x s ing "," new_qsym_list  line_max= "," new_string  line_max= ","val []  line_max= "," new_xstring  line_max= ","list line  line_max= ","val [] dup <<  line_max= "]}," Ruby24Parser _reduce_473":{"type":"method","name":"_reduce_473","children":[],"call":["val [] dup << "," new_qword_list_entry ","val [] dup ","val [] "," literal_concat "," debug20 "," new_string ","result line_max= "," s line "," s "," new_qsym_list ","val [] dup <<  line_max= ","val []  line_max= "," literal_concat  line_max= "," new_string  line_max= "," s line  line_max= "," new_qsym_list  line_max= "]}," Ruby24Parser _reduce_472":{"type":"method","name":"_reduce_472","children":[],"call":[" new_qword_list "," literal_concat ","val [] ","result line= "," s "," lexer lineno "," lexer ","str value ","str sexp_type == ","str sexp_type ","str line "," dedent ","func =~ "," new_regexp ","val [] dup << "," new_qword_list_entry ","val [] dup "," new_qword_list  line= "," literal_concat  line= "," s  line= ","str line  line= "," new_regexp  line= ","val [] dup <<  line= ","result  lexer lineno = "," lexer  lexer lineno no "," s  value "," dedent  value "," s  sexp_type == "," dedent  sexp_type == "," s  sexp_type "," dedent  sexp_type ","str  lexer lineno  "," s  line "," dedent  line "]}," Ruby24Parser _reduce_471":{"type":"method","name":"_reduce_471","children":[],"call":["val [] "," debug20 ","result line= "," s "," lexer lineno "," lexer "," literal_concat "," new_xstring "," new_qword_list ","val []  line= "," s  line= "," literal_concat  line= "," new_xstring  line= "," new_qword_list  line= ","result  lexer lineno = "," lexer  lexer lineno no "]}," Ruby24Parser _reduce_470":{"type":"method","name":"_reduce_470","children":[],"call":[" s "," debug20 ","val [] ","val []= ","val [] value ","val [] sexp_type == ","val [] sexp_type ","result line= "," lexer lineno "," lexer "," new_string "," s  line= ","val []  line= "," new_string  line= ","result  lexer lineno = "," lexer  lexer lineno no "]}," Ruby24Parser _reduce_469":{"type":"method","name":"_reduce_469","children":[],"call":["val [] ","val []= "," s ","val [] value ","val [] sexp_type == ","val [] sexp_type "," s line ","result line= "," lexer lineno "," lexer "," debug ","str line "," dedent ","func =~ "," s  lexer lineno  ","val []  line= "," s  line= ","str line  line= ","result  lexer lineno = "," lexer  lexer lineno no ","str  lexer lineno  "," dedent  line "]}," Ruby24Parser _reduce_468":{"type":"method","name":"_reduce_468","children":[],"call":[" s ","val [] ","str value ","str sexp_type == ","str sexp_type "," literal_concat "," s  value "," s  sexp_type == "," s  sexp_type "]}," Ruby24Parser _reduce_467":{"type":"method","name":"_reduce_467","children":[],"call":["val [] dup << "," new_symbol_list_entry ","val [] dup ","val [] "," s "," s line "]}," Ruby24Parser _reduce_466":{"type":"method","name":"_reduce_466","children":[],"call":[" new_symbol_list "," s ","val [] "," s line "," debug ","val [] dup << "," new_symbol_list_entry ","val [] dup "]}," Ruby24Parser _reduce_465":{"type":"method","name":"_reduce_465","children":[],"call":["val [] "," s ","str value ","str sexp_type == ","str sexp_type "," new_symbol_list "," s  value "," s  sexp_type == "," s  sexp_type "]}," Ruby24Parser _reduce_464":{"type":"method","name":"_reduce_464","children":[],"call":[" s "," s line ","arg line ","val [] "]}," Ruby24Parser _reduce_463":{"type":"method","name":"_reduce_463","children":[],"call":[" literal_concat ","val [] "," s line "," s "]}," Ruby24Parser _reduce_461":{"type":"method","name":"_reduce_461","children":[],"call":["val [] dup << "," new_word_list_entry ","val [] dup ","val [] "," s line "," s "]}," Ruby24Parser _reduce_460":{"type":"method","name":"_reduce_460","children":[],"call":[" new_word_list "," s ","val [] ","result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s line ","var line ","val [] dup << "," new_word_list_entry ","val [] dup "," new_word_list  << "," s  << "," new_resbody  << ","val [] dup <<  << "]}," Ruby24Parser _reduce_459":{"type":"method","name":"_reduce_459","children":[],"call":["val [] "," s ","result << ","result line= "," new_when "," s line ","arg line "," new_word_list ","val []  << "," s  << "," new_when  << "," s line  << "," new_word_list  << ","val []  line= "," s  line= "," new_when  line= "," s line  line= "," new_word_list  line= "]}," Ruby24Parser _reduce_458":{"type":"method","name":"_reduce_458","children":[],"call":[" s ","result << "," new_resbody ","klasses line ","klasses << "," new_assign "," lexer lineno "," lexer ","val [] "," s  << "," new_resbody  << "," lexer lineno  << ","val []  << "]}," Ruby24Parser _reduce_457":{"type":"method","name":"_reduce_457","children":[],"call":[" new_regexp ","result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s "," lexer cmdarg restore "," lexer cmdarg "," lexer "," env unextend "," env "," new_do_body ","val [] ","result line= "," new_when "," s line ","var line "," new_regexp  << "," new_resbody  << "," new_do_body  << "," new_when  << "," s  << "," new_regexp  line= "," new_resbody  line= "," new_do_body  line= "," new_when  line= "," s  line= "]}," Ruby24Parser _reduce_456":{"type":"method","name":"_reduce_456","children":[],"call":[" new_xstring ","val [] "," lexer cmdarg store "," lexer cmdarg "," lexer "," lexer lineno "," s line ","arg line "," s "," new_regexp "]}," Ruby24Parser _reduce_455":{"type":"method","name":"_reduce_455","children":[],"call":[" new_string ","result << ","val [] ","result line= "," new_when "," lexer lineno "," lexer "," env extend "," env "," env unextend "," lexer cmdarg pop "," lexer cmdarg "," new_do_body "," new_xstring "," new_string  << "," new_when  << "," lexer lineno  << "," new_do_body  << "," new_xstring  << "," new_string  line= "," new_when  line= "," lexer lineno  line= "," new_do_body  line= "," new_xstring  line= "]}," Ruby24Parser _reduce_454":{"type":"method","name":"_reduce_454","children":[],"call":["val [] ","result << ","result line= "," new_when "," lexer lineno "," lexer "," lexer cmdarg pop "," lexer cmdarg "," lexer cmdarg restore "," env unextend "," env "," new_brace_body "," lexer cmdarg push ","result line "," new_resbody ","klasses line ","klasses << "," new_assign "," s line ","var line "," s "," new_string ","val []  << "," new_when  << "," lexer lineno  << "," new_brace_body  << "," new_resbody  << "," new_string  << ","val []  line= "," new_when  line= "," lexer lineno  line= "," new_brace_body  line= "," new_resbody  line= "," new_string  line= ","val []  line "," new_when  line "," lexer lineno  line "," new_brace_body  line "," new_resbody  line "," new_string  line "]}," Ruby24Parser _reduce_453":{"type":"method","name":"_reduce_453","children":[],"call":[" literal_concat ","val [] "," lexer lineno "," lexer "," lexer cmdarg restore "," lexer cmdarg "," env unextend "," env "," new_do_body "," lexer cmdarg store "," env extend "]}," Ruby24Parser _reduce_451":{"type":"method","name":"_reduce_451","children":[],"call":[" debug20 "," lexer cmdarg store "," lexer cmdarg "," lexer "," lexer lineno "," env extend "," env "," env unextend ","result line= "," list_append ","result << ","val [] ","result line "," new_when "," lexer cmdarg store  line= "," lexer lineno  line= "," list_append  line= "," new_when  line= "," lexer cmdarg store  << "," lexer lineno  << "," list_append  << "," new_when  << "," lexer cmdarg store  line "," lexer lineno  line "," list_append  line "," new_when  line "]}," Ruby24Parser _reduce_450":{"type":"method","name":"_reduce_450","children":[],"call":["val [] ","val []= "," s ","val [] value ","val [] sexp_type == ","val [] sexp_type "," lexer lineno "," lexer "," env extend "," env "," lexer cmdarg pop "," lexer cmdarg "," lexer cmdarg restore "," env unextend "," new_brace_body "," s line ","arg line "," debug20 "]}," Ruby24Parser _reduce_448":{"type":"method","name":"_reduce_448","children":[],"call":[" s ","val [] "," lexer cmdarg store "," lexer cmdarg "," lexer "," lexer lineno "," env extend "," env "," env unextend "," lexer cmdarg pop "," new_do_body "," list_append "]}," Ruby24Parser _reduce_447":{"type":"method","name":"_reduce_447","children":[],"call":[" s ","val [] "," lexer lineno "," lexer "," env extend "," env "," env unextend ","result line= "," new_aref "," lexer cmdarg push "," lexer cmdarg "," s line ","arg line "," s  line= "," lexer lineno  line= "," new_aref  line= "," s line  line= "]}," Ruby24Parser _reduce_445":{"type":"method","name":"_reduce_445","children":[],"call":[" s "," lexer lineno "," lexer "," env extend "," env "," env unextend ","result line= "," new_super ","val [] "," new_aref "," lexer cmdarg pop "," lexer cmdarg "," lexer cmdarg restore "," new_brace_body "," new_do_body "," lexer lineno  line= "," new_super  line= "," new_aref  line= "," new_brace_body  line= "," new_do_body  line= "]}," Ruby24Parser _reduce_443":{"type":"method","name":"_reduce_443","children":[],"call":["val [] "," lexer lineno "," lexer "," env extend "," env "," new_aref "," new_call "," new_super "]}," Ruby24Parser _reduce_440":{"type":"method","name":"_reduce_440","children":[],"call":[" s ","val [] "," new_super "," new_call ","val [] to_sym "," env unextend "," env ","result line "," lexer lineno "," lexer "," env extend "," s  line "," new_super  line "," new_call  line "," lexer lineno  line "]}," Ruby24Parser _reduce_439":{"type":"method","name":"_reduce_439","children":[],"call":[" new_call ","val [] ","result line ","call concat ","args sexp_body ","val [] to_sym "," lexer lineno "," lexer "," env extend "," env "," env unextend "," s "," new_call  line ","call concat  line "," lexer lineno  line "," s  line "]}," Ruby24Parser _reduce_438":{"type":"method","name":"_reduce_438","children":[],"call":["result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s "," new_call ","val [] ","val [] to_sym "," lexer lineno "," lexer "," new_aref "," env extend "," env "," new_resbody  << "," new_call  << "," lexer lineno  << "," new_aref  << "]}," Ruby24Parser _reduce_435":{"type":"method","name":"_reduce_435","children":[],"call":["result << ","val [] ","result line= "," new_when "," new_call ","val [] to_sym ","val [] concat ","args sexp_body "," call_args ","iter2 insert ","name to_sym "," new_aref "," new_when  << "," new_call  << ","val [] concat  << "," new_aref  << "," new_when  line= "," new_call  line= ","val [] concat  line= "," new_aref  line= "," new_ new_call  "," call_args  sexp_body "," call_ call_args  ","  new_call _args "]}," Ruby24Parser _reduce_434":{"type":"method","name":"_reduce_434","children":[],"call":[" lexer lineno "," lexer ","val [] concat ","args sexp_body ","val [] "," call_args ","result insert "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? ","iter2 insert "," new_call ","name to_sym "," s line "," s ","result << ","result line= "," new_when "," invert_block_call  [] concat "," call_args  sexp_body "," invert_block_call  [] "," call_ call_args  ","  new_call _args "," lexer lineno  insert ","val [] concat  insert "," new_call  insert "," s line  insert "," new_when  insert "," invert_block_ new_call  "," invert_block_call  [] block_pass? "," new_ new_call  "," lexer lineno  << ","val [] concat  << "," new_call  << "," s line  << "," new_when  << "," lexer lineno  line= ","val [] concat  line= "," new_call  line= "," s line  line= "," new_when  line= "]}," Ruby24Parser _reduce_433":{"type":"method","name":"_reduce_433","children":[],"call":[" env unextend "," env ","result line= "," new_iter "," lexer lineno "," lexer ","iter2 insert "," new_call ","name to_sym ","iter line ","val [] ","val [] to_sym ","id to_sym "," new_super "," new_iter  line= "," lexer lineno  line= ","iter line  line= "," new_call  line= "," new_super  line= "," new_ new_call  "]}," Ruby24Parser _reduce_432":{"type":"method","name":"_reduce_432","children":[],"call":["iter2 insert "," new_call ","name to_sym ","val [] ","result insert "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? ","op to_sym "," env unextend "," env ","result line= "," new_iter "," new_ new_call  "," invert_block_call  [] ","val []  insert "," new_call  insert "," new_iter  insert "," invert_block_ new_call  "," invert_block_call  [] block_pass? ","val []  line= "," new_call  line= "," new_iter  line= "]}," Ruby24Parser _reduce_431":{"type":"method","name":"_reduce_431","children":[],"call":[" lexer lineno "," lexer "," env extend "," env ","iter2 insert "," new_call ","name to_sym ","val [] ","val [] to_sym ","iter line ","op to_sym ","result line_max= "," new_ new_call  "," lexer lineno  line_max= "," new_call  line_max= ","val []  line_max= ","iter line  line_max= "]}," Ruby24Parser _reduce_430":{"type":"method","name":"_reduce_430","children":[],"call":[" env unextend "," env ","result line= "," new_iter "," new_call ","val [] ","val [] to_sym ","result insert "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? ","result == "," s ","call concat ","args sexp_body ","result line_max= ","args line_max ","id to_sym "," lexer lineno "," lexer "," env extend "," new_iter  line= "," new_call  line= ","val []  line= ","call concat  line= "," lexer lineno  line= "," invert_block_call  [] "," invert_block_call  [] to_sym "," new_iter  insert "," new_call  insert ","val []  insert ","call concat  insert "," lexer lineno  insert "," invert_block_call  [] block_pass? "," new_iter  == "," new_call  == ","val []  == ","call concat  == "," lexer lineno  == "," new_iter  line_max= "," new_call  line_max= ","val []  line_max= ","call concat  line_max= "," lexer lineno  line_max= "]}," Ruby24Parser _reduce_429":{"type":"method","name":"_reduce_429","children":[],"call":["result insert ","val [] "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? "," args ","iter2 insert "," new_call ","name to_sym ","op to_sym "," env unextend "," env ","result line= "," new_iter ","val []  insert "," args  insert "," new_call  insert "," new_iter  insert "," invert_block_call  [] "," invert_block_ new_call  "," invert_block_call  [] block_pass? "," new_ new_call  ","val []  line= "," args  line= "," new_call  line= "," new_iter  line= "]}," Ruby24Parser _reduce_428":{"type":"method","name":"_reduce_428","children":[],"call":[" lexer lineno "," lexer "," env extend "," env ","val [] "," env unextend ","result line= "," new_iter "," s line "," s "," lexer cmdarg lexpop "," lexer cmdarg "," lexer cmdarg restore "," lexer lpar_beg= ","result == ","iter2 insert "," new_call ","name to_sym ","result line_max= ","op to_sym "," lexer lineno  line= ","val []  line= "," new_iter  line= "," new_call  line= "," lexer lineno  == ","val []  == "," new_iter  == "," new_call  == "," new_ s line  "," new_ new_call  "," lexer lineno  line_max= ","val []  line_max= "," new_iter  line_max= "," new_call  line_max= "]}," Ruby24Parser _reduce_427":{"type":"method","name":"_reduce_427","children":[],"call":[" new_aref ","val [] "," lexer cmdarg store "," lexer cmdarg "," lexer "," args "," new_call ","id to_sym ","result line_max= ","args line_max ","call concat ","args sexp_body "," lexer lineno "," env extend "," env "," new_aref  line_max= ","val []  line_max= "," lexer cmdarg store  line_max= "," args  line_max= "," new_call  line_max= "," lexer lineno  line_max= "]}," Ruby24Parser _reduce_426":{"type":"method","name":"_reduce_426","children":[],"call":[" s ","val [] ","result == "," lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," lexer lineno "," env extend "," env "," env unextend ","result line= "," new_iter "," s line "," lexer cmdarg pop "," lexer cmdarg ","result insert "," invert_block_call "," inverted? "," syntax_error ","cmd block_pass? ","iter2 insert "," new_call ","name to_sym "," new_aref "," invert_block_call  [] "," s  == ","val []  == "," new_iter  == "," new_aref  == "," s  line= ","val []  line= "," new_iter  line= "," new_aref  line= "," s  insert ","val []  insert "," new_iter  insert "," new_aref  insert "," invert_block_ s line  "," invert_block_ new_call  "," new_ s line  "," new_ new_call  "]}," Ruby24Parser _reduce_425":{"type":"method","name":"_reduce_425","children":[],"call":[" new_super ","val [] ","result == "," s "," args "," lexer cmdarg push "," lexer cmdarg "," lexer ","iter line ","iter2 insert "," new_call ","name to_sym "," new_super  == ","val []  == "," args  == ","iter line  == "," s  == "," new_ new_call  "]}," Ruby24Parser _reduce_424":{"type":"method","name":"_reduce_424","children":[],"call":[" new_call ","val [] "," args "," env unextend "," env ","result line= "," new_iter "," lexer cmdarg lexpop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," lexer lpar_beg= "," s line "," s ","id to_sym "," lexer lineno "," lexer paren_nest "," lexer lpar_beg "," env extend "," new_super "," new_ new_call  "," new_call  line= "," args  line= "," new_iter  line= "," s line  line= ","val []  line= "," new_super  line= ","result  lexer lineno = "," s  lexer lineno  "," lexer  lexer lineno no "]}," Ruby24Parser _reduce_423":{"type":"method","name":"_reduce_423","children":[],"call":[" new_call ","val [] "," env unextend "," env ","result line= "," new_iter "," lexer cmdarg lexpop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," lexer lpar_beg= "," lexer lineno "," lexer cmdarg store "," args ","result insert "," invert_block_call "," inverted? "," syntax_error ","cmd block_pass? "," new_ new_call  "," invert_block_call  [] "," new_call  line= "," new_iter  line= "," args  line= ","val []  line= "," new_call  insert "," new_iter  insert "," args  insert ","val []  insert "," invert_block_ new_call  "]}," Ruby24Parser _reduce_422":{"type":"method","name":"_reduce_422","children":[],"call":[" new_call ","val [] to_sym ","val [] "," lexer lineno "," lexer "," lexer cmdarg store "," lexer cmdarg "," lexer lpar_beg= "," lexer paren_nest "," lexer lpar_beg "," env extend "," env "," args "," s line "," s ","id to_sym ","result == ","iter line "," lexer  lexer lineno no "," s  lexer lineno  "," new_call  == "," lexer lpar_beg  == "," lexer lineno  == "," args  == "," s line  == ","val []  == ","iter line  == ","iter  lexer lineno  "]}," Ruby24Parser _reduce_421":{"type":"method","name":"_reduce_421","children":[],"call":[" new_call ","val [] ","val [] to_sym "," lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," lexer lineno "," env extend "," env "," args "]}," Ruby24Parser _reduce_420":{"type":"method","name":"_reduce_420","children":[],"call":[" new_call ","val [] ","val [] to_sym "," s "," args "," env unextend "," env ","result line "," new_iter "," s line "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer lpar_beg= "," new_ s line  "," new_call  line "," s  line "," args  line "," new_iter  line ","val []  line "]}," Ruby24Parser _reduce_419":{"type":"method","name":"_reduce_419","children":[],"call":["val [] concat ","args sexp_body ","val [] "," call_args "," s ","val [] to_sym "," args "," lexer cmdarg push "," lexer cmdarg "," lexer ","result == "," new_call "," call_args  sexp_body "," call_ call_args  ","  call_args  ","val [] concat  == "," s  == "," args  == ","val []  == "," new_call  == "]}," Ruby24Parser _reduce_418":{"type":"method","name":"_reduce_418","children":[],"call":[" lexer lineno "," lexer "," args "," s line "," s "," lexer lpar_beg= "," lexer paren_nest "," lexer lpar_beg "," env extend "," env ","val [] concat ","args [] ","val [] "," call_args ","  call_args  "," call_args  [] "," call_ call_args  "]}," Ruby24Parser _reduce_417":{"type":"method","name":"_reduce_417","children":[],"call":["iter2 insert "," new_call ","name to_sym "," args "," env unextend "," env ","result line "," new_iter "," s line "," s "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer lpar_beg= "," lexer lineno "," new_ new_call  "," new_ s line  "," args  line "," new_iter  line "," lexer lineno  line "]}," Ruby24Parser _reduce_416":{"type":"method","name":"_reduce_416","children":[],"call":["iter2 insert "," new_call ","name to_sym "," args "," lexer command_start= "," lexer "," s line "," lexer lineno "," s ","id to_sym "," wrap ","val [] "," lexer cmdarg push "," lexer cmdarg "," new_ new_call  "]}," Ruby24Parser _reduce_415":{"type":"method","name":"_reduce_415","children":[],"call":[" new_call ","val [] ","val [] to_sym "," args "," lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," lexer lineno "," env extend "," env ","iter2 insert ","name to_sym "," new_ new_call  "]}," Ruby24Parser _reduce_414":{"type":"method","name":"_reduce_414","children":[],"call":["result insert ","val [] "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? "," args "," s "," lexer command_start= "," lexer "," new_call ","val [] to_sym ","val []  insert "," args  insert "," s  insert "," new_call  insert "," invert_block_call  [] "," invert_block_call  [] block_pass? "," invert_block_call  [] to_sym "]}," Ruby24Parser _reduce_413":{"type":"method","name":"_reduce_413","children":[],"call":[" env unextend "," env ","result line= ","val [] "," new_iter "," s "," args "," wrap ","result insert "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? "," new_iter  line= "," s  line= "," args  line= "," wrap  line= ","val []  line= "," invert_block_call  [] "," val []  "," new_iter  insert "," s  insert "," args  insert "," wrap  insert ","val []  insert "," invert_block_call  [] block_pass? "]}," Ruby24Parser _reduce_412":{"type":"method","name":"_reduce_412","children":[],"call":[" args "," lexer command_start= "," lexer "," env unextend "," env ","result line= ","val [] "," new_iter "," val []  "," args  line= "," new_iter  line= "]}," Ruby24Parser _reduce_411":{"type":"method","name":"_reduce_411","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," lexer command_start= "," args "]}," Ruby24Parser _reduce_410":{"type":"method","name":"_reduce_410","children":[],"call":["val [] "," args "," s line "," lexer lineno "," lexer "," s "," env extend "," env "]}," Ruby24Parser _reduce_409":{"type":"method","name":"_reduce_409","children":[],"call":["val [] "," args "]}," Ruby24Parser _reduce_408":{"type":"method","name":"_reduce_408","children":[],"call":["result == "," s ","val [] "," args "," lexer command_start= "," lexer ","val []  == "," args  == "]}," Ruby24Parser _reduce_407":{"type":"method","name":"_reduce_407","children":[],"call":[" args "," s line "," lexer lineno "," lexer "," s ","result == ","val [] "," args  == "," s line  == ","val []  == "]}," Ruby24Parser _reduce_406":{"type":"method","name":"_reduce_406","children":[],"call":[" env unextend "," env "," new_iter "," new_call "," lexer lpar_beg= "," lexer "," args "," new_ new_call  "]}," Ruby24Parser _reduce_405":{"type":"method","name":"_reduce_405","children":[],"call":[" lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," lexer lineno "," env extend "," env "," args "," args << "," lexer command_start= "," env unextend "," new_iter "," new_call "," new_ new_call  "]}," Ruby24Parser _reduce_403":{"type":"method","name":"_reduce_403","children":[],"call":[" s ","val [] to_sym ","val [] "," args "," args << "]}," Ruby24Parser _reduce_402":{"type":"method","name":"_reduce_402","children":[],"call":[" args "," s ","val [] to_sym ","val [] "]}," Ruby24Parser _reduce_401":{"type":"method","name":"_reduce_401","children":[],"call":[" args "]}," Ruby24Parser _reduce_400":{"type":"method","name":"_reduce_400","children":[],"call":[" args "]}," Ruby24Parser _reduce_398":{"type":"method","name":"_reduce_398","children":[],"call":[" args "]}," Ruby24Parser _reduce_397":{"type":"method","name":"_reduce_397","children":[],"call":[" s "," lexer command_start= "," lexer "," args ","result line "," call_args "," lexer lineno "," args << "," s  line "," args  line "," call_args  line "," args <<  line ","result  lexer lineno  "," lexer  lexer lineno no "]}," Ruby24Parser _reduce_396":{"type":"method","name":"_reduce_396","children":[],"call":[" args "," call_args "," s "," lexer command_start= "," lexer "]}," Ruby24Parser _reduce_394":{"type":"method","name":"_reduce_394","children":[],"call":[" args "," call_args "," args << "]}," Ruby24Parser _reduce_393":{"type":"method","name":"_reduce_393","children":[],"call":[" args "," call_args "," block_var "]}," Ruby24Parser _reduce_392":{"type":"method","name":"_reduce_392","children":[],"call":[" args "," call_args "," block_var "]}," Ruby24Parser _reduce_391":{"type":"method","name":"_reduce_391","children":[],"call":[" args "," call_args "," block_var "]}," Ruby24Parser _reduce_390":{"type":"method","name":"_reduce_390","children":[],"call":[" args "," call_args "," block_var "]}," Ruby24Parser _reduce_389":{"type":"method","name":"_reduce_389","children":[],"call":[" args "," call_args "," block_var ","result line "," args  line "," call_args  line "," block_var  line "]}," Ruby24Parser _reduce_388":{"type":"method","name":"_reduce_388","children":[],"call":[" args "," block_var "," call_args "]}," Ruby24Parser _reduce_387":{"type":"method","name":"_reduce_387","children":[],"call":[" args "," block_var ","(str \"*\") to_sym "," call_args "]}," Ruby24Parser _reduce_386":{"type":"method","name":"_reduce_386","children":[],"call":[" args "," block_var ","(str \"*\") to_sym "," call_args ","result line "," args  line "," block_var  line "," call_args  line "]}," Ruby24Parser _reduce_385":{"type":"method","name":"_reduce_385","children":[],"call":[" args "," block_var ","(str \"*\") to_sym ","result line "," lexer lineno "," lexer "," call_args "," args  line "," block_var  line "," call_args  line "]}," Ruby24Parser _reduce_384":{"type":"method","name":"_reduce_384","children":[],"call":[" args "," block_var "," list_append ","val [] ","(str \"*\") to_sym ","result line "," call_args "," args  line "," block_var  line "," list_append  line "," call_args  line "]}," Ruby24Parser _reduce_383":{"type":"method","name":"_reduce_383","children":[],"call":[" args "," block_var ","(str \"*\") to_sym "," s line "," lexer lineno "," lexer "," s "," call_args "]}," Ruby24Parser _reduce_382":{"type":"method","name":"_reduce_382","children":[],"call":[" args "," block_var ","(str \"*\") to_sym ","val [] "," list_append ","result line "," lexer lineno "," lexer "," args  line "," block_var  line ","val []  line "," list_append  line "]}," Ruby24Parser _reduce_381":{"type":"method","name":"_reduce_381","children":[],"call":[" args "," block_var ","(str \"*\") to_sym "," s line "," lexer lineno "," lexer "," s ","result line "," args  line "," block_var  line "," s line  line "]}," Ruby24Parser _reduce_380":{"type":"method","name":"_reduce_380","children":[],"call":[" args "," block_var "," list_append ","val [] ","val [] delete_at ","val [] [] nil? ","val [] [] "]}," Ruby24Parser _reduce_379":{"type":"method","name":"_reduce_379","children":[],"call":[" args "," list_append ","val [] "," s "," block_var "]}," Ruby24Parser _reduce_377":{"type":"method","name":"_reduce_377","children":[],"call":[" args ","val [] "," s line "," lexer lineno "," lexer "," s "," block_var "]}," Ruby24Parser _reduce_376":{"type":"method","name":"_reduce_376","children":[],"call":[" call_args ","val [] delete_at ","val [] ","val [] [] nil? ","val [] [] "," s line "," s "," block_var "," args "]}," Ruby24Parser _reduce_375":{"type":"method","name":"_reduce_375","children":[],"call":[" call_args ","val [] delete_at ","val [] ","val [] [] nil? ","val [] [] "," list_append "]}," Ruby24Parser _reduce_374":{"type":"method","name":"_reduce_374","children":[],"call":[" call_args ","val [] "," s line "," s ","val [] delete_at ","val [] [] nil? ","val [] [] "," lexer lineno "," lexer "]}," Ruby24Parser _reduce_373":{"type":"method","name":"_reduce_373","children":[],"call":[" call_args ","val [] "]}," Ruby24Parser _reduce_372":{"type":"method","name":"_reduce_372","children":[],"call":[" block_var "," s ","val [] "," call_args "]}," Ruby24Parser _reduce_371":{"type":"method","name":"_reduce_371","children":[],"call":[" block_var "," s ","val [] ","val [] delete_at ","val [] [] nil? ","val [] [] "]}," Ruby24Parser _reduce_370":{"type":"method","name":"_reduce_370","children":[],"call":[" block_var "," s line "," s "]}," Ruby24Parser _reduce_369":{"type":"method","name":"_reduce_369","children":[],"call":[" block_var ","val [] "]}," Ruby24Parser _reduce_368":{"type":"method","name":"_reduce_368","children":[],"call":[" block_var "]}," Ruby24Parser _reduce_367":{"type":"method","name":"_reduce_367","children":[],"call":[" block_var "," s line "," s "]}," Ruby24Parser _reduce_366":{"type":"method","name":"_reduce_366","children":[],"call":[" block_var ","(str \"*\") to_sym "]}," Ruby24Parser _reduce_365":{"type":"method","name":"_reduce_365","children":[],"call":[" block_var ","(str \"*\") to_sym "]}," Ruby24Parser _reduce_364":{"type":"method","name":"_reduce_364","children":[],"call":[" block_var ","(str \"*\") to_sym "]}," Ruby24Parser _reduce_363":{"type":"method","name":"_reduce_363","children":[],"call":[" list_append ","val [] "," block_var "]}," Ruby24Parser _reduce_362":{"type":"method","name":"_reduce_362","children":[],"call":[" s ","val [] "," list_append "]}," Ruby24Parser _reduce_361":{"type":"method","name":"_reduce_361","children":[],"call":["val [] "," s "]}," Ruby24Parser _reduce_359":{"type":"method","name":"_reduce_359","children":[],"call":["val [] delete_at ","val [] ","val [] [] nil? ","val [] [] "]}," Ruby24Parser _reduce_357":{"type":"method","name":"_reduce_357","children":[],"call":["val [] "]}," Ruby24Parser _reduce_355":{"type":"method","name":"_reduce_355","children":[],"call":[" s ","val [] "]}," Ruby24Parser _reduce_337":{"type":"method","name":"_reduce_337","children":[],"call":[" value_expr ","val [] "," lexer comments "," lexer "," in_def= "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," new_defn "," env extend "," comments push "," comments "," lexer cmdarg stack dup "," in_def "," lexer lineno "," new_module "," lexer lex_state= "," s line "," s "]}," Ruby24Parser _reduce_336":{"type":"method","name":"_reduce_336","children":[],"call":[" s "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," env extend "," env "," in_def= "," comments push "," lexer comments "," comments "," lexer cmdarg stack dup "," in_def "," env unextend "," new_module "," new_sclass "," yyerror "," in_single > "," in_single "," lexer ignore_body_comments "," lexer cmdarg pop "," lexer cond pop "," lexer cond "," new_defn "," new_defs ","val delete_at "," value_expr ","val [] "]}," Ruby24Parser _reduce_335":{"type":"method","name":"_reduce_335","children":[],"call":[" s "," lexer comments "," lexer "," env unextend "," env "," new_module "," env extend "," yyerror "," in_single > "," in_single "," in_def "," comments push "," comments "," in_single= "," lexer lineno "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," in_def= "," lexer lex_state= ","EXPR_ENDFN  | "]}," Ruby24Parser _reduce_334":{"type":"method","name":"_reduce_334","children":[],"call":[" s "," env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," lexer "," comments "," lexer lineno "," in_def= "," env unextend "," new_sclass "," lexer ignore_body_comments "," new_module "," lexer lex_state= "]}," Ruby24Parser _reduce_333":{"type":"method","name":"_reduce_333","children":[],"call":[" s "," lexer lineno "," lexer "," lexer comments "," env unextend "," env "," new_sclass "," env extend "," in_single= "," in_single "," yyerror "," in_single > "," in_def "," lexer ignore_body_comments "," in_def= "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," new_defn "]}," Ruby24Parser _reduce_332":{"type":"method","name":"_reduce_332","children":[],"call":[" lexer comments "," lexer "," in_single "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg ","result [] line ","result [] "," new_defs ","val [] "," new_sclass "," env extend "," in_single= "," new_class "," in_def= "," in_def "," lexer lineno "," lexer cond push "," lexer cond "," lexer cmdarg push "," s "," new_defs  [] line "," new_sclass  [] line "," in_single  [] line "," new_class  [] line "," in_def  [] line "," lexer lineno  [] line "," s  [] line "," new_defs  [] "," new_sclass  [] "," in_single  [] "," new_class  [] "," in_def  [] "," lexer lineno  [] "," s  [] "]}," Ruby24Parser _reduce_331":{"type":"method","name":"_reduce_331","children":[],"call":[" lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," lexer cmdarg stack dup "," lexer lineno "," lexer lex_state= "," env extend "," env "," in_single "," in_single= "," in_def= "," in_def "," yyerror "," in_single > "," comments push "," lexer comments "," comments "," lexer ignore_body_comments "," env unextend "," new_sclass "," new_module ","result [] line ","val [] ","result [] "," new_defs "," in_single  [] line "," in_def  [] line "," lexer lineno  [] line "," new_sclass  [] line "," new_module  [] line "," new_defs  [] line "," in_single  [] "," in_def  [] "," lexer lineno  [] "," new_sclass  [] "," new_module  [] "," new_defs  [] "]}," Ruby24Parser _reduce_330":{"type":"method","name":"_reduce_330","children":[],"call":[" lexer lex_state= "," lexer "," comments push "," lexer comments "," comments "," in_def= "," in_def "," lexer lineno "," env unextend "," env "," new_class "," env extend "," in_single= "," in_single "," yyerror "," in_single > "]}," Ruby24Parser _reduce_329":{"type":"method","name":"_reduce_329","children":[],"call":[" lexer comments "," lexer "," in_def= "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," new_defn ","val [] "," lexer lineno "," new_class "," new_for "," env extend "," yyerror "," in_single > "," in_single "," in_def "," comments push "," comments "," lexer ignore_body_comments "," new_sclass "," lexer lex_state= "]}," Ruby24Parser _reduce_328":{"type":"method","name":"_reduce_328","children":[],"call":[" lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," env extend "," env "," in_def= "," comments push "," lexer comments "," comments "," lexer cmdarg stack dup "," in_def "," env unextend "," new_class "," yyerror "," in_single > "," in_single "," new_case "," lexer lineno "," in_single= "," new_defn ","val [] "]}," Ruby24Parser _reduce_327":{"type":"method","name":"_reduce_327","children":[],"call":[" lexer comments "," lexer "," env unextend "," env "," new_module "," env extend "," yyerror "," in_single > "," in_single "," in_def "," comments push "," comments "," lexer lineno "," new_case "," new_for "," lexer ignore_body_comments "," new_class "," in_def= "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer cmdarg stack dup "]}," Ruby24Parser _reduce_326":{"type":"method","name":"_reduce_326","children":[],"call":[" env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," lexer "," comments "," lexer lineno "," new_for "," new_until "," new_case "," lexer ignore_body_comments "," env unextend "," new_class "," new_module "]}," Ruby24Parser _reduce_325":{"type":"method","name":"_reduce_325","children":[],"call":[" lexer lineno "," lexer "," new_for "," new_case "," new_while "," env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," comments "]}," Ruby24Parser _reduce_324":{"type":"method","name":"_reduce_324","children":[],"call":[" lexer comments "," lexer "," env unextend "," env "," new_sclass "," new_case "," new_if "," new_until "," new_for "," lexer lineno "]}," Ruby24Parser _reduce_323":{"type":"method","name":"_reduce_323","children":[],"call":[" env extend "," env "," in_single= "," in_single "," new_case "," new_until "," new_if "," new_while "," lexer comments "," lexer "," env unextend "," new_sclass "]}," Ruby24Parser _reduce_322":{"type":"method","name":"_reduce_322","children":[],"call":[" in_def= "," in_def "," new_until "," new_while ","val [] "," new_if "," new_case "," env extend "," env "," in_single= "," in_single "]}," Ruby24Parser _reduce_321":{"type":"method","name":"_reduce_321","children":[],"call":[" lexer lineno "," lexer "," new_while "," new_if ","iter insert "," block_dup_check ","val [] "," new_until "," in_def= "," in_def "]}," Ruby24Parser _reduce_320":{"type":"method","name":"_reduce_320","children":[],"call":[" lexer comments "," lexer "," env unextend "," env "," new_class "," new_if ","val [] "," new_while "," lexer lineno "]}," Ruby24Parser _reduce_319":{"type":"method","name":"_reduce_319","children":[],"call":[" env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," lexer "," comments "," new_if ","val [] ","iter insert "," block_dup_check "," env unextend "," new_class "]}," Ruby24Parser _reduce_318":{"type":"method","name":"_reduce_318","children":[],"call":[" lexer lineno "," lexer ","val [] ","iter insert "," block_dup_check "," debug20 "," new_if "," env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," comments "]}," Ruby24Parser _reduce_317":{"type":"method","name":"_reduce_317","children":[],"call":[" new_for ","val [] ","iter insert "," block_dup_check "," new_call "," lexer lineno "," lexer "]}," Ruby24Parser _reduce_316":{"type":"method","name":"_reduce_316","children":[],"call":[" lexer cond pop "," lexer cond "," lexer ","call line= ","iter line ","iter insert ","val [] "," s line "," s "," debug20 "," block_dup_check "," new_for "]}," Ruby24Parser _reduce_315":{"type":"method","name":"_reduce_315","children":[],"call":[" lexer cond push "," lexer cond "," lexer ","call line= ","iter line ","iter insert ","val [] "," debug20 "," new_yield "," new_call "," lexer cond pop "]}," Ruby24Parser _reduce_314":{"type":"method","name":"_reduce_314","children":[],"call":[" new_case "," debug20 "," s ","val [] "," new_yield "," s line ","iter insert "," lexer cond push "," lexer cond "," lexer "]}," Ruby24Parser _reduce_313":{"type":"method","name":"_reduce_313","children":[],"call":[" new_case "," s ","val [] "," new_yield "," debug "]}," Ruby24Parser _reduce_312":{"type":"method","name":"_reduce_312","children":[],"call":[" new_until ","val [] "," s "," new_yield "," s line "," new_call "," new_case "]}," Ruby24Parser _reduce_311":{"type":"method","name":"_reduce_311","children":[],"call":[" lexer cond pop "," lexer cond "," lexer "," new_yield "," new_hash ","val [] "," s line "," s "," new_until "]}," Ruby24Parser _reduce_310":{"type":"method","name":"_reduce_310","children":[],"call":[" lexer cond push "," lexer cond "," lexer "," new_yield ","val [] "," lexer lineno "," s line "," s "," new_yield line "," lexer cond pop "]}," Ruby24Parser _reduce_309":{"type":"method","name":"_reduce_309","children":[],"call":[" new_while ","val [] "," new_yield "," s ","result line ","result sexp_type= "," new_hash "," new_yield line "," lexer cond push "," lexer cond "," lexer "," new_while  line "," new_yield  line "," s  line "," new_hash  line "," new_yield line  line "," new_while  sexp_type= "," new_yield  sexp_type= "," s  sexp_type= "," new_hash  sexp_type= "," new_yield line  sexp_type= "]}," Ruby24Parser _reduce_308":{"type":"method","name":"_reduce_308","children":[],"call":[" lexer cond pop "," lexer cond "," lexer "," s "," new_hash "," lexer lineno "," new_yield ","val [] "," new_yield line "," new_while "]}," Ruby24Parser _reduce_307":{"type":"method","name":"_reduce_307","children":[],"call":[" lexer cond push "," lexer cond "," lexer "," new_hash "," lexer lineno "," s line "," s ","id to_sym ","result line ","result sexp_type= "," lexer cond pop "," new_hash  line "," lexer lineno  line "," s line  line "," new_hash  sexp_type= "," lexer lineno  sexp_type= "," s line  sexp_type= "]}," Ruby24Parser _reduce_306":{"type":"method","name":"_reduce_306","children":[],"call":[" new_if ","val [] "," lexer lineno "," lexer ","result sexp_type= "," s "," s line ","expr line ","id to_sym "," new_hash "," lexer cond push "," lexer cond "," new_if  sexp_type= "," lexer lineno  sexp_type= "," s line  sexp_type= "," new_hash  sexp_type= "]}," Ruby24Parser _reduce_305":{"type":"method","name":"_reduce_305","children":[],"call":[" new_if ","val [] ","result sexp_type= "," s ","val [] to_sym ","result paren= "," s line "," lexer lineno "," lexer ","id to_sym "," new_if  sexp_type= "," s  sexp_type= "," s line  sexp_type= "," lexer lineno  sexp_type= "," new_if  paren= "," s  paren= "," s line  paren= "," lexer lineno  paren= "]}," Ruby24Parser _reduce_304":{"type":"method","name":"_reduce_304","children":[],"call":["val [] "," s ","val [] to_sym "," lexer cmdarg restore "," lexer cmdarg "," lexer "," warning "," s line ","expr line ","id to_sym ","result line ","result sexp_type= ","result line_max= "," new_if ","val []  line "," s  line "," s line  line "," new_if  line ","val []  sexp_type= "," s  sexp_type= "," s line  sexp_type= "," new_if  sexp_type= ","val []  line_max= "," s  line_max= "," s line  line_max= "," new_if  line_max= "]}," Ruby24Parser _reduce_303":{"type":"method","name":"_reduce_303","children":[],"call":["iter insert "," block_dup_check ","val [] "," s ","val [] to_sym ","result paren= "," lexer lex_state= "," lexer "," s line "," lexer lineno "," s  paren= "," lexer lineno  paren= ","val []  paren= "]}," Ruby24Parser _reduce_301":{"type":"method","name":"_reduce_301","children":[],"call":["call line= ","iter line ","iter insert ","val [] "," lexer cmdarg restore "," lexer cmdarg "," lexer "," warning "," lexer lex_state= "," s line "," s ","expr line ","id to_sym "]}," Ruby24Parser _reduce_300":{"type":"method","name":"_reduce_300","children":[],"call":[" debug20 "," lexer lex_state= "," lexer "," lexer cmdarg store "," lexer cmdarg "," lexer lineno "," s line "," s ","result paren= ","call line= ","iter line ","iter insert ","val [] "," lexer cmdarg store  paren= "," lexer lineno  paren= "," s line  paren= "]}," Ruby24Parser _reduce_299":{"type":"method","name":"_reduce_299","children":[],"call":[" s ","val [] "," lexer cmdarg store "," lexer cmdarg "," lexer "," debug20 ","result line= "," lexer lineno "," lexer lex_state= "," s  line= "," lexer cmdarg store  line= "," lexer lineno  line= "]}," Ruby24Parser _reduce_298":{"type":"method","name":"_reduce_298","children":[],"call":[" s ","val [] "," debug20 ","result line= "," lexer lineno "," lexer "," new_begin "," lexer cmdarg pop "," lexer cmdarg "," lexer lex_state= "," s  line= "," lexer lineno  line= "," new_begin  line= "]}," Ruby24Parser _reduce_297":{"type":"method","name":"_reduce_297","children":[],"call":[" new_yield ","result line= ","val [] "," s "," lexer lineno "," lexer "," new_call ","msg to_sym "," lexer cmdarg push "," lexer cmdarg "," s line "," new_yield  line= "," s  line= "," lexer lineno  line= "," new_call  line= "," s line  line= "]}," Ruby24Parser _reduce_296":{"type":"method","name":"_reduce_296","children":[],"call":[" new_yield "," lexer lineno "," lexer "," new_call ","val [] to_sym ","val [] ","msg to_sym "," lexer lex_state= "]}," Ruby24Parser _reduce_295":{"type":"method","name":"_reduce_295","children":[],"call":[" new_yield ","val [] "," new_call ","val [] to_sym "," new_begin "," lexer cmdarg pop "," lexer cmdarg "," lexer "]}," Ruby24Parser _reduce_294":{"type":"method","name":"_reduce_294","children":[],"call":[" s "," lexer lineno "," lexer "," lexer cmdarg push "," lexer cmdarg "," new_yield ","val [] "]}," Ruby24Parser _reduce_293":{"type":"method","name":"_reduce_293","children":[],"call":[" new_hash ","result line "," new_call ","msg to_sym "," s "," new_hash  line "," new_call  line "," s  line "]}," Ruby24Parser _reduce_292":{"type":"method","name":"_reduce_292","children":[],"call":[" lexer lineno "," lexer "," new_hash "]}," Ruby24Parser _reduce_291":{"type":"method","name":"_reduce_291","children":[],"call":["result sexp_type= "," s ","val [] "," lexer lineno "," lexer "," lexer lineno  sexp_type= "]}," Ruby24Parser _reduce_290":{"type":"method","name":"_reduce_290","children":[],"call":[" s ","val [] to_sym ","val [] ","result []= "," s  []= "]}," Ruby24Parser _reduce_289":{"type":"method","name":"_reduce_289","children":[],"call":[" s ","val [] to_sym ","val [] "]}," Ruby24Parser _reduce_288":{"type":"method","name":"_reduce_288","children":[],"call":["result paren= "," s ","val [] ","val [] to_sym "," s  paren= "]}," Ruby24Parser _reduce_287":{"type":"method","name":"_reduce_287","children":[],"call":["val [] "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," warning ","result paren= "," s ","val []  paren= "]}," Ruby24Parser _reduce_286":{"type":"method","name":"_reduce_286","children":[],"call":[" lexer lex_state= "," lexer "," s line ","arg line "," s ","val [] "," warning "]}," Ruby24Parser _reduce_285":{"type":"method","name":"_reduce_285","children":[],"call":[" lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," lexer cmdarg stack dup "," s ","val [] "," arg_concat "," s line ","arg line "," lexer lex_state= "]}," Ruby24Parser _reduce_284":{"type":"method","name":"_reduce_284","children":[],"call":[" debug20 "," s ","val [] "," arg_concat ","val [] << "]}," Ruby24Parser _reduce_283":{"type":"method","name":"_reduce_283","children":[],"call":["result line= ","val [] "," s "," arg_concat ","val [] << "," new_masgn_arg "," s  line= "," arg_concat  line= ","val [] <<  line= "," new_masgn_arg  line= "]}," Ruby24Parser _reduce_282":{"type":"method","name":"_reduce_282","children":[],"call":[" lexer lineno "," lexer ","val [] << ","val [] "," new_masgn_arg "," s line ","arg line "," s "]}," Ruby24Parser _reduce_281":{"type":"method","name":"_reduce_281","children":[],"call":[" new_call ","val [] to_sym ","val [] "," new_masgn_arg "," list_append "," s line "," s "," arg_concat "]}," Ruby24Parser _reduce_270":{"type":"method","name":"_reduce_270","children":[],"call":[" s ","val [] "," call_args "," arg_blk_pass "," array_to_hash "," lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg pop ","(sym :tLBRACE_ARG) include? "]}," Ruby24Parser _reduce_269":{"type":"method","name":"_reduce_269","children":[],"call":[" arg_concat ","val [] "," arg_blk_pass "," call_args "," array_to_hash "," lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg pop ","(sym :tLPAREN) include? "," last_token_type first "," last_token_type "]}," Ruby24Parser _reduce_268":{"type":"method","name":"_reduce_268","children":[],"call":["val [] << ","val [] "," arg_blk_pass "," call_args "," array_to_hash "]}," Ruby24Parser _reduce_267":{"type":"method","name":"_reduce_267","children":[],"call":[" new_masgn_arg ","val [] "," arg_blk_pass "," call_args "," warning "," array_to_hash "]}," Ruby24Parser _reduce_266":{"type":"method","name":"_reduce_266","children":[],"call":[" new_masgn_arg ","val [] "," call_args "," warning "," args "," array_to_hash "]}," Ruby24Parser _reduce_265":{"type":"method","name":"_reduce_265","children":[],"call":[" list_append "," s ","val [] "," args "," array_to_hash "," call_args "]}," Ruby24Parser _reduce_264":{"type":"method","name":"_reduce_264","children":[],"call":[" list_append ","val [] "," args "," array_to_hash "," call_args "," warning "]}," Ruby24Parser _reduce_263":{"type":"method","name":"_reduce_263","children":[],"call":[" s ","val [] "," args "," array_to_hash "]}," Ruby24Parser _reduce_262":{"type":"method","name":"_reduce_262","children":[],"call":[" s ","val [] "," args "," array_to_hash "]}," Ruby24Parser _reduce_260":{"type":"method","name":"_reduce_260","children":[],"call":["val [] "]}," Ruby24Parser _reduce_259":{"type":"method","name":"_reduce_259","children":[],"call":[" s ","val [] "]}," Ruby24Parser _reduce_258":{"type":"method","name":"_reduce_258","children":[],"call":["val [] "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," new_rescue "," new_resbody "," s "," remove_begin "," value_expr "," s line "," new_ remove_begin  "," new_res value_expr  "]}," Ruby24Parser _reduce_257":{"type":"method","name":"_reduce_257","children":[],"call":[" lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg stack dup "," lexer cmdarg stack "," new_rescue "," new_resbody "," s "," remove_begin "," value_expr "," new_ remove_begin  "," new_res value_expr  "]}," Ruby24Parser _reduce_256":{"type":"method","name":"_reduce_256","children":[],"call":[" call_args "," args "," array_to_hash ","val [] ","result line_max= "," call_args  line_max= "," args  line_max= "]}," Ruby24Parser _reduce_255":{"type":"method","name":"_reduce_255","children":[],"call":[" arg_blk_pass ","val [] "," call_args "," array_to_hash "," args "," new_rescue "," new_resbody "," s line "," s "," remove_begin "," value_expr "," new_ remove_begin  "," new_res value_expr  "]}," Ruby24Parser _reduce_254":{"type":"method","name":"_reduce_254","children":[],"call":[" arg_blk_pass ","val [] "," call_args "," array_to_hash "," args "]}," Ruby24Parser _reduce_253":{"type":"method","name":"_reduce_253","children":[],"call":[" arg_blk_pass ","val [] "," call_args "," args "," array_to_hash "]}," Ruby24Parser _reduce_252":{"type":"method","name":"_reduce_252","children":[],"call":[" call_args "," warning "," value_expr ","val [] "," args "," array_to_hash "]}," Ruby24Parser _reduce_251":{"type":"method","name":"_reduce_251","children":[],"call":[" args "," array_to_hash ","val [] "," value_expr "," new_call "," argl ","op to_sym "," warn "]}," Ruby24Parser _reduce_250":{"type":"method","name":"_reduce_250","children":[],"call":[" args "," array_to_hash ","val [] "," new_call "," argl ","op to_sym "," warn "]}," Ruby24Parser _reduce_249":{"type":"method","name":"_reduce_249","children":[],"call":[" args "," new_call "," argl ","op to_sym "," value_expr ","val [] "]}," Ruby24Parser _reduce_248":{"type":"method","name":"_reduce_248","children":[],"call":["val [] "," new_call "," argl ","op to_sym "," warn "]}," Ruby24Parser _reduce_247":{"type":"method","name":"_reduce_247","children":[],"call":["val [] "," new_call "," argl ","op to_sym "]}," Ruby24Parser _reduce_244":{"type":"method","name":"_reduce_244","children":[],"call":["val [] "," s "," s line ","c line "]}," Ruby24Parser _reduce_243":{"type":"method","name":"_reduce_243","children":[],"call":[" args "," array_to_hash ","val [] "," s "," s line "]}," Ruby24Parser _reduce_242":{"type":"method","name":"_reduce_242","children":[],"call":[" args "," array_to_hash ","val [] "," s "," logical_op "]}," Ruby24Parser _reduce_241":{"type":"method","name":"_reduce_241","children":[],"call":[" args ","val [] "," logical_op "," s line ","c line "," s "]}," Ruby24Parser _reduce_239":{"type":"method","name":"_reduce_239","children":[],"call":[" value_expr ","val [] "," new_call "," argl ","val []= "," logical_op "]}," Ruby24Parser _reduce_237":{"type":"method","name":"_reduce_237","children":[],"call":[" s ","val [] "," new_call "," value_expr ","result line ","arg line "," argl ","val []= "," s  line "," new_call  line "]}," Ruby24Parser _reduce_236":{"type":"method","name":"_reduce_236","children":[],"call":[" s ","val [] "," new_call "," new_match "," s line ","lhs line "," argl ","val []= "," value_expr "]}," Ruby24Parser _reduce_235":{"type":"method","name":"_reduce_235","children":[],"call":[" logical_op ","val [] "," s "," new_match "," new_call "," value_expr "]}," Ruby24Parser _reduce_234":{"type":"method","name":"_reduce_234","children":[],"call":[" logical_op ","val [] "," new_match "," new_call "," argl ","result line ","arg line "," logical_op  line "," new_match  line "," new_call  line "]}," Ruby24Parser _reduce_233":{"type":"method","name":"_reduce_233","children":[],"call":[" new_call "," argl ","val [] ","val []= "," value_expr "," s line ","lhs line "," s "," new_match "]}," Ruby24Parser _reduce_232":{"type":"method","name":"_reduce_232","children":[],"call":[" new_call "," argl ","val [] ","val []= "," value_expr "," new_match "]}," Ruby24Parser _reduce_231":{"type":"method","name":"_reduce_231","children":[],"call":[" new_call "," value_expr ","val [] "," argl "]}," Ruby24Parser _reduce_230":{"type":"method","name":"_reduce_230","children":[],"call":[" new_call ","val [] "," argl "]}," Ruby24Parser _reduce_229":{"type":"method","name":"_reduce_229","children":[],"call":[" s "," new_match ","val [] "," new_call "," argl "]}," Ruby24Parser _reduce_228":{"type":"method","name":"_reduce_228","children":[],"call":[" new_match ","val [] "," new_call "," argl "]}," Ruby24Parser _reduce_227":{"type":"method","name":"_reduce_227","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby24Parser _reduce_226":{"type":"method","name":"_reduce_226","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby24Parser _reduce_225":{"type":"method","name":"_reduce_225","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby24Parser _reduce_224":{"type":"method","name":"_reduce_224","children":[],"call":[" new_call "," argl ","val [] "," s "," s line "," lexer lineno "," lexer "]}," Ruby24Parser _reduce_223":{"type":"method","name":"_reduce_223","children":[],"call":[" new_call "," argl ","val [] "," s "]}," Ruby24Parser _reduce_222":{"type":"method","name":"_reduce_222","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby24Parser _reduce_221":{"type":"method","name":"_reduce_221","children":[],"call":[" new_call "," argl ","val [] "," s line "," s "]}," Ruby24Parser _reduce_220":{"type":"method","name":"_reduce_220","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby24Parser _reduce_219":{"type":"method","name":"_reduce_219","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby24Parser _reduce_218":{"type":"method","name":"_reduce_218","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby24Parser _reduce_217":{"type":"method","name":"_reduce_217","children":[],"call":[" new_call "," argl ","val [] "," s ","v2 last ","v1 last ","Integer  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type "," s line ","v1 line "]}," Ruby24Parser _reduce_216":{"type":"method","name":"_reduce_216","children":[],"call":[" new_call ","val [] "," s ","v2 last ","v1 last ","Integer  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type "," s line ","v1 line "," argl "]}," Ruby24Parser _reduce_215":{"type":"method","name":"_reduce_215","children":[],"call":[" new_call ","val [] "," s ","v2 last ","v1 last ","Integer  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type "," backref_assign_error "," new_op_asgn "," argl "," new_op_ new_op_asgn  "]}," Ruby24Parser _reduce_214":{"type":"method","name":"_reduce_214","children":[],"call":[" new_call "," argl ","val [] "," s "," backref_assign_error "," new_op_asgn "," new_const_op_asgn "," s line ","lhs to_sym ","v1 line ","v2 last ","v1 last ","Integer  === ","v2 sexp_type == ","v2 sexp_type ","v1 sexp_type == ","v1 sexp_type "," new_op_ new_op_asgn  "," new_const_op_ new_op_asgn  "," s line  to_sym "]}," Ruby24Parser _reduce_213":{"type":"method","name":"_reduce_213","children":[],"call":[" new_call "," argl ","val [] "," raise ","not yet: %p % "," lexer lineno "," lexer "," s line ","v1 line "," s ","v2 last ","v1 last ","Integer  === ","v2 sexp_type == ","v2 sexp_type ","v1 sexp_type == ","v1 sexp_type "]}," Ruby24Parser _reduce_212":{"type":"method","name":"_reduce_212","children":[],"call":[" new_call "," argl ","val [] "," raise ","not yet: %p % "," new_const_op_asgn "," s line ","lhs1 line "," s ","lhs2 to_sym "," backref_assign_error "," new_op_asgn "," new_const_op_ new_op_asgn  "," s line 1 line "," s line 2 to_sym "," new_op_ new_op_asgn  "]}," Ruby24Parser _reduce_211":{"type":"method","name":"_reduce_211","children":[],"call":[" new_call "," argl ","val [] "," s ","val [] to_sym "," s line ","lhs line ","op to_sym ","id to_sym "," new_const_op_asgn ","lhs to_sym "," wrap "," s line  line "," wrap  line "," s line  to_sym "," wrap  to_sym "]}," Ruby24Parser _reduce_210":{"type":"method","name":"_reduce_210","children":[],"call":[" new_call "," argl ","val [] "," new_op_asgn2 "," new_const_op_asgn "," s line ","lhs1 line "," s ","lhs2 to_sym "," s line 1 line "," s line 2 to_sym "]}," Ruby24Parser _reduce_209":{"type":"method","name":"_reduce_209","children":[],"call":[" new_call "," argl ","val [] "," new_op_asgn2 "," s line ","lhs line "," s ","op to_sym ","id to_sym "]}," Ruby24Parser _reduce_208":{"type":"method","name":"_reduce_208","children":[],"call":[" new_call "," argl ","val [] "," s ","val [] to_sym ","val [] sexp_type= "," new_op_asgn1 "," new_op_asgn2 "]}," Ruby24Parser _reduce_207":{"type":"method","name":"_reduce_207","children":[],"call":[" s ","v2 last ","v1 last ","Integer  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type ","val [] "," new_op_asgn "," new_op_asgn2 "]}," Ruby24Parser _reduce_206":{"type":"method","name":"_reduce_206","children":[],"call":[" s ","v2 last ","v1 last ","Integer  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type ","val [] "," new_assign "," new_op_asgn1 "]}," Ruby24Parser _reduce_205":{"type":"method","name":"_reduce_205","children":[],"call":[" backref_assign_error ","val [] "," new_op_asgn "]}," Ruby24Parser _reduce_204":{"type":"method","name":"_reduce_204","children":[],"call":[" yyerror "," new_assign ","val [] "]}," Ruby24Parser _reduce_203":{"type":"method","name":"_reduce_203","children":[],"call":[" yyerror "]}," Ruby24Parser _reduce_202":{"type":"method","name":"_reduce_202","children":[],"call":[" s ","val [] to_sym ","val [] "]}," Ruby24Parser _reduce_201":{"type":"method","name":"_reduce_201","children":[],"call":[" new_op_asgn2 "]}," Ruby24Parser _reduce_200":{"type":"method","name":"_reduce_200","children":[],"call":[" new_op_asgn2 "]}," Ruby24Parser _reduce_199":{"type":"method","name":"_reduce_199","children":[],"call":[" s ","val [] ","val [] to_sym ","val [] sexp_type= ","val [] []= "]}," Ruby24Parser _reduce_198":{"type":"method","name":"_reduce_198","children":[],"call":[" s "," new_resbody ","val [] "," new_op_asgn "]}," Ruby24Parser _reduce_197":{"type":"method","name":"_reduce_197","children":[],"call":[" new_op_asgn "]}," Ruby24Parser _reduce_196":{"type":"method","name":"_reduce_196","children":[],"call":[" new_assign "," s "," new_resbody ","val [] "]}," Ruby24Parser _reduce_195":{"type":"method","name":"_reduce_195","children":[],"call":[" new_assign ","val [] "]}," Ruby24Parser _reduce_123":{"type":"method","name":"_reduce_123","children":[],"call":[" new_undef ","val [] "]}," Ruby24Parser _reduce_122":{"type":"method","name":"_reduce_122","children":[],"call":[" lexer lex_state= "," lexer ","result line ","pval line "," s ","name to_sym "," s  line "]}," Ruby24Parser _reduce_121":{"type":"method","name":"_reduce_121","children":[],"call":[" new_undef ","val [] "," s ","val [] to_sym ","result line ","pval line ","name to_sym ","id to_sym "," new_undef  line "," s  line "]}," Ruby24Parser _reduce_119":{"type":"method","name":"_reduce_119","children":[],"call":[" s ","val [] to_sym ","val [] "," s line "," lexer lineno "," lexer ","name to_sym "]}," Ruby24Parser _reduce_116":{"type":"method","name":"_reduce_116","children":[],"call":["val [] "," lexer lex_state= "," lexer "," backref_assign_error "," s line "," s ","id to_sym "," yyerror "," debug "," in_single > "," in_single "," in_def "]}," Ruby24Parser _reduce_115":{"type":"method","name":"_reduce_115","children":[],"call":["val [] "," lexer lex_state= "," lexer "," s ","val [] to_sym "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," s line ","id to_sym "," lexer lineno ","expr line "," debug ","va lexer lineno  [] ","vaexpr line  [] ","  lexer lineno exer  lexer lineno ex_state= "," expr line exer expr line ex_state= ","  lexer lineno exer "," expr line exer ","va lexer lineno  [] to_sym ","vaexpr line  [] to_sym "," in_sing lexer lineno e > "," in_singexpr line e > "," in_sing lexer lineno e "," in_singexpr line e "," s  lexer lineno ine "," s expr line ine ","  lexer lineno exer  lexer lineno ineno "," expr line exer expr line ineno ","expr  lexer lineno ine ","expr expr line ine "]}," Ruby24Parser _reduce_111":{"type":"method","name":"_reduce_111","children":[],"call":[" s ","val [] to_sym ","val [] "," new_attrasgn "," aryset "]}," Ruby24Parser _reduce_110":{"type":"method","name":"_reduce_110","children":[],"call":["val [] to_sym ","val [] "," aryset "," debug "," assignable "]}," Ruby24Parser _reduce_109":{"type":"method","name":"_reduce_109","children":[],"call":[" s ","val [] to_sym ","val [] "," debug20 "," assignable ","result line= "," lexer lineno "," lexer "," s  line= "," assignable  line= ","result  lexer lineno = "," lexer  lexer lineno no "]}," Ruby24Parser _reduce_107":{"type":"method","name":"_reduce_107","children":[],"call":[" yyerror "," backref_assign_error ","val [] "," s line "," s ","id to_sym "," debug "," in_single > "," in_single "," in_def "]}," Ruby24Parser _reduce_106":{"type":"method","name":"_reduce_106","children":[],"call":[" backref_assign_error ","val [] "," s ","val [] to_sym "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," s line ","id to_sym "," lexer lineno "," lexer ","expr line "," debug ","va lexer lineno  [] ","vaexpr line  [] ","va lexer lineno  [] to_sym ","vaexpr line  [] to_sym "," in_sing lexer lineno e > "," in_singexpr line e > "," in_sing lexer lineno e "," in_singexpr line e "," s  lexer lineno ine "," s expr line ine ","  lexer lineno exer  lexer lineno ineno "," expr line exer expr line ineno ","  lexer lineno exer "," expr line exer ","expr  lexer lineno ine ","expr expr line ine "]}," Ruby24Parser _reduce_105":{"type":"method","name":"_reduce_105","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," s line ","id to_sym ","expr line "," new_attrasgn ","vaexpr line  [] to_sym ","vaexpr line  [] "," in_singexpr line e > "," in_singexpr line e "," s expr line ine ","expr expr line ine "]}," Ruby24Parser _reduce_104":{"type":"method","name":"_reduce_104","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," new_attrasgn "]}," Ruby24Parser _reduce_103":{"type":"method","name":"_reduce_103","children":[],"call":[" new_attrasgn ","val [] "," s "]}," Ruby24Parser _reduce_102":{"type":"method","name":"_reduce_102","children":[],"call":[" s ","val [] "," new_attrasgn "," aryset "]}," Ruby24Parser _reduce_101":{"type":"method","name":"_reduce_101","children":[],"call":[" new_attrasgn ","val [] "," aryset "," assignable "]}," Ruby24Parser _reduce_100":{"type":"method","name":"_reduce_100","children":[],"call":[" aryset ","val [] "," assignable "]}," Ruby24Parser _reduce_99":{"type":"method","name":"_reduce_99","children":[],"call":[" debug20 "," assignable ","val [] "," list_append "]}," Ruby24Parser _reduce_98":{"type":"method","name":"_reduce_98","children":[],"call":[" assignable ","val [] "," list_append "," s line ","item line "," s "]}," Ruby24Parser _reduce_97":{"type":"method","name":"_reduce_97","children":[],"call":[" backref_assign_error ","val [] "," s "," s line ","item line ","val [] << ","val [] compact "]}," Ruby24Parser _reduce_96":{"type":"method","name":"_reduce_96","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," debug20 "," in_single > "," in_single "," in_def ","val [] << ","val [] compact "," s line ","lhs line "]}," Ruby24Parser _reduce_95":{"type":"method","name":"_reduce_95","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," s line ","lhs line "]}," Ruby24Parser _reduce_94":{"type":"method","name":"_reduce_94","children":[],"call":[" new_attrasgn ","val [] "]}," Ruby24Parser _reduce_93":{"type":"method","name":"_reduce_93","children":[],"call":[" s ","val [] "," s line ","post sexp_body ","post line ","vapost line  [] "," s post line ine ","post post line ine "]}," Ruby24Parser _reduce_92":{"type":"method","name":"_reduce_92","children":[],"call":[" new_attrasgn ","val [] "," s ","val [] sexp_body "," s line ","post sexp_body ","post line "," lexer lineno "," lexer ","vapost line  [] ","va lexer lineno  [] ","vapost line  [] sexp_body ","va lexer lineno  [] sexp_body "," s post line ine "," s  lexer lineno ine ","post post line ine ","post  lexer lineno ine "," post line exer post line ineno ","  lexer lineno exer  lexer lineno ineno "," post line exer ","  lexer lineno exer "]}," Ruby24Parser _reduce_91":{"type":"method","name":"_reduce_91","children":[],"call":[" aryset ","val [] "," s "," s line "," lexer lineno "," lexer ","ary line ","ary concat ","post sexp_body ","splat line ","node line ","  s line set ","va lexer lineno  [] "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer ","ary  lexer lineno ine "," s line  line "," s line  concat ","sp lexer lineno at  lexer lineno ine ","node  lexer lineno ine "]}," Ruby24Parser _reduce_90":{"type":"method","name":"_reduce_90","children":[],"call":[" assignable ","val [] "," s ","ary concat ","val [] sexp_body "," s line ","ary line ","post sexp_body ","splat line ","node line "," assignabnode line e ","vanode line  [] "," s  concat "," s line  concat ","vanode line  [] sexp_body "," s node line ine "," s  line "," s line  line ","ary node line ine ","spnode line at node line ine ","node node line ine "]}," Ruby24Parser _reduce_89":{"type":"method","name":"_reduce_89","children":[],"call":[" assignable ","val [] "," s "," s line ","node line ","ary line ","ary concat ","post sexp_body "," list_append ","head line "," assignabnode line e ","vanode line  [] "," s node line ine ","node node line ine "," s line  line "," list_append  line ","ary node line ine "," s line  concat "," list_append  concat "," node line ist_append ","head node line ine "]}," Ruby24Parser _reduce_88":{"type":"method","name":"_reduce_88","children":[],"call":[" list_append ","val [] "," s ","ary concat ","val [] sexp_body "," s line ","ary line ","post sexp_body ","head line ","head << "," head line ist_append ","vahead line  [] "," list_append  concat ","vahead line  [] sexp_body "," s head line ine "," list_append  line ","ary head line ine ","head head line ine "]}," Ruby24Parser _reduce_87":{"type":"method","name":"_reduce_87","children":[],"call":[" s ","val [] ","val [] << "," s line ","head << ","head line ","result line ","result concat ","ary2 sexp_body "," list_append ","splat line ","vahead line  [] ","vahead line  [] << "," s head line ine ","head head line ine "," s  line "," s line  line "," list_append  line ","resuhead line t head line ine "," s  concat "," s line  concat "," list_append  concat ","resuhead line t concat "," head line ist_append ","sphead line at head line ine "]}," Ruby24Parser _reduce_86":{"type":"method","name":"_reduce_86","children":[],"call":["val [] << ","val [] compact ","val [] "," s ","result concat ","ary2 sexp_body "," list_append "," s line ","result line ","splat line ","head line ","head << ","tail line ","val [] <<  concat "," s  concat "," list_append  concat "," s line  concat ","val [] <<  line "," s  line "," list_append  line "," s line  line "]}," Ruby24Parser _reduce_85":{"type":"method","name":"_reduce_85","children":[],"call":[" s ","val [] ","val [] << "," s line ","head line ","head << ","tail line ","lhs line ","lhs << ","rhs compact "]}," Ruby24Parser _reduce_84":{"type":"method","name":"_reduce_84","children":[],"call":["val [] "," s ","val [] << ","val [] compact "," s line ","lhs line ","lhs << ","rhs compact ","head line "]}," Ruby24Parser _reduce_82":{"type":"method","name":"_reduce_82","children":[],"call":[" s ","val [] sexp_body ","val [] "," s line ","arg line ","val [] [] ","vaarg line  [] sexp_body ","vaarg line  [] "," s arg line ine ","arg arg line ine ","vaarg line  [] [] "]}," Ruby24Parser _reduce_81":{"type":"method","name":"_reduce_81","children":[],"call":[" s ","val [] "]}," Ruby24Parser _reduce_80":{"type":"method","name":"_reduce_80","children":[],"call":[" s ","ary concat ","val [] sexp_body ","val [] ","val [] [] "," s  concat "]}," Ruby24Parser _reduce_79":{"type":"method","name":"_reduce_79","children":[],"call":[" s ","val [] "," s line "," ret_args ","val [] last "," s val [] last  "]}," Ruby24Parser _reduce_78":{"type":"method","name":"_reduce_78","children":[],"call":[" s ","ary concat ","val [] sexp_body ","val [] "," list_append "," s line "," ret_args ","val [] last ","val [] [] "," list_append  concat "," s val [] last  "]}," Ruby24Parser _reduce_77":{"type":"method","name":"_reduce_77","children":[],"call":[" s ","val [] << ","val [] "," s line "," ret_args ","val [] last "," s val [] last  "]}," Ruby24Parser _reduce_76":{"type":"method","name":"_reduce_76","children":[],"call":[" s ","result concat ","ary2 sexp_body "," list_append "," s line "," ret_args ","val [] ","val [] last ","result line "," new_yield ","ary2 [] "," s  concat "," list_append  concat "," s line  concat "," new_yield  concat "," s val [] last  "," s  line "," list_append  line "," s line  line "," new_yield  line ","result val [] last  "]}," Ruby24Parser _reduce_75":{"type":"method","name":"_reduce_75","children":[],"call":[" s ","val [] << ","val [] "," new_yield ","result line "," new_super "," s  line "," new_yield  line "," new_super  line "]}," Ruby24Parser _reduce_74":{"type":"method","name":"_reduce_74","children":[],"call":[" s ","val [] << ","val [] compact ","val [] "," new_super ","block insert "," block_dup_check "," new_call ","msg to_sym "," new_ new_call  "]}," Ruby24Parser _reduce_73":{"type":"method","name":"_reduce_73","children":[],"call":[" s ","val [] ","block insert "," block_dup_check "," new_call ","msg to_sym ","result line ","id to_sym "," new_ new_call  "," s  line "," new_call  line "]}," Ruby24Parser _reduce_72":{"type":"method","name":"_reduce_72","children":[],"call":[" s ","val [] "," new_call ","val [] to_sym ","block insert "," block_dup_check ","msg to_sym "," new_ new_call  "]}," Ruby24Parser _reduce_70":{"type":"method","name":"_reduce_70","children":[],"call":["val [] "," new_call ","val [] to_sym ","op to_sym ","result insert "," block_dup_check ","call concat ","args sexp_body ","val []  insert "," new_call  insert ","call concat  insert "]}," Ruby24Parser _reduce_68":{"type":"method","name":"_reduce_68","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last ","val [] concat ","val [] sexp_body ","call concat ","args sexp_body "," new_call line "," new_call ","msg to_sym "," s val [] last  "," new_call val [] last  "]}," Ruby24Parser _reduce_67":{"type":"method","name":"_reduce_67","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last "," new_call ","val [] to_sym "," new_call line "," lexer lineno "," lexer ","msg to_sym ","result line "," s val [] last  "," new_call val [] last  "," lexer val [] last no "," s line  line "," new_call  line "," new_call line  line ","result val [] last  "]}," Ruby24Parser _reduce_66":{"type":"method","name":"_reduce_66","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last ","result line= "," lexer lineno "," lexer "," s val [] last  "," s line  line= "," lexer lineno  line= ","result val [] last = "," lexer val [] last no "]}," Ruby24Parser _reduce_65":{"type":"method","name":"_reduce_65","children":[],"call":[" new_yield ","val [] "," lexer lineno "," lexer "," new_call line ","blk line "," new_call ","msg to_sym "]}," Ruby24Parser _reduce_64":{"type":"method","name":"_reduce_64","children":[],"call":[" new_super ","val [] "," new_call ","val [] to_sym "," new_call line ","blk line ","msg to_sym "]}," Ruby24Parser _reduce_63":{"type":"method","name":"_reduce_63","children":[],"call":["block insert "," block_dup_check "," new_call ","msg to_sym "," new_ new_call  "]}," Ruby24Parser _reduce_62":{"type":"method","name":"_reduce_62","children":[],"call":[" new_call ","val [] ","val [] to_sym "]}," Ruby24Parser _reduce_61":{"type":"method","name":"_reduce_61","children":[],"call":["block insert "," block_dup_check "," new_call ","val [] ","msg to_sym "," new_ new_call  "]}," Ruby24Parser _reduce_60":{"type":"method","name":"_reduce_60","children":[],"call":[" new_call ","val [] ","val [] to_sym "," lexer cond pop "," lexer cond "," lexer "]}," Ruby24Parser _reduce_59":{"type":"method","name":"_reduce_59","children":[],"call":["result insert ","val [] "," block_dup_check ","val [] concat ","val [] sexp_body "," lexer cond pop "," lexer cond "," lexer "," lexer cond push ","val [] [] ","val [] concat  insert "]}," Ruby24Parser _reduce_58":{"type":"method","name":"_reduce_58","children":[],"call":["val [] concat ","val [] sexp_body ","val [] "," lexer cond push "," lexer cond "," lexer "," value_expr ","val [] [] "]}," Ruby24Parser _reduce_57":{"type":"method","name":"_reduce_57","children":[],"call":[" new_call ","val [] to_sym ","val [] "," value_expr "]}," Ruby24Parser _reduce_56":{"type":"method","name":"_reduce_56","children":[],"call":[" env unextend "," env ","result line= ","val [] "," new_iter "," new_call line ","cmd line "," new_call "," new_iter  line= "," new_call line  line= "]}," Ruby24Parser _reduce_55":{"type":"method","name":"_reduce_55","children":[],"call":[" s ","val [] "," new_call line ","cmd line "," new_call "]}," Ruby24Parser _reduce_54":{"type":"method","name":"_reduce_54","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," s ","val [] "," new_call line "," new_call "," logical_op "]}," Ruby24Parser _reduce_53":{"type":"method","name":"_reduce_53","children":[],"call":[" new_call ","val [] ","val [] to_sym "," logical_op "]}," Ruby24Parser _reduce_49":{"type":"method","name":"_reduce_49","children":[],"call":[" value_expr ","val [] "," new_rescue "," new_resbody "," s "," s line "," value_ value_expr  "]}," Ruby24Parser _reduce_47":{"type":"method","name":"_reduce_47","children":[],"call":[" s ","val [] "," backref_assign_error "," s line ","id to_sym ","lhs2 to_sym "]}," Ruby24Parser _reduce_46":{"type":"method","name":"_reduce_46","children":[],"call":[" s ","val [] "," debug20 ","op to_sym ","lhs2 to_sym "," s line ","id to_sym "]}," Ruby24Parser _reduce_45":{"type":"method","name":"_reduce_45","children":[],"call":[" logical_op ","val [] "," debug20 "," s ","op to_sym ","lhs2 to_sym ","result line ","prim line ","result sexp_type= ","call_op == ","op_asgn to_sym ","id to_sym "," logical_op  line "," s  line "," logical_op  sexp_type= "," s  sexp_type= "]}," Ruby24Parser _reduce_44":{"type":"method","name":"_reduce_44","children":[],"call":[" logical_op ","val [] ","result line= ","val [] line ","result sexp_type= ","val [] == "," s ","val [] to_sym ","result line ","prim line ","call_op == ","op_asgn to_sym ","id to_sym "," logical_op  line= "," s  line= "," logical_op  sexp_type= "," s  sexp_type= "," logical_op  line "," s  line "]}," Ruby24Parser _reduce_42":{"type":"method","name":"_reduce_42","children":[],"call":[" new_assign ","val [] "," s ","val [] to_sym "," new_op_asgn1 "," new_op_asgn "]}," Ruby24Parser _reduce_41":{"type":"method","name":"_reduce_41","children":[],"call":[" new_assign ","val [] "," new_op_asgn "]}," Ruby24Parser _reduce_39":{"type":"method","name":"_reduce_39","children":[],"call":[" new_masgn ","val [] "]}," Ruby24Parser _reduce_38":{"type":"method","name":"_reduce_38","children":[],"call":[" new_assign "," s ","val [] "," new_masgn "," s line ","rhs line "]}," Ruby24Parser _reduce_37":{"type":"method","name":"_reduce_37","children":[],"call":[" backref_assign_error ","val [] "," new_assign "," s "," s line ","rhs line "," new_masgn "]}," Ruby24Parser _reduce_36":{"type":"method","name":"_reduce_36","children":[],"call":[" debug20 "," s ","val [] "," new_masgn "]}," Ruby24Parser _reduce_35":{"type":"method","name":"_reduce_35","children":[],"call":[" debug20 "," s ","val [] "," new_iter "," s line "," yyerror "," debug "," in_single > "," in_single "," in_def "]}," Ruby24Parser _reduce_34":{"type":"method","name":"_reduce_34","children":[],"call":["result line= ","val [] line ","val [] ","result sexp_type= ","val [] == "," s ","val [] to_sym "," new_iter "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," s line "," new_rescue "," new_resbody ","resbody line ","result []= "," s  line= "," new_iter  line= "," new_rescue  line= "," s  sexp_type= "," new_iter  sexp_type= "," new_rescue  sexp_type= "," new_ new_resbody  "," new_resbody  line "," s  []= "," new_iter  []= "," new_rescue  []= "]}," Ruby24Parser _reduce_33":{"type":"method","name":"_reduce_33","children":[],"call":["result line= ","val [] line ","val [] ","result sexp_type= ","val [] == "," s ","val [] to_sym "," new_rescue "," new_resbody "," s line ","resbody line "," new_until ","result []= "," s  line= "," new_rescue  line= "," new_until  line= "," s  sexp_type= "," new_rescue  sexp_type= "," new_until  sexp_type= "," new_ new_resbody  "," new_resbody  line "," s  []= "," new_rescue  []= "," new_until  []= "]}," Ruby24Parser _reduce_32":{"type":"method","name":"_reduce_32","children":[],"call":[" s ","val [] ","val [] to_sym "," new_until "," new_while "]}," Ruby24Parser _reduce_31":{"type":"method","name":"_reduce_31","children":[],"call":[" new_op_asgn "," new_while ","val [] "," new_if "]}," Ruby24Parser _reduce_30":{"type":"method","name":"_reduce_30","children":[],"call":[" new_masgn ","val [] "," new_if "]}," Ruby24Parser _reduce_28":{"type":"method","name":"_reduce_28","children":[],"call":[" new_iter ","val [] "," s "," yyerror "," debug20 "," in_single > "," in_single "," in_def "]}," Ruby24Parser _reduce_27":{"type":"method","name":"_reduce_27","children":[],"call":[" s "," new_resbody ","val [] "," yyerror "," s line ","lhs to_sym "]}," Ruby24Parser _reduce_26":{"type":"method","name":"_reduce_26","children":[],"call":[" new_until ","val [] "," s ","val [] to_sym "," s line ","lhs to_sym ","rhs to_sym "]}," Ruby24Parser _reduce_25":{"type":"method","name":"_reduce_25","children":[],"call":[" new_while ","val [] "," s ","val [] to_sym "," s line ","rhs to_sym ","lhs to_sym "," s line line "]}," Ruby24Parser _reduce_24":{"type":"method","name":"_reduce_24","children":[],"call":[" new_if ","val [] "," s line "," s "," s line line "," lexer lex_state= "," lexer "]}," Ruby24Parser _reduce_23":{"type":"method","name":"_reduce_23","children":[],"call":[" new_if ","val [] "," lexer lineno "," lexer "," lexer lex_state= "]}," Ruby24Parser _reduce_22":{"type":"method","name":"_reduce_22","children":[],"call":["val [] "," yyerror "]}," Ruby24Parser _reduce_21":{"type":"method","name":"_reduce_21","children":[],"call":[" yyerror "," env extend "," env "," debug20 "," in_single > "," in_single "," in_def "]}," Ruby24Parser _reduce_20":{"type":"method","name":"_reduce_20","children":[],"call":[" s ","val [] ","val [] to_sym "," debug20 "," debug "]}," Ruby24Parser _reduce_19":{"type":"method","name":"_reduce_19","children":[],"call":[" s ","val [] to_sym ","val [] "," debug20 "," block_append "]}," Ruby24Parser _reduce_18":{"type":"method","name":"_reduce_18","children":[],"call":[" s line ","val [] "," s "," block_append "]}," Ruby24Parser _reduce_17":{"type":"method","name":"_reduce_17","children":[],"call":[" lexer lineno "," lexer "," lexer lex_state= "]}," Ruby24Parser _reduce_16":{"type":"method","name":"_reduce_16","children":[],"call":[" debug20 ","val [] "," new_compstmt "]}," Ruby24Parser _reduce_15":{"type":"method","name":"_reduce_15","children":[],"call":[" block_append ","val [] "," new_compstmt "," new_body "]}," Ruby24Parser _reduce_12":{"type":"method","name":"_reduce_12","children":[],"call":[" new_compstmt "," yyerror ","_values [] "," new_iter "," s line "," s "]}," Ruby24Parser _reduce_11":{"type":"method","name":"_reduce_11","children":[],"call":[" new_body "," new_iter "," s "," lexer lineno "," lexer "]}," Ruby24Parser _reduce_10":{"type":"method","name":"_reduce_10","children":[],"call":[" new_iter ","val [] "," s ","preexe line ","iter line "]}," Ruby24Parser _reduce_9":{"type":"method","name":"_reduce_9","children":[],"call":[" env extend "," env "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," debug "]}," Ruby24Parser _reduce_8":{"type":"method","name":"_reduce_8","children":[],"call":["val [] "]}," Ruby24Parser _reduce_6":{"type":"method","name":"_reduce_6","children":[],"call":[" block_append ","val [] "]}," Ruby24Parser _reduce_3":{"type":"method","name":"_reduce_3","children":[],"call":["val [] "]}," Ruby24Parser _reduce_2":{"type":"method","name":"_reduce_2","children":[],"call":[" new_compstmt "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer cond pop "," lexer cond "]}," Ruby24Parser _reduce_1":{"type":"method","name":"_reduce_1","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby23Parser _reduce_none":{"type":"method","name":"_reduce_none","children":[],"call":["val [] "]}," Ruby23Parser _reduce_627":{"type":"method","name":"_reduce_627","children":[],"call":[]}," Ruby23Parser _reduce_626":{"type":"method","name":"_reduce_626","children":[],"call":[" yyerrok "]}," Ruby23Parser _reduce_623":{"type":"method","name":"_reduce_623","children":[],"call":[" yyerrok "]}," Ruby23Parser _reduce_599":{"type":"method","name":"_reduce_599","children":[],"call":[" s ","val [] "," s line ","optblk line ","opt line ","result []= ","list push ","more empty? ","val [] [] ","val [] dup "," s  []= "," s line  []= ","val []  []= ","val [] dup  push ","val [] []  empty? "]}," Ruby23Parser _reduce_598":{"type":"method","name":"_reduce_598","children":[],"call":[" raise ","val inspect "," assignable ","val [] ","result << "," lexer lineno "," lexer "," env []= "," env "," s "," assignable  << "," s  << "]}," Ruby23Parser _reduce_597":{"type":"method","name":"_reduce_597","children":[],"call":[" s ","sym sexp_type= "," block_append ","val [] "," assignable "," s line ","optblk line ","id to_sym "," yyerror ","result [] == ","result [] ","sym []= "," raise ","val inspect "," s  [] == "," block_append  [] == "," assignable  [] == "," s line  [] == ","val []  [] == "," s  [] "," block_append  [] "," assignable  [] "," s line  [] ","val []  [] "]}," Ruby23Parser _reduce_596":{"type":"method","name":"_reduce_596","children":[],"call":[" s ","val [] ","val [] [] to_sym ","val [] [] ","val last "," assignable "," s line ","opt line "," lexer lex_state= "," lexer "," raise ","val inspect ","sym []= "]}," Ruby23Parser _reduce_595":{"type":"method","name":"_reduce_595","children":[],"call":[" s ","val [] ","result << "," assignable ","val [] to_sym "," yyerror ","result [] == ","result [] ","sym []= ","val [] [] to_sym ","val [] [] "," s  << ","val []  << "," assignable  << "," s  [] == ","val []  [] == "," assignable  [] == "," s  [] ","val []  [] "," assignable  [] "]}," Ruby23Parser _reduce_594":{"type":"method","name":"_reduce_594","children":[],"call":["result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] ","val [] dup "," s "," env []= "," env "," s line ","optblk line "," block_append "," lexer lex_state= "," lexer ","result []= ","val [] [] ","val [] [] to_sym "," s  sexp_type= "," s line  sexp_type= "," block_append  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? ","val [] []  empty? "," s  []= "," s line  []= "," block_append  []= "]}," Ruby23Parser _reduce_592":{"type":"method","name":"_reduce_592","children":[],"call":["val [] "," assignable "," args ","result << ","(str \"&\") to_sym "," env []= "," env ","val [] to_sym ","result []= ","list push ","more empty? ","val [] [] ","val [] dup ","val []  << "," assignable  << "," args  << ","(str \"&\") to_sym  << ","val []  []= "," assignable  []= "," args  []= ","(str \"&\") to_sym  []= ","val [] dup  push ","val [] []  empty? "]}," Ruby23Parser _reduce_591":{"type":"method","name":"_reduce_591","children":[],"call":[" s "," lexer lineno "," lexer "," env []= "," env "," s line ","optblk line ","val [] "]}," Ruby23Parser _reduce_590":{"type":"method","name":"_reduce_590","children":[],"call":[" yyerror ","result sexp_type == ","result sexp_type ","val [] "," assignable ","val [] to_sym ","list << ","item last "," args ","id to_sym ","(str \"&\") to_sym "," env []= "," env ","result [] == ","result [] "," s ","val []  sexp_type == ","list <<  sexp_type == "," args  sexp_type == "," assignable  sexp_type == ","(str \"&\") to_sym  sexp_type == "," s  sexp_type == ","val []  sexp_type ","list <<  sexp_type "," args  sexp_type "," assignable  sexp_type ","(str \"&\") to_sym  sexp_type "," s  sexp_type ","val []  [] == ","list <<  [] == "," args  [] == "," assignable  [] == ","(str \"&\") to_sym  [] == "," s  [] == ","val []  [] ","list <<  [] "," args  [] "," assignable  [] ","(str \"&\") to_sym  [] "," s  [] "]}," Ruby23Parser _reduce_589":{"type":"method","name":"_reduce_589","children":[],"call":[" lexer lex_state= "," lexer "," assignable "," env []= "," env "," s "," yyerror ","result [] == ","result [] ","val [] "," assignable  [] == "," s  [] == ","val []  [] == "," assignable  [] "," s  [] ","val []  [] "]}," Ruby23Parser _reduce_587":{"type":"method","name":"_reduce_587","children":[],"call":[" args "," s line "," s "," env []= "," env ","label to_sym "," assignable ","id to_sym "," lexer lex_state= "," lexer ","label to_sym  to_sym "]}," Ruby23Parser _reduce_586":{"type":"method","name":"_reduce_586","children":[],"call":["val [] "," s line "," s "," env []= "," env ","label to_sym "," assignable ","val [] to_sym "]}," Ruby23Parser _reduce_585":{"type":"method","name":"_reduce_585","children":[],"call":["(str \"&\") to_sym "," env []= "," env ","val [] to_sym ","val [] ","list << ","item last "," s line "," s ","label to_sym "," block_append "]}," Ruby23Parser _reduce_582":{"type":"method","name":"_reduce_582","children":[],"call":[" env []= "," env "," s ","val [] ","label to_sym "," raise ","val inspect "," debug20 "," s line "," lexer lineno "," lexer ","list << ","item last "]}," Ruby23Parser _reduce_581":{"type":"method","name":"_reduce_581","children":[],"call":[" assignable ","val [] to_sym ","val [] "," s "," env []= "," env ","label to_sym ","result << "," s line ","list line ","list sexp_type == ","list sexp_type "," s  << ","val []  << "," s line  << "," assignable  << "]}," Ruby23Parser _reduce_578":{"type":"method","name":"_reduce_578","children":[],"call":[" block_append ","val [] ","result << "," s ","list sexp_type == ","list sexp_type "," env []= "," env ","val [] to_sym ","item first ","Sexp  === "," s line ","list line ","result line_max= ","item line_max ","label to_sym "," assignable "," block_append  << "," s  << "," s line  << "," assignable  << "," block_append  line_max= "," s  line_max= "," s line  line_max= "," assignable  line_max= ","result item line_max = ","item item line_max  "]}," Ruby23Parser _reduce_577":{"type":"method","name":"_reduce_577","children":[],"call":[" s ","val [] "," raise ","val inspect "," debug20 ","result << "," new_arg "," s line "," env []= "," env ","label to_sym "," block_append "," s  << ","val []  << "," new_arg  << "," s line  << "," block_append  << "]}," Ruby23Parser _reduce_576":{"type":"method","name":"_reduce_576","children":[],"call":["result << ","val [] "," yyerror "," env []= "," env ","val [] to_sym "," block_append "," s ","val []  << "," block_append  << "," s  << "]}," Ruby23Parser _reduce_575":{"type":"method","name":"_reduce_575","children":[],"call":[" s ","val [] "," yyerror ","result line_max= ","result << ","item line_max ","Sexp  === "," s line ","list line ","list sexp_type == ","list sexp_type "," args "," s  line_max= "," s line  line_max= "," args  line_max= ","val []  line_max= ","result item line_max = "," s  << "," s line  << "," args  << ","val []  << ","item item line_max  "]}," Ruby23Parser _reduce_574":{"type":"method","name":"_reduce_574","children":[],"call":[" assignable ","val [] "," yyerror "," new_arg ","result << "," s "," assignable  << "," new_arg  << ","val []  << "," s  << "]}," Ruby23Parser _reduce_573":{"type":"method","name":"_reduce_573","children":[],"call":[" assignable ","val [] "," env []= "," env ","val [] to_sym "," yyerror ","id to_sym "," args ","list << ","item last "," s "]}," Ruby23Parser _reduce_572":{"type":"method","name":"_reduce_572","children":[],"call":[" args "," yyerror "," debug20 "," assignable ","val [] "]}," Ruby23Parser _reduce_571":{"type":"method","name":"_reduce_571","children":[],"call":["val [] "," yyerror "," args ","list << ","item last "," s "," env []= "," env ","label to_sym "," assignable "]}," Ruby23Parser _reduce_568":{"type":"method","name":"_reduce_568","children":[],"call":[" args "," yyerror "," s ","val [] "," env []= "," env ","label to_sym "]}," Ruby23Parser _reduce_566":{"type":"method","name":"_reduce_566","children":[],"call":["list << ","item last "," args "," yyerror "," s ","val [] "," env []= "," env ","label to_sym ","result << ","list sexp_type == ","list sexp_type ","list <<  << "," args  << "," s  << "]}," Ruby23Parser _reduce_564":{"type":"method","name":"_reduce_564","children":[],"call":[" s "," env []= "," env ","label to_sym ","val [] "," args ","result << ","list sexp_type == ","list sexp_type ","list << ","item last "," s  << "," args  << ","val []  << ","list <<  << "]}," Ruby23Parser _reduce_563":{"type":"method","name":"_reduce_563","children":[],"call":[" s ","val [] "," env []= "," env ","label to_sym "," args "," raise ","val inspect "," debug20 ","result << "," s  << "," args  << ","val []  << "]}," Ruby23Parser _reduce_562":{"type":"method","name":"_reduce_562","children":[],"call":[" s "," env []= "," env ","label to_sym ","val [] "," args "]}," Ruby23Parser _reduce_561":{"type":"method","name":"_reduce_561","children":[],"call":[" s ","val [] "," env []= "," env ","label to_sym "," args "]}," Ruby23Parser _reduce_559":{"type":"method","name":"_reduce_559","children":[],"call":["result << "," s ","list sexp_type == ","list sexp_type "," args "," env []= "," env ","val [] to_sym ","val [] ","label to_sym "," s  << "," args  << "]}," Ruby23Parser _reduce_558":{"type":"method","name":"_reduce_558","children":[],"call":[" raise ","val inspect "," debug20 ","val [] ","result << "," s "," args ","list sexp_type == ","list sexp_type ","val []  << "," s  << "," args  << "]}," Ruby23Parser _reduce_557":{"type":"method","name":"_reduce_557","children":[],"call":["val [] "," args "," env []= "," env ","val [] to_sym "," yyerror ","result << "," s ","list sexp_type == ","list sexp_type "," raise ","val inspect "," debug20 ","val []  << "," args  << "," s  << "]}," Ruby23Parser _reduce_554":{"type":"method","name":"_reduce_554","children":[],"call":[" env []= "," env ","val [] to_sym ","val [] "," args "," yyerror "]}," Ruby23Parser _reduce_552":{"type":"method","name":"_reduce_552","children":[],"call":[" yyerror "," args "," env []= "," env ","val [] to_sym ","val [] "]}," Ruby23Parser _reduce_551":{"type":"method","name":"_reduce_551","children":[],"call":[" yyerror ","val [] "," lexer command_start= "," lexer "," lexer lex_state= "," in_kwarg= "," args "]}," Ruby23Parser _reduce_550":{"type":"method","name":"_reduce_550","children":[],"call":[" yyerror "," lexer lex_state "," lexer "," in_kwarg= "," in_kwarg "," args "]}," Ruby23Parser _reduce_549":{"type":"method","name":"_reduce_549","children":[],"call":[" yyerror "," args "," lexer command_start= "," lexer "," lexer lex_state= ","val [] "," in_kwarg= "]}," Ruby23Parser _reduce_548":{"type":"method","name":"_reduce_548","children":[],"call":[" args "," lexer lex_state "," lexer "," in_kwarg= "," in_kwarg ","val [] "," yyerror "]}," Ruby23Parser _reduce_547":{"type":"method","name":"_reduce_547","children":[],"call":[" args ","val [] "," lexer command_start= "," lexer "," lexer lex_state= "," yyerror "]}," Ruby23Parser _reduce_546":{"type":"method","name":"_reduce_546","children":[],"call":[" args "," lexer command_start= "," lexer "," lexer lex_state= "," in_kwarg= "," end_args "]}," Ruby23Parser _reduce_545":{"type":"method","name":"_reduce_545","children":[],"call":[" args "," in_kwarg= "," in_kwarg "," lexer lex_state "," lexer "," s line "," lexer lineno "," s ","val [] "]}," Ruby23Parser _reduce_544":{"type":"method","name":"_reduce_544","children":[],"call":[" args "," lexer command_start= "," lexer "," lexer lex_state= ","val [] "," s line "," lexer lineno "," s "," end_args "]}," Ruby23Parser _reduce_543":{"type":"method","name":"_reduce_543","children":[],"call":[" args "," debug20 "," assignable ","val [] "," s line "," lexer lineno "," lexer "," s "," end_args "]}," Ruby23Parser _reduce_542":{"type":"method","name":"_reduce_542","children":[],"call":[" args ","val [] "," assignable "," s line "," lexer lineno "," lexer "," s "," lexer lex_state "," in_kwarg= "," in_kwarg "]}," Ruby23Parser _reduce_541":{"type":"method","name":"_reduce_541","children":[],"call":[" args "," lexer command_start= "," lexer "," lexer lex_state= "," gettable ","Sexp  === ","val [] "," debug20 "," assignable "," end_args "]}," Ruby23Parser _reduce_540":{"type":"method","name":"_reduce_540","children":[],"call":[" args "," s ","val [] "," gettable ","Sexp  === "," assignable "," s line "]}," Ruby23Parser _reduce_539":{"type":"method","name":"_reduce_539","children":[],"call":[" args "," s ","val [] "," s line "," lexer lineno "," lexer "," gettable ","Sexp  === ","va lexer lineno  [] "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "," gettab lexer lineno e "]}," Ruby23Parser _reduce_538":{"type":"method","name":"_reduce_538","children":[],"call":[" args "," debug20 "," assignable ","val [] "," s line "," lexer lineno "," lexer "," s "," gettable ","Sexp  === "," debug "," lexer command_start= "," lexer lex_state= "]}," Ruby23Parser _reduce_537":{"type":"method","name":"_reduce_537","children":[],"call":[" args "," assignable ","val [] "," s line "," lexer lineno "," lexer "," s "," file "," assignab lexer lineno e ","va lexer lineno  [] "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "," fi lexer lineno e "]}," Ruby23Parser _reduce_536":{"type":"method","name":"_reduce_536","children":[],"call":[" args "," gettable ","Sexp  === ","val [] "," s line "," lexer lineno "," lexer "," s "]}," Ruby23Parser _reduce_535":{"type":"method","name":"_reduce_535","children":[],"call":[" args "," gettable ","Sexp  === ","val [] "," s line "," lexer lineno "," lexer "," s "," file ","result line "," raise ","val inspect ","val first "," debug "," assignable "," args  line "," gettable  line "," s line  line "," assignable  line ","val []  line "]}," Ruby23Parser _reduce_534":{"type":"method","name":"_reduce_534","children":[],"call":[" args "," s "," s line "," lexer lineno "," lexer "," assignable ","val [] "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "," assignab lexer lineno e ","va lexer lineno  [] "]}," Ruby23Parser _reduce_533":{"type":"method","name":"_reduce_533","children":[],"call":[" s "," lexer lineno "," lexer "," s line "," gettable ","Sexp  === ","val [] "," args "]}," Ruby23Parser _reduce_532":{"type":"method","name":"_reduce_532","children":[],"call":["val [] "," s "," file "," s line "," lexer lineno "," lexer ","result line "," gettable ","Sexp  === "," raise ","val inspect ","val first "," args "," lexer command_start= "," lexer lex_state= ","val []  line "," s  line "," s line  line "," gettable  line "," args  line "]}," Ruby23Parser _reduce_530":{"type":"method","name":"_reduce_530","children":[],"call":[" args "," s "," s line "," lexer lineno "," lexer "," lexer command_start= "," lexer lex_state= ","val [] "," debug20 "," yyerrok "]}," Ruby23Parser _reduce_529":{"type":"method","name":"_reduce_529","children":[],"call":[" args "," s "," s line "," lexer lineno "," lexer "," file "," lexer command_start= "," lexer lex_state= ","val [] "]}," Ruby23Parser _reduce_528":{"type":"method","name":"_reduce_528","children":[],"call":[" args "," s "," s line "," lexer lineno "," lexer "," debug20 "," yyerrok "," lexer lex_state= "]}," Ruby23Parser _reduce_527":{"type":"method","name":"_reduce_527","children":[],"call":[" lexer command_start= "," lexer "," lexer lex_state= ","val [] "," s line "," lexer lineno "," s "," args "]}," Ruby23Parser _reduce_526":{"type":"method","name":"_reduce_526","children":[],"call":[" lexer command_start= "," lexer "," lexer lex_state= ","val [] "," s line "," lexer lineno "," s "," args "]}," Ruby23Parser _reduce_525":{"type":"method","name":"_reduce_525","children":[],"call":[" debug20 "," yyerrok "," s line "," lexer lineno "," lexer "," s ","val [] "," lexer command_start= "," lexer lex_state= "]}," Ruby23Parser _reduce_524":{"type":"method","name":"_reduce_524","children":[],"call":["val [] "," s "," debug20 "," assignable "," lexer command_start= "," lexer "," lexer lex_state= "," yyerrok "]}," Ruby23Parser _reduce_523":{"type":"method","name":"_reduce_523","children":[],"call":[" lexer lex_state= "," lexer ","val [] -@ ","val [] "," s "," assignable "," debug20 "," yyerrok "]}," Ruby23Parser _reduce_522":{"type":"method","name":"_reduce_522","children":[],"call":[" debug20 "," assignable ","val [] "," gettable ","Sexp  === "," lexer lex_state= "," lexer "]}," Ruby23Parser _reduce_521":{"type":"method","name":"_reduce_521","children":[],"call":[" s ","val [] "," debug20 "," s line ","result line ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," lexer lineno "," lexer "," lexer lex_state= ","val [] -@ "," assignable "," gettable ","Sexp  === "," s  line "," s line  line ","val [] -@  line "," assignable  line "," gettable  line "," s  last to_sym "," s line  last to_sym ","val [] -@  last to_sym "," assignable  last to_sym "," gettable  last to_sym "," s  last "," s line  last ","val [] -@  last "," assignable  last "," gettable  last "," s  sexp_type= "," s line  sexp_type= ","val [] -@  sexp_type= "," assignable  sexp_type= "," gettable  sexp_type= "," s  sexp_type "," s line  sexp_type ","val [] -@  sexp_type "," assignable  sexp_type "," gettable  sexp_type "]}," Ruby23Parser _reduce_520":{"type":"method","name":"_reduce_520","children":[],"call":[" s ","val [] "," gettable ","Sexp  === "]}," Ruby23Parser _reduce_519":{"type":"method","name":"_reduce_519","children":[],"call":[" debug20 "," assignable ","val [] "," s line ","result line "," s ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," lexer lineno "," lexer "," lexer lex_state= "," gettable ","Sexp  === "," assignable  line "," s line  line "," gettable  line "," s  line "," assignable  last to_sym "," s line  last to_sym "," gettable  last to_sym "," s  last to_sym "," assignable  last "," s line  last "," gettable  last "," s  last "," assignable  sexp_type= "," s line  sexp_type= "," gettable  sexp_type= "," s  sexp_type= "," assignable  sexp_type "," s line  sexp_type "," gettable  sexp_type "," s  sexp_type "]}," Ruby23Parser _reduce_518":{"type":"method","name":"_reduce_518","children":[],"call":[" assignable ","val [] ","val [] -@ ","num -@ "," s "," file "," debug20 "]}," Ruby23Parser _reduce_517":{"type":"method","name":"_reduce_517","children":[],"call":[" gettable ","Sexp  === ","val [] "," s "," lexer lineno "," lexer "," debug20 "," assignable "]}," Ruby23Parser _reduce_516":{"type":"method","name":"_reduce_516","children":[],"call":[" gettable ","Sexp  === ","val [] "," debug20 "," s ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," lexer lex_state= "," lexer ","val [] to_sym "," debug "," s line ","result line "," lexer lineno "," file "," assignable "," gettable  last to_sym "," s  last to_sym ","val []  last to_sym ","val [] to_sym  last to_sym "," s line  last to_sym "," assignable  last to_sym "," gettable  last "," s  last ","val []  last ","val [] to_sym  last "," s line  last "," assignable  last "," gettable  sexp_type= "," s  sexp_type= ","val []  sexp_type= ","val [] to_sym  sexp_type= "," s line  sexp_type= "," assignable  sexp_type= "," gettable  sexp_type "," s  sexp_type ","val []  sexp_type ","val [] to_sym  sexp_type "," s line  sexp_type "," assignable  sexp_type "," gettable  line "," s  line ","val []  line ","val [] to_sym  line "," s line  line "," assignable  line "]}," Ruby23Parser _reduce_515":{"type":"method","name":"_reduce_515","children":[],"call":[" s ","val [] to_sym ","val [] "," lexer lex_state= "," lexer ","num -@ "," gettable ","Sexp  === "]}," Ruby23Parser _reduce_514":{"type":"method","name":"_reduce_514","children":[],"call":[" s "," lexer lineno "," lexer ","val [] to_sym ","val [] "," gettable ","Sexp  === "]}," Ruby23Parser _reduce_513":{"type":"method","name":"_reduce_513","children":[],"call":[" s "," file "," s line "," lexer lineno "," lexer ","val [] to_sym ","val [] "," lexer lex_state= "," debug ","result line ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," s  line "," s line  line ","val [] to_sym  line "," s  last to_sym "," s line  last to_sym ","val [] to_sym  last to_sym "," s  last "," s line  last ","val [] to_sym  last "," s  sexp_type= "," s line  sexp_type= ","val [] to_sym  sexp_type= "," s  sexp_type "," s line  sexp_type ","val [] to_sym  sexp_type "]}," Ruby23Parser _reduce_512":{"type":"method","name":"_reduce_512","children":[],"call":[" s "," s line "," lexer lineno "," lexer ","val [] to_sym ","val [] "," file "]}," Ruby23Parser _reduce_511":{"type":"method","name":"_reduce_511","children":[],"call":[" s ","val [] to_sym ","val [] "," s line "," lexer lineno "," lexer ","id to_sym "," lexer lex_state= "," wrap "," file "]}," Ruby23Parser _reduce_510":{"type":"method","name":"_reduce_510","children":[],"call":[" s ","val [] to_sym ","val [] "," lexer lex_state= "," lexer "," raise ","stmt inspect "," debug20 "," s line ","stmt sexp_type "," lexer cmdarg restore "," lexer cmdarg "," lexer cond restore "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer lineno ","id to_sym "," wrap "]}," Ruby23Parser _reduce_509":{"type":"method","name":"_reduce_509","children":[],"call":[" s "," lexer lex_state= "," lexer "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer lineno "," lexer lex_state "," lexer cmdarg store "," lexer cmdarg "," lexer cond store "," lexer cond "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "," s line ","val [] to_sym ","val [] "]}," Ruby23Parser _reduce_499":{"type":"method","name":"_reduce_499","children":[],"call":["val [] -@ ","val [] ","val [] dup << "," new_qsym_list_entry ","val [] dup "," literal_concat "," new_string "," lexer lex_state= "," lexer "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," lexer lineno "," lexer lex_state "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "]}," Ruby23Parser _reduce_497":{"type":"method","name":"_reduce_497","children":[],"call":[" debug20 "," s ","result last to_sym ","result last ","result sexp_type= ","result sexp_type ","val [] "," lexer lex_state= "," lexer ","val [] dup << "," new_qword_list_entry ","val [] dup "," new_qsym_list_entry "," lexer lex_strterm= "," lexer lex_strterm ","val [] to_sym ","val [] -@ "," s  last to_sym ","val []  last to_sym ","val [] dup <<  last to_sym "," lexer lex_strterm  last to_sym ","val [] to_sym  last to_sym ","val [] -@  last to_sym "," s  last ","val []  last ","val [] dup <<  last "," lexer lex_strterm  last ","val [] to_sym  last ","val [] -@  last "," s  sexp_type= ","val []  sexp_type= ","val [] dup <<  sexp_type= "," lexer lex_strterm  sexp_type= ","val [] to_sym  sexp_type= ","val [] -@  sexp_type= "," s  sexp_type ","val []  sexp_type ","val [] dup <<  sexp_type "," lexer lex_strterm  sexp_type ","val [] to_sym  sexp_type ","val [] -@  sexp_type "]}," Ruby23Parser _reduce_492":{"type":"method","name":"_reduce_492","children":[],"call":["val [] to_sym ","val [] ","val [] dup << "," new_qword_list_entry ","val [] dup "," s line "," lexer lineno "," lexer "," s "," new_qsym_list_entry "]}," Ruby23Parser _reduce_491":{"type":"method","name":"_reduce_491","children":[],"call":["val [] to_sym ","val [] "," lexer lex_state= "," lexer "," new_qword_list ","list dup << "," new_symbol_list_entry ","list dup "," new_qsym_list "," literal_concat "," s "," raise ","stmt inspect "," debug20 ","stmt [] "," lexer cmdarg restore "," lexer cmdarg "," lexer cond restore "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "]}," Ruby23Parser _reduce_489":{"type":"method","name":"_reduce_489","children":[],"call":[" s ","val [] to_sym ","val [] ","list line= ","list dup << "," new_symbol_list_entry ","list dup "," new_qword_list ","val [] dup << "," new_qsym_list_entry ","val [] dup "," raise ","stmt inspect "," debug20 ","stmt [] "," lexer lex_state= "," lexer "," lexer cmdarg restore "," lexer cmdarg "," lexer cond restore "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "]}," Ruby23Parser _reduce_488":{"type":"method","name":"_reduce_488","children":[],"call":[" s ","val [] to_sym ","val [] "," lexer lineno "," lexer "," new_symbol_list line "," new_symbol_list ","list line ","result line_max= "," new_qsym_list "," lexer lex_state= "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer lex_state "," lexer cmdarg store "," lexer cmdarg "," lexer cond store "," lexer cond "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "," s  line_max= ","val []  line_max= "," lexer lineno  line_max= "," new_symbol_list line  line_max= ","list line  line_max= "," new_qsym_list  line_max= "," lexer lex_strterm  line_max= "]}," Ruby23Parser _reduce_487":{"type":"method","name":"_reduce_487","children":[],"call":[" s ","val [] to_sym ","val [] "," s line "," lexer lineno "," lexer ","list line= ","result line_max= ","val [] dup << "," new_qword_list_entry ","val [] dup "," lexer lex_strterm= "," new_string "," s  line_max= "," s line  line_max= ","val [] dup <<  line_max= "," new_string  line_max= "]}," Ruby23Parser _reduce_486":{"type":"method","name":"_reduce_486","children":[],"call":[" raise ","stmt inspect "," debug20 "," s ","stmt sexp_type "," lexer lex_state= "," lexer "," lexer cmdarg restore "," lexer cmdarg "," lexer cond restore "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= ","val [] dup << "," new_symbol_list_entry ","val [] dup ","val [] "," literal_concat "," lexer lineno ","list line ","result line_max= "," new_qword_list "," lexer lex_strterm ","val [] to_sym "," s  line_max= ","val [] dup <<  line_max= "," literal_concat  line_max= "," lexer lineno  line_max= ","list line  line_max= "," new_qword_list  line_max= "," lexer lex_strterm  line_max= "]}," Ruby23Parser _reduce_485":{"type":"method","name":"_reduce_485","children":[],"call":[" lexer lex_state= "," lexer "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer lex_state "," lexer cmdarg store "," lexer cmdarg "," lexer cond store "," lexer cond "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "," new_symbol_list "," s line "," lexer lineno "," s ","result line_max= ","list line "," new_string ","val [] to_sym ","val [] "," raise ","stmt inspect "," debug20 ","stmt [] "," lexer cmdarg restore "," lexer cond restore "," new_symbol_list  line_max= "," s line  line_max= ","list line  line_max= "," new_string  line_max= "," s  line_max= "]}," Ruby23Parser _reduce_484":{"type":"method","name":"_reduce_484","children":[],"call":[" s ","val [] "," lexer lex_strterm= "," lexer ","val [] dup << "," new_word_list_entry ","val [] dup "," literal_concat ","list dup << "," new_symbol_list_entry ","list dup ","result line_max= "," s line "," raise ","stmt inspect "," debug20 ","stmt [] "," lexer lex_state= "," lexer cmdarg restore "," lexer cmdarg "," lexer cond restore "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_state "," lexer cmdarg store "," lexer cond store "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "," s  line_max= ","val []  line_max= ","val [] dup <<  line_max= "," literal_concat  line_max= ","list dup <<  line_max= "," s line  line_max= "]}," Ruby23Parser _reduce_483":{"type":"method","name":"_reduce_483","children":[],"call":[" lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm "," s "," new_word_list "," new_symbol_list ","result line_max= ","list line "," lexer string_nest= "," lexer brace_nest= "," lexer lex_state "," lexer cmdarg store "," lexer cmdarg "," lexer cond store "," lexer cond "," lexer string_nest "," lexer brace_nest ","val [] "," lexer lex_strterm  line_max= "," s  line_max= "," new_word_list  line_max= "," new_symbol_list  line_max= ","list line  line_max= "]}," Ruby23Parser _reduce_482":{"type":"method","name":"_reduce_482","children":[],"call":[" new_string "," literal_concat ","val [] ","val [] dup << "," new_word_list_entry ","val [] dup ","list line ","result line_max= "," s line "," s "," lexer lex_strterm= "," lexer "," lexer lex_state= "," lexer lex_strterm "," new_string  line_max= "," literal_concat  line_max= ","val []  line_max= ","val [] dup <<  line_max= ","list line  line_max= "," s line  line_max= "," s  line_max= "," lexer lex_strterm  line_max= "]}," Ruby23Parser _reduce_481":{"type":"method","name":"_reduce_481","children":[],"call":[" literal_concat ","val [] "," s line "," lexer lineno "," lexer "," s "," new_word_list ","result line_max= ","list dup << "," new_symbol_list_entry ","list dup "," lexer lex_state= "," lexer lex_strterm= "," lexer lex_strterm "," new_string "," literal_concat  line_max= "," s line  line_max= "," new_word_list  line_max= ","list dup <<  line_max= "," s  line_max= "," lexer lex_strterm  line_max= "," new_string  line_max= "]}," Ruby23Parser _reduce_480":{"type":"method","name":"_reduce_480","children":[],"call":["val [] dup << "," new_word_list_entry ","val [] dup ","val [] "," new_regexp "," literal_concat "," new_symbol_list "," s ","val [] to_sym "," new_string "]}," Ruby23Parser _reduce_479":{"type":"method","name":"_reduce_479","children":[],"call":[" literal_concat ","val [] "," new_word_list "," new_xstring "," s line "," lexer lineno "," lexer "," s ","result line_max= ","list line "," literal_concat  line_max= "," new_word_list  line_max= "," new_xstring  line_max= "," s line  line_max= ","list line  line_max= "," s  line_max= "]}," Ruby23Parser _reduce_478":{"type":"method","name":"_reduce_478","children":[],"call":["val [] "," new_string "," new_regexp ","val [] dup << "," new_word_list_entry ","val [] dup ","result line_max= "," s line "," s ","val [] to_sym "," literal_concat ","val []  line_max= "," new_string  line_max= "," new_regexp  line_max= ","val [] dup <<  line_max= "," s line  line_max= "," literal_concat  line_max= "]}," Ruby23Parser _reduce_477":{"type":"method","name":"_reduce_477","children":[],"call":[" literal_concat ","val [] "," s "," dedent ","func =~ "," new_xstring "," new_word_list "," new_x dedent ing "]}," Ruby23Parser _reduce_476":{"type":"method","name":"_reduce_476","children":[],"call":[" s "," new_regexp "," literal_concat ","val [] "," new_string ","list line ","result line_max= ","val [] dup << ","val [] dup "," s  line_max= "," new_regexp  line_max= "," literal_concat  line_max= "," new_string  line_max= ","list line  line_max= ","val [] dup <<  line_max= ","val []  line_max= "]}," Ruby23Parser _reduce_475":{"type":"method","name":"_reduce_475","children":[],"call":["val [] dup << "," new_qsym_list_entry ","val [] dup ","val [] "," new_xstring "," dedent ","func =~ "," s line "," s ","result line_max= "," new_word_list_entry "," literal_concat "," new_x dedent ing ","val [] dup <<  line_max= "," new_xstring  line_max= "," s line  line_max= "," s  line_max= "," literal_concat  line_max= "]}," Ruby23Parser _reduce_474":{"type":"method","name":"_reduce_474","children":[],"call":[" new_qsym_list "," new_string "," debug20 "," literal_concat ","val [] "," new_regexp "," new_word_list "," s ","val [] dup << "," new_qsym_list_entry ","val [] dup "]}," Ruby23Parser _reduce_473":{"type":"method","name":"_reduce_473","children":[],"call":["val [] dup << "," new_qword_list_entry ","val [] dup ","val [] "," s ","str value ","str sexp_type == ","str sexp_type "," new_xstring ","result line_max= ","list line ","val [] to_sym "," new_qsym_list_entry "," new_qsym_list "," s  value "," s  sexp_type == "," s  sexp_type "," new_x s ing ","val [] dup <<  line_max= ","val []  line_max= "," new_xstring  line_max= ","list line  line_max= "," s  line_max= "," new_qsym_list  line_max= "]}," Ruby23Parser _reduce_472":{"type":"method","name":"_reduce_472","children":[],"call":[" new_qword_list "," literal_concat ","val [] "," debug20 "," new_string ","result line_max= "," s line "," s ","list dup << ","list dup ","sym last to_sym ","sym last ","sym []= ","sym [] "," new_qsym_list ","val [] dup << "," new_qword_list_entry ","val [] dup "," new_qword_list  line_max= "," literal_concat  line_max= "," new_string  line_max= "," s line  line_max= ","val []  line_max= ","list dup <<  line_max= "," s  line_max= "," new_qsym_list  line_max= ","val [] dup <<  line_max= "," s  last to_ s  "," s  last "," s  []= "," s  [] "," new_q s _list "]}," Ruby23Parser _reduce_471":{"type":"method","name":"_reduce_471","children":[],"call":["val [] ","result line= "," s "," lexer lineno "," lexer ","str value ","str sexp_type == ","str sexp_type ","str line "," dedent ","func =~ "," new_regexp ","val [] dup << ","val [] dup "," new_qword_list_entry "," new_qword_list ","val []  line= "," s  line= ","str line  line= "," new_regexp  line= ","val [] dup <<  line= "," new_qword_list  line= ","result  lexer lineno = "," lexer  lexer lineno no "," s  value "," dedent  value "," s  sexp_type == "," dedent  sexp_type == "," s  sexp_type "," dedent  sexp_type ","str  lexer lineno  "," s  line "," dedent  line "]}," Ruby23Parser _reduce_470":{"type":"method","name":"_reduce_470","children":[],"call":[" s "," debug20 ","result line= ","val [] "," lexer lineno "," lexer "," literal_concat "," new_xstring ","list dup << ","list dup ","sym last to_sym ","sym last ","sym []= ","sym [] "," new_qword_list "," s  line= "," literal_concat  line= "," new_xstring  line= ","list dup <<  line= ","val []  line= "," new_qword_list  line= ","result  lexer lineno = "," lexer  lexer lineno no "," s  last to_ s  "," s  last "," s  []= "," s  [] "]}," Ruby23Parser _reduce_469":{"type":"method","name":"_reduce_469","children":[],"call":["val [] ","val []= "," s ","val [] value ","val [] sexp_type == ","val [] sexp_type ","result line= "," lexer lineno "," lexer "," new_string ","val []  line= "," s  line= "," new_string  line= ","result  lexer lineno = "," lexer  lexer lineno no "]}," Ruby23Parser _reduce_468":{"type":"method","name":"_reduce_468","children":[],"call":[" s "," s line ","result line= ","val [] "," lexer lineno "," lexer "," debug ","str line "," dedent ","func =~ "," literal_concat "," s  lexer lineno  "," s  line= ","str line  line= ","val []  line= "," literal_concat  line= ","result  lexer lineno = "," lexer  lexer lineno no ","str  lexer lineno  "," dedent  line "]}," Ruby23Parser _reduce_467":{"type":"method","name":"_reduce_467","children":[],"call":["val [] dup << "," new_symbol_list_entry ","val [] dup ","val [] "," s ","str value ","str sexp_type == ","str sexp_type "," literal_concat "," s  value "," s  sexp_type == "," s  sexp_type "]}," Ruby23Parser _reduce_466":{"type":"method","name":"_reduce_466","children":[],"call":[" new_symbol_list "," s ","val [] "," s line "," literal_concat ","val [] dup << ","val [] dup ","val [] [] == ","val [] [] "," new_symbol_list_entry "]}," Ruby23Parser _reduce_465":{"type":"method","name":"_reduce_465","children":[],"call":["val [] "," s line "," s "," debug ","list dup << ","list dup "," debug20 ","sym last to_sym ","sym last ","sym []= ","sym [] ","val [] dup << "," new_symbol_list_entry ","val [] dup "," new_symbol_list "," s  last to_ s  "," s  last "," s  []= "," s  [] "," new_ s bol_list_entry "," new_ s bol_list "]}," Ruby23Parser _reduce_464":{"type":"method","name":"_reduce_464","children":[],"call":[" s ","val [] ","str value ","str sexp_type == ","str sexp_type ","val [] dup << ","val [] dup ","val [] [] == ","val [] [] "," new_symbol_list "," s  value "," s  sexp_type == "," s  sexp_type "]}," Ruby23Parser _reduce_463":{"type":"method","name":"_reduce_463","children":[],"call":[" literal_concat ","val [] "," s line ","arg line "," s "]}," Ruby23Parser _reduce_461":{"type":"method","name":"_reduce_461","children":[],"call":["val [] dup << "," new_word_list_entry ","val [] dup ","val [] ","result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s line ","var line "," s ","arg line "," new_xstring "," literal_concat ","val [] dup <<  << "," new_resbody  << "," s line  << ","val []  << "," s  << "," new_xstring  << "," literal_concat  << "]}," Ruby23Parser _reduce_460":{"type":"method","name":"_reduce_460","children":[],"call":[" new_word_list "," s line "," s "," new_regexp "," new_string ","val [] dup << "," new_word_list_entry ","val [] dup ","val [] "]}," Ruby23Parser _reduce_459":{"type":"method","name":"_reduce_459","children":[],"call":["val [] "," s ","result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s line ","var line "," new_xstring ","val [] dup << ","val [] dup ","val [] [] == ","val [] [] "," new_word_list_entry "," new_word_list ","val []  << "," s  << "," new_resbody  << "," new_xstring  << ","val [] dup <<  << "," new_word_list  << "," new_val [] _list_entry "," new_ s _list_entry "," new_val [] _list "," new_ s _list "]}," Ruby23Parser _reduce_458":{"type":"method","name":"_reduce_458","children":[],"call":[" s ","result << ","val [] ","result line= "," new_when "," s line ","arg line "," new_string "," literal_concat "," new_word_list "," s  << "," new_when  << "," s line  << ","val []  << "," new_string  << "," literal_concat  << "," new_word_list  << "," s  line= "," new_when  line= "," s line  line= ","val []  line= "," new_string  line= "," literal_concat  line= "," new_word_list  line= "]}," Ruby23Parser _reduce_457":{"type":"method","name":"_reduce_457","children":[],"call":[" new_regexp ","result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s "," lexer lineno "," lexer ","val [] "," new_regexp  << "," new_resbody  << "," lexer lineno  << ","val []  << "," s  << "]}," Ruby23Parser _reduce_456":{"type":"method","name":"_reduce_456","children":[],"call":[" new_xstring ","val [] "," lexer cmdarg restore "," lexer cmdarg "," lexer "," env unextend "," env "," new_do_body ","result << ","result line= "," new_when "," new_resbody ","klasses line ","klasses << "," new_assign "," s line ","var line "," s "," literal_concat "," debug20 "," new_regexp "," new_xstring  << "," new_do_body  << "," new_when  << "," new_resbody  << "," literal_concat  << "," s  << "," new_regexp  << "," new_xstring  line= "," new_do_body  line= "," new_when  line= "," new_resbody  line= "," literal_concat  line= "," s  line= "," new_regexp  line= "]}," Ruby23Parser _reduce_455":{"type":"method","name":"_reduce_455","children":[],"call":[" new_string "," lexer cmdarg store "," lexer cmdarg "," lexer "," lexer lineno "," s line ","arg line "," s ","val [] ","val []= ","val [] value ","val [] [] == ","val [] [] "," new_regexp "," new_xstring "]}," Ruby23Parser _reduce_454":{"type":"method","name":"_reduce_454","children":[],"call":["val [] ","result << ","result line= "," new_when "," lexer lineno "," lexer "," env extend "," env "," env unextend "," lexer cmdarg pop "," lexer cmdarg "," new_do_body "," debug20 "," new_xstring "," new_string ","val []  << "," new_when  << "," lexer lineno  << "," new_do_body  << "," new_xstring  << "," new_string  << ","val []  line= "," new_when  line= "," lexer lineno  line= "," new_do_body  line= "," new_xstring  line= "," new_string  line= "]}," Ruby23Parser _reduce_453":{"type":"method","name":"_reduce_453","children":[],"call":[" literal_concat ","val [] "," lexer lineno "," lexer "," lexer cmdarg pop "," lexer cmdarg "," lexer cmdarg restore "," env unextend "," env "," new_brace_body "," lexer cmdarg push ","result << ","result line "," new_when "," new_resbody ","klasses line ","klasses << "," new_assign "," s line ","var line "," s ","val []= ","val [] value ","val [] [] == ","val [] [] "," new_string "," literal_concat  << "," lexer lineno  << "," new_brace_body  << "," new_when  << "," new_resbody  << ","val []  << "," s  << "," new_string  << "," literal_concat  line "," lexer lineno  line "," new_brace_body  line "," new_when  line "," new_resbody  line ","val []  line "," s  line "," new_string  line "]}," Ruby23Parser _reduce_451":{"type":"method","name":"_reduce_451","children":[],"call":[" debug20 "," lexer cmdarg store "," lexer cmdarg "," lexer "," lexer lineno "," env extend "," env "," lexer cmdarg pop "," lexer cmdarg restore "," env unextend "," new_brace_body "," list_append "," s line ","id line "," s ","val [] "," literal_concat "]}," Ruby23Parser _reduce_450":{"type":"method","name":"_reduce_450","children":[],"call":["val [] ","val []= "," s ","val [] value ","val [] sexp_type == ","val [] sexp_type "," lexer lineno "," lexer "," env extend "," env "," env unextend ","result line= "," lexer cmdarg store "," lexer cmdarg "," list_append ","result << ","result line "," new_when "," debug20 ","val []  line= "," lexer lineno  line= "," lexer cmdarg store  line= "," list_append  line= "," new_when  line= "," s  line= ","val []  << "," lexer lineno  << "," lexer cmdarg store  << "," list_append  << "," new_when  << "," s  << ","val []  line "," lexer lineno  line "," lexer cmdarg store  line "," list_append  line "," new_when  line "," s  line "]}," Ruby23Parser _reduce_448":{"type":"method","name":"_reduce_448","children":[],"call":[" s ","val [] "," lexer cmdarg store "," lexer cmdarg "," lexer "," env unextend "," env ","result line= "," s line ","arg line "," list_append ","id line ","val []= ","val [] value ","val [] [] == ","val [] [] "," s  line= "," lexer cmdarg store  line= "," s line  line= "," list_append  line= ","val []  line= "]}," Ruby23Parser _reduce_447":{"type":"method","name":"_reduce_447","children":[],"call":[" s ","val [] "," lexer lineno "," lexer "," env extend "," env "," env unextend "," lexer cmdarg pop "," lexer cmdarg "," new_do_body "," list_append "]}," Ruby23Parser _reduce_445":{"type":"method","name":"_reduce_445","children":[],"call":[" s "," lexer lineno "," lexer "," env extend "," env "," s line ","arg line ","val [] "]}," Ruby23Parser _reduce_443":{"type":"method","name":"_reduce_443","children":[],"call":["val [] "," lexer lineno "," lexer "," env extend "," env "," new_call "," s line "," s "," lexer cmdarg store "," lexer cmdarg "," lexer cmdarg push ","result << "," new_resbody ","klasses << "," node_assign ","val []  << "," lexer lineno  << "," new_call  << "," s line  << "," lexer cmdarg store  << "," s  << "," new_resbody  << "]}," Ruby23Parser _reduce_440":{"type":"method","name":"_reduce_440","children":[],"call":[" s ","val [] "," new_super "," new_call ","val [] to_sym "," lexer lineno "," lexer "," env extend "," env "," lexer cmdarg store "," lexer cmdarg ","result << ","result line= "," new_when "," s  << "," new_super  << "," new_call  << "," lexer lineno  << "," lexer cmdarg store  << "," new_when  << "," s  line= "," new_super  line= "," new_call  line= "," lexer lineno  line= "," lexer cmdarg store  line= "," new_when  line= "]}," Ruby23Parser _reduce_439":{"type":"method","name":"_reduce_439","children":[],"call":[" new_call ","val [] ","val [] to_sym "," env unextend "," env ","result line "," lexer lineno "," lexer "," env extend "," s "," new_call  line "," lexer lineno  line "," s  line "]}," Ruby23Parser _reduce_438":{"type":"method","name":"_reduce_438","children":[],"call":["result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s "," new_call ","val [] ","result line ","call concat ","args sexp_body ","val [] to_sym "," lexer lineno "," lexer "," env extend "," env "," env unextend ","result line= "," new_when "," new_iter "," new_resbody  << "," new_call  << ","call concat  << "," lexer lineno  << "," new_when  << "," new_iter  << "," s  << "," new_resbody  line "," new_call  line ","call concat  line "," lexer lineno  line "," new_when  line "," new_iter  line "," s  line "," new_resbody  line= "," new_call  line= ","call concat  line= "," lexer lineno  line= "," new_when  line= "," new_iter  line= "," s  line= "]}," Ruby23Parser _reduce_435":{"type":"method","name":"_reduce_435","children":[],"call":["result << ","val [] ","result line= "," new_when "," new_call ","val [] to_sym ","iter2 insert ","name to_sym "," lexer lineno "," lexer "," new_super "," env extend "," env "," env unextend "," new_iter "," new_when  << "," new_call  << "," lexer lineno  << "," new_super  << "," new_iter  << "," new_when  line= "," new_call  line= "," lexer lineno  line= "," new_super  line= "," new_iter  line= "," new_ new_call  "]}," Ruby23Parser _reduce_434":{"type":"method","name":"_reduce_434","children":[],"call":[" lexer lineno "," lexer ","val [] concat ","args sexp_body ","val [] "," call_args "," new_call ","val [] to_sym ","iter2 insert ","name to_sym "," new_aref "," env extend "," env ","result << ","result line= "," new_when "," call_args  sexp_body "," call_ call_args  ","  new_call _args "," new_ new_call  "," lexer lineno  << ","val [] concat  << "," new_call  << "," new_aref  << "," new_when  << "," lexer lineno  line= ","val [] concat  line= "," new_call  line= "," new_aref  line= "," new_when  line= "]}," Ruby23Parser _reduce_433":{"type":"method","name":"_reduce_433","children":[],"call":[" env unextend "," env ","result line= "," new_iter "," lexer lineno "," lexer ","result insert "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? ","val [] ","iter2 insert "," new_call ","name to_sym "," s line "," s "," env extend ","result << "," new_when "," new_iter  line= "," lexer lineno  line= "," new_call  line= "," s line  line= "," new_when  line= "," new_iter  insert "," lexer lineno  insert "," new_call  insert "," s line  insert "," new_when  insert "," invert_block_ new_call  "," invert_block_call  [] block_pass? "," invert_block_call  [] "," new_ new_call  "," new_iter  << "," lexer lineno  << "," new_call  << "," s line  << "," new_when  << "]}," Ruby23Parser _reduce_432":{"type":"method","name":"_reduce_432","children":[],"call":["iter2 insert "," new_call ","name to_sym ","iter line ","val [] ","val [] to_sym ","id to_sym "," new_super "," new_aref "," lexer lineno "," lexer "," env unextend "," env ","result line= "," new_iter "," new_ new_call  ","iter line  line= "," new_call  line= "," new_super  line= "," new_aref  line= "," lexer lineno  line= "," new_iter  line= "]}," Ruby23Parser _reduce_431":{"type":"method","name":"_reduce_431","children":[],"call":[" lexer lineno "," lexer "," env extend "," env ","iter2 insert "," new_call ","name to_sym ","val [] ","result insert "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? ","op to_sym "," s "," env unextend ","result line= "," new_iter "," new_ new_call  "," invert_block_call  [] "," lexer lineno  insert ","val []  insert "," new_call  insert "," s  insert "," new_iter  insert "," invert_block_ new_call  "," invert_block_call  [] block_pass? "," lexer lineno  line= ","val []  line= "," new_call  line= "," s  line= "," new_iter  line= "]}," Ruby23Parser _reduce_430":{"type":"method","name":"_reduce_430","children":[],"call":[" env unextend "," env ","result line= "," new_iter "," new_call ","val [] ","val [] to_sym ","iter line ","op to_sym ","result line_max= "," new_aref "," new_super "," lexer lineno "," lexer "," env extend "," new_iter  line= "," new_call  line= ","val []  line= ","iter line  line= "," new_aref  line= "," new_super  line= "," lexer lineno  line= "," new_iter  line_max= "," new_call  line_max= ","val []  line_max= ","iter line  line_max= "," new_aref  line_max= "," new_super  line_max= "," lexer lineno  line_max= "]}," Ruby23Parser _reduce_429":{"type":"method","name":"_reduce_429","children":[],"call":["result insert ","val [] "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? ","result == "," s ","call concat ","args sexp_body ","result line_max= ","args line_max "," new_call ","id to_sym "," lexer lineno "," lexer "," env extend "," env "," env unextend ","result line= "," new_iter ","val []  insert ","call concat  insert "," new_call  insert "," s  insert "," lexer lineno  insert "," new_iter  insert "," invert_block_call  [] "," invert_block_call  [] block_pass? ","val []  == ","call concat  == "," new_call  == "," s  == "," lexer lineno  == "," new_iter  == ","val []  line_max= ","call concat  line_max= "," new_call  line_max= "," s  line_max= "," lexer lineno  line_max= "," new_iter  line_max= ","val []  line= ","call concat  line= "," new_call  line= "," s  line= "," lexer lineno  line= "," new_iter  line= "]}," Ruby23Parser _reduce_428":{"type":"method","name":"_reduce_428","children":[],"call":[" lexer lineno "," lexer "," env extend "," env ","val [] "," args ","iter2 insert "," new_call ","name to_sym ","op to_sym "," new_super ","result []= "," env unextend ","result line= "," new_iter "," new_ new_call  "," lexer lineno  []= ","val []  []= "," args  []= "," new_call  []= "," new_super  []= "," new_iter  []= "," lexer lineno  line= ","val []  line= "," args  line= "," new_call  line= "," new_super  line= "," new_iter  line= "]}," Ruby23Parser _reduce_427":{"type":"method","name":"_reduce_427","children":[],"call":[" new_aref ","val [] "," env unextend "," env ","result line= "," new_iter "," s line "," s "," lexer cmdarg lexpop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," lexer lpar_beg= ","result == ","iter2 insert "," new_call ","name to_sym ","result line_max= ","op to_sym "," lexer lineno "," env extend "," new_aref  line= ","val []  line= "," new_iter  line= "," new_call  line= "," lexer lineno  line= "," new_aref  == ","val []  == "," new_iter  == "," new_call  == "," lexer lineno  == "," new_ s line  "," new_ new_call  "," new_aref  line_max= ","val []  line_max= "," new_iter  line_max= "," new_call  line_max= "," lexer lineno  line_max= "]}," Ruby23Parser _reduce_426":{"type":"method","name":"_reduce_426","children":[],"call":[" s ","val [] "," lexer cmdarg store "," lexer cmdarg "," lexer "," args "," new_call ","id to_sym ","result line_max= ","args line_max ","call concat ","args sexp_body ","result []= ","val [] to_sym "," lexer lineno "," env extend "," env "," new_aref "," s  line_max= ","val []  line_max= "," lexer cmdarg store  line_max= "," args  line_max= "," new_call  line_max= "," lexer lineno  line_max= "," new_aref  line_max= "," s  []= ","val []  []= "," lexer cmdarg store  []= "," args  []= "," new_call  []= "," lexer lineno  []= "," new_aref  []= "]}," Ruby23Parser _reduce_425":{"type":"method","name":"_reduce_425","children":[],"call":[" new_super ","val [] ","result == "," s "," lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," lexer lineno "," env extend "," env "," env unextend ","result line= "," new_iter "," s line "," lexer cmdarg pop "," lexer cmdarg ","result insert "," invert_block_call "," inverted? "," syntax_error ","cmd block_pass? ","iter2 insert "," new_call ","name to_sym ","val [] to_sym "," new_aref "," invert_block_call  [] "," new_super  == ","val []  == "," new_iter  == "," new_call  == "," new_aref  == "," s  == "," new_super  line= ","val []  line= "," new_iter  line= "," new_call  line= "," new_aref  line= "," s  line= "," new_super  insert ","val []  insert "," new_iter  insert "," new_call  insert "," new_aref  insert "," s  insert "," invert_block_ s line  "," invert_block_ new_call  "," new_ s line  "," new_ new_call  "," invert_block_call  [] to_sym "]}," Ruby23Parser _reduce_424":{"type":"method","name":"_reduce_424","children":[],"call":[" new_call ","val [] "," args "," lexer cmdarg push "," lexer cmdarg "," lexer ","iter line ","iter2 insert ","name to_sym ","val [] to_sym ","result []= "," s "," new_super "," new_ new_call  "," new_call  []= "," args  []= ","iter line  []= "," s  []= "," new_super  []= "]}," Ruby23Parser _reduce_423":{"type":"method","name":"_reduce_423","children":[],"call":[" new_call ","val [] "," env unextend "," env ","result line= "," new_iter "," lexer cmdarg lexpop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," lexer lpar_beg= "," s line "," s ","id to_sym "," lexer lineno "," lexer paren_nest "," lexer lpar_beg "," env extend ","val [] to_sym "," new_super "," new_ new_call  "," new_call  line= "," new_iter  line= "," s line  line= ","val []  line= "," new_super  line= ","result  lexer lineno = "," s  lexer lineno  "," lexer  lexer lineno no "]}," Ruby23Parser _reduce_422":{"type":"method","name":"_reduce_422","children":[],"call":[" new_call ","val [] to_sym ","val [] "," lexer lineno "," lexer "," lexer cmdarg store "," lexer cmdarg "," args ","result insert "," invert_block_call "," inverted? "," syntax_error ","cmd block_pass? ","result []= ","val [] concat ","args [] "," call_args "," invert_block_call  [] to_sym "," invert_block_call  [] ","  call_args  "," new_call  insert "," args  insert ","val []  insert ","val [] concat  insert "," new_call  []= "," args  []= ","val []  []= ","val [] concat  []= "," invert_block_call  [] concat "," call_args  [] "," call_ call_args  "]}," Ruby23Parser _reduce_421":{"type":"method","name":"_reduce_421","children":[],"call":[" new_call ","val [] ","val [] to_sym "," lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," lexer lineno "," env extend "," env "," args "," s line "," s ","id to_sym ","result == ","iter line "," lexer  lexer lineno no "," s  lexer lineno  "," new_call  == "," lexer lpar_beg  == "," lexer lineno  == "," args  == "," s line  == ","val []  == ","iter line  == ","iter  lexer lineno  "]}," Ruby23Parser _reduce_420":{"type":"method","name":"_reduce_420","children":[],"call":[" new_call ","val [] ","val [] to_sym "," args ","val [] concat ","args [] "," call_args ","iter2 insert ","name to_sym "," new_ new_call  ","  call_args  "," call_args  [] "," call_ call_args  ","  new_call _args "]}," Ruby23Parser _reduce_419":{"type":"method","name":"_reduce_419","children":[],"call":["val [] concat ","args sexp_body ","val [] "," call_args "," s ","val [] to_sym "," args "," env unextend "," env ","result line "," new_iter "," s line "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer lpar_beg= "," lexer lineno ","iter2 insert "," new_call ","name to_sym "," call_args  sexp_body "," call_ call_args  ","  s line _args ","  new_call _args ","  call_args  ","val [] concat  line "," s  line "," args  line "," new_iter  line ","val []  line "," lexer lineno  line "," new_call  line "," new_ s line  "," new_ new_call  "]}," Ruby23Parser _reduce_418":{"type":"method","name":"_reduce_418","children":[],"call":[" lexer lineno "," lexer "," args "," lexer cmdarg push "," lexer cmdarg ","result == "," s ","val [] ","iter2 insert "," new_call ","name to_sym ","val [] to_sym ","val [] concat ","args [] "," call_args ","  call_args  "," lexer lineno  == "," args  == ","val []  == "," new_call  == ","val [] concat  == "," new_ new_call  "," call_args  [] ","  new_call _args "," call_ call_args  "]}," Ruby23Parser _reduce_417":{"type":"method","name":"_reduce_417","children":[],"call":["iter2 insert "," new_call ","name to_sym "," args "," s line "," lexer lineno "," lexer "," s "," lexer lpar_beg= "," lexer paren_nest "," lexer lpar_beg "," env extend "," env ","result insert ","val [] "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? ","val [] concat ","args [] "," call_args "," new_ new_call  ","  call_args  "," args  insert "," s line  insert ","val []  insert ","val [] concat  insert "," lexer lineno  insert "," invert_block_call  [] "," invert_block_ new_call  "," invert_block_call  [] block_pass? "," invert_block_call  [] concat "," call_args  [] ","  new_call _args "," call_ call_args  "]}," Ruby23Parser _reduce_416":{"type":"method","name":"_reduce_416","children":[],"call":["iter2 insert "," new_call ","name to_sym "," args "," env unextend "," env ","result line "," new_iter "," s line "," s "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer lpar_beg= ","val [] ","val [] to_sym ","result line= "," lexer lineno "," new_ new_call  "," new_ s line  "," val []  "," args  line "," new_iter  line "," new_call  line "," lexer lineno  line "," args  line= "," new_iter  line= "," new_call  line= "," lexer lineno  line= "]}," Ruby23Parser _reduce_415":{"type":"method","name":"_reduce_415","children":[],"call":[" new_call ","val [] ","val [] to_sym "," lexer command_start= "," lexer "," s line "," lexer lineno "," s ","id to_sym "," wrap "," lexer cmdarg push "," lexer cmdarg ","result insert "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? ","iter2 insert ","name to_sym "," new_ new_call  "," invert_block_call  [] "," invert_block_call  [] to_sym "," new_call  insert "," s line  insert "," wrap  insert ","val []  insert "," invert_block_ new_call  "," invert_block_call  [] block_pass? "]}," Ruby23Parser _reduce_414":{"type":"method","name":"_reduce_414","children":[],"call":["result insert ","val [] "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? "," args "," lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," lexer lineno "," env extend "," env "," env unextend ","result line= "," new_iter ","iter2 insert "," new_call ","name to_sym ","val [] to_sym ","val []  insert "," args  insert "," new_iter  insert "," lexer lineno  insert "," new_call  insert "," invert_block_call  [] "," invert_block_ new_call  "," invert_block_call  [] block_pass? "," val []  ","val []  line= "," args  line= "," new_iter  line= "," lexer lineno  line= "," new_call  line= "," new_ new_call  "," invert_block_call  [] to_sym "]}," Ruby23Parser _reduce_413":{"type":"method","name":"_reduce_413","children":[],"call":[" env unextend "," env ","result line= ","val [] "," new_iter "," s "," args "," lexer command_start= "," lexer "," new_call ","val [] to_sym ","result insert "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? "," new_iter  line= "," s  line= "," args  line= ","val []  line= "," new_call  line= "," invert_block_call  [] "," val []  "," invert_block_call  [] to_sym "," new_iter  insert "," s  insert "," args  insert ","val []  insert "," new_call  insert "," invert_block_call  [] block_pass? "]}," Ruby23Parser _reduce_412":{"type":"method","name":"_reduce_412","children":[],"call":[" args "," wrap ","val [] "," lexer lineno "," lexer "," env extend "," env ","result insert "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? "," env unextend ","result line= "," new_iter "," val []  "," invert_block_call  [] "," args  insert "," wrap  insert "," lexer lineno  insert ","val []  insert "," new_iter  insert "," invert_block_call  [] block_pass? "," args  line= "," wrap  line= "," lexer lineno  line= ","val []  line= "," new_iter  line= "]}," Ruby23Parser _reduce_411":{"type":"method","name":"_reduce_411","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," lexer command_start= "," args ","val [] ","result == "," s "," env unextend ","result line= "," new_iter "," val []  "," lexer lineno  == "," args  == ","val []  == "," new_iter  == "," lexer lineno  line= "," args  line= ","val []  line= "," new_iter  line= "]}," Ruby23Parser _reduce_410":{"type":"method","name":"_reduce_410","children":[],"call":["val [] "," args "," lexer lineno "," lexer "," env extend "," env "]}," Ruby23Parser _reduce_409":{"type":"method","name":"_reduce_409","children":[],"call":["val [] "," args "," s line "," lexer lineno "," lexer "," s ","result == "," env unextend "," env "," new_iter "," new_call "," lexer lpar_beg= "," env extend ","val []  == "," args  == "," s line  == "," new_iter  == "," lexer lineno  == "," new_ new_call  "]}," Ruby23Parser _reduce_408":{"type":"method","name":"_reduce_408","children":[],"call":["result == "," s ","val [] "," args "," lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," lexer lineno "," env extend "," env ","val []  == "," args  == "," lexer lpar_beg  == "," lexer lineno  == "]}," Ruby23Parser _reduce_407":{"type":"method","name":"_reduce_407","children":[],"call":[" args "," lexer command_start= "," lexer "," env unextend "," env "," new_iter "," new_call "," lexer lpar_beg= ","val [] ","result == "," s "," new_ new_call  "," args  == "," new_iter  == ","val []  == "]}," Ruby23Parser _reduce_406":{"type":"method","name":"_reduce_406","children":[],"call":[" env unextend "," env "," new_iter "," new_call "," lexer lpar_beg= "," lexer "," args "," s line "," lexer lineno "," s "," lexer paren_nest "," lexer lpar_beg "," env extend ","val [] to_sym ","val [] ","result == "," new_ new_call  "," new_iter  == "," args  == "," s line  == "," lexer lpar_beg  == "," lexer lineno  == "," s  == ","val []  == "]}," Ruby23Parser _reduce_405":{"type":"method","name":"_reduce_405","children":[],"call":[" lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," lexer lineno "," env extend "," env "," args "," env unextend "," new_iter "," new_call "," new_ new_call  "]}," Ruby23Parser _reduce_403":{"type":"method","name":"_reduce_403","children":[],"call":[" s ","val [] to_sym ","val [] "," args "," lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," lexer lineno "," env extend "," env "]}," Ruby23Parser _reduce_402":{"type":"method","name":"_reduce_402","children":[],"call":[" args "," args << "," s ","val [] to_sym ","val [] "]}," Ruby23Parser _reduce_401":{"type":"method","name":"_reduce_401","children":[],"call":[" args "," s ","val [] to_sym ","val [] "]}," Ruby23Parser _reduce_400":{"type":"method","name":"_reduce_400","children":[],"call":[" args "," s "," lexer command_start= "," lexer "]}," Ruby23Parser _reduce_398":{"type":"method","name":"_reduce_398","children":[],"call":[" args "," s "," lexer command_start= "," lexer "]}," Ruby23Parser _reduce_397":{"type":"method","name":"_reduce_397","children":[],"call":[" s "," lexer command_start= "," lexer "," args "]}," Ruby23Parser _reduce_396":{"type":"method","name":"_reduce_396","children":[],"call":[" args ","result line "," call_args "," lexer lineno "," lexer "," args << "," s "," lexer command_start= "," args  line "," call_args  line "," args <<  line "," s  line ","result  lexer lineno  "," lexer  lexer lineno no "]}," Ruby23Parser _reduce_394":{"type":"method","name":"_reduce_394","children":[],"call":[" call_args ","result line "," lexer lineno "," lexer "," args "," call_args  line "," args  line ","result  lexer lineno  "," lexer  lexer lineno no "]}," Ruby23Parser _reduce_393":{"type":"method","name":"_reduce_393","children":[],"call":[" args "," call_args "," args << "]}," Ruby23Parser _reduce_392":{"type":"method","name":"_reduce_392","children":[],"call":[" args "," call_args "," block_var "]}," Ruby23Parser _reduce_391":{"type":"method","name":"_reduce_391","children":[],"call":[" args "," call_args "," block_var "]}," Ruby23Parser _reduce_390":{"type":"method","name":"_reduce_390","children":[],"call":[" args "," call_args "," block_var "]}," Ruby23Parser _reduce_389":{"type":"method","name":"_reduce_389","children":[],"call":[" args "," call_args "," block_var "]}," Ruby23Parser _reduce_388":{"type":"method","name":"_reduce_388","children":[],"call":[" args "," block_var ","result line "," call_args "," args  line "," block_var  line "," call_args  line "]}," Ruby23Parser _reduce_387":{"type":"method","name":"_reduce_387","children":[],"call":[" args "," block_var "," call_args "]}," Ruby23Parser _reduce_386":{"type":"method","name":"_reduce_386","children":[],"call":[" args "," block_var ","(str \"*\") to_sym "," call_args "]}," Ruby23Parser _reduce_385":{"type":"method","name":"_reduce_385","children":[],"call":[" args "," block_var ","(str \"*\") to_sym "," call_args ","result line "," args  line "," block_var  line "," call_args  line "]}," Ruby23Parser _reduce_384":{"type":"method","name":"_reduce_384","children":[],"call":[" args "," block_var ","(str \"*\") to_sym ","result line "," lexer lineno "," lexer "," call_args "," args  line "," block_var  line "," call_args  line "]}," Ruby23Parser _reduce_383":{"type":"method","name":"_reduce_383","children":[],"call":[" args "," block_var "," list_append ","val [] ","(str \"*\") to_sym ","result line "," call_args "," args  line "," block_var  line "," list_append  line "," call_args  line "]}," Ruby23Parser _reduce_382":{"type":"method","name":"_reduce_382","children":[],"call":[" args "," block_var ","(str \"*\") to_sym "," s line "," lexer lineno "," lexer "," s "," call_args "]}," Ruby23Parser _reduce_381":{"type":"method","name":"_reduce_381","children":[],"call":[" args "," block_var ","(str \"*\") to_sym ","val [] "," list_append ","result line "," lexer lineno "," lexer "," args  line "," block_var  line ","val []  line "," list_append  line "]}," Ruby23Parser _reduce_380":{"type":"method","name":"_reduce_380","children":[],"call":[" args "," block_var "," s line "," lexer lineno "," lexer "," s ","result line ","(str \"*\") to_sym "," args  line "," block_var  line "," s line  line "]}," Ruby23Parser _reduce_379":{"type":"method","name":"_reduce_379","children":[],"call":[" args "," list_append ","val [] ","val [] delete_at ","val [] [] nil? ","val [] [] "," block_var "," call_args "]}," Ruby23Parser _reduce_377":{"type":"method","name":"_reduce_377","children":[],"call":[" args ","val [] ","val [] delete_at ","val [] [] nil? ","val [] [] "," list_append "," block_var "," call_args "]}," Ruby23Parser _reduce_376":{"type":"method","name":"_reduce_376","children":[],"call":[" call_args "," s line "," lexer lineno "," lexer "," s "," block_var "," args "]}," Ruby23Parser _reduce_375":{"type":"method","name":"_reduce_375","children":[],"call":[" call_args ","val [] delete_at ","val [] ","val [] [] nil? ","val [] [] "," s line "," s "," block_var "," args "]}," Ruby23Parser _reduce_374":{"type":"method","name":"_reduce_374","children":[],"call":[" call_args "," list_append ","val [] "," debug20 "," block_var "]}," Ruby23Parser _reduce_373":{"type":"method","name":"_reduce_373","children":[],"call":[" call_args ","val [] "," s line "," s ","val [] delete_at ","val [] [] nil? ","val [] [] "," lexer lineno "," lexer "," block_var "," debug20 "]}," Ruby23Parser _reduce_372":{"type":"method","name":"_reduce_372","children":[],"call":[" block_var ","val [] "," debug20 "," call_args "]}," Ruby23Parser _reduce_371":{"type":"method","name":"_reduce_371","children":[],"call":[" block_var "," s ","val [] "," debug20 "," call_args "]}," Ruby23Parser _reduce_370":{"type":"method","name":"_reduce_370","children":[],"call":[" block_var ","val [] delete_at ","val [] ","val [] [] nil? ","val [] [] "]}," Ruby23Parser _reduce_369":{"type":"method","name":"_reduce_369","children":[],"call":[" block_var "," s line "," s "," debug20 ","(str \"*\") to_sym "]}," Ruby23Parser _reduce_368":{"type":"method","name":"_reduce_368","children":[],"call":[" block_var ","val [] ","(str \"*\") to_sym "," debug20 "]}," Ruby23Parser _reduce_367":{"type":"method","name":"_reduce_367","children":[],"call":[" block_var ","(str \"*\") to_sym "]}," Ruby23Parser _reduce_366":{"type":"method","name":"_reduce_366","children":[],"call":[" block_var ","(str \"*\") to_sym "," s line "," s "," list_append ","val [] "," debug20 "]}," Ruby23Parser _reduce_365":{"type":"method","name":"_reduce_365","children":[],"call":[" block_var ","(str \"*\") to_sym "," s ","val [] "]}," Ruby23Parser _reduce_364":{"type":"method","name":"_reduce_364","children":[],"call":[" block_var "," list_append ","val [] ","(str \"*\") to_sym "]}," Ruby23Parser _reduce_363":{"type":"method","name":"_reduce_363","children":[],"call":[" list_append ","val [] "," s "," block_var ","(str \"*\") to_sym "]}," Ruby23Parser _reduce_362":{"type":"method","name":"_reduce_362","children":[],"call":[" s ","val [] ","val [] delete_at ","val [] [] nil? ","val [] [] "," block_var "," list_append "]}," Ruby23Parser _reduce_361":{"type":"method","name":"_reduce_361","children":[],"call":["val [] "," list_append "," s "]}," Ruby23Parser _reduce_359":{"type":"method","name":"_reduce_359","children":[],"call":["val [] delete_at ","val [] ","val [] [] nil? ","val [] [] "]}," Ruby23Parser _reduce_357":{"type":"method","name":"_reduce_357","children":[],"call":["val [] ","val [] delete_at ","val [] [] nil? ","val [] [] "]}," Ruby23Parser _reduce_355":{"type":"method","name":"_reduce_355","children":[],"call":[" s ","val [] "]}," Ruby23Parser _reduce_337":{"type":"method","name":"_reduce_337","children":[],"call":[" value_expr ","val [] "," lexer comments "," lexer "," in_def= "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," new_defn "," env extend "," yyerror "," in_single > "," in_single "," in_def "," comments push "," comments "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer lex_state= ","EXPR_ENDFN  | "," s line "," s "]}," Ruby23Parser _reduce_336":{"type":"method","name":"_reduce_336","children":[],"call":[" s "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," env extend "," env "," in_def= "," comments push "," lexer comments "," comments "," lexer cmdarg stack dup "," in_def "," lexer lineno "," env unextend "," new_module "," lexer lex_state= "," s line "," value_expr ","val [] "]}," Ruby23Parser _reduce_335":{"type":"method","name":"_reduce_335","children":[],"call":[" s "," lexer comments "," lexer "," env unextend "," env "," new_module "," new_sclass "," env extend "," yyerror "," in_single > "," in_single "," in_def "," comments push "," comments "," lexer ignore_body_comments "," in_def= "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," new_defn "," new_defs ","val delete_at ","result [] line ","val [] ","result [] "," value_expr "," s  [] line "," new_module  [] line "," new_sclass  [] line "," new_defs  [] line "," value_expr  [] line "," s  [] "," new_module  [] "," new_sclass  [] "," new_defs  [] "," value_expr  [] "]}," Ruby23Parser _reduce_334":{"type":"method","name":"_reduce_334","children":[],"call":[" s "," env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," lexer "," comments "," in_single= "," lexer lineno "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," in_def= "," lexer lex_state= ","EXPR_ENDFN  | "]}," Ruby23Parser _reduce_333":{"type":"method","name":"_reduce_333","children":[],"call":[" s "," lexer lineno "," lexer "," in_def= "," in_def "," lexer comments "," env unextend "," env "," new_sclass "," lexer ignore_body_comments "," new_module "," lexer lex_state= "," in_single ","result [] line ","val [] ","result [] "," new_defs "," comments push "," comments "," s  [] line "," lexer lineno  [] line "," in_def  [] line "," new_sclass  [] line "," new_module  [] line "," new_defs  [] line "," s  [] "," lexer lineno  [] "," in_def  [] "," new_sclass  [] "," new_module  [] "," new_defs  [] "]}," Ruby23Parser _reduce_332":{"type":"method","name":"_reduce_332","children":[],"call":[" lexer comments "," lexer "," in_single "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg ","result [] line ","result [] "," new_defs ","val [] "," new_sclass "," lexer lineno "," env extend "," in_single= "," yyerror "," in_single > "," in_def "," lexer ignore_body_comments "," in_def= "," lexer cmdarg pop "," lexer cond pop "," lexer cond "," new_defn "," lexer lex_state= "," s "," new_defs  [] line "," new_sclass  [] line "," lexer lineno  [] line "," in_single  [] line "," new_defn  [] line "," s  [] line "," new_defs  [] "," new_sclass  [] "," lexer lineno  [] "," in_single  [] "," new_defn  [] "," s  [] "]}," Ruby23Parser _reduce_331":{"type":"method","name":"_reduce_331","children":[],"call":[" lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," lexer cmdarg stack dup "," lexer lineno "," lexer lex_state= "," env extend "," env "," in_single "," in_single= "," lexer comments "," env unextend "," new_class "," in_def= "," in_def "," lexer cond push "," lexer cond "," lexer cmdarg push "," comments push "," comments "," s ","result [] line ","val [] ","result [] "," new_defs "," in_single  [] line "," new_class  [] line "," in_def  [] line "," lexer lineno  [] line "," s  [] line "," new_defs  [] line "," in_single  [] "," new_class  [] "," in_def  [] "," lexer lineno  [] "," s  [] "," new_defs  [] "]}," Ruby23Parser _reduce_330":{"type":"method","name":"_reduce_330","children":[],"call":[" lexer lex_state= "," lexer "," comments push "," lexer comments "," comments "," in_def= "," in_def "," env extend "," env "," yyerror "," in_single > "," in_single "," lexer lineno "," lexer ignore_body_comments "," env unextend "," new_sclass "," new_module "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," new_defn ","val [] ","result [] line ","result [] "," new_defs "," in_def  [] line "," lexer lineno  [] line "," new_sclass  [] line "," new_module  [] line "," new_defn  [] line "," new_defs  [] line "," in_def  [] "," lexer lineno  [] "," new_sclass  [] "," new_module  [] "," new_defn  [] "," new_defs  [] "]}," Ruby23Parser _reduce_329":{"type":"method","name":"_reduce_329","children":[],"call":[" lexer comments "," lexer "," in_def= "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," new_defn ","val [] "," lexer lineno "," new_class "," env extend "," in_single= "," in_single "," yyerror "," in_single > "," in_def "," comments push "," comments "," lexer cmdarg stack dup "," lexer lex_state= "]}," Ruby23Parser _reduce_328":{"type":"method","name":"_reduce_328","children":[],"call":[" lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," env extend "," env "," in_def= "," comments push "," lexer comments "," comments "," lexer cmdarg stack dup "," in_def "," env unextend "," new_class "," new_for "," yyerror "," in_single > "," in_single "," lexer ignore_body_comments "," new_sclass "," new_module "," lexer lineno "," lexer lex_state= "," new_defn ","val [] "]}," Ruby23Parser _reduce_327":{"type":"method","name":"_reduce_327","children":[],"call":[" lexer comments "," lexer "," env unextend "," env "," new_module "," env extend "," yyerror "," in_single > "," in_single "," in_def "," comments push "," comments "," new_case "," lexer lineno "," in_single= "," new_sclass "," in_def= "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," new_defn ","val [] "," lexer cmdarg stack dup "]}," Ruby23Parser _reduce_326":{"type":"method","name":"_reduce_326","children":[],"call":[" env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," lexer "," comments "," lexer lineno "," new_case "," new_for "," lexer ignore_body_comments "," env unextend "," new_class "," in_def= "," in_single= "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer cmdarg stack dup "," new_module "]}," Ruby23Parser _reduce_325":{"type":"method","name":"_reduce_325","children":[],"call":[" lexer lineno "," lexer "," new_for "," new_until "," new_case "," env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," lexer ignore_body_comments "," env unextend "," new_class "," lexer comments "," new_sclass "," in_def= "," new_module "," comments push "," comments "]}," Ruby23Parser _reduce_324":{"type":"method","name":"_reduce_324","children":[],"call":[" lexer comments "," lexer "," env unextend "," env "," new_sclass "," new_case "," new_while "," lexer lineno "," env extend "," yyerror "," in_single > "," in_single "," in_def "," in_single= "," comments push "," comments "]}," Ruby23Parser _reduce_323":{"type":"method","name":"_reduce_323","children":[],"call":[" env extend "," env "," in_single= "," in_single "," new_case "," new_if "," new_until "," new_for "," in_def= "," in_def "," lexer comments "," lexer "," env unextend "," new_class "," lexer lineno "," new_sclass "]}," Ruby23Parser _reduce_322":{"type":"method","name":"_reduce_322","children":[],"call":[" in_def= "," in_def "," new_until "," new_if "," new_while "," new_case "," lexer lineno "," lexer "," env extend "," env "," yyerror "," in_single > "," in_single "," comments push "," lexer comments "," comments "," env unextend "," new_sclass "," in_single= "]}," Ruby23Parser _reduce_321":{"type":"method","name":"_reduce_321","children":[],"call":[" lexer lineno "," lexer "," new_while ","val [] "," new_if "," new_case "," lexer comments "," env unextend "," env "," new_class "," env extend "," in_single= "," in_single "," in_def= "," in_def "]}," Ruby23Parser _reduce_320":{"type":"method","name":"_reduce_320","children":[],"call":[" lexer comments "," lexer "," env unextend "," env "," new_class "," new_if ","iter insert "," block_dup_check ","val [] "," new_until "," env extend "," yyerror "," in_single > "," in_single "," in_def "," comments push "," comments "," new_for "," in_def= "," lexer lineno "]}," Ruby23Parser _reduce_319":{"type":"method","name":"_reduce_319","children":[],"call":[" env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," lexer "," comments "," new_if ","val [] "," new_while "," lexer lineno "," lexer cond pop "," lexer cond "," env unextend "," new_class "]}," Ruby23Parser _reduce_318":{"type":"method","name":"_reduce_318","children":[],"call":[" lexer lineno "," lexer ","val [] ","iter insert "," block_dup_check "," new_if "," new_for "," lexer cond push "," lexer cond "," lexer comments "," env unextend "," env "," new_class "," env extend "," yyerror "," in_single > "," in_single "," in_def "," comments push "," comments "]}," Ruby23Parser _reduce_317":{"type":"method","name":"_reduce_317","children":[],"call":[" new_for ","val [] ","iter insert "," block_dup_check "," debug20 "," new_if "," lexer cond pop "," lexer cond "," lexer "," new_case "," env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," comments "," lexer lineno "]}," Ruby23Parser _reduce_316":{"type":"method","name":"_reduce_316","children":[],"call":[" lexer cond pop "," lexer cond "," lexer "," new_call ","iter insert "," lexer cond push "," new_case "," lexer lineno "," new_for ","val [] "]}," Ruby23Parser _reduce_315":{"type":"method","name":"_reduce_315","children":[],"call":[" lexer cond push "," lexer cond "," lexer ","call line= ","iter line ","iter insert ","val [] "," s line "," s "," debug20 "," block_dup_check "," new_case "," new_until "," new_for "," lexer cond pop "]}," Ruby23Parser _reduce_314":{"type":"method","name":"_reduce_314","children":[],"call":[" new_case "," debug20 "," new_yield "," new_call "," lexer cond pop "," lexer cond "," lexer "," lexer cond push "]}," Ruby23Parser _reduce_313":{"type":"method","name":"_reduce_313","children":[],"call":[" new_case "," s ","val [] "," new_yield "," s line ","iter insert "," new_until "," lexer cond push "," lexer cond "," lexer "]}," Ruby23Parser _reduce_312":{"type":"method","name":"_reduce_312","children":[],"call":[" new_until ","val [] "," s "," new_yield "," debug "," lexer cond pop "," lexer cond "," lexer "," new_while "," new_case "]}," Ruby23Parser _reduce_311":{"type":"method","name":"_reduce_311","children":[],"call":[" lexer cond pop "," lexer cond "," lexer "," new_yield "," s line "," s "," new_call "," lexer cond push "," new_case "," new_until ","val [] "]}," Ruby23Parser _reduce_310":{"type":"method","name":"_reduce_310","children":[],"call":[" lexer cond push "," lexer cond "," lexer "," new_yield "," new_hash ","val [] "," s line "," s "," new_while "," new_until "," lexer cond pop "]}," Ruby23Parser _reduce_309":{"type":"method","name":"_reduce_309","children":[],"call":[" new_while ","val [] "," new_yield "," lexer lineno "," lexer "," s line "," s "," new_yield line "," lexer cond pop "," lexer cond "," new_if "," lexer cond push "]}," Ruby23Parser _reduce_308":{"type":"method","name":"_reduce_308","children":[],"call":[" lexer cond pop "," lexer cond "," lexer "," s ","result line ","result sexp_type= "," new_hash "," new_yield "," new_yield line "," lexer cond push "," new_if ","val [] "," new_while "," s  line "," new_hash  line "," new_yield  line "," new_yield line  line "," new_if  line "," new_while  line "," s  sexp_type= "," new_hash  sexp_type= "," new_yield  sexp_type= "," new_yield line  sexp_type= "," new_if  sexp_type= "," new_while  sexp_type= "]}," Ruby23Parser _reduce_307":{"type":"method","name":"_reduce_307","children":[],"call":[" lexer cond push "," lexer cond "," lexer "," new_hash "," lexer lineno "," new_yield ","val [] "," new_yield line "," new_if "," new_while "," lexer cond pop "]}," Ruby23Parser _reduce_306":{"type":"method","name":"_reduce_306","children":[],"call":[" new_if ","val [] "," lexer lineno "," lexer "," s line "," s ","id to_sym ","result line ","result sexp_type= ","iter insert "," block_dup_check "," lexer cond pop "," lexer cond "," lexer cond push "," new_if  line "," lexer lineno  line "," s line  line "," new_if  sexp_type= "," lexer lineno  sexp_type= "," s line  sexp_type= "]}," Ruby23Parser _reduce_305":{"type":"method","name":"_reduce_305","children":[],"call":[" new_if ","val [] ","result sexp_type= "," s "," s line ","expr line ","id to_sym "," lexer lineno "," lexer "," new_hash "," lexer cond push "," lexer cond "," new_if  sexp_type= "," s line  sexp_type= "," lexer lineno  sexp_type= "," new_hash  sexp_type= ","val []  sexp_type= "]}," Ruby23Parser _reduce_304":{"type":"method","name":"_reduce_304","children":[],"call":["val [] "," s ","val [] to_sym ","result paren= "," s line "," lexer lineno "," lexer ","id to_sym ","iter insert "," block_dup_check ","call line= ","iter line "," new_if ","val []  paren= "," s  paren= "," s line  paren= "," lexer lineno  paren= "," new_if  paren= "]}," Ruby23Parser _reduce_303":{"type":"method","name":"_reduce_303","children":[],"call":["iter insert "," block_dup_check ","val [] "," s ","val [] to_sym "," lexer cmdarg restore "," lexer cmdarg "," lexer "," warning "," s line ","expr line ","id to_sym ","result line ","result sexp_type= ","result line_max= "," debug20 "," new_if "," s  line "," s line  line "," new_if  line ","val []  line "," s  sexp_type= "," s line  sexp_type= "," new_if  sexp_type= ","val []  sexp_type= "," s  line_max= "," s line  line_max= "," new_if  line_max= ","val []  line_max= "]}," Ruby23Parser _reduce_301":{"type":"method","name":"_reduce_301","children":[],"call":["call line= ","iter line ","iter insert ","val [] "," lexer cmdarg restore "," lexer cmdarg "," lexer "," warning "," lexer cmdarg store "," s line "," s ","id to_sym "," wrap "," debug20 "," block_dup_check "]}," Ruby23Parser _reduce_300":{"type":"method","name":"_reduce_300","children":[],"call":[" debug20 "," lexer lex_state= "," lexer "," s line "," s ","expr line ","id to_sym ","val [] "," new_yield ","call line= ","iter line ","iter insert "]}," Ruby23Parser _reduce_299":{"type":"method","name":"_reduce_299","children":[],"call":[" s ","val [] "," lexer cmdarg store "," lexer cmdarg "," lexer "," lexer lineno "," lexer lex_state= "," s line ","result paren= "," new_yield ","call line= ","iter line ","iter insert "," debug20 "," s  paren= "," lexer cmdarg store  paren= "," lexer lineno  paren= "," s line  paren= "," new_yield  paren= "]}," Ruby23Parser _reduce_298":{"type":"method","name":"_reduce_298","children":[],"call":[" s ","val [] "," debug20 ","result line= "," lexer lineno "," lexer "," lexer lex_state= "," new_yield "," s  line= "," lexer lineno  line= "," new_yield  line= "]}," Ruby23Parser _reduce_297":{"type":"method","name":"_reduce_297","children":[],"call":[" new_yield ","result line= ","val [] "," s "," lexer lineno "," lexer "," new_begin "," lexer cmdarg pop "," lexer cmdarg "," lexer lex_state= "," new_yield  line= "," s  line= "," lexer lineno  line= "," new_begin  line= "]}," Ruby23Parser _reduce_296":{"type":"method","name":"_reduce_296","children":[],"call":[" new_yield "," lexer lineno "," lexer "," new_call ","msg to_sym "," lexer cmdarg push "," lexer cmdarg "," s line "," s ","val [] ","val [] values "]}," Ruby23Parser _reduce_295":{"type":"method","name":"_reduce_295","children":[],"call":[" new_yield ","val [] "," new_call ","val [] to_sym ","msg to_sym "," lexer lineno "," lexer "," lexer lex_state= "," s ","result []= "," new_yield  []= "," new_call  []= "," lexer lineno  []= "," s  []= "]}," Ruby23Parser _reduce_294":{"type":"method","name":"_reduce_294","children":[],"call":[" s "," new_begin "," lexer cmdarg pop "," lexer cmdarg "," lexer ","val [] values ","val [] ","val [] to_sym "," new_yield "]}," Ruby23Parser _reduce_293":{"type":"method","name":"_reduce_293","children":[],"call":[" new_hash "," lexer lineno "," lexer "," lexer cmdarg push "," lexer cmdarg ","result []= "," s ","val [] ","val [] to_sym "," new_yield "," new_hash  []= "," lexer lineno  []= "," s  []= "," new_yield  []= "]}," Ruby23Parser _reduce_292":{"type":"method","name":"_reduce_292","children":[],"call":[" lexer lineno "," lexer ","result line "," new_call ","msg to_sym "," s ","val [] to_sym ","val [] ","result paren= "," new_hash "," lexer lineno  line "," new_call  line "," s  line "," new_hash  line "," lexer lineno  paren= "," new_call  paren= "," s  paren= "," new_hash  paren= "]}," Ruby23Parser _reduce_291":{"type":"method","name":"_reduce_291","children":[],"call":["result sexp_type= "," s ","val [] ","val [] to_sym "," warning ","val [] values "," lexer lineno "," lexer "," s  sexp_type= ","val []  sexp_type= "," lexer lineno  sexp_type= "]}," Ruby23Parser _reduce_290":{"type":"method","name":"_reduce_290","children":[],"call":[" s ","val [] to_sym ","val [] ","result paren= "," lexer lex_state= "," lexer ","result []= "," s  paren= "," s  []= "]}," Ruby23Parser _reduce_289":{"type":"method","name":"_reduce_289","children":[],"call":[" s ","val [] to_sym ","val [] "," warning "," debug20 "]}," Ruby23Parser _reduce_288":{"type":"method","name":"_reduce_288","children":[],"call":["result paren= "," s ","val [] "," lexer lex_state= "," lexer ","result line= ","val [] to_sym "," s  paren= "," s  line= "]}," Ruby23Parser _reduce_287":{"type":"method","name":"_reduce_287","children":[],"call":["val [] "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," warning "," debug20 "," lexer lineno ","result paren= "," s ","val []  paren= "," lexer lineno  paren= "]}," Ruby23Parser _reduce_286":{"type":"method","name":"_reduce_286","children":[],"call":[" lexer lex_state= "," lexer ","result line= ","val [] "," s "," new_call ","val [] to_sym "," warning "," s  line= "," new_call  line= ","val []  line= "]}," Ruby23Parser _reduce_285":{"type":"method","name":"_reduce_285","children":[],"call":[" lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," lexer cmdarg stack dup "," s line ","arg line "," s "," lexer lineno "," lexer lex_state= "]}," Ruby23Parser _reduce_284":{"type":"method","name":"_reduce_284","children":[],"call":[" debug20 "," s ","val [] "," arg_concat "," s line ","arg line "," new_call ","val [] to_sym "]}," Ruby23Parser _reduce_283":{"type":"method","name":"_reduce_283","children":[],"call":["result line= ","val [] "," s "," arg_concat ","val [] << "," s  line= "," arg_concat  line= ","val [] <<  line= "]}," Ruby23Parser _reduce_282":{"type":"method","name":"_reduce_282","children":[],"call":[" lexer lineno "," lexer ","val [] << ","val [] "," new_masgn_arg "]}," Ruby23Parser _reduce_281":{"type":"method","name":"_reduce_281","children":[],"call":[" new_call ","val [] to_sym ","val [] "," new_masgn_arg "," s line ","arg line "," s "]}," Ruby23Parser _reduce_270":{"type":"method","name":"_reduce_270","children":[],"call":[" s ","val [] "," call_args "," s line ","arg line "," new_masgn_arg "," list_append "]}," Ruby23Parser _reduce_269":{"type":"method","name":"_reduce_269","children":[],"call":[" arg_concat ","val [] "," arg_blk_pass "," call_args "," array_to_hash "," lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg pop ","(sym :tLBRACE_ARG) include? "," new_masgn_arg "," list_append "]}," Ruby23Parser _reduce_268":{"type":"method","name":"_reduce_268","children":[],"call":["val [] << ","val [] "," arg_blk_pass "," call_args "," array_to_hash "," lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg pop ","(sym :tLPAREN) include? "," last_token_type first "," last_token_type "," list_append "," s "]}," Ruby23Parser _reduce_267":{"type":"method","name":"_reduce_267","children":[],"call":[" new_masgn_arg ","val [] "," arg_blk_pass "," call_args "," list_append "," s "]}," Ruby23Parser _reduce_266":{"type":"method","name":"_reduce_266","children":[],"call":[" new_masgn_arg ","val [] "," call_args "," warning "," array_to_hash "," s "]}," Ruby23Parser _reduce_265":{"type":"method","name":"_reduce_265","children":[],"call":[" list_append "," s ","val [] "," args "," array_to_hash "," call_args "]}," Ruby23Parser _reduce_264":{"type":"method","name":"_reduce_264","children":[],"call":[" list_append ","val [] "," args "," array_to_hash "," call_args "," s "]}," Ruby23Parser _reduce_263":{"type":"method","name":"_reduce_263","children":[],"call":[" s ","val [] "," args "," call_args "," warning "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "]}," Ruby23Parser _reduce_262":{"type":"method","name":"_reduce_262","children":[],"call":[" s ","val [] "," args "," array_to_hash "," lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg stack dup "," lexer cmdarg stack "]}," Ruby23Parser _reduce_260":{"type":"method","name":"_reduce_260","children":[],"call":["val [] "," args "," lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg stack dup "," lexer cmdarg stack "," arg_blk_pass "," call_args "," array_to_hash "]}," Ruby23Parser _reduce_259":{"type":"method","name":"_reduce_259","children":[],"call":[" s ","val [] "," call_args "," arg_blk_pass "," array_to_hash "]}," Ruby23Parser _reduce_258":{"type":"method","name":"_reduce_258","children":[],"call":["val [] "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," arg_blk_pass "," call_args "," array_to_hash "]}," Ruby23Parser _reduce_257":{"type":"method","name":"_reduce_257","children":[],"call":[" lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg stack dup "," lexer cmdarg stack "," new_rescue "," new_resbody "," s "," remove_begin "," value_expr "," s line "," arg_blk_pass ","val [] "," call_args "," array_to_hash "," warning "," new_ remove_begin  "," new_res value_expr  "]}," Ruby23Parser _reduce_256":{"type":"method","name":"_reduce_256","children":[],"call":[" call_args "," arg_blk_pass ","val [] "," args "," array_to_hash "]}," Ruby23Parser _reduce_255":{"type":"method","name":"_reduce_255","children":[],"call":[" arg_blk_pass ","val [] "," call_args "," array_to_hash "," args ","result line_max= "," warning "," arg_blk_pass  line_max= "," call_args  line_max= "," args  line_max= "]}," Ruby23Parser _reduce_254":{"type":"method","name":"_reduce_254","children":[],"call":[" arg_blk_pass ","val [] "," call_args "," array_to_hash "," args "," new_rescue "," new_resbody "," s line "," s "," remove_begin "," value_expr "," new_ remove_begin  "," new_res value_expr  "]}," Ruby23Parser _reduce_253":{"type":"method","name":"_reduce_253","children":[],"call":[" arg_blk_pass ","val [] "," call_args "," args "," array_to_hash "]}," Ruby23Parser _reduce_252":{"type":"method","name":"_reduce_252","children":[],"call":[" call_args "," warning "," args "," array_to_hash ","val [] "]}," Ruby23Parser _reduce_251":{"type":"method","name":"_reduce_251","children":[],"call":[" args "," array_to_hash ","val [] "," value_expr "]}," Ruby23Parser _reduce_250":{"type":"method","name":"_reduce_250","children":[],"call":[" args "," array_to_hash ","val [] "," new_call "," argl ","op to_sym "," warn "]}," Ruby23Parser _reduce_249":{"type":"method","name":"_reduce_249","children":[],"call":[" args "," new_call "," argl ","op to_sym ","val [] "]}," Ruby23Parser _reduce_248":{"type":"method","name":"_reduce_248","children":[],"call":["val [] "," value_expr "," args "," array_to_hash "]}," Ruby23Parser _reduce_247":{"type":"method","name":"_reduce_247","children":[],"call":["val [] "," new_call "," argl ","op to_sym "," warn "," args "," array_to_hash "]}," Ruby23Parser _reduce_244":{"type":"method","name":"_reduce_244","children":[],"call":["val [] "," args "," value_expr "]}," Ruby23Parser _reduce_243":{"type":"method","name":"_reduce_243","children":[],"call":[" args "," array_to_hash ","val [] "," s "," s line ","c line "]}," Ruby23Parser _reduce_242":{"type":"method","name":"_reduce_242","children":[],"call":[" args "," array_to_hash ","val [] "," s "," s line "," value_expr "]}," Ruby23Parser _reduce_241":{"type":"method","name":"_reduce_241","children":[],"call":[" args ","val [] "," logical_op "," s "]}," Ruby23Parser _reduce_239":{"type":"method","name":"_reduce_239","children":[],"call":[" value_expr ","val [] "," new_call "," argl ","val []= "," s line "," s "," logop "]}," Ruby23Parser _reduce_237":{"type":"method","name":"_reduce_237","children":[],"call":[" s ","val [] "," new_call "," value_expr "," logical_op "," logop "," argl ","val []= "]}," Ruby23Parser _reduce_236":{"type":"method","name":"_reduce_236","children":[],"call":[" s ","val [] "," new_call ","result line ","arg line "," argl ","val []= "," value_expr "," s  line "," new_call  line "]}," Ruby23Parser _reduce_235":{"type":"method","name":"_reduce_235","children":[],"call":[" logical_op ","val [] "," s "," new_match "," s line ","lhs line "," new_call "," argl ","val []= "," value_expr "," logop "]}," Ruby23Parser _reduce_234":{"type":"method","name":"_reduce_234","children":[],"call":[" logical_op ","val [] "," new_match "," new_call "," value_expr "," s "," get_match_node "," logop "]}," Ruby23Parser _reduce_233":{"type":"method","name":"_reduce_233","children":[],"call":[" new_call "," argl ","val [] ","val []= "," value_expr ","result line ","arg line "," get_match_node "," new_call  line "," get_match_node  line "]}," Ruby23Parser _reduce_232":{"type":"method","name":"_reduce_232","children":[],"call":[" new_call "," argl ","val [] ","val []= "," value_expr "," s line ","lhs line "," s "," new_match "," get_match_node "]}," Ruby23Parser _reduce_231":{"type":"method","name":"_reduce_231","children":[],"call":[" new_call "," value_expr ","val [] "," argl "," new_match "," get_match_node "]}," Ruby23Parser _reduce_230":{"type":"method","name":"_reduce_230","children":[],"call":[" new_call ","val [] "," argl "]}," Ruby23Parser _reduce_229":{"type":"method","name":"_reduce_229","children":[],"call":[" s "," new_match ","val [] "," new_call "," argl "," get_match_node "]}," Ruby23Parser _reduce_228":{"type":"method","name":"_reduce_228","children":[],"call":[" new_match ","val [] "," new_call "," argl "," get_match_node "]}," Ruby23Parser _reduce_227":{"type":"method","name":"_reduce_227","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby23Parser _reduce_226":{"type":"method","name":"_reduce_226","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby23Parser _reduce_225":{"type":"method","name":"_reduce_225","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby23Parser _reduce_224":{"type":"method","name":"_reduce_224","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby23Parser _reduce_223":{"type":"method","name":"_reduce_223","children":[],"call":[" new_call "," argl ","val [] "," s "," s line "," lexer lineno "," lexer "]}," Ruby23Parser _reduce_222":{"type":"method","name":"_reduce_222","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby23Parser _reduce_221":{"type":"method","name":"_reduce_221","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby23Parser _reduce_220":{"type":"method","name":"_reduce_220","children":[],"call":[" new_call "," argl ","val [] "," s line "," s "]}," Ruby23Parser _reduce_219":{"type":"method","name":"_reduce_219","children":[],"call":[" new_call "," argl ","val [] "," s "]}," Ruby23Parser _reduce_218":{"type":"method","name":"_reduce_218","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby23Parser _reduce_217":{"type":"method","name":"_reduce_217","children":[],"call":[" new_call "," argl ","val [] "," s "]}," Ruby23Parser _reduce_216":{"type":"method","name":"_reduce_216","children":[],"call":[" new_call ","val [] "," s ","v2 last ","v1 last ","Integer  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type "," s line ","v1 line "," argl "]}," Ruby23Parser _reduce_215":{"type":"method","name":"_reduce_215","children":[],"call":[" new_call ","val [] "," s ","v2 last ","v1 last ","Integer  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type "," s line ","v1 line "," argl "]}," Ruby23Parser _reduce_214":{"type":"method","name":"_reduce_214","children":[],"call":[" new_call "," argl ","val [] "," s "," backref_assign_error "," new_op_asgn "," new_op_ new_op_asgn  "]}," Ruby23Parser _reduce_213":{"type":"method","name":"_reduce_213","children":[],"call":[" new_call "," argl ","val [] "," raise ","not yet: %p % "," new_const_op_asgn "," s line "," s ","lhs to_sym ","v1 line ","v2 last ","v1 last ","Integer  === ","v2 sexp_type == ","v2 sexp_type ","v1 sexp_type == ","v1 sexp_type "," s line  to_sym "]}," Ruby23Parser _reduce_212":{"type":"method","name":"_reduce_212","children":[],"call":[" new_call "," argl ","val [] "," raise ","not yet: %p % "," lexer lineno "," lexer "," s line ","v1 line "," s ","v2 last ","v1 last ","Integer  === ","v2 sexp_type == ","v2 sexp_type ","v1 sexp_type == ","v1 sexp_type ","Fixnum  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type "]}," Ruby23Parser _reduce_211":{"type":"method","name":"_reduce_211","children":[],"call":[" new_call "," argl ","val [] "," s ","val [] to_sym "," new_const_op_asgn "," s line ","lhs1 line ","lhs2 to_sym "," backref_assign_error "," new_op_asgn ","v2 last ","v1 last ","Fixnum  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type "," new_const_op_ new_op_asgn  "," s line 1 line "," s line 2 to_sym "," new_op_ new_op_asgn  "]}," Ruby23Parser _reduce_210":{"type":"method","name":"_reduce_210","children":[],"call":[" new_call "," argl ","val [] "," new_op_asgn2 "," s ","val [] to_sym "," s line ","lhs line ","op to_sym ","id to_sym "," new_const_op_asgn ","lhs to_sym "," wrap ","v2 last ","v1 last ","Fixnum  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type "," backref_assign_error "," s line  line "," wrap  line "," s line  to_sym "," wrap  to_sym "]}," Ruby23Parser _reduce_209":{"type":"method","name":"_reduce_209","children":[],"call":[" new_call "," argl ","val [] "," new_op_asgn2 "," new_const_op_asgn "," s line ","lhs1 line "," s ","lhs2 to_sym ","v2 last ","v1 last ","Fixnum  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type "," yyerror "," s line 1 line "," s line 2 to_sym "]}," Ruby23Parser _reduce_208":{"type":"method","name":"_reduce_208","children":[],"call":[" new_call "," argl ","val [] "," s ","val [] to_sym ","val [] sexp_type= "," new_op_asgn2 "," s line ","lhs line ","op to_sym ","id to_sym "," backref_assign_error "," yyerror "]}," Ruby23Parser _reduce_207":{"type":"method","name":"_reduce_207","children":[],"call":[" s ","v2 last ","v1 last ","Integer  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type ","val [] "," new_op_asgn ","val [] to_sym ","val [] sexp_type= "," new_op_asgn1 "," new_op_asgn2 "," yyerror ","Fixnum  === "]}," Ruby23Parser _reduce_206":{"type":"method","name":"_reduce_206","children":[],"call":[" s ","v2 last ","v1 last ","Integer  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type ","val [] "," new_assign "," new_op_asgn "," new_op_asgn2 "," yyerror ","val [] to_sym ","Fixnum  === "]}," Ruby23Parser _reduce_205":{"type":"method","name":"_reduce_205","children":[],"call":[" backref_assign_error ","val [] "," new_assign "," new_op_asgn1 "," s ","val [] to_sym "]}," Ruby23Parser _reduce_204":{"type":"method","name":"_reduce_204","children":[],"call":[" yyerror "," new_op_asgn "," s ","val [] ","val [] to_sym ","val [] []= "]}," Ruby23Parser _reduce_203":{"type":"method","name":"_reduce_203","children":[],"call":[" yyerror "," new_assign ","val [] "," s ","val [] to_sym "," new_resbody "," new_op_asgn "]}," Ruby23Parser _reduce_202":{"type":"method","name":"_reduce_202","children":[],"call":[" s ","val [] to_sym ","val [] ","val [] []= "," new_op_asgn "]}," Ruby23Parser _reduce_201":{"type":"method","name":"_reduce_201","children":[],"call":[" new_op_asgn2 "," s "," new_resbody ","val [] "," new_op_asgn "," node_assign "]}," Ruby23Parser _reduce_200":{"type":"method","name":"_reduce_200","children":[],"call":[" new_op_asgn2 "," new_op_asgn "," node_assign ","val [] "]}," Ruby23Parser _reduce_199":{"type":"method","name":"_reduce_199","children":[],"call":[" s ","val [] ","val [] to_sym ","val [] sexp_type= "," node_assign "," new_resbody ","val [] []= "]}," Ruby23Parser _reduce_198":{"type":"method","name":"_reduce_198","children":[],"call":[" s "," new_resbody ","val [] "," new_op_asgn "," node_assign "]}," Ruby23Parser _reduce_197":{"type":"method","name":"_reduce_197","children":[],"call":[" new_op_asgn "]}," Ruby23Parser _reduce_196":{"type":"method","name":"_reduce_196","children":[],"call":[" new_assign "," s "," new_resbody ","val [] "," node_assign "]}," Ruby23Parser _reduce_195":{"type":"method","name":"_reduce_195","children":[],"call":[" new_assign ","val [] "," node_assign "]}," Ruby23Parser _reduce_123":{"type":"method","name":"_reduce_123","children":[],"call":[" new_undef ","val [] "]}," Ruby23Parser _reduce_122":{"type":"method","name":"_reduce_122","children":[],"call":[" lexer lex_state= "," lexer "," s ","val [] to_sym ","val [] "]}," Ruby23Parser _reduce_121":{"type":"method","name":"_reduce_121","children":[],"call":[" new_undef ","val [] "," s ","val [] to_sym ","result line ","pval line ","name to_sym "," lexer lex_state= "," lexer "," new_undef  line "," s  line ","val []  line "]}," Ruby23Parser _reduce_119":{"type":"method","name":"_reduce_119","children":[],"call":[" s ","val [] to_sym ","val [] "," s line ","name to_sym "," wrap "," lexer lex_state= "," lexer "]}," Ruby23Parser _reduce_116":{"type":"method","name":"_reduce_116","children":[],"call":["val [] "," lexer lex_state= "," lexer "," backref_assign_error "," yyerror "," s ","val [] to_sym "]}," Ruby23Parser _reduce_115":{"type":"method","name":"_reduce_115","children":[],"call":["val [] "," lexer lex_state= "," lexer "," s ","val [] to_sym "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," backref_assign_error "," s line ","id to_sym "," debug "]}," Ruby23Parser _reduce_111":{"type":"method","name":"_reduce_111","children":[],"call":[" s ","val [] to_sym ","val [] "," new_attrasgn "," backref_assign_error "]}," Ruby23Parser _reduce_110":{"type":"method","name":"_reduce_110","children":[],"call":["val [] to_sym ","val [] "," aryset "," new_attrasgn "," yyerror "," s "," debug20 "," in_single > "," in_single "," in_def "]}," Ruby23Parser _reduce_109":{"type":"method","name":"_reduce_109","children":[],"call":[" s ","val [] to_sym ","val [] "," debug20 "," assignable "," aryset "," debug "," backref_assign_error "," yyerror "," in_single > "," in_single "," in_def "]}," Ruby23Parser _reduce_107":{"type":"method","name":"_reduce_107","children":[],"call":[" yyerror "," backref_assign_error ","val [] "," assignable ","result line= "," lexer lineno "," lexer "," s ","val [] to_sym "," debug20 "," in_single > "," in_single "," in_def "," assignable  line= "," s  line= ","result  lexer lineno = "," lexer  lexer lineno no "]}," Ruby23Parser _reduce_106":{"type":"method","name":"_reduce_106","children":[],"call":[" backref_assign_error ","val [] "," s ","val [] to_sym "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," s line ","id to_sym "," debug "]}," Ruby23Parser _reduce_105":{"type":"method","name":"_reduce_105","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," s line ","id to_sym "," lexer lineno "," lexer ","expr line "," debug ","va lexer lineno  [] to_sym ","vaexpr line  [] to_sym ","va lexer lineno  [] ","vaexpr line  [] "," in_sing lexer lineno e > "," in_singexpr line e > "," in_sing lexer lineno e "," in_singexpr line e "," s  lexer lineno ine "," s expr line ine ","  lexer lineno exer  lexer lineno ineno "," expr line exer expr line ineno ","  lexer lineno exer "," expr line exer ","expr  lexer lineno ine ","expr expr line ine "]}," Ruby23Parser _reduce_104":{"type":"method","name":"_reduce_104","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," new_attrasgn "," s line ","id to_sym ","expr line ","vaexpr line  [] to_sym ","vaexpr line  [] "," in_singexpr line e > "," in_singexpr line e "," s expr line ine ","expr expr line ine "]}," Ruby23Parser _reduce_103":{"type":"method","name":"_reduce_103","children":[],"call":[" new_attrasgn ","val [] "," s "," aryset "]}," Ruby23Parser _reduce_102":{"type":"method","name":"_reduce_102","children":[],"call":[" s ","val [] "," new_attrasgn "," debug20 "," assignable "]}," Ruby23Parser _reduce_101":{"type":"method","name":"_reduce_101","children":[],"call":[" new_attrasgn ","val [] "," aryset "," assignable "]}," Ruby23Parser _reduce_100":{"type":"method","name":"_reduce_100","children":[],"call":[" aryset ","val [] "," assignable "," debug20 "," backref_assign_error "]}," Ruby23Parser _reduce_99":{"type":"method","name":"_reduce_99","children":[],"call":[" debug20 "," assignable ","val [] "," s ","val [] to_sym "," yyerror "," in_single > "," in_single "," in_def "]}," Ruby23Parser _reduce_98":{"type":"method","name":"_reduce_98","children":[],"call":[" assignable ","val [] "," list_append "," backref_assign_error "," s ","val [] to_sym "," yyerror "," debug20 "," in_single > "," in_single "," in_def "]}," Ruby23Parser _reduce_97":{"type":"method","name":"_reduce_97","children":[],"call":[" backref_assign_error ","val [] "," s "," list_append "," s line ","item line ","val [] to_sym "," yyerror "," debug20 "," in_single > "," in_single "," in_def "]}," Ruby23Parser _reduce_96":{"type":"method","name":"_reduce_96","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," debug20 "," in_single > "," in_single "," in_def ","val [] << ","val [] compact "," s line ","item line "]}," Ruby23Parser _reduce_95":{"type":"method","name":"_reduce_95","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," debug20 "," in_single > "," in_single "," in_def ","val [] << ","val [] compact "," s line ","lhs line "]}," Ruby23Parser _reduce_94":{"type":"method","name":"_reduce_94","children":[],"call":[" new_attrasgn ","val [] "," s "," s line ","lhs line "]}," Ruby23Parser _reduce_93":{"type":"method","name":"_reduce_93","children":[],"call":[" s ","val [] "]}," Ruby23Parser _reduce_92":{"type":"method","name":"_reduce_92","children":[],"call":[" new_attrasgn ","val [] "," s ","val [] sexp_body "," s line ","post sexp_body ","post line "," aryset ","vapost line  [] ","vapost line  [] sexp_body "," s post line ine ","post post line ine ","  s line set "]}," Ruby23Parser _reduce_91":{"type":"method","name":"_reduce_91","children":[],"call":[" aryset ","val [] "," s ","val [] sexp_body "," s line ","post sexp_body ","post line "," lexer lineno "," lexer "," assignable ","  s line set ","vapost line  [] ","va lexer lineno  [] ","vapost line  [] sexp_body ","va lexer lineno  [] sexp_body "," s post line ine "," s  lexer lineno ine ","post post line ine ","post  lexer lineno ine "," post line exer post line ineno ","  lexer lineno exer  lexer lineno ineno "," post line exer ","  lexer lineno exer "," assignabpost line e "," assignab lexer lineno e "]}," Ruby23Parser _reduce_90":{"type":"method","name":"_reduce_90","children":[],"call":[" assignable ","val [] "," s ","ary concat ","val [] sexp_body "," s line "," lexer lineno "," lexer ","ary line ","post sexp_body ","splat line ","node line "," assignab lexer lineno e ","va lexer lineno  [] "," s  concat "," s line  concat ","va lexer lineno  [] sexp_body "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "," s  line "," s line  line ","ary  lexer lineno ine ","sp lexer lineno at  lexer lineno ine ","node  lexer lineno ine "]}," Ruby23Parser _reduce_89":{"type":"method","name":"_reduce_89","children":[],"call":[" assignable ","val [] "," s ","ary concat ","val [] sexp_body "," s line ","ary line ","post sexp_body ","splat line ","node line "," list_append "," assignabnode line e ","vanode line  [] "," s  concat "," s line  concat ","vanode line  [] sexp_body "," s node line ine "," s  line "," s line  line ","ary node line ine ","spnode line at node line ine ","node node line ine "," node line ist_append "]}," Ruby23Parser _reduce_88":{"type":"method","name":"_reduce_88","children":[],"call":[" list_append ","val [] "," s ","ary concat ","val [] sexp_body "," s line ","node line ","ary line ","post sexp_body ","head line "," node line ist_append ","vanode line  [] "," list_append  concat "," s line  concat ","vanode line  [] sexp_body "," s node line ine ","node node line ine "," list_append  line "," s line  line ","ary node line ine ","head node line ine "]}," Ruby23Parser _reduce_87":{"type":"method","name":"_reduce_87","children":[],"call":[" s ","val [] ","val [] << ","ary concat ","val [] sexp_body "," list_append "," s line ","ary line ","post sexp_body ","head line ","head << ","val [] compact ","vahead line  [] ","vahead line  [] << "," list_append  concat ","vahead line  [] sexp_body "," head line ist_append "," s head line ine "," list_append  line ","ary head line ine ","head head line ine ","vahead line  [] compact "]}," Ruby23Parser _reduce_86":{"type":"method","name":"_reduce_86","children":[],"call":["val [] << ","val [] compact ","val [] "," s ","result concat ","ary2 sexp_body "," list_append "," s line ","head << ","head line ","result line ","splat line ","vahead line  [] << ","vahead line  [] compact ","vahead line  [] ","val [] <<  concat "," s  concat "," list_append  concat "," s line  concat ","resuhead line t concat "," head line ist_append "," s head line ine ","head head line ine ","val [] <<  line "," s  line "," list_append  line "," s line  line ","resuhead line t head line ine ","sphead line at head line ine "]}," Ruby23Parser _reduce_85":{"type":"method","name":"_reduce_85","children":[],"call":[" s ","val [] ","val [] << ","result concat ","ary2 sexp_body "," list_append "," s line ","result line ","splat line ","head line ","head << ","tail line "," s  concat "," list_append  concat "," s line  concat ","val []  concat "," s  line "," list_append  line "," s line  line ","val []  line "]}," Ruby23Parser _reduce_84":{"type":"method","name":"_reduce_84","children":[],"call":["val [] "," s ","val [] << ","val [] compact "," s line ","head line ","head << ","tail line ","lhs line ","lhs << ","rhs compact "]}," Ruby23Parser _reduce_82":{"type":"method","name":"_reduce_82","children":[],"call":[" s ","val [] sexp_body ","val [] "," s line ","head line ","arg line ","val [] [] ","vaarg line  [] sexp_body ","vaarg line  [] "," s arg line ine ","head arg line ine ","arg arg line ine ","vaarg line  [] [] "]}," Ruby23Parser _reduce_81":{"type":"method","name":"_reduce_81","children":[],"call":[" s ","val [] "," s line ","arg line ","ary concat ","val [] [] ","vaarg line  [] "," s arg line ine ","arg arg line ine "," s  concat ","vaarg line  [] [] "]}," Ruby23Parser _reduce_80":{"type":"method","name":"_reduce_80","children":[],"call":[" s ","ary concat ","val [] sexp_body ","val [] ","val [] [] "," s  concat "]}," Ruby23Parser _reduce_79":{"type":"method","name":"_reduce_79","children":[],"call":[" s ","val [] ","ary concat ","val [] [] "," list_append "," list_append  concat "]}," Ruby23Parser _reduce_78":{"type":"method","name":"_reduce_78","children":[],"call":[" s ","ary concat ","val [] sexp_body ","val [] "," list_append "," s line "," ret_args ","val [] last ","val [] << ","val [] [] "," list_append  concat "," s val [] last  "]}," Ruby23Parser _reduce_77":{"type":"method","name":"_reduce_77","children":[],"call":[" s ","val [] << ","val [] "," s line "," ret_args ","val [] last ","result concat ","ary2 [] "," list_append "," s val [] last  "," s  concat "," s line  concat "," list_append  concat "]}," Ruby23Parser _reduce_76":{"type":"method","name":"_reduce_76","children":[],"call":[" s ","result concat ","ary2 sexp_body "," list_append "," s line "," ret_args ","val [] ","val [] last ","val [] << ","ary2 [] "," s  concat "," list_append  concat "," s line  concat "," s val [] last  "]}," Ruby23Parser _reduce_75":{"type":"method","name":"_reduce_75","children":[],"call":[" s ","val [] << ","val [] "," new_yield "," s line "," ret_args ","val [] last ","result line ","val [] compact "," s val [] last  "," s  line "," new_yield  line "," s line  line ","result val [] last  "]}," Ruby23Parser _reduce_74":{"type":"method","name":"_reduce_74","children":[],"call":[" s ","val [] << ","val [] compact ","val [] "," new_super "," new_yield ","result line "," s  line "," new_super  line "," new_yield  line "]}," Ruby23Parser _reduce_73":{"type":"method","name":"_reduce_73","children":[],"call":[" s ","val [] ","block insert "," block_dup_check "," new_call ","msg to_sym "," new_super "," new_ new_call  "]}," Ruby23Parser _reduce_72":{"type":"method","name":"_reduce_72","children":[],"call":[" s ","val [] "," new_call ","val [] to_sym ","block insert "," block_dup_check ","msg to_sym ","result line ","id to_sym "," new_ new_call  "," s  line "," new_call  line "]}," Ruby23Parser _reduce_70":{"type":"method","name":"_reduce_70","children":[],"call":["val [] "," new_call ","val [] to_sym ","block insert "," block_dup_check ","msg to_sym ","result line ","lhs line ","op to_sym "," new_ new_call  ","val []  line "," new_call  line "]}," Ruby23Parser _reduce_68":{"type":"method","name":"_reduce_68","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last ","val [] concat ","val [] sexp_body ","result insert "," block_dup_check ","call concat ","args sexp_body "," s val [] last  "," s line  insert ","val [] concat  insert ","call concat  insert "]}," Ruby23Parser _reduce_67":{"type":"method","name":"_reduce_67","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last "," new_call ","val [] to_sym ","val [] concat ","val [] sexp_body ","call concat ","args sexp_body "," new_call line ","msg to_sym "," s val [] last  "," new_call val [] last  "]}," Ruby23Parser _reduce_66":{"type":"method","name":"_reduce_66","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last ","result line= "," new_call ","val [] to_sym "," new_call line "," lexer lineno "," lexer ","msg to_sym ","result line "," new_yield "," s val [] last  "," s line  line= "," new_call  line= "," new_call line  line= "," new_yield  line= ","result val [] last = "," new_call val [] last  "," lexer val [] last no "," s line  line "," new_call  line "," new_call line  line "," new_yield  line ","result val [] last  "]}," Ruby23Parser _reduce_65":{"type":"method","name":"_reduce_65","children":[],"call":[" new_yield ","val [] "," lexer lineno "," lexer ","result line= "," new_super "," new_yield  line= "," lexer lineno  line= "," new_super  line= "]}," Ruby23Parser _reduce_64":{"type":"method","name":"_reduce_64","children":[],"call":[" new_super ","val [] "," new_call ","val [] to_sym "," lexer lineno "," lexer "," new_call line ","blk line ","msg to_sym ","block insert "," block_dup_check "," new_ new_call  "," new_ new_call  line "]}," Ruby23Parser _reduce_63":{"type":"method","name":"_reduce_63","children":[],"call":["block insert "," block_dup_check "," new_call ","msg to_sym ","val [] ","val [] to_sym "," new_call line ","blk line "," new_ new_call  "," new_ new_call  line "]}," Ruby23Parser _reduce_62":{"type":"method","name":"_reduce_62","children":[],"call":[" new_call ","val [] ","val [] to_sym ","block insert "," block_dup_check ","msg to_sym "," new_ new_call  "]}," Ruby23Parser _reduce_61":{"type":"method","name":"_reduce_61","children":[],"call":["block insert "," block_dup_check "," new_call ","val [] ","msg to_sym ","result []= ","val [] to_sym "," new_ new_call  "," new_call  []= "]}," Ruby23Parser _reduce_60":{"type":"method","name":"_reduce_60","children":[],"call":[" new_call ","val [] ","val [] to_sym "]}," Ruby23Parser _reduce_59":{"type":"method","name":"_reduce_59","children":[],"call":["result insert ","val [] "," block_dup_check ","val [] concat ","val [] sexp_body "," lexer cond pop "," lexer cond "," lexer ","val [] [] ","val [] concat  insert "]}," Ruby23Parser _reduce_58":{"type":"method","name":"_reduce_58","children":[],"call":["val [] concat ","val [] sexp_body ","val [] "," lexer cond push "," lexer cond "," lexer "," lexer cond pop ","val [] [] "]}," Ruby23Parser _reduce_57":{"type":"method","name":"_reduce_57","children":[],"call":[" new_call ","val [] to_sym ","val [] "," value_expr "," lexer cond push "," lexer cond "," lexer "]}," Ruby23Parser _reduce_56":{"type":"method","name":"_reduce_56","children":[],"call":[" env unextend "," env ","result line= ","val [] "," new_iter "," value_expr "," new_iter  line= "," value_expr  line= "]}," Ruby23Parser _reduce_55":{"type":"method","name":"_reduce_55","children":[],"call":[" s ","val [] "," new_call line ","cmd line "," new_call "]}," Ruby23Parser _reduce_54":{"type":"method","name":"_reduce_54","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," s ","val [] "," new_call line ","cmd line "," new_call "]}," Ruby23Parser _reduce_53":{"type":"method","name":"_reduce_53","children":[],"call":[" new_call ","val [] ","val [] to_sym "," logical_op "," s "," new_call line "]}," Ruby23Parser _reduce_49":{"type":"method","name":"_reduce_49","children":[],"call":[" value_expr ","val [] "," new_rescue "," new_resbody "," s "," value_ value_expr  "]}," Ruby23Parser _reduce_47":{"type":"method","name":"_reduce_47","children":[],"call":[" s ","val [] "," backref_assign_error "," s line ","id to_sym ","lhs2 to_sym "]}," Ruby23Parser _reduce_46":{"type":"method","name":"_reduce_46","children":[],"call":[" s ","val [] "," debug20 ","op to_sym ","lhs2 to_sym "," s line ","id to_sym "]}," Ruby23Parser _reduce_45":{"type":"method","name":"_reduce_45","children":[],"call":[" logical_op ","val [] "," debug20 "," s ","op to_sym ","lhs2 to_sym ","result line ","prim line ","result sexp_type= ","call_op == ","op_asgn to_sym ","id to_sym "," logop "," logical_op  line "," s  line "," logop  line "," logical_op  sexp_type= "," s  sexp_type= "," logop  sexp_type= "]}," Ruby23Parser _reduce_44":{"type":"method","name":"_reduce_44","children":[],"call":[" logical_op ","val [] ","result line= ","val [] line ","result sexp_type= ","val [] == "," s ","val [] to_sym ","result line ","prim line ","call_op == ","op_asgn to_sym ","id to_sym "," logop "," logical_op  line= "," s  line= "," logop  line= "," logical_op  sexp_type= "," s  sexp_type= "," logop  sexp_type= "," logical_op  line "," s  line "," logop  line "]}," Ruby23Parser _reduce_42":{"type":"method","name":"_reduce_42","children":[],"call":[" new_assign ","val [] "," s ","val [] to_sym "," new_op_asgn1 "," new_op_asgn "," node_assign "]}," Ruby23Parser _reduce_41":{"type":"method","name":"_reduce_41","children":[],"call":[" new_assign ","val [] "," new_op_asgn "," node_assign "]}," Ruby23Parser _reduce_39":{"type":"method","name":"_reduce_39","children":[],"call":[" new_masgn ","val [] "]}," Ruby23Parser _reduce_38":{"type":"method","name":"_reduce_38","children":[],"call":[" new_assign "," s ","val [] "," new_masgn "," s line ","rhs line "," node_assign "]}," Ruby23Parser _reduce_37":{"type":"method","name":"_reduce_37","children":[],"call":[" backref_assign_error ","val [] "," new_assign "," s "," s line ","rhs line "," new_masgn "]}," Ruby23Parser _reduce_36":{"type":"method","name":"_reduce_36","children":[],"call":[" debug20 "," s ","val [] "," new_masgn "]}," Ruby23Parser _reduce_35":{"type":"method","name":"_reduce_35","children":[],"call":[" debug20 "," s ","val [] "," new_iter "," s line "," yyerror "," debug "," in_single > "," in_single "," in_def "]}," Ruby23Parser _reduce_34":{"type":"method","name":"_reduce_34","children":[],"call":["result line= ","val [] line ","val [] ","result sexp_type= ","val [] == "," s ","val [] to_sym "," new_iter "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," s line "," new_rescue "," new_resbody ","resbody line ","result []= "," s  line= "," new_iter  line= "," new_rescue  line= "," s  sexp_type= "," new_iter  sexp_type= "," new_rescue  sexp_type= "," new_ new_resbody  "," new_resbody  line "," s  []= "," new_iter  []= "," new_rescue  []= "]}," Ruby23Parser _reduce_33":{"type":"method","name":"_reduce_33","children":[],"call":["result line= ","val [] line ","val [] ","result sexp_type= ","val [] == "," s ","val [] to_sym "," new_rescue "," new_resbody "," s line ","resbody line "," new_until ","result []= "," s  line= "," new_rescue  line= "," new_until  line= "," s  sexp_type= "," new_rescue  sexp_type= "," new_until  sexp_type= "," new_ new_resbody  "," new_resbody  line "," s  []= "," new_rescue  []= "," new_until  []= "]}," Ruby23Parser _reduce_32":{"type":"method","name":"_reduce_32","children":[],"call":[" s ","val [] ","val [] to_sym "," new_until "," new_while "]}," Ruby23Parser _reduce_31":{"type":"method","name":"_reduce_31","children":[],"call":[" new_op_asgn "," new_while ","val [] "," new_if "]}," Ruby23Parser _reduce_30":{"type":"method","name":"_reduce_30","children":[],"call":[" new_masgn ","val [] "," new_if "]}," Ruby23Parser _reduce_28":{"type":"method","name":"_reduce_28","children":[],"call":[" new_iter ","val [] "," s "," yyerror "," debug20 "," in_single > "," in_single "," in_def "]}," Ruby23Parser _reduce_27":{"type":"method","name":"_reduce_27","children":[],"call":[" s "," new_resbody ","val [] "," yyerror "," s line ","lhs to_sym "]}," Ruby23Parser _reduce_26":{"type":"method","name":"_reduce_26","children":[],"call":[" new_until ","val [] "," s ","val [] to_sym "," s line ","lhs to_sym ","rhs to_sym "]}," Ruby23Parser _reduce_25":{"type":"method","name":"_reduce_25","children":[],"call":[" new_while ","val [] "," s ","val [] to_sym "," s line ","rhs to_sym ","lhs to_sym "," s line line "]}," Ruby23Parser _reduce_24":{"type":"method","name":"_reduce_24","children":[],"call":[" new_if ","val [] "," s line "," s "," s line line "," lexer lex_state= "," lexer "]}," Ruby23Parser _reduce_23":{"type":"method","name":"_reduce_23","children":[],"call":[" new_if ","val [] "," lexer lineno "," lexer "," lexer lex_state= "]}," Ruby23Parser _reduce_22":{"type":"method","name":"_reduce_22","children":[],"call":["val [] "," yyerror "]}," Ruby23Parser _reduce_21":{"type":"method","name":"_reduce_21","children":[],"call":[" yyerror "," env extend "," env "," debug20 "," in_single > "," in_single "," in_def "]}," Ruby23Parser _reduce_20":{"type":"method","name":"_reduce_20","children":[],"call":[" s ","val [] ","val [] to_sym "," debug20 "," debug "]}," Ruby23Parser _reduce_19":{"type":"method","name":"_reduce_19","children":[],"call":[" s ","val [] to_sym ","val [] "," debug20 "," block_append "]}," Ruby23Parser _reduce_18":{"type":"method","name":"_reduce_18","children":[],"call":[" s line ","val [] "," s "," block_append "]}," Ruby23Parser _reduce_17":{"type":"method","name":"_reduce_17","children":[],"call":[" lexer lineno "," lexer "," lexer lex_state= "]}," Ruby23Parser _reduce_16":{"type":"method","name":"_reduce_16","children":[],"call":[" debug20 ","val [] "," new_compstmt "]}," Ruby23Parser _reduce_15":{"type":"method","name":"_reduce_15","children":[],"call":[" block_append ","val [] "," new_compstmt "," new_body "]}," Ruby23Parser _reduce_12":{"type":"method","name":"_reduce_12","children":[],"call":[" new_compstmt "," yyerror ","_values [] "," new_iter "," s line "," s "]}," Ruby23Parser _reduce_11":{"type":"method","name":"_reduce_11","children":[],"call":[" new_body "," new_iter "," s "," lexer lineno "," lexer "]}," Ruby23Parser _reduce_10":{"type":"method","name":"_reduce_10","children":[],"call":[" new_iter ","val [] "," s ","preexe line ","iter line "]}," Ruby23Parser _reduce_9":{"type":"method","name":"_reduce_9","children":[],"call":[" env extend "," env "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," debug "]}," Ruby23Parser _reduce_8":{"type":"method","name":"_reduce_8","children":[],"call":["val [] "]}," Ruby23Parser _reduce_6":{"type":"method","name":"_reduce_6","children":[],"call":[" block_append ","val [] "]}," Ruby23Parser _reduce_3":{"type":"method","name":"_reduce_3","children":[],"call":["val [] "]}," Ruby23Parser _reduce_2":{"type":"method","name":"_reduce_2","children":[],"call":[" new_compstmt "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer cond pop "," lexer cond "]}," Ruby23Parser _reduce_1":{"type":"method","name":"_reduce_1","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby22Parser _reduce_none":{"type":"method","name":"_reduce_none","children":[],"call":["val [] "]}," Ruby22Parser _reduce_626":{"type":"method","name":"_reduce_626","children":[],"call":[]}," Ruby22Parser _reduce_625":{"type":"method","name":"_reduce_625","children":[],"call":[" yyerrok "]}," Ruby22Parser _reduce_622":{"type":"method","name":"_reduce_622","children":[],"call":[" yyerrok "," s line "," s ","arg line "," s arg line  ","arg arg line  "]}," Ruby22Parser _reduce_599":{"type":"method","name":"_reduce_599","children":[],"call":[" s ","val [] "," s line ","optblk line ","opt line "]}," Ruby22Parser _reduce_598":{"type":"method","name":"_reduce_598","children":[],"call":[" raise ","val inspect "," assignable ","val [] ","result << "," lexer lineno "," lexer "," env []= "," env "," s "," assignable  << "," s  << "]}," Ruby22Parser _reduce_597":{"type":"method","name":"_reduce_597","children":[],"call":[" s ","sym sexp_type= "," block_append ","val [] "," assignable "," s line ","optblk line ","id to_sym ","sym []= "," raise ","val inspect "]}," Ruby22Parser _reduce_596":{"type":"method","name":"_reduce_596","children":[],"call":[" s ","val [] ","val [] [] to_sym ","val [] [] ","val last "," assignable "," s line ","opt line "," raise ","val inspect ","sym []= "]}," Ruby22Parser _reduce_595":{"type":"method","name":"_reduce_595","children":[],"call":[" s ","val [] ","result << "," assignable ","val [] to_sym ","sym []= ","val [] [] to_sym ","val [] [] "," s  << ","val []  << "," assignable  << "]}," Ruby22Parser _reduce_594":{"type":"method","name":"_reduce_594","children":[],"call":["result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] ","val [] dup "," s "," env []= "," env "," s line ","optblk line "," block_append ","val [] [] to_sym ","val [] [] ","result []= "," s  sexp_type= "," s line  sexp_type= "," block_append  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? ","val [] []  empty? "," s  []= "," s line  []= "," block_append  []= "]}," Ruby22Parser _reduce_592":{"type":"method","name":"_reduce_592","children":[],"call":["val [] "," assignable "," args ","result << ","result []= ","list push ","more empty? ","val [] [] ","val [] dup ","val []  << "," assignable  << "," args  << ","val []  []= "," assignable  []= "," args  []= ","val [] dup  push ","val [] []  empty? "]}," Ruby22Parser _reduce_591":{"type":"method","name":"_reduce_591","children":[],"call":[" s "," lexer lineno "," lexer "," env []= "," env "," s line ","optblk line ","val [] "]}," Ruby22Parser _reduce_590":{"type":"method","name":"_reduce_590","children":[],"call":[" yyerror ","result sexp_type == ","result sexp_type ","val [] "," assignable ","val [] to_sym ","list << ","item last "," args ","id to_sym ","result [] == ","result [] "," s ","val []  sexp_type == ","list <<  sexp_type == "," args  sexp_type == "," assignable  sexp_type == "," s  sexp_type == ","val []  sexp_type ","list <<  sexp_type "," args  sexp_type "," assignable  sexp_type "," s  sexp_type ","val []  [] == ","list <<  [] == "," args  [] == "," assignable  [] == "," s  [] == ","val []  [] ","list <<  [] "," args  [] "," assignable  [] "," s  [] "]}," Ruby22Parser _reduce_589":{"type":"method","name":"_reduce_589","children":[],"call":[" lexer lex_state= "," lexer "," assignable "," s "," yyerror ","result [] == ","result [] ","val [] "," assignable  [] == "," s  [] == ","val []  [] == "," assignable  [] "," s  [] ","val []  [] "]}," Ruby22Parser _reduce_587":{"type":"method","name":"_reduce_587","children":[],"call":[" args "," s line "," s "," env []= "," env ","label to_sym "," assignable ","id to_sym "," lexer lex_state= "," lexer ","label to_sym  to_sym "]}," Ruby22Parser _reduce_586":{"type":"method","name":"_reduce_586","children":[],"call":["val [] "," s line "," s "," env []= "," env ","label to_sym "]}," Ruby22Parser _reduce_585":{"type":"method","name":"_reduce_585","children":[],"call":["(str \"&\") to_sym "," env []= "," env ","val [] to_sym ","val [] ","list << ","item last "," s line "," s ","label to_sym "]}," Ruby22Parser _reduce_582":{"type":"method","name":"_reduce_582","children":[],"call":[" env []= "," env "," s ","val [] ","label to_sym "," raise ","val inspect "," debug20 "," s line "," lexer lineno "," lexer ","list << ","item last "]}," Ruby22Parser _reduce_581":{"type":"method","name":"_reduce_581","children":[],"call":[" assignable ","val [] to_sym ","val [] "," s "," env []= "," env ","label to_sym ","result << "," s line ","list line ","list sexp_type == ","list sexp_type "," s  << ","val []  << "," s line  << "]}," Ruby22Parser _reduce_578":{"type":"method","name":"_reduce_578","children":[],"call":[" block_append ","val [] ","result << "," s ","list sexp_type == ","list sexp_type "," env []= "," env ","val [] to_sym ","item first ","Sexp  === "," s line ","list line ","result line_max= ","item line_max ","label to_sym "," block_append  << "," s  << "," s line  << "," block_append  line_max= "," s  line_max= "," s line  line_max= ","result item line_max = ","item item line_max  "]}," Ruby22Parser _reduce_577":{"type":"method","name":"_reduce_577","children":[],"call":[" s ","val [] "," raise ","val inspect "," debug20 ","result << "," new_arg "," s line "," env []= "," env ","label to_sym "," block_append "," s  << ","val []  << "," new_arg  << "," s line  << "," block_append  << "]}," Ruby22Parser _reduce_576":{"type":"method","name":"_reduce_576","children":[],"call":["result << ","val [] "," yyerror "," env []= "," env ","val [] to_sym "," block_append "," s ","val []  << "," block_append  << "," s  << "]}," Ruby22Parser _reduce_575":{"type":"method","name":"_reduce_575","children":[],"call":[" s ","val [] "," yyerror ","result line_max= ","result << ","item line_max ","Sexp  === "," s line ","list line ","list sexp_type == ","list sexp_type "," s  line_max= "," s line  line_max= ","val []  line_max= ","result item line_max = "," s  << "," s line  << ","val []  << ","item item line_max  "]}," Ruby22Parser _reduce_574":{"type":"method","name":"_reduce_574","children":[],"call":[" assignable ","val [] "," yyerror "," new_arg ","result << "," s "," assignable  << "," new_arg  << ","val []  << "," s  << "]}," Ruby22Parser _reduce_573":{"type":"method","name":"_reduce_573","children":[],"call":[" assignable ","val [] "," env []= "," env ","val [] to_sym "," yyerror ","id to_sym "," s "]}," Ruby22Parser _reduce_572":{"type":"method","name":"_reduce_572","children":[],"call":[" args "," yyerror "," assignable ","val [] "," debug20 "]}," Ruby22Parser _reduce_571":{"type":"method","name":"_reduce_571","children":[],"call":["val [] "," yyerror "," args "," assignable "]}," Ruby22Parser _reduce_568":{"type":"method","name":"_reduce_568","children":[],"call":[" args "," yyerror "]}," Ruby22Parser _reduce_566":{"type":"method","name":"_reduce_566","children":[],"call":["list << ","item last "," args "," yyerror "]}," Ruby22Parser _reduce_564":{"type":"method","name":"_reduce_564","children":[],"call":[" s "," env []= "," env ","label to_sym ","val [] "," args ","list << ","item last "]}," Ruby22Parser _reduce_563":{"type":"method","name":"_reduce_563","children":[],"call":[" s ","val [] "," env []= "," env ","label to_sym "," args "]}," Ruby22Parser _reduce_562":{"type":"method","name":"_reduce_562","children":[],"call":[" s "," env []= "," env ","label to_sym ","val [] "," args "]}," Ruby22Parser _reduce_561":{"type":"method","name":"_reduce_561","children":[],"call":[" s ","val [] "," env []= "," env ","label to_sym "," args "]}," Ruby22Parser _reduce_559":{"type":"method","name":"_reduce_559","children":[],"call":["result << "," s ","list sexp_type == ","list sexp_type "," args ","val [] "," env []= "," env ","label to_sym "," s  << "," args  << "]}," Ruby22Parser _reduce_558":{"type":"method","name":"_reduce_558","children":[],"call":[" raise ","val inspect "," debug20 ","val [] ","result << "," s "," args ","list sexp_type == ","list sexp_type ","val []  << "," s  << "," args  << "]}," Ruby22Parser _reduce_557":{"type":"method","name":"_reduce_557","children":[],"call":["val [] "," args ","result << "," s ","list sexp_type == ","list sexp_type "," raise ","val inspect "," debug20 ","val []  << "," args  << "," s  << "]}," Ruby22Parser _reduce_554":{"type":"method","name":"_reduce_554","children":[],"call":[" env []= "," env ","val [] to_sym ","val [] "," args "]}," Ruby22Parser _reduce_552":{"type":"method","name":"_reduce_552","children":[],"call":[" yyerror "," args "," env []= "," env ","val [] to_sym ","val [] "]}," Ruby22Parser _reduce_551":{"type":"method","name":"_reduce_551","children":[],"call":[" yyerror ","val [] "," lexer command_start= "," lexer "," lexer lex_state= "," in_kwarg= "," args "]}," Ruby22Parser _reduce_550":{"type":"method","name":"_reduce_550","children":[],"call":[" yyerror "," lexer lex_state "," lexer "," in_kwarg= "," in_kwarg "," args "]}," Ruby22Parser _reduce_549":{"type":"method","name":"_reduce_549","children":[],"call":[" yyerror "," args "," lexer command_start= "," lexer "," lexer lex_state= ","val [] "," in_kwarg= "]}," Ruby22Parser _reduce_548":{"type":"method","name":"_reduce_548","children":[],"call":[" args "," lexer lex_state "," lexer "," in_kwarg= "," in_kwarg ","val [] "," yyerror "]}," Ruby22Parser _reduce_547":{"type":"method","name":"_reduce_547","children":[],"call":[" args ","val [] "," lexer command_start= "," lexer "," lexer lex_state= "," yyerror "]}," Ruby22Parser _reduce_546":{"type":"method","name":"_reduce_546","children":[],"call":[" args "," lexer command_start= "," lexer "," lexer lex_state= "," in_kwarg= "," end_args "]}," Ruby22Parser _reduce_545":{"type":"method","name":"_reduce_545","children":[],"call":[" args "," in_kwarg= "," in_kwarg "," lexer lex_state "," lexer "," s line "," lexer lineno "," s ","val [] "]}," Ruby22Parser _reduce_544":{"type":"method","name":"_reduce_544","children":[],"call":[" args "," lexer command_start= "," lexer "," lexer lex_state= ","val [] "," s line "," lexer lineno "," s "," end_args "]}," Ruby22Parser _reduce_543":{"type":"method","name":"_reduce_543","children":[],"call":[" args "," debug20 "," assignable ","val [] "," s line "," lexer lineno "," lexer "," s "," end_args "]}," Ruby22Parser _reduce_542":{"type":"method","name":"_reduce_542","children":[],"call":[" args ","val [] "," assignable "," s line "," lexer lineno "," lexer "," s "," lexer lex_state "," in_kwarg= "," in_kwarg "]}," Ruby22Parser _reduce_541":{"type":"method","name":"_reduce_541","children":[],"call":[" args "," lexer command_start= "," lexer "," lexer lex_state= "," gettable ","Sexp  === ","val [] "," debug20 "," assignable "," end_args "]}," Ruby22Parser _reduce_540":{"type":"method","name":"_reduce_540","children":[],"call":[" args "," s ","val [] "," gettable ","Sexp  === "," assignable "," s line "]}," Ruby22Parser _reduce_539":{"type":"method","name":"_reduce_539","children":[],"call":[" args "," s ","val [] "," s line "," lexer lineno "," lexer "," gettable ","Sexp  === ","va lexer lineno  [] "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "," gettab lexer lineno e "]}," Ruby22Parser _reduce_538":{"type":"method","name":"_reduce_538","children":[],"call":[" args "," debug20 "," assignable ","val [] "," s line "," lexer lineno "," lexer "," s "," gettable ","Sexp  === "," debug "," lexer command_start= "," lexer lex_state= "]}," Ruby22Parser _reduce_537":{"type":"method","name":"_reduce_537","children":[],"call":[" args "," assignable ","val [] "," s line "," lexer lineno "," lexer "," s "," file "," assignab lexer lineno e ","va lexer lineno  [] "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "," fi lexer lineno e "]}," Ruby22Parser _reduce_536":{"type":"method","name":"_reduce_536","children":[],"call":[" args "," gettable ","Sexp  === ","val [] "," s line "," lexer lineno "," lexer "," s "]}," Ruby22Parser _reduce_535":{"type":"method","name":"_reduce_535","children":[],"call":[" args "," gettable ","Sexp  === ","val [] "," s line "," lexer lineno "," lexer "," s "," file ","result line "," raise ","val inspect ","val first "," debug "," assignable "," args  line "," gettable  line "," s line  line "," assignable  line "]}," Ruby22Parser _reduce_534":{"type":"method","name":"_reduce_534","children":[],"call":[" args "," s "," s line "," lexer lineno "," lexer "," assignable ","val [] "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "," assignab lexer lineno e ","va lexer lineno  [] "]}," Ruby22Parser _reduce_533":{"type":"method","name":"_reduce_533","children":[],"call":[" s "," lexer lineno "," lexer "," s line "," gettable ","Sexp  === ","val [] "," args "]}," Ruby22Parser _reduce_532":{"type":"method","name":"_reduce_532","children":[],"call":["val [] "," s "," file "," s line "," lexer lineno "," lexer ","result line "," gettable ","Sexp  === "," raise ","val inspect ","val first "," args ","val []  line "," s  line "," s line  line "," gettable  line "," args  line "]}," Ruby22Parser _reduce_530":{"type":"method","name":"_reduce_530","children":[],"call":[" args "," s "," s line "," lexer lineno "," lexer ","val [] "]}," Ruby22Parser _reduce_529":{"type":"method","name":"_reduce_529","children":[],"call":[" args "," s "," s line "," lexer lineno "," lexer "," file "]}," Ruby22Parser _reduce_528":{"type":"method","name":"_reduce_528","children":[],"call":[" args "," s "," s line "," lexer lineno "," lexer "]}," Ruby22Parser _reduce_527":{"type":"method","name":"_reduce_527","children":[],"call":[" lexer command_start= "," lexer "," lexer lex_state= ","val [] "," s line "," lexer lineno "," s "," args "]}," Ruby22Parser _reduce_526":{"type":"method","name":"_reduce_526","children":[],"call":[" lexer command_start= "," lexer "," lexer lex_state= ","val [] "," s line "," lexer lineno "," s "," args "]}," Ruby22Parser _reduce_525":{"type":"method","name":"_reduce_525","children":[],"call":[" debug20 "," yyerrok "," s line "," lexer lineno "," lexer "," s "," lexer command_start= "," lexer lex_state= ","val [] "]}," Ruby22Parser _reduce_524":{"type":"method","name":"_reduce_524","children":[],"call":["val [] "," lexer command_start= "," lexer "," lexer lex_state= "," debug20 "," yyerrok "]}," Ruby22Parser _reduce_523":{"type":"method","name":"_reduce_523","children":[],"call":[" lexer lex_state= "," lexer ","val [] -@ ","val [] "," debug20 "," yyerrok "]}," Ruby22Parser _reduce_522":{"type":"method","name":"_reduce_522","children":[],"call":["val [] "," lexer lex_state= "," lexer "]}," Ruby22Parser _reduce_521":{"type":"method","name":"_reduce_521","children":[],"call":[" s ","val [] "," debug20 "," s line ","result line ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," lexer lineno "," lexer "," lexer lex_state= ","val [] -@ "," s  line "," s line  line ","val [] -@  line "," s  last to_sym "," s line  last to_sym ","val [] -@  last to_sym "," s  last "," s line  last ","val [] -@  last "," s  sexp_type= "," s line  sexp_type= ","val [] -@  sexp_type= "," s  sexp_type "," s line  sexp_type ","val [] -@  sexp_type "]}," Ruby22Parser _reduce_520":{"type":"method","name":"_reduce_520","children":[],"call":[" s ","val [] "]}," Ruby22Parser _reduce_519":{"type":"method","name":"_reduce_519","children":[],"call":[" debug20 "," assignable ","val [] "," s line ","result line "," s ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," lexer lineno "," lexer "," lexer lex_state= "," assignable  line "," s line  line "," s  line "," assignable  last to_sym "," s line  last to_sym "," s  last to_sym "," assignable  last "," s line  last "," s  last "," assignable  sexp_type= "," s line  sexp_type= "," s  sexp_type= "," assignable  sexp_type "," s line  sexp_type "," s  sexp_type "]}," Ruby22Parser _reduce_518":{"type":"method","name":"_reduce_518","children":[],"call":[" assignable ","val [] ","val [] -@ ","num -@ "," s "," debug20 "]}," Ruby22Parser _reduce_517":{"type":"method","name":"_reduce_517","children":[],"call":[" gettable ","Sexp  === ","val [] "," debug20 "," assignable "]}," Ruby22Parser _reduce_516":{"type":"method","name":"_reduce_516","children":[],"call":[" gettable ","Sexp  === ","val [] "," debug20 "," s ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," lexer lex_state= "," lexer ","val [] to_sym "," debug "," s line ","result line "," lexer lineno "," assignable "," gettable  last to_sym "," s  last to_sym ","val []  last to_sym ","val [] to_sym  last to_sym "," s line  last to_sym "," assignable  last to_sym "," gettable  last "," s  last ","val []  last ","val [] to_sym  last "," s line  last "," assignable  last "," gettable  sexp_type= "," s  sexp_type= ","val []  sexp_type= ","val [] to_sym  sexp_type= "," s line  sexp_type= "," assignable  sexp_type= "," gettable  sexp_type "," s  sexp_type ","val []  sexp_type ","val [] to_sym  sexp_type "," s line  sexp_type "," assignable  sexp_type "," gettable  line "," s  line ","val []  line ","val [] to_sym  line "," s line  line "," assignable  line "]}," Ruby22Parser _reduce_515":{"type":"method","name":"_reduce_515","children":[],"call":[" s ","val [] to_sym ","val [] "," lexer lex_state= "," lexer ","num -@ "," gettable ","Sexp  === "]}," Ruby22Parser _reduce_514":{"type":"method","name":"_reduce_514","children":[],"call":[" s "," lexer lineno "," lexer ","val [] to_sym ","val [] "," gettable ","Sexp  === "]}," Ruby22Parser _reduce_513":{"type":"method","name":"_reduce_513","children":[],"call":[" s "," file "," s line "," lexer lineno "," lexer ","val [] to_sym ","val [] "," lexer lex_state= "," debug ","result line ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," s  line "," s line  line ","val [] to_sym  line "," s  last to_sym "," s line  last to_sym ","val [] to_sym  last to_sym "," s  last "," s line  last ","val [] to_sym  last "," s  sexp_type= "," s line  sexp_type= ","val [] to_sym  sexp_type= "," s  sexp_type "," s line  sexp_type ","val [] to_sym  sexp_type "]}," Ruby22Parser _reduce_512":{"type":"method","name":"_reduce_512","children":[],"call":[" s "," s line "," lexer lineno "," lexer ","val [] to_sym ","val [] "," file "]}," Ruby22Parser _reduce_511":{"type":"method","name":"_reduce_511","children":[],"call":[" s ","val [] to_sym ","val [] "," s line "," lexer lineno "," lexer ","id to_sym "," lexer lex_state= "," wrap "," file "]}," Ruby22Parser _reduce_510":{"type":"method","name":"_reduce_510","children":[],"call":[" s ","val [] to_sym ","val [] "," lexer lex_state= "," lexer "," raise ","stmt inspect "," debug20 "," s line ","stmt sexp_type "," lexer cmdarg restore "," lexer cmdarg "," lexer cond restore "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer lineno ","id to_sym "," wrap "]}," Ruby22Parser _reduce_509":{"type":"method","name":"_reduce_509","children":[],"call":[" s "," lexer lex_state= "," lexer "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer lineno "," lexer lex_state "," lexer cmdarg store "," lexer cmdarg "," lexer cond store "," lexer cond "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "," s line ","val [] to_sym ","val [] "]}," Ruby22Parser _reduce_499":{"type":"method","name":"_reduce_499","children":[],"call":["val [] -@ ","val [] ","val [] dup << "," new_qsym_list_entry ","val [] dup "," literal_concat "," new_string "," lexer lex_state= "," lexer "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," lexer lineno "," lexer lex_state "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "]}," Ruby22Parser _reduce_497":{"type":"method","name":"_reduce_497","children":[],"call":[" debug20 "," s ","result last to_sym ","result last ","result sexp_type= ","result sexp_type ","val [] "," lexer lex_state= "," lexer ","val [] dup << "," new_qword_list_entry ","val [] dup "," new_qsym_list_entry "," lexer lex_strterm= "," lexer lex_strterm ","val [] -@ "," s  last to_sym ","val []  last to_sym ","val [] dup <<  last to_sym "," lexer lex_strterm  last to_sym ","val [] -@  last to_sym "," s  last ","val []  last ","val [] dup <<  last "," lexer lex_strterm  last ","val [] -@  last "," s  sexp_type= ","val []  sexp_type= ","val [] dup <<  sexp_type= "," lexer lex_strterm  sexp_type= ","val [] -@  sexp_type= "," s  sexp_type ","val []  sexp_type ","val [] dup <<  sexp_type "," lexer lex_strterm  sexp_type ","val [] -@  sexp_type "]}," Ruby22Parser _reduce_492":{"type":"method","name":"_reduce_492","children":[],"call":["val [] to_sym ","val [] ","val [] dup << "," new_qword_list_entry ","val [] dup "," s line "," lexer lineno "," lexer "," s "," new_qsym_list_entry "]}," Ruby22Parser _reduce_491":{"type":"method","name":"_reduce_491","children":[],"call":["val [] to_sym ","val [] "," lexer lex_state= "," lexer "," new_qword_list ","list dup << "," new_symbol_list_entry ","list dup "," new_qsym_list "," literal_concat "]}," Ruby22Parser _reduce_489":{"type":"method","name":"_reduce_489","children":[],"call":[" s ","val [] to_sym ","val [] ","list line= ","list dup << "," new_symbol_list_entry ","list dup "," new_qword_list ","val [] dup << "," new_qsym_list_entry ","val [] dup "," lexer lex_state= "," lexer "]}," Ruby22Parser _reduce_488":{"type":"method","name":"_reduce_488","children":[],"call":[" s ","val [] to_sym ","val [] "," lexer lineno "," lexer "," new_symbol_list line "," new_symbol_list ","list line ","result line_max= "," new_qsym_list "," s  line_max= ","val []  line_max= "," lexer lineno  line_max= "," new_symbol_list line  line_max= ","list line  line_max= "," new_qsym_list  line_max= "]}," Ruby22Parser _reduce_487":{"type":"method","name":"_reduce_487","children":[],"call":[" s ","val [] to_sym ","val [] "," s line "," lexer lineno "," lexer ","list line= ","result line_max= ","val [] dup << "," new_qword_list_entry ","val [] dup "," s  line_max= "," s line  line_max= ","val [] dup <<  line_max= "]}," Ruby22Parser _reduce_486":{"type":"method","name":"_reduce_486","children":[],"call":[" raise ","stmt inspect "," debug20 "," s ","stmt sexp_type "," lexer lex_state= "," lexer "," lexer cmdarg restore "," lexer cmdarg "," lexer cond restore "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= ","val [] dup << "," new_symbol_list_entry ","val [] dup ","val [] "," literal_concat "," lexer lineno ","list line ","result line_max= "," new_qword_list ","val [] to_sym "," s  line_max= ","val [] dup <<  line_max= "," literal_concat  line_max= "," lexer lineno  line_max= ","list line  line_max= "," new_qword_list  line_max= "]}," Ruby22Parser _reduce_485":{"type":"method","name":"_reduce_485","children":[],"call":[" lexer lex_state= "," lexer "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer lex_state "," lexer cmdarg store "," lexer cmdarg "," lexer cond store "," lexer cond "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "," new_symbol_list "," s line "," lexer lineno "," s ","result line_max= ","list line ","val [] to_sym ","val [] "," raise ","stmt inspect "," debug20 ","stmt [] "," lexer cmdarg restore "," lexer cond restore "," new_symbol_list  line_max= "," s line  line_max= ","list line  line_max= "," s  line_max= "]}," Ruby22Parser _reduce_484":{"type":"method","name":"_reduce_484","children":[],"call":[" s ","val [] "," lexer lex_strterm= "," lexer ","val [] dup << "," new_word_list_entry ","val [] dup "," literal_concat ","list dup << "," new_symbol_list_entry ","list dup ","result line_max= "," s line "," raise ","stmt inspect "," debug20 ","stmt [] "," lexer lex_state= "," lexer cmdarg restore "," lexer cmdarg "," lexer cond restore "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_state "," lexer cmdarg store "," lexer cond store "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "," s  line_max= ","val []  line_max= ","val [] dup <<  line_max= "," literal_concat  line_max= ","list dup <<  line_max= "," s line  line_max= "]}," Ruby22Parser _reduce_483":{"type":"method","name":"_reduce_483","children":[],"call":[" lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm "," s "," new_word_list "," new_symbol_list ","result line_max= ","list line "," lexer string_nest= "," lexer brace_nest= "," lexer lex_state "," lexer cmdarg store "," lexer cmdarg "," lexer cond store "," lexer cond "," lexer string_nest "," lexer brace_nest ","val [] "," lexer lex_strterm  line_max= "," s  line_max= "," new_word_list  line_max= "," new_symbol_list  line_max= ","list line  line_max= "]}," Ruby22Parser _reduce_482":{"type":"method","name":"_reduce_482","children":[],"call":[" new_string "," literal_concat ","val [] ","val [] dup << "," new_word_list_entry ","val [] dup ","list line ","result line_max= "," s line "," s "," lexer lex_strterm= "," lexer "," lexer lex_state= "," lexer lex_strterm "," new_string  line_max= "," literal_concat  line_max= ","val []  line_max= ","val [] dup <<  line_max= ","list line  line_max= "," s line  line_max= "," s  line_max= "," lexer lex_strterm  line_max= "]}," Ruby22Parser _reduce_481":{"type":"method","name":"_reduce_481","children":[],"call":[" literal_concat ","val [] "," s line "," lexer lineno "," lexer "," s "," new_word_list ","result line_max= ","list dup << "," new_symbol_list_entry ","list dup "," lexer lex_state= "," lexer lex_strterm= "," lexer lex_strterm "," new_string "," literal_concat  line_max= "," s line  line_max= "," new_word_list  line_max= ","list dup <<  line_max= "," lexer lex_strterm  line_max= "," new_string  line_max= "]}," Ruby22Parser _reduce_480":{"type":"method","name":"_reduce_480","children":[],"call":["val [] dup << "," new_word_list_entry ","val [] dup ","val [] "," new_regexp "," literal_concat "," new_symbol_list "," new_string "]}," Ruby22Parser _reduce_479":{"type":"method","name":"_reduce_479","children":[],"call":[" literal_concat ","val [] "," new_word_list "," new_xstring "," s line "," lexer lineno "," lexer "," s ","result line_max= ","list line "," literal_concat  line_max= "," new_word_list  line_max= "," new_xstring  line_max= "," s line  line_max= ","list line  line_max= "]}," Ruby22Parser _reduce_478":{"type":"method","name":"_reduce_478","children":[],"call":["val [] "," new_string "," new_regexp ","val [] dup << "," new_word_list_entry ","val [] dup ","result line_max= "," s line "," s "," literal_concat ","val []  line_max= "," new_string  line_max= "," new_regexp  line_max= ","val [] dup <<  line_max= "," s line  line_max= "," literal_concat  line_max= "]}," Ruby22Parser _reduce_477":{"type":"method","name":"_reduce_477","children":[],"call":[" literal_concat ","val [] "," s "," dedent ","func =~ "," new_xstring "," new_word_list "," new_x dedent ing "]}," Ruby22Parser _reduce_476":{"type":"method","name":"_reduce_476","children":[],"call":[" s "," new_regexp "," literal_concat ","val [] "," new_string ","list line ","result line_max= "," s  line_max= "," new_regexp  line_max= "," literal_concat  line_max= "," new_string  line_max= ","list line  line_max= "]}," Ruby22Parser _reduce_475":{"type":"method","name":"_reduce_475","children":[],"call":["val [] dup << "," new_qsym_list_entry ","val [] dup ","val [] "," new_xstring "," dedent ","func =~ "," s line "," s ","result line_max= "," new_word_list_entry "," literal_concat "," new_x dedent ing ","val [] dup <<  line_max= "," new_xstring  line_max= "," s line  line_max= "," literal_concat  line_max= "," s  line_max= "]}," Ruby22Parser _reduce_474":{"type":"method","name":"_reduce_474","children":[],"call":[" new_qsym_list "," new_string "," debug20 "," literal_concat ","val [] "," new_regexp "," new_word_list "," s ","val [] dup << "," new_qsym_list_entry ","val [] dup "]}," Ruby22Parser _reduce_473":{"type":"method","name":"_reduce_473","children":[],"call":["val [] dup << "," new_qword_list_entry ","val [] dup ","val [] "," s ","str value ","str sexp_type == ","str sexp_type "," new_xstring ","result line_max= ","list line ","val [] to_sym "," new_qsym_list_entry "," new_qsym_list "," s  value "," s  sexp_type == "," s  sexp_type "," new_x s ing ","val [] dup <<  line_max= ","val []  line_max= "," new_xstring  line_max= ","list line  line_max= "," new_qsym_list  line_max= "]}," Ruby22Parser _reduce_472":{"type":"method","name":"_reduce_472","children":[],"call":[" new_qword_list "," literal_concat ","val [] "," debug20 "," new_string ","result line_max= "," s line "," s "," new_qsym_list ","val [] dup << "," new_qword_list_entry ","val [] dup "," new_qword_list  line_max= "," literal_concat  line_max= "," new_string  line_max= "," s line  line_max= "," s  line_max= "," new_qsym_list  line_max= ","val [] dup <<  line_max= "]}," Ruby22Parser _reduce_471":{"type":"method","name":"_reduce_471","children":[],"call":["val [] ","result line= "," s "," lexer lineno "," lexer ","str value ","str sexp_type == ","str sexp_type ","str line "," dedent ","func =~ "," new_regexp ","val [] dup << ","val [] dup "," new_qword_list_entry "," new_qword_list ","val []  line= "," s  line= ","str line  line= "," new_regexp  line= ","val [] dup <<  line= "," new_qword_list  line= ","result  lexer lineno = "," lexer  lexer lineno no "," s  value "," dedent  value "," s  sexp_type == "," dedent  sexp_type == "," s  sexp_type "," dedent  sexp_type ","str  lexer lineno  "," s  line "," dedent  line "]}," Ruby22Parser _reduce_470":{"type":"method","name":"_reduce_470","children":[],"call":[" s "," debug20 ","result line= ","val [] "," lexer lineno "," lexer "," literal_concat "," new_xstring "," new_qword_list "," s  line= "," literal_concat  line= "," new_xstring  line= "," new_qword_list  line= ","val []  line= ","result  lexer lineno = "," lexer  lexer lineno no "]}," Ruby22Parser _reduce_469":{"type":"method","name":"_reduce_469","children":[],"call":["val [] ","val []= "," s ","val [] value ","val [] sexp_type == ","val [] sexp_type ","result line= "," lexer lineno "," lexer "," new_string ","val []  line= "," s  line= "," new_string  line= ","result  lexer lineno = "," lexer  lexer lineno no "]}," Ruby22Parser _reduce_468":{"type":"method","name":"_reduce_468","children":[],"call":[" s "," s line ","result line= ","val [] "," lexer lineno "," lexer "," debug ","str line "," dedent ","func =~ "," s  lexer lineno  "," s  line= ","str line  line= ","val []  line= ","result  lexer lineno = "," lexer  lexer lineno no ","str  lexer lineno  "," dedent  line "]}," Ruby22Parser _reduce_467":{"type":"method","name":"_reduce_467","children":[],"call":["val [] dup << "," new_symbol_list_entry ","val [] dup ","val [] "," s ","str value ","str sexp_type == ","str sexp_type "," literal_concat "," s  value "," s  sexp_type == "," s  sexp_type "]}," Ruby22Parser _reduce_466":{"type":"method","name":"_reduce_466","children":[],"call":[" new_symbol_list "," s ","val [] "," s line ","val [] dup << "," new_symbol_list_entry ","val [] dup "]}," Ruby22Parser _reduce_465":{"type":"method","name":"_reduce_465","children":[],"call":["val [] "," s line "," s "," debug ","list dup << ","list dup "," debug20 ","sym last to_sym ","sym last ","sym []= ","sym [] ","val [] dup << "," new_symbol_list_entry ","val [] dup "," new_symbol_list "," s  last to_ s  "," s  last "," s  []= "," s  [] "," new_ s bol_list_entry "," new_ s bol_list "]}," Ruby22Parser _reduce_464":{"type":"method","name":"_reduce_464","children":[],"call":[" s ","val [] ","str value ","str sexp_type == ","str sexp_type "," new_symbol_list "," s  value "," s  sexp_type == "," s  sexp_type "]}," Ruby22Parser _reduce_463":{"type":"method","name":"_reduce_463","children":[],"call":[" literal_concat ","val [] "," s line ","arg line "," s "]}," Ruby22Parser _reduce_461":{"type":"method","name":"_reduce_461","children":[],"call":["val [] dup << "," new_word_list_entry ","val [] dup ","val [] ","result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s line ","var line "," s ","arg line "," literal_concat ","val [] dup <<  << "," new_resbody  << "," s line  << ","val []  << "," literal_concat  << "]}," Ruby22Parser _reduce_460":{"type":"method","name":"_reduce_460","children":[],"call":[" new_word_list "," s line "," s ","val [] dup << "," new_word_list_entry ","val [] dup ","val [] "]}," Ruby22Parser _reduce_459":{"type":"method","name":"_reduce_459","children":[],"call":["val [] "," s ","result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s line ","var line ","val [] dup << ","val [] dup ","val [] [] == ","val [] [] "," new_word_list_entry "," new_word_list ","val []  << "," s  << "," new_resbody  << ","val [] dup <<  << "," new_word_list  << "," new_val [] _list_entry "," new_ s _list_entry "," new_val [] _list "," new_ s _list "]}," Ruby22Parser _reduce_458":{"type":"method","name":"_reduce_458","children":[],"call":[" s ","result << ","val [] ","result line= "," new_when "," s line ","arg line "," new_word_list "," s  << "," new_when  << "," s line  << ","val []  << "," new_word_list  << "," s  line= "," new_when  line= "," s line  line= ","val []  line= "," new_word_list  line= "]}," Ruby22Parser _reduce_457":{"type":"method","name":"_reduce_457","children":[],"call":[" new_regexp ","result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s "," lexer lineno "," lexer ","val [] "," new_regexp  << "," new_resbody  << "," lexer lineno  << ","val []  << "," s  << "]}," Ruby22Parser _reduce_456":{"type":"method","name":"_reduce_456","children":[],"call":[" new_xstring ","val [] "," lexer cmdarg restore "," lexer cmdarg "," lexer "," env unextend "," env "," new_do_body ","result << ","result line= "," new_when "," new_resbody ","klasses line ","klasses << "," new_assign "," s line ","var line "," s "," new_regexp "," new_xstring  << "," new_do_body  << "," new_when  << "," new_resbody  << "," s  << "," new_regexp  << "," new_xstring  line= "," new_do_body  line= "," new_when  line= "," new_resbody  line= "," s  line= "," new_regexp  line= "]}," Ruby22Parser _reduce_455":{"type":"method","name":"_reduce_455","children":[],"call":[" new_string "," lexer cmdarg store "," lexer cmdarg "," lexer "," lexer lineno "," s line ","arg line "," s "," new_regexp "," new_xstring ","val [] "]}," Ruby22Parser _reduce_454":{"type":"method","name":"_reduce_454","children":[],"call":["val [] ","result << ","result line= "," new_when "," lexer lineno "," lexer "," env extend "," env "," env unextend "," lexer cmdarg pop "," lexer cmdarg "," new_do_body "," new_xstring "," new_string ","val []  << "," new_when  << "," lexer lineno  << "," new_do_body  << "," new_xstring  << "," new_string  << ","val []  line= "," new_when  line= "," lexer lineno  line= "," new_do_body  line= "," new_xstring  line= "," new_string  line= "]}," Ruby22Parser _reduce_453":{"type":"method","name":"_reduce_453","children":[],"call":[" literal_concat ","val [] "," lexer lineno "," lexer "," lexer cmdarg pop "," lexer cmdarg "," lexer cmdarg restore "," env unextend "," env "," new_brace_body "," lexer cmdarg push ","result << ","result line "," new_when "," new_resbody ","klasses line ","klasses << "," new_assign "," s line ","var line "," s "," new_string "," literal_concat  << "," lexer lineno  << "," new_brace_body  << "," new_when  << "," new_resbody  << "," new_string  << ","val []  << "," literal_concat  line "," lexer lineno  line "," new_brace_body  line "," new_when  line "," new_resbody  line "," new_string  line ","val []  line "]}," Ruby22Parser _reduce_451":{"type":"method","name":"_reduce_451","children":[],"call":[" debug20 "," lexer cmdarg store "," lexer cmdarg "," lexer "," lexer lineno "," env extend "," env "," lexer cmdarg pop "," lexer cmdarg restore "," env unextend "," new_brace_body "," list_append "," s line ","id line "," s "," literal_concat ","val [] "]}," Ruby22Parser _reduce_450":{"type":"method","name":"_reduce_450","children":[],"call":["val [] ","val []= "," s ","val [] value ","val [] sexp_type == ","val [] sexp_type "," lexer lineno "," lexer "," env extend "," env "," env unextend ","result line= "," lexer cmdarg store "," lexer cmdarg "," list_append ","result << ","result line "," new_when "," debug20 ","val []  line= "," lexer lineno  line= "," lexer cmdarg store  line= "," list_append  line= "," new_when  line= ","val []  << "," lexer lineno  << "," lexer cmdarg store  << "," list_append  << "," new_when  << ","val []  line "," lexer lineno  line "," lexer cmdarg store  line "," list_append  line "," new_when  line "]}," Ruby22Parser _reduce_448":{"type":"method","name":"_reduce_448","children":[],"call":[" s ","val [] "," lexer cmdarg store "," lexer cmdarg "," lexer "," env unextend "," env ","result line= "," s line ","arg line "," list_append ","id line ","val []= ","val [] value ","val [] [] == ","val [] [] "," s  line= "," lexer cmdarg store  line= "," s line  line= "," list_append  line= ","val []  line= "]}," Ruby22Parser _reduce_447":{"type":"method","name":"_reduce_447","children":[],"call":[" s ","val [] "," lexer lineno "," lexer "," env extend "," env "," env unextend "," lexer cmdarg pop "," lexer cmdarg "," new_do_body "," list_append "]}," Ruby22Parser _reduce_445":{"type":"method","name":"_reduce_445","children":[],"call":[" s "," lexer lineno "," lexer "," env extend "," env "," s line ","arg line ","val [] "]}," Ruby22Parser _reduce_443":{"type":"method","name":"_reduce_443","children":[],"call":["val [] "," lexer lineno "," lexer "," env extend "," env "," new_call "," s line "," s "," lexer cmdarg store "," lexer cmdarg "," lexer cmdarg push "]}," Ruby22Parser _reduce_440":{"type":"method","name":"_reduce_440","children":[],"call":[" s ","val [] "," new_super "," new_call ","val [] to_sym "," lexer lineno "," lexer "," env extend "," env "," lexer cmdarg store "," lexer cmdarg "]}," Ruby22Parser _reduce_439":{"type":"method","name":"_reduce_439","children":[],"call":[" new_call ","val [] ","val [] to_sym "," env unextend "," env ","result line "," lexer lineno "," lexer "," env extend "," s "," new_call  line "," lexer lineno  line "," s  line "]}," Ruby22Parser _reduce_438":{"type":"method","name":"_reduce_438","children":[],"call":["result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s "," new_call ","val [] ","result line ","call concat ","args sexp_body ","val [] to_sym "," lexer lineno "," lexer "," env extend "," env "," env unextend "," new_resbody  << "," new_call  << ","call concat  << "," lexer lineno  << "," s  << "," new_resbody  line "," new_call  line ","call concat  line "," lexer lineno  line "," s  line "]}," Ruby22Parser _reduce_435":{"type":"method","name":"_reduce_435","children":[],"call":["result << ","val [] ","result line= "," new_when "," new_call ","val [] to_sym ","iter2 insert ","name to_sym "," lexer lineno "," lexer "," new_super "," env extend "," env "," new_when  << "," new_call  << "," lexer lineno  << "," new_super  << "," new_when  line= "," new_call  line= "," lexer lineno  line= "," new_super  line= "," new_ new_call  "]}," Ruby22Parser _reduce_434":{"type":"method","name":"_reduce_434","children":[],"call":[" lexer lineno "," lexer ","val [] concat ","args sexp_body ","val [] "," call_args "," new_call ","val [] to_sym ","iter2 insert ","name to_sym "," new_aref ","result << ","result line= "," new_when "," call_args  sexp_body "," call_ call_args  ","  new_call _args "," new_ new_call  "," lexer lineno  << ","val [] concat  << "," new_call  << "," new_aref  << "," new_when  << "," lexer lineno  line= ","val [] concat  line= "," new_call  line= "," new_aref  line= "," new_when  line= "]}," Ruby22Parser _reduce_433":{"type":"method","name":"_reduce_433","children":[],"call":[" env unextend "," env ","result line= "," new_iter "," lexer lineno "," lexer ","result insert "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? ","val [] ","iter2 insert "," new_call ","name to_sym "," s line "," s ","result << "," new_when "," new_iter  line= "," lexer lineno  line= "," new_call  line= "," s line  line= "," new_when  line= "," new_iter  insert "," lexer lineno  insert "," new_call  insert "," s line  insert "," new_when  insert "," invert_block_ new_call  "," invert_block_call  [] block_pass? "," invert_block_call  [] "," new_ new_call  "," new_iter  << "," lexer lineno  << "," new_call  << "," s line  << "," new_when  << "]}," Ruby22Parser _reduce_432":{"type":"method","name":"_reduce_432","children":[],"call":["iter2 insert "," new_call ","name to_sym ","iter line ","val [] ","val [] to_sym ","id to_sym "," new_super "," lexer lineno "," lexer "," env unextend "," env ","result line= "," new_iter "," new_ new_call  ","iter line  line= "," new_call  line= "," new_super  line= "," lexer lineno  line= "," new_iter  line= "]}," Ruby22Parser _reduce_431":{"type":"method","name":"_reduce_431","children":[],"call":[" lexer lineno "," lexer "," env extend "," env ","iter2 insert "," new_call ","name to_sym ","val [] ","result insert "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? ","op to_sym "," env unextend ","result line= "," new_iter "," new_ new_call  "," invert_block_call  [] "," lexer lineno  insert ","val []  insert "," new_call  insert "," new_iter  insert "," invert_block_ new_call  "," invert_block_call  [] block_pass? "," lexer lineno  line= ","val []  line= "," new_call  line= "," new_iter  line= "]}," Ruby22Parser _reduce_430":{"type":"method","name":"_reduce_430","children":[],"call":[" env unextend "," env ","result line= "," new_iter "," new_call ","val [] ","val [] to_sym ","iter line ","op to_sym ","result line_max= "," lexer lineno "," lexer "," env extend "," new_iter  line= "," new_call  line= ","val []  line= ","iter line  line= "," lexer lineno  line= "," new_iter  line_max= "," new_call  line_max= ","val []  line_max= ","iter line  line_max= "," lexer lineno  line_max= "]}," Ruby22Parser _reduce_429":{"type":"method","name":"_reduce_429","children":[],"call":["result insert ","val [] "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? ","result == "," s ","call concat ","args sexp_body ","result line_max= ","args line_max "," new_call ","id to_sym "," lexer lineno "," lexer "," env extend "," env "," env unextend ","result line= "," new_iter ","val []  insert ","call concat  insert "," new_call  insert "," lexer lineno  insert "," new_iter  insert "," invert_block_call  [] "," invert_block_call  [] block_pass? ","val []  == ","call concat  == "," new_call  == "," lexer lineno  == "," new_iter  == ","val []  line_max= ","call concat  line_max= "," new_call  line_max= "," lexer lineno  line_max= "," new_iter  line_max= ","val []  line= ","call concat  line= "," new_call  line= "," lexer lineno  line= "," new_iter  line= "]}," Ruby22Parser _reduce_428":{"type":"method","name":"_reduce_428","children":[],"call":[" lexer lineno "," lexer "," env extend "," env ","val [] "," args ","iter2 insert "," new_call ","name to_sym ","op to_sym "," env unextend ","result line= "," new_iter "," new_ new_call  "," lexer lineno  line= ","val []  line= "," args  line= "," new_call  line= "," new_iter  line= "]}," Ruby22Parser _reduce_427":{"type":"method","name":"_reduce_427","children":[],"call":[" new_aref ","val [] "," env unextend "," env ","result line= "," new_iter "," s line "," s "," lexer cmdarg lexpop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," lexer lpar_beg= ","result == ","iter2 insert "," new_call ","name to_sym ","result line_max= ","op to_sym "," lexer lineno "," env extend "," new_aref  line= ","val []  line= "," new_iter  line= "," new_call  line= "," lexer lineno  line= "," new_aref  == ","val []  == "," new_iter  == "," new_call  == "," lexer lineno  == "," new_ s line  "," new_ new_call  "," new_aref  line_max= ","val []  line_max= "," new_iter  line_max= "," new_call  line_max= "," lexer lineno  line_max= "]}," Ruby22Parser _reduce_426":{"type":"method","name":"_reduce_426","children":[],"call":[" s ","val [] "," lexer cmdarg store "," lexer cmdarg "," lexer "," args "," new_call ","id to_sym ","result line_max= ","args line_max ","call concat ","args sexp_body "," lexer lineno "," env extend "," env "," new_aref "," s  line_max= ","val []  line_max= "," lexer cmdarg store  line_max= "," args  line_max= "," new_call  line_max= "," lexer lineno  line_max= "," new_aref  line_max= "]}," Ruby22Parser _reduce_425":{"type":"method","name":"_reduce_425","children":[],"call":[" new_super ","val [] ","result == "," s "," lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," lexer lineno "," env extend "," env "," env unextend ","result line= "," new_iter "," s line "," lexer cmdarg pop "," lexer cmdarg ","result insert "," invert_block_call "," inverted? "," syntax_error ","cmd block_pass? ","iter2 insert "," new_call ","name to_sym "," new_aref "," invert_block_call  [] "," new_super  == ","val []  == "," new_iter  == "," new_aref  == "," s  == "," new_super  line= ","val []  line= "," new_iter  line= "," new_aref  line= "," s  line= "," new_super  insert ","val []  insert "," new_iter  insert "," new_aref  insert "," s  insert "," invert_block_ s line  "," invert_block_ new_call  "," new_ s line  "," new_ new_call  "]}," Ruby22Parser _reduce_424":{"type":"method","name":"_reduce_424","children":[],"call":[" new_call ","val [] "," args "," lexer cmdarg push "," lexer cmdarg "," lexer ","iter line ","iter2 insert ","name to_sym "," s "," new_super "," new_ new_call  "]}," Ruby22Parser _reduce_423":{"type":"method","name":"_reduce_423","children":[],"call":[" new_call ","val [] "," env unextend "," env ","result line= "," new_iter "," lexer cmdarg lexpop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," lexer lpar_beg= "," s line "," s ","id to_sym "," lexer lineno "," lexer paren_nest "," lexer lpar_beg "," env extend "," new_super "," new_ new_call  "," new_call  line= "," new_iter  line= "," s line  line= ","val []  line= "," new_super  line= ","result  lexer lineno = "," s  lexer lineno  "," lexer  lexer lineno no "]}," Ruby22Parser _reduce_422":{"type":"method","name":"_reduce_422","children":[],"call":[" new_call ","val [] to_sym ","val [] "," lexer lineno "," lexer "," lexer cmdarg store "," lexer cmdarg "," args ","result insert "," invert_block_call "," inverted? "," syntax_error ","cmd block_pass? "," invert_block_call  [] to_sym "," invert_block_call  [] "," new_call  insert "," args  insert ","val []  insert "]}," Ruby22Parser _reduce_421":{"type":"method","name":"_reduce_421","children":[],"call":[" new_call ","val [] ","val [] to_sym "," lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," lexer lineno "," env extend "," env "," args "," s line "," s ","id to_sym ","result == ","iter line "," lexer  lexer lineno no "," s  lexer lineno  "," new_call  == "," lexer lpar_beg  == "," lexer lineno  == "," args  == "," s line  == ","val []  == ","iter line  == ","iter  lexer lineno  "]}," Ruby22Parser _reduce_420":{"type":"method","name":"_reduce_420","children":[],"call":[" new_call ","val [] ","val [] to_sym "," args "]}," Ruby22Parser _reduce_419":{"type":"method","name":"_reduce_419","children":[],"call":["val [] concat ","args sexp_body ","val [] "," call_args "," s ","val [] to_sym "," args "," env unextend "," env ","result line "," new_iter "," s line "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer lpar_beg= "," new_call "," call_args  sexp_body "," call_ call_args  ","  s line _args ","  call_args  ","val [] concat  line "," s  line "," args  line "," new_iter  line ","val []  line "," new_call  line "," new_ s line  "]}," Ruby22Parser _reduce_418":{"type":"method","name":"_reduce_418","children":[],"call":[" lexer lineno "," lexer "," args "," lexer cmdarg push "," lexer cmdarg ","result == "," s ","val [] "," new_call ","val [] to_sym ","val [] concat ","args [] "," call_args ","  call_args  "," lexer lineno  == "," args  == ","val []  == "," new_call  == ","val [] concat  == "," call_args  [] "," call_ call_args  "]}," Ruby22Parser _reduce_417":{"type":"method","name":"_reduce_417","children":[],"call":["iter2 insert "," new_call ","name to_sym "," args "," s line "," lexer lineno "," lexer "," s "," lexer lpar_beg= "," lexer paren_nest "," lexer lpar_beg "," env extend "," env ","val [] concat ","args [] ","val [] "," call_args "," new_ new_call  ","  call_args  "," call_args  [] ","  new_call _args "," call_ call_args  "]}," Ruby22Parser _reduce_416":{"type":"method","name":"_reduce_416","children":[],"call":["iter2 insert "," new_call ","name to_sym "," args "," env unextend "," env ","result line "," new_iter "," s line "," s "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer lpar_beg= "," lexer lineno "," new_ new_call  "," new_ s line  "," args  line "," new_iter  line "," lexer lineno  line "]}," Ruby22Parser _reduce_415":{"type":"method","name":"_reduce_415","children":[],"call":[" new_call ","val [] ","val [] to_sym "," lexer command_start= "," lexer "," s line "," lexer lineno "," s ","id to_sym "," wrap "," lexer cmdarg push "," lexer cmdarg ","iter2 insert ","name to_sym "," new_ new_call  "]}," Ruby22Parser _reduce_414":{"type":"method","name":"_reduce_414","children":[],"call":["result insert ","val [] "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? "," args "," lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," lexer lineno "," env extend "," env ","iter2 insert "," new_call ","name to_sym ","val [] to_sym ","val []  insert "," args  insert "," new_call  insert "," invert_block_call  [] "," invert_block_ new_call  "," invert_block_call  [] block_pass? "," new_ new_call  "," invert_block_call  [] to_sym "]}," Ruby22Parser _reduce_413":{"type":"method","name":"_reduce_413","children":[],"call":[" env unextend "," env ","result line= ","val [] "," new_iter "," s "," args "," lexer command_start= "," lexer "," new_call ","val [] to_sym ","result insert "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? "," new_iter  line= "," s  line= "," args  line= "," new_call  line= ","val []  line= "," invert_block_call  [] "," val []  "," invert_block_call  [] to_sym "," new_iter  insert "," s  insert "," args  insert "," new_call  insert ","val []  insert "," invert_block_call  [] block_pass? "]}," Ruby22Parser _reduce_412":{"type":"method","name":"_reduce_412","children":[],"call":[" args "," wrap ","val [] ","result insert "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? "," env unextend "," env ","result line= "," new_iter "," val []  "," invert_block_call  [] "," args  insert "," wrap  insert ","val []  insert "," new_iter  insert "," invert_block_call  [] block_pass? "," args  line= "," wrap  line= ","val []  line= "," new_iter  line= "]}," Ruby22Parser _reduce_411":{"type":"method","name":"_reduce_411","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," lexer command_start= "," args "," env unextend ","result line= ","val [] "," new_iter "," val []  "," lexer lineno  line= "," args  line= "," new_iter  line= "]}," Ruby22Parser _reduce_410":{"type":"method","name":"_reduce_410","children":[],"call":["val [] "," args "," lexer lineno "," lexer "," env extend "," env "]}," Ruby22Parser _reduce_409":{"type":"method","name":"_reduce_409","children":[],"call":["val [] "," args "," s line "," lexer lineno "," lexer "," s "," env extend "," env "]}," Ruby22Parser _reduce_408":{"type":"method","name":"_reduce_408","children":[],"call":["result == "," s ","val [] "," args ","val []  == "," args  == "]}," Ruby22Parser _reduce_407":{"type":"method","name":"_reduce_407","children":[],"call":[" args "," lexer command_start= "," lexer ","val [] ","result == "," s "," args  == ","val []  == "]}," Ruby22Parser _reduce_406":{"type":"method","name":"_reduce_406","children":[],"call":[" env unextend "," env "," new_iter "," new_call "," lexer lpar_beg= "," lexer "," args "," s line "," lexer lineno "," s ","result == ","val [] "," new_ new_call  "," new_iter  == "," args  == "," s line  == ","val []  == "]}," Ruby22Parser _reduce_405":{"type":"method","name":"_reduce_405","children":[],"call":[" lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," lexer lineno "," env extend "," env "," args "," env unextend "," new_iter "," new_call "," new_ new_call  "]}," Ruby22Parser _reduce_403":{"type":"method","name":"_reduce_403","children":[],"call":[" s ","val [] to_sym ","val [] "," args "," lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," lexer lineno "," env extend "," env "]}," Ruby22Parser _reduce_402":{"type":"method","name":"_reduce_402","children":[],"call":[" args "," args << "," s ","val [] to_sym ","val [] "]}," Ruby22Parser _reduce_401":{"type":"method","name":"_reduce_401","children":[],"call":[" args "," s ","val [] to_sym ","val [] "]}," Ruby22Parser _reduce_400":{"type":"method","name":"_reduce_400","children":[],"call":[" args "]}," Ruby22Parser _reduce_398":{"type":"method","name":"_reduce_398","children":[],"call":[" args "]}," Ruby22Parser _reduce_397":{"type":"method","name":"_reduce_397","children":[],"call":[" s "," lexer command_start= "," lexer "," args "]}," Ruby22Parser _reduce_396":{"type":"method","name":"_reduce_396","children":[],"call":[" args ","result line "," call_args "," lexer lineno "," lexer "," args << "," s "," lexer command_start= "," args  line "," call_args  line "," args <<  line "," s  line ","result  lexer lineno  "," lexer  lexer lineno no "]}," Ruby22Parser _reduce_394":{"type":"method","name":"_reduce_394","children":[],"call":[" call_args ","result line "," lexer lineno "," lexer "," args "," call_args  line "," args  line ","result  lexer lineno  "," lexer  lexer lineno no "]}," Ruby22Parser _reduce_393":{"type":"method","name":"_reduce_393","children":[],"call":[" args "," call_args "," args << "]}," Ruby22Parser _reduce_392":{"type":"method","name":"_reduce_392","children":[],"call":[" args "," call_args "," block_var "]}," Ruby22Parser _reduce_391":{"type":"method","name":"_reduce_391","children":[],"call":[" args "," call_args "," block_var "]}," Ruby22Parser _reduce_390":{"type":"method","name":"_reduce_390","children":[],"call":[" args "," call_args "," block_var "]}," Ruby22Parser _reduce_389":{"type":"method","name":"_reduce_389","children":[],"call":[" args "," call_args "," block_var "]}," Ruby22Parser _reduce_388":{"type":"method","name":"_reduce_388","children":[],"call":[" args "," block_var ","result line "," call_args "," args  line "," block_var  line "," call_args  line "]}," Ruby22Parser _reduce_387":{"type":"method","name":"_reduce_387","children":[],"call":[" args "," block_var "," call_args "]}," Ruby22Parser _reduce_386":{"type":"method","name":"_reduce_386","children":[],"call":[" args "," block_var ","(str \"*\") to_sym "," call_args "]}," Ruby22Parser _reduce_385":{"type":"method","name":"_reduce_385","children":[],"call":[" args "," block_var ","(str \"*\") to_sym "," call_args ","result line "," args  line "," block_var  line "," call_args  line "]}," Ruby22Parser _reduce_384":{"type":"method","name":"_reduce_384","children":[],"call":[" args "," block_var ","(str \"*\") to_sym ","result line "," lexer lineno "," lexer "," call_args "," args  line "," block_var  line "," call_args  line "]}," Ruby22Parser _reduce_383":{"type":"method","name":"_reduce_383","children":[],"call":[" args "," block_var "," list_append ","val [] ","(str \"*\") to_sym ","result line "," call_args "," args  line "," block_var  line "," list_append  line "," call_args  line "]}," Ruby22Parser _reduce_382":{"type":"method","name":"_reduce_382","children":[],"call":[" args "," block_var ","(str \"*\") to_sym "," s line "," lexer lineno "," lexer "," s "," call_args "]}," Ruby22Parser _reduce_381":{"type":"method","name":"_reduce_381","children":[],"call":[" args "," block_var ","(str \"*\") to_sym ","val [] "," list_append ","result line "," lexer lineno "," lexer "," args  line "," block_var  line ","val []  line "," list_append  line "]}," Ruby22Parser _reduce_380":{"type":"method","name":"_reduce_380","children":[],"call":[" args "," block_var "," s line "," lexer lineno "," lexer "," s ","result line ","(str \"*\") to_sym "," args  line "," block_var  line "," s line  line "]}," Ruby22Parser _reduce_379":{"type":"method","name":"_reduce_379","children":[],"call":[" args "," list_append ","val [] ","val [] delete_at ","val [] [] nil? ","val [] [] "," block_var "]}," Ruby22Parser _reduce_377":{"type":"method","name":"_reduce_377","children":[],"call":[" args ","val [] ","val [] delete_at ","val [] [] nil? ","val [] [] "," list_append "," block_var "]}," Ruby22Parser _reduce_376":{"type":"method","name":"_reduce_376","children":[],"call":[" call_args "," s line "," lexer lineno "," lexer "," s "," block_var "," args "]}," Ruby22Parser _reduce_375":{"type":"method","name":"_reduce_375","children":[],"call":[" call_args ","val [] delete_at ","val [] ","val [] [] nil? ","val [] [] "," s line "," s "," block_var "," args "]}," Ruby22Parser _reduce_374":{"type":"method","name":"_reduce_374","children":[],"call":[" call_args "," list_append ","val [] "]}," Ruby22Parser _reduce_373":{"type":"method","name":"_reduce_373","children":[],"call":[" call_args ","val [] "," s line "," s ","val [] delete_at ","val [] [] nil? ","val [] [] "," lexer lineno "," lexer "]}," Ruby22Parser _reduce_372":{"type":"method","name":"_reduce_372","children":[],"call":[" block_var ","val [] "," call_args "]}," Ruby22Parser _reduce_371":{"type":"method","name":"_reduce_371","children":[],"call":[" block_var "," s ","val [] "," call_args "]}," Ruby22Parser _reduce_370":{"type":"method","name":"_reduce_370","children":[],"call":[" block_var ","val [] delete_at ","val [] ","val [] [] nil? ","val [] [] "]}," Ruby22Parser _reduce_369":{"type":"method","name":"_reduce_369","children":[],"call":[" block_var "," s line "," s "," debug20 "]}," Ruby22Parser _reduce_368":{"type":"method","name":"_reduce_368","children":[],"call":[" block_var ","val [] "," debug20 "]}," Ruby22Parser _reduce_367":{"type":"method","name":"_reduce_367","children":[],"call":[" block_var "]}," Ruby22Parser _reduce_366":{"type":"method","name":"_reduce_366","children":[],"call":[" block_var ","(str \"*\") to_sym "," s line "," s "," debug20 "]}," Ruby22Parser _reduce_365":{"type":"method","name":"_reduce_365","children":[],"call":[" block_var ","(str \"*\") to_sym "]}," Ruby22Parser _reduce_364":{"type":"method","name":"_reduce_364","children":[],"call":[" block_var ","(str \"*\") to_sym "]}," Ruby22Parser _reduce_363":{"type":"method","name":"_reduce_363","children":[],"call":[" list_append ","val [] "," block_var ","(str \"*\") to_sym "]}," Ruby22Parser _reduce_362":{"type":"method","name":"_reduce_362","children":[],"call":[" s ","val [] "," block_var "," list_append "]}," Ruby22Parser _reduce_361":{"type":"method","name":"_reduce_361","children":[],"call":["val [] "," list_append "," s "]}," Ruby22Parser _reduce_359":{"type":"method","name":"_reduce_359","children":[],"call":["val [] delete_at ","val [] ","val [] [] nil? ","val [] [] "]}," Ruby22Parser _reduce_357":{"type":"method","name":"_reduce_357","children":[],"call":["val [] ","val [] delete_at ","val [] [] nil? ","val [] [] "]}," Ruby22Parser _reduce_355":{"type":"method","name":"_reduce_355","children":[],"call":[" s ","val [] "]}," Ruby22Parser _reduce_337":{"type":"method","name":"_reduce_337","children":[],"call":[" value_expr ","val [] "," lexer comments "," lexer "," in_def= "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," new_defn "," env extend "," yyerror "," in_single > "," in_single "," in_def "," comments push "," comments "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer lex_state= ","EXPR_ENDFN  | "," s line "," s "]}," Ruby22Parser _reduce_336":{"type":"method","name":"_reduce_336","children":[],"call":[" s "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," env extend "," env "," in_def= "," comments push "," lexer comments "," comments "," lexer cmdarg stack dup "," in_def "," lexer lineno "," env unextend "," new_module "," lexer lex_state= "," s line "," value_expr ","val [] "]}," Ruby22Parser _reduce_335":{"type":"method","name":"_reduce_335","children":[],"call":[" s "," lexer comments "," lexer "," env unextend "," env "," new_module "," new_sclass "," env extend "," yyerror "," in_single > "," in_single "," in_def "," comments push "," comments "," lexer ignore_body_comments "," in_def= "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," new_defn "," new_defs ","val delete_at "," value_expr ","val [] "]}," Ruby22Parser _reduce_334":{"type":"method","name":"_reduce_334","children":[],"call":[" s "," env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," lexer "," comments "," in_single= "," lexer lineno "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," in_def= "," lexer lex_state= ","EXPR_ENDFN  | "]}," Ruby22Parser _reduce_333":{"type":"method","name":"_reduce_333","children":[],"call":[" s "," lexer lineno "," lexer "," in_def= "," in_def "," lexer comments "," env unextend "," env "," new_sclass "," lexer ignore_body_comments "," new_module "," lexer lex_state= "]}," Ruby22Parser _reduce_332":{"type":"method","name":"_reduce_332","children":[],"call":[" lexer comments "," lexer "," in_single "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg ","result [] line ","result [] "," new_defs ","val [] "," new_sclass "," lexer lineno "," env extend "," in_single= "," yyerror "," in_single > "," in_def "," lexer ignore_body_comments "," in_def= "," lexer cmdarg pop "," lexer cond pop "," lexer cond "," new_defn "," s "," new_defs  [] line "," new_sclass  [] line "," lexer lineno  [] line "," in_single  [] line "," s  [] line "," new_defs  [] "," new_sclass  [] "," lexer lineno  [] "," in_single  [] "," s  [] "]}," Ruby22Parser _reduce_331":{"type":"method","name":"_reduce_331","children":[],"call":[" lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," lexer cmdarg stack dup "," lexer lineno "," lexer lex_state= "," env extend "," env "," in_single "," in_single= "," lexer comments "," env unextend "," new_class "," in_def= "," in_def "," lexer cond push "," lexer cond "," lexer cmdarg push "," s ","result [] line ","val [] ","result [] "," new_defs "," in_single  [] line "," new_class  [] line "," in_def  [] line "," lexer lineno  [] line "," s  [] line "," new_defs  [] line "," in_single  [] "," new_class  [] "," in_def  [] "," lexer lineno  [] "," s  [] "," new_defs  [] "]}," Ruby22Parser _reduce_330":{"type":"method","name":"_reduce_330","children":[],"call":[" lexer lex_state= "," lexer "," comments push "," lexer comments "," comments "," in_def= "," in_def "," env extend "," env "," yyerror "," in_single > "," in_single "," lexer lineno "," lexer ignore_body_comments "," env unextend "," new_sclass "," new_module ","result [] line ","val [] ","result [] "," new_defs "," in_def  [] line "," lexer lineno  [] line "," new_sclass  [] line "," new_module  [] line "," new_defs  [] line "," in_def  [] "," lexer lineno  [] "," new_sclass  [] "," new_module  [] "," new_defs  [] "]}," Ruby22Parser _reduce_329":{"type":"method","name":"_reduce_329","children":[],"call":[" lexer comments "," lexer "," in_def= "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," new_defn ","val [] "," lexer lineno "," new_class "," env extend "," in_single= "," in_single "," yyerror "," in_single > "," in_def "," lexer lex_state= "," comments push "," comments "]}," Ruby22Parser _reduce_328":{"type":"method","name":"_reduce_328","children":[],"call":[" lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," env extend "," env "," in_def= "," comments push "," lexer comments "," comments "," lexer cmdarg stack dup "," in_def "," env unextend "," new_class "," new_for "," yyerror "," in_single > "," in_single "," lexer ignore_body_comments "," new_sclass "," lexer lex_state= "," new_defn ","val [] "]}," Ruby22Parser _reduce_327":{"type":"method","name":"_reduce_327","children":[],"call":[" lexer comments "," lexer "," env unextend "," env "," new_module "," env extend "," yyerror "," in_single > "," in_single "," in_def "," comments push "," comments "," new_case "," lexer lineno "," in_single= "," in_def= "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," new_defn ","val [] "," lexer cmdarg stack dup "]}," Ruby22Parser _reduce_326":{"type":"method","name":"_reduce_326","children":[],"call":[" env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," lexer "," comments "," lexer lineno "," new_case "," new_for "," lexer ignore_body_comments "," env unextend "," new_class "," in_def= "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer cmdarg stack dup "," new_module "]}," Ruby22Parser _reduce_325":{"type":"method","name":"_reduce_325","children":[],"call":[" lexer lineno "," lexer "," new_for "," new_until "," new_case "," env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," lexer ignore_body_comments "," env unextend "," new_class "," lexer comments "," new_module "," comments push "," comments "]}," Ruby22Parser _reduce_324":{"type":"method","name":"_reduce_324","children":[],"call":[" lexer comments "," lexer "," env unextend "," env "," new_sclass "," new_case "," new_while "," lexer lineno "," env extend "," yyerror "," in_single > "," in_single "," in_def "," comments push "," comments "]}," Ruby22Parser _reduce_323":{"type":"method","name":"_reduce_323","children":[],"call":[" env extend "," env "," in_single= "," in_single "," new_case "," new_if "," new_until "," new_for "," lexer lineno "," lexer "," lexer comments "," env unextend "," new_sclass "]}," Ruby22Parser _reduce_322":{"type":"method","name":"_reduce_322","children":[],"call":[" in_def= "," in_def "," new_until "," new_if "," new_while "," new_case "," lexer comments "," lexer "," env unextend "," env "," new_sclass "," env extend "," in_single= "," in_single "]}," Ruby22Parser _reduce_321":{"type":"method","name":"_reduce_321","children":[],"call":[" lexer lineno "," lexer "," new_while ","val [] "," new_if "," new_case "," env extend "," env "," in_single= "," in_single "," in_def= "," in_def "]}," Ruby22Parser _reduce_320":{"type":"method","name":"_reduce_320","children":[],"call":[" lexer comments "," lexer "," env unextend "," env "," new_class "," new_if ","iter insert "," block_dup_check ","val [] "," new_until "," in_def= "," in_def "," lexer lineno "]}," Ruby22Parser _reduce_319":{"type":"method","name":"_reduce_319","children":[],"call":[" env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," lexer "," comments "," new_if ","val [] "," new_while "," lexer lineno "," env unextend "," new_class "]}," Ruby22Parser _reduce_318":{"type":"method","name":"_reduce_318","children":[],"call":[" lexer lineno "," lexer ","val [] ","iter insert "," block_dup_check "," new_if "," lexer comments "," env unextend "," env "," new_class "," env extend "," yyerror "," in_single > "," in_single "," in_def "," comments push "," comments "]}," Ruby22Parser _reduce_317":{"type":"method","name":"_reduce_317","children":[],"call":[" new_for ","val [] ","iter insert "," block_dup_check "," debug20 "," new_if "," env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," lexer "," comments "," lexer lineno "]}," Ruby22Parser _reduce_316":{"type":"method","name":"_reduce_316","children":[],"call":[" lexer cond pop "," lexer cond "," lexer "," new_call ","iter insert "," lexer lineno "," new_for ","val [] "]}," Ruby22Parser _reduce_315":{"type":"method","name":"_reduce_315","children":[],"call":[" lexer cond push "," lexer cond "," lexer ","call line= ","iter line ","iter insert ","val [] "," s line "," s "," debug20 "," block_dup_check "," new_for "," lexer cond pop "]}," Ruby22Parser _reduce_314":{"type":"method","name":"_reduce_314","children":[],"call":[" new_case "," debug20 "," new_yield "," new_call "," lexer cond pop "," lexer cond "," lexer "," lexer cond push "]}," Ruby22Parser _reduce_313":{"type":"method","name":"_reduce_313","children":[],"call":[" new_case "," s ","val [] "," new_yield "," s line ","iter insert "," lexer cond push "," lexer cond "," lexer "]}," Ruby22Parser _reduce_312":{"type":"method","name":"_reduce_312","children":[],"call":[" new_until ","val [] "," s "," new_yield "," debug "," new_case "]}," Ruby22Parser _reduce_311":{"type":"method","name":"_reduce_311","children":[],"call":[" lexer cond pop "," lexer cond "," lexer "," new_yield "," s line "," s "," new_call "," new_case "," new_until ","val [] "]}," Ruby22Parser _reduce_310":{"type":"method","name":"_reduce_310","children":[],"call":[" lexer cond push "," lexer cond "," lexer "," new_yield "," new_hash ","val [] "," s line "," s "," new_until "," lexer cond pop "]}," Ruby22Parser _reduce_309":{"type":"method","name":"_reduce_309","children":[],"call":[" new_while ","val [] "," new_yield "," lexer lineno "," lexer "," s line "," s "," new_yield line "," lexer cond pop "," lexer cond "," lexer cond push "]}," Ruby22Parser _reduce_308":{"type":"method","name":"_reduce_308","children":[],"call":[" lexer cond pop "," lexer cond "," lexer "," s ","result line ","result sexp_type= "," new_hash "," new_yield "," new_yield line "," lexer cond push "," new_while ","val [] "," s  line "," new_hash  line "," new_yield  line "," new_yield line  line "," new_while  line "," s  sexp_type= "," new_hash  sexp_type= "," new_yield  sexp_type= "," new_yield line  sexp_type= "," new_while  sexp_type= "]}," Ruby22Parser _reduce_307":{"type":"method","name":"_reduce_307","children":[],"call":[" lexer cond push "," lexer cond "," lexer "," new_hash "," lexer lineno "," new_yield ","val [] "," new_yield line "," new_while "," lexer cond pop "]}," Ruby22Parser _reduce_306":{"type":"method","name":"_reduce_306","children":[],"call":[" new_if ","val [] "," lexer lineno "," lexer "," s line "," s ","id to_sym ","result line ","result sexp_type= "," lexer cond pop "," lexer cond "," lexer cond push "," new_if  line "," lexer lineno  line "," s line  line "," new_if  sexp_type= "," lexer lineno  sexp_type= "," s line  sexp_type= "]}," Ruby22Parser _reduce_305":{"type":"method","name":"_reduce_305","children":[],"call":[" new_if ","val [] ","result sexp_type= "," s "," s line ","expr line ","id to_sym "," lexer lineno "," lexer "," new_hash "," lexer cond push "," lexer cond "," new_if  sexp_type= "," s line  sexp_type= "," lexer lineno  sexp_type= "," new_hash  sexp_type= "]}," Ruby22Parser _reduce_304":{"type":"method","name":"_reduce_304","children":[],"call":["val [] "," s ","val [] to_sym ","result paren= "," s line "," lexer lineno "," lexer ","id to_sym "," new_if ","val []  paren= "," s  paren= "," s line  paren= "," lexer lineno  paren= "," new_if  paren= "]}," Ruby22Parser _reduce_303":{"type":"method","name":"_reduce_303","children":[],"call":["iter insert "," block_dup_check ","val [] "," s ","val [] to_sym "," lexer cmdarg restore "," lexer cmdarg "," lexer "," warning "," s line ","expr line ","id to_sym ","result line ","result sexp_type= ","result line_max= "," new_if "," s  line "," s line  line "," new_if  line ","val []  line "," s  sexp_type= "," s line  sexp_type= "," new_if  sexp_type= ","val []  sexp_type= "," s  line_max= "," s line  line_max= "," new_if  line_max= ","val []  line_max= "]}," Ruby22Parser _reduce_301":{"type":"method","name":"_reduce_301","children":[],"call":["call line= ","iter line ","iter insert ","val [] "," lexer cmdarg restore "," lexer cmdarg "," lexer "," warning "," lexer cmdarg store "," s line "," s ","id to_sym "," wrap "," block_dup_check "]}," Ruby22Parser _reduce_300":{"type":"method","name":"_reduce_300","children":[],"call":[" debug20 "," lexer lex_state= "," lexer "," s line "," s ","expr line ","id to_sym ","call line= ","iter line ","iter insert ","val [] "]}," Ruby22Parser _reduce_299":{"type":"method","name":"_reduce_299","children":[],"call":[" s ","val [] "," lexer cmdarg store "," lexer cmdarg "," lexer "," lexer lineno "," lexer lex_state= "," s line ","result paren= ","call line= ","iter line ","iter insert "," debug20 "," s  paren= "," lexer cmdarg store  paren= "," lexer lineno  paren= "," s line  paren= "]}," Ruby22Parser _reduce_298":{"type":"method","name":"_reduce_298","children":[],"call":[" s ","val [] "," debug20 ","result line= "," lexer lineno "," lexer "," lexer lex_state= "," s  line= "," lexer lineno  line= "]}," Ruby22Parser _reduce_297":{"type":"method","name":"_reduce_297","children":[],"call":[" new_yield ","result line= ","val [] "," s "," lexer lineno "," lexer "," new_begin "," lexer cmdarg pop "," lexer cmdarg "," lexer lex_state= "," new_yield  line= "," s  line= "," lexer lineno  line= "," new_begin  line= "]}," Ruby22Parser _reduce_296":{"type":"method","name":"_reduce_296","children":[],"call":[" new_yield "," lexer lineno "," lexer "," new_call ","msg to_sym "," lexer cmdarg push "," lexer cmdarg "," s line "," s ","val [] "]}," Ruby22Parser _reduce_295":{"type":"method","name":"_reduce_295","children":[],"call":[" new_yield ","val [] "," new_call ","val [] to_sym ","msg to_sym "," lexer lineno "," lexer "," lexer lex_state= "]}," Ruby22Parser _reduce_294":{"type":"method","name":"_reduce_294","children":[],"call":[" s "," new_begin "," lexer cmdarg pop "," lexer cmdarg "," lexer "," new_yield ","val [] "]}," Ruby22Parser _reduce_293":{"type":"method","name":"_reduce_293","children":[],"call":[" new_hash "," lexer lineno "," lexer "," lexer cmdarg push "," lexer cmdarg "," new_yield ","val [] "," s "]}," Ruby22Parser _reduce_292":{"type":"method","name":"_reduce_292","children":[],"call":[" lexer lineno "," lexer ","result line "," new_call ","msg to_sym "," s "," new_hash "," lexer lineno  line "," new_call  line "," s  line "," new_hash  line "]}," Ruby22Parser _reduce_291":{"type":"method","name":"_reduce_291","children":[],"call":["result sexp_type= "," s ","val [] ","val [] values "," lexer lineno "," lexer "," s  sexp_type= "," lexer lineno  sexp_type= "]}," Ruby22Parser _reduce_290":{"type":"method","name":"_reduce_290","children":[],"call":[" s ","val [] to_sym ","val [] ","result []= "," s  []= "]}," Ruby22Parser _reduce_289":{"type":"method","name":"_reduce_289","children":[],"call":[" s ","val [] to_sym ","val [] "]}," Ruby22Parser _reduce_288":{"type":"method","name":"_reduce_288","children":[],"call":["result paren= "," s ","val [] ","val [] to_sym "," s  paren= "]}," Ruby22Parser _reduce_287":{"type":"method","name":"_reduce_287","children":[],"call":["val [] "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," warning ","result paren= "," s ","val []  paren= "]}," Ruby22Parser _reduce_286":{"type":"method","name":"_reduce_286","children":[],"call":[" lexer lex_state= "," lexer ","val [] "," warning "]}," Ruby22Parser _reduce_285":{"type":"method","name":"_reduce_285","children":[],"call":[" lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," lexer cmdarg stack dup "," s line ","arg line "," s "," lexer lex_state= "]}," Ruby22Parser _reduce_284":{"type":"method","name":"_reduce_284","children":[],"call":[" debug20 "," s ","val [] "," arg_concat "," s line ","arg line "]}," Ruby22Parser _reduce_283":{"type":"method","name":"_reduce_283","children":[],"call":["result line= ","val [] "," s "," arg_concat ","val [] << "," s  line= "," arg_concat  line= ","val [] <<  line= "]}," Ruby22Parser _reduce_282":{"type":"method","name":"_reduce_282","children":[],"call":[" lexer lineno "," lexer ","val [] << ","val [] "," new_masgn_arg "]}," Ruby22Parser _reduce_281":{"type":"method","name":"_reduce_281","children":[],"call":[" new_call ","val [] to_sym ","val [] "," new_masgn_arg "," s line ","arg line "," s "]}," Ruby22Parser _reduce_270":{"type":"method","name":"_reduce_270","children":[],"call":[" s ","val [] "," call_args "," s line ","arg line "]}," Ruby22Parser _reduce_269":{"type":"method","name":"_reduce_269","children":[],"call":[" arg_concat ","val [] "," arg_blk_pass "," call_args "," array_to_hash "," lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg pop ","(sym :tLBRACE_ARG) include? "]}," Ruby22Parser _reduce_268":{"type":"method","name":"_reduce_268","children":[],"call":["val [] << ","val [] "," arg_blk_pass "," call_args "," array_to_hash "," lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg pop ","(sym :tLPAREN) include? "," last_token_type first "," last_token_type "]}," Ruby22Parser _reduce_267":{"type":"method","name":"_reduce_267","children":[],"call":[" new_masgn_arg ","val [] "," arg_blk_pass "," call_args "]}," Ruby22Parser _reduce_266":{"type":"method","name":"_reduce_266","children":[],"call":[" new_masgn_arg ","val [] "," call_args "," warning "," array_to_hash "]}," Ruby22Parser _reduce_265":{"type":"method","name":"_reduce_265","children":[],"call":[" list_append "," s ","val [] "," args "," array_to_hash "," call_args "]}," Ruby22Parser _reduce_264":{"type":"method","name":"_reduce_264","children":[],"call":[" list_append ","val [] "," args "," array_to_hash "," call_args "]}," Ruby22Parser _reduce_263":{"type":"method","name":"_reduce_263","children":[],"call":[" s ","val [] "," args "," call_args "," warning "]}," Ruby22Parser _reduce_262":{"type":"method","name":"_reduce_262","children":[],"call":[" s ","val [] "," args "," array_to_hash "]}," Ruby22Parser _reduce_260":{"type":"method","name":"_reduce_260","children":[],"call":["val [] "," args "]}," Ruby22Parser _reduce_259":{"type":"method","name":"_reduce_259","children":[],"call":[" s ","val [] "]}," Ruby22Parser _reduce_258":{"type":"method","name":"_reduce_258","children":[],"call":["val [] "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "]}," Ruby22Parser _reduce_257":{"type":"method","name":"_reduce_257","children":[],"call":[" lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg stack dup "," lexer cmdarg stack "," new_rescue "," new_resbody "," s "," remove_begin "," value_expr "," s line "," new_ remove_begin  "," new_res value_expr  "]}," Ruby22Parser _reduce_256":{"type":"method","name":"_reduce_256","children":[],"call":[" call_args "]}," Ruby22Parser _reduce_255":{"type":"method","name":"_reduce_255","children":[],"call":[" arg_blk_pass ","val [] "," call_args "," array_to_hash "," args ","result line_max= "," arg_blk_pass  line_max= "," call_args  line_max= "," args  line_max= "]}," Ruby22Parser _reduce_254":{"type":"method","name":"_reduce_254","children":[],"call":[" arg_blk_pass ","val [] "," call_args "," array_to_hash "," args "," new_rescue "," new_resbody "," s line "," s "," remove_begin "," value_expr "," new_ remove_begin  "," new_res value_expr  "]}," Ruby22Parser _reduce_253":{"type":"method","name":"_reduce_253","children":[],"call":[" arg_blk_pass ","val [] "," call_args "," args "]}," Ruby22Parser _reduce_252":{"type":"method","name":"_reduce_252","children":[],"call":[" call_args "," warning "," args "," array_to_hash ","val [] "]}," Ruby22Parser _reduce_251":{"type":"method","name":"_reduce_251","children":[],"call":[" args "," array_to_hash ","val [] "," value_expr "]}," Ruby22Parser _reduce_250":{"type":"method","name":"_reduce_250","children":[],"call":[" args "," array_to_hash ","val [] "," new_call "," argl ","op to_sym "," warn "]}," Ruby22Parser _reduce_249":{"type":"method","name":"_reduce_249","children":[],"call":[" args "," new_call "," argl ","op to_sym "]}," Ruby22Parser _reduce_248":{"type":"method","name":"_reduce_248","children":[],"call":["val [] "," value_expr "]}," Ruby22Parser _reduce_247":{"type":"method","name":"_reduce_247","children":[],"call":["val [] "," new_call "," argl ","op to_sym "," warn "]}," Ruby22Parser _reduce_244":{"type":"method","name":"_reduce_244","children":[],"call":["val [] "]}," Ruby22Parser _reduce_243":{"type":"method","name":"_reduce_243","children":[],"call":[" args "," array_to_hash ","val [] "," s "," s line ","c line "]}," Ruby22Parser _reduce_242":{"type":"method","name":"_reduce_242","children":[],"call":[" args "," array_to_hash ","val [] "," s "," s line "]}," Ruby22Parser _reduce_241":{"type":"method","name":"_reduce_241","children":[],"call":[" args ","val [] "," logical_op "]}," Ruby22Parser _reduce_239":{"type":"method","name":"_reduce_239","children":[],"call":[" value_expr ","val [] "," new_call "," argl ","val []= "," s line "," s "]}," Ruby22Parser _reduce_237":{"type":"method","name":"_reduce_237","children":[],"call":[" s ","val [] "," new_call "," value_expr "," logical_op "]}," Ruby22Parser _reduce_236":{"type":"method","name":"_reduce_236","children":[],"call":[" s ","val [] "," new_call ","result line ","arg line "," argl ","val []= "," value_expr "," s  line "," new_call  line "]}," Ruby22Parser _reduce_235":{"type":"method","name":"_reduce_235","children":[],"call":[" logical_op ","val [] "," s "," new_match "," s line ","lhs line "," new_call "," argl ","val []= "," value_expr "," logop "]}," Ruby22Parser _reduce_234":{"type":"method","name":"_reduce_234","children":[],"call":[" logical_op ","val [] "," new_match "," new_call "," value_expr "," logop "]}," Ruby22Parser _reduce_233":{"type":"method","name":"_reduce_233","children":[],"call":[" new_call "," argl ","val [] ","val []= "," value_expr ","result line ","arg line "," new_call  line "]}," Ruby22Parser _reduce_232":{"type":"method","name":"_reduce_232","children":[],"call":[" new_call "," argl ","val [] ","val []= "," value_expr "," s line ","lhs line "," s "," new_match "]}," Ruby22Parser _reduce_231":{"type":"method","name":"_reduce_231","children":[],"call":[" new_call "," value_expr ","val [] "," argl "," new_match "]}," Ruby22Parser _reduce_230":{"type":"method","name":"_reduce_230","children":[],"call":[" new_call ","val [] "," argl "]}," Ruby22Parser _reduce_229":{"type":"method","name":"_reduce_229","children":[],"call":[" s "," new_match ","val [] "," new_call "," argl "," get_match_node "]}," Ruby22Parser _reduce_228":{"type":"method","name":"_reduce_228","children":[],"call":[" new_match ","val [] "," new_call "," argl "," get_match_node "]}," Ruby22Parser _reduce_227":{"type":"method","name":"_reduce_227","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby22Parser _reduce_226":{"type":"method","name":"_reduce_226","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby22Parser _reduce_225":{"type":"method","name":"_reduce_225","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby22Parser _reduce_224":{"type":"method","name":"_reduce_224","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby22Parser _reduce_223":{"type":"method","name":"_reduce_223","children":[],"call":[" new_call "," argl ","val [] "," s "," s line "," lexer lineno "," lexer "]}," Ruby22Parser _reduce_222":{"type":"method","name":"_reduce_222","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby22Parser _reduce_221":{"type":"method","name":"_reduce_221","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby22Parser _reduce_220":{"type":"method","name":"_reduce_220","children":[],"call":[" new_call "," argl ","val [] "," s line "," s "]}," Ruby22Parser _reduce_219":{"type":"method","name":"_reduce_219","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby22Parser _reduce_218":{"type":"method","name":"_reduce_218","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby22Parser _reduce_217":{"type":"method","name":"_reduce_217","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby22Parser _reduce_216":{"type":"method","name":"_reduce_216","children":[],"call":[" new_call ","val [] "," s ","v2 last ","v1 last ","Integer  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type "," s line ","v1 line "," argl "]}," Ruby22Parser _reduce_215":{"type":"method","name":"_reduce_215","children":[],"call":[" new_call ","val [] "," s ","v2 last ","v1 last ","Integer  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type "," s line ","v1 line "," argl "]}," Ruby22Parser _reduce_214":{"type":"method","name":"_reduce_214","children":[],"call":[" new_call "," argl ","val [] "," s "," backref_assign_error "," new_op_asgn "," new_op_ new_op_asgn  "]}," Ruby22Parser _reduce_213":{"type":"method","name":"_reduce_213","children":[],"call":[" new_call "," argl ","val [] "," raise ","not yet: %p % "," new_const_op_asgn "," s line "," s ","lhs to_sym ","v1 line ","v2 last ","v1 last ","Integer  === ","v2 sexp_type == ","v2 sexp_type ","v1 sexp_type == ","v1 sexp_type "," s line  to_sym "]}," Ruby22Parser _reduce_212":{"type":"method","name":"_reduce_212","children":[],"call":[" new_call "," argl ","val [] "," raise ","not yet: %p % "," lexer lineno "," lexer "," s line ","v1 line "," s ","v2 last ","v1 last ","Integer  === ","v2 sexp_type == ","v2 sexp_type ","v1 sexp_type == ","v1 sexp_type "]}," Ruby22Parser _reduce_211":{"type":"method","name":"_reduce_211","children":[],"call":[" new_call "," argl ","val [] "," s ","val [] to_sym "," new_const_op_asgn "," s line ","lhs1 line ","lhs2 to_sym "," backref_assign_error "," new_op_asgn "," new_const_op_ new_op_asgn  "," s line 1 line "," s line 2 to_sym "," new_op_ new_op_asgn  "]}," Ruby22Parser _reduce_210":{"type":"method","name":"_reduce_210","children":[],"call":[" new_call "," argl ","val [] "," new_op_asgn2 "," s ","val [] to_sym "," s line ","lhs line ","op to_sym ","id to_sym "," new_const_op_asgn ","lhs to_sym "," wrap "," s line  line "," wrap  line "," s line  to_sym "," wrap  to_sym "]}," Ruby22Parser _reduce_209":{"type":"method","name":"_reduce_209","children":[],"call":[" new_call "," argl ","val [] "," new_op_asgn2 "," new_const_op_asgn "," s line ","lhs1 line "," s ","lhs2 to_sym "," s line 1 line "," s line 2 to_sym "]}," Ruby22Parser _reduce_208":{"type":"method","name":"_reduce_208","children":[],"call":[" new_call "," argl ","val [] "," s ","val [] to_sym ","val [] sexp_type= "," new_op_asgn2 "," s line ","lhs line ","op to_sym ","id to_sym "]}," Ruby22Parser _reduce_207":{"type":"method","name":"_reduce_207","children":[],"call":[" s ","v2 last ","v1 last ","Integer  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type ","val [] "," new_op_asgn ","val [] to_sym ","val [] sexp_type= "," new_op_asgn1 "," new_op_asgn2 ","Fixnum  === "]}," Ruby22Parser _reduce_206":{"type":"method","name":"_reduce_206","children":[],"call":[" s ","v2 last ","v1 last ","Integer  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type ","val [] "," new_assign "," new_op_asgn "," new_op_asgn2 ","Fixnum  === "]}," Ruby22Parser _reduce_205":{"type":"method","name":"_reduce_205","children":[],"call":[" backref_assign_error ","val [] "," new_assign "," new_op_asgn1 "]}," Ruby22Parser _reduce_204":{"type":"method","name":"_reduce_204","children":[],"call":[" yyerror "," new_op_asgn "]}," Ruby22Parser _reduce_203":{"type":"method","name":"_reduce_203","children":[],"call":[" yyerror "," new_assign ","val [] "]}," Ruby22Parser _reduce_202":{"type":"method","name":"_reduce_202","children":[],"call":[" s ","val [] to_sym ","val [] "]}," Ruby22Parser _reduce_201":{"type":"method","name":"_reduce_201","children":[],"call":[" new_op_asgn2 "," s ","val [] ","val [] to_sym "]}," Ruby22Parser _reduce_200":{"type":"method","name":"_reduce_200","children":[],"call":[" new_op_asgn2 "," s ","val [] ","val [] to_sym "]}," Ruby22Parser _reduce_199":{"type":"method","name":"_reduce_199","children":[],"call":[" s ","val [] ","val [] to_sym ","val [] sexp_type= ","val [] []= "]}," Ruby22Parser _reduce_198":{"type":"method","name":"_reduce_198","children":[],"call":[" s "," new_resbody ","val [] "," new_op_asgn "]}," Ruby22Parser _reduce_197":{"type":"method","name":"_reduce_197","children":[],"call":[" new_op_asgn "]}," Ruby22Parser _reduce_196":{"type":"method","name":"_reduce_196","children":[],"call":[" new_assign "," s "," new_resbody ","val [] "," node_assign "]}," Ruby22Parser _reduce_195":{"type":"method","name":"_reduce_195","children":[],"call":[" new_assign ","val [] "," node_assign "]}," Ruby22Parser _reduce_123":{"type":"method","name":"_reduce_123","children":[],"call":[" new_undef ","val [] "]}," Ruby22Parser _reduce_122":{"type":"method","name":"_reduce_122","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby22Parser _reduce_121":{"type":"method","name":"_reduce_121","children":[],"call":[" new_undef ","val [] "," s ","val [] to_sym ","result line ","pval line ","name to_sym "," new_undef  line "," s  line "]}," Ruby22Parser _reduce_119":{"type":"method","name":"_reduce_119","children":[],"call":[" s ","val [] to_sym ","val [] "," s line ","name to_sym "," wrap "]}," Ruby22Parser _reduce_116":{"type":"method","name":"_reduce_116","children":[],"call":["val [] "," lexer lex_state= "," lexer "," backref_assign_error "," yyerror "]}," Ruby22Parser _reduce_115":{"type":"method","name":"_reduce_115","children":[],"call":["val [] "," lexer lex_state= "," lexer "," s ","val [] to_sym "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," backref_assign_error "," s line ","id to_sym "," debug "]}," Ruby22Parser _reduce_111":{"type":"method","name":"_reduce_111","children":[],"call":[" s ","val [] to_sym ","val [] "," new_attrasgn "]}," Ruby22Parser _reduce_110":{"type":"method","name":"_reduce_110","children":[],"call":["val [] to_sym ","val [] "," aryset "," new_attrasgn "]}," Ruby22Parser _reduce_109":{"type":"method","name":"_reduce_109","children":[],"call":[" s ","val [] to_sym ","val [] "," debug20 "," assignable "," aryset "," debug "]}," Ruby22Parser _reduce_107":{"type":"method","name":"_reduce_107","children":[],"call":[" yyerror "," backref_assign_error ","val [] "," assignable ","result line= "," lexer lineno "," lexer "," assignable  line= ","result  lexer lineno = "," lexer  lexer lineno no "]}," Ruby22Parser _reduce_106":{"type":"method","name":"_reduce_106","children":[],"call":[" backref_assign_error ","val [] "," s ","val [] to_sym "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," s line ","id to_sym "," debug "]}," Ruby22Parser _reduce_105":{"type":"method","name":"_reduce_105","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," s line ","id to_sym "," lexer lineno "," lexer ","expr line "," debug ","va lexer lineno  [] to_sym ","vaexpr line  [] to_sym ","va lexer lineno  [] ","vaexpr line  [] "," in_sing lexer lineno e > "," in_singexpr line e > "," in_sing lexer lineno e "," in_singexpr line e "," s  lexer lineno ine "," s expr line ine ","  lexer lineno exer  lexer lineno ineno "," expr line exer expr line ineno ","  lexer lineno exer "," expr line exer ","expr  lexer lineno ine ","expr expr line ine "]}," Ruby22Parser _reduce_104":{"type":"method","name":"_reduce_104","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," new_attrasgn "," s line ","id to_sym ","expr line ","vaexpr line  [] to_sym ","vaexpr line  [] "," in_singexpr line e > "," in_singexpr line e "," s expr line ine ","expr expr line ine "]}," Ruby22Parser _reduce_103":{"type":"method","name":"_reduce_103","children":[],"call":[" new_attrasgn ","val [] "," s "]}," Ruby22Parser _reduce_102":{"type":"method","name":"_reduce_102","children":[],"call":[" s ","val [] "," new_attrasgn "]}," Ruby22Parser _reduce_101":{"type":"method","name":"_reduce_101","children":[],"call":[" new_attrasgn ","val [] "," aryset "," s "]}," Ruby22Parser _reduce_100":{"type":"method","name":"_reduce_100","children":[],"call":[" aryset ","val [] "," assignable "]}," Ruby22Parser _reduce_99":{"type":"method","name":"_reduce_99","children":[],"call":[" debug20 "," assignable ","val [] "]}," Ruby22Parser _reduce_98":{"type":"method","name":"_reduce_98","children":[],"call":[" assignable ","val [] "," list_append "]}," Ruby22Parser _reduce_97":{"type":"method","name":"_reduce_97","children":[],"call":[" backref_assign_error ","val [] "," s "," list_append "," s line ","item line "]}," Ruby22Parser _reduce_96":{"type":"method","name":"_reduce_96","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," debug20 "," in_single > "," in_single "," in_def ","val [] << ","val [] compact "," s line ","item line "]}," Ruby22Parser _reduce_95":{"type":"method","name":"_reduce_95","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," debug20 "," in_single > "," in_single "," in_def ","val [] << ","val [] compact "," s line ","lhs line "]}," Ruby22Parser _reduce_94":{"type":"method","name":"_reduce_94","children":[],"call":[" new_attrasgn ","val [] "," s "," s line ","lhs line "]}," Ruby22Parser _reduce_93":{"type":"method","name":"_reduce_93","children":[],"call":[" s ","val [] "]}," Ruby22Parser _reduce_92":{"type":"method","name":"_reduce_92","children":[],"call":[" new_attrasgn ","val [] "," s ","val [] sexp_body "," s line ","post sexp_body ","post line ","vapost line  [] ","vapost line  [] sexp_body "," s post line ine ","post post line ine "]}," Ruby22Parser _reduce_91":{"type":"method","name":"_reduce_91","children":[],"call":[" aryset ","val [] "," s ","val [] sexp_body "," s line ","post sexp_body ","post line "," lexer lineno "," lexer ","  s line set ","vapost line  [] ","va lexer lineno  [] ","vapost line  [] sexp_body ","va lexer lineno  [] sexp_body "," s post line ine "," s  lexer lineno ine ","post post line ine ","post  lexer lineno ine "," post line exer post line ineno ","  lexer lineno exer  lexer lineno ineno "," post line exer ","  lexer lineno exer "]}," Ruby22Parser _reduce_90":{"type":"method","name":"_reduce_90","children":[],"call":[" assignable ","val [] "," s ","ary concat ","val [] sexp_body "," s line "," lexer lineno "," lexer ","ary line ","post sexp_body ","splat line ","node line "," assignab lexer lineno e ","va lexer lineno  [] "," s  concat "," s line  concat ","va lexer lineno  [] sexp_body "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "," s  line "," s line  line ","ary  lexer lineno ine ","sp lexer lineno at  lexer lineno ine ","node  lexer lineno ine "]}," Ruby22Parser _reduce_89":{"type":"method","name":"_reduce_89","children":[],"call":[" assignable ","val [] "," s ","ary concat ","val [] sexp_body "," s line ","ary line ","post sexp_body ","splat line ","node line "," assignabnode line e ","vanode line  [] "," s  concat "," s line  concat ","vanode line  [] sexp_body "," s node line ine "," s  line "," s line  line ","ary node line ine ","spnode line at node line ine ","node node line ine "]}," Ruby22Parser _reduce_88":{"type":"method","name":"_reduce_88","children":[],"call":[" list_append ","val [] "," s ","ary concat ","val [] sexp_body "," s line ","node line ","ary line ","post sexp_body ","head line "," node line ist_append ","vanode line  [] "," list_append  concat "," s line  concat ","vanode line  [] sexp_body "," s node line ine ","node node line ine "," list_append  line "," s line  line ","ary node line ine ","head node line ine "]}," Ruby22Parser _reduce_87":{"type":"method","name":"_reduce_87","children":[],"call":[" s ","val [] ","val [] << ","ary concat ","val [] sexp_body "," list_append "," s line ","ary line ","post sexp_body ","head line ","head << ","vahead line  [] ","vahead line  [] << "," list_append  concat ","vahead line  [] sexp_body "," head line ist_append "," s head line ine "," list_append  line ","ary head line ine ","head head line ine "]}," Ruby22Parser _reduce_86":{"type":"method","name":"_reduce_86","children":[],"call":["val [] << ","val [] compact ","val [] "," s ","result concat ","ary2 sexp_body "," list_append "," s line ","head << ","head line ","result line ","splat line ","vahead line  [] << ","vahead line  [] compact ","vahead line  [] ","val [] <<  concat "," s  concat "," list_append  concat "," s line  concat ","resuhead line t concat "," head line ist_append "," s head line ine ","head head line ine ","val [] <<  line "," s  line "," list_append  line "," s line  line ","resuhead line t head line ine ","sphead line at head line ine "]}," Ruby22Parser _reduce_85":{"type":"method","name":"_reduce_85","children":[],"call":[" s ","val [] ","val [] << ","result concat ","ary2 sexp_body "," list_append "," s line ","result line ","splat line ","head line ","head << ","tail line "," s  concat "," list_append  concat "," s line  concat "," s  line "," list_append  line "," s line  line "]}," Ruby22Parser _reduce_84":{"type":"method","name":"_reduce_84","children":[],"call":["val [] "," s ","val [] << ","val [] compact "," s line ","head line ","head << ","tail line ","lhs line ","lhs << ","rhs compact "]}," Ruby22Parser _reduce_82":{"type":"method","name":"_reduce_82","children":[],"call":[" s ","val [] sexp_body ","val [] "," s line ","head line ","arg line ","val [] [] ","vaarg line  [] sexp_body ","vaarg line  [] "," s arg line ine ","head arg line ine ","arg arg line ine ","vaarg line  [] [] "]}," Ruby22Parser _reduce_81":{"type":"method","name":"_reduce_81","children":[],"call":[" s ","val [] "," s line ","arg line ","vaarg line  [] "," s arg line ine ","arg arg line ine "]}," Ruby22Parser _reduce_80":{"type":"method","name":"_reduce_80","children":[],"call":[" s ","ary concat ","val [] sexp_body ","val [] ","val [] [] "," s  concat "]}," Ruby22Parser _reduce_79":{"type":"method","name":"_reduce_79","children":[],"call":[" s ","val [] "]}," Ruby22Parser _reduce_78":{"type":"method","name":"_reduce_78","children":[],"call":[" s ","ary concat ","val [] sexp_body ","val [] "," list_append "," s line "," ret_args ","val [] last ","val [] [] "," list_append  concat "," s val [] last  "]}," Ruby22Parser _reduce_77":{"type":"method","name":"_reduce_77","children":[],"call":[" s ","val [] << ","val [] "," s line "," ret_args ","val [] last "," s val [] last  "]}," Ruby22Parser _reduce_76":{"type":"method","name":"_reduce_76","children":[],"call":[" s ","result concat ","ary2 sexp_body "," list_append "," s line "," ret_args ","val [] ","val [] last ","ary2 [] "," s  concat "," list_append  concat "," s line  concat "," s val [] last  "]}," Ruby22Parser _reduce_75":{"type":"method","name":"_reduce_75","children":[],"call":[" s ","val [] << ","val [] "," new_yield "," s line "," ret_args ","val [] last ","result line "," s val [] last  "," s  line "," new_yield  line "," s line  line ","result val [] last  "]}," Ruby22Parser _reduce_74":{"type":"method","name":"_reduce_74","children":[],"call":[" s ","val [] << ","val [] compact ","val [] "," new_super "," new_yield ","result line "," s  line "," new_super  line "," new_yield  line "]}," Ruby22Parser _reduce_73":{"type":"method","name":"_reduce_73","children":[],"call":[" s ","val [] ","block insert "," block_dup_check "," new_call ","msg to_sym "," new_super "," new_ new_call  "]}," Ruby22Parser _reduce_72":{"type":"method","name":"_reduce_72","children":[],"call":[" s ","val [] "," new_call ","val [] to_sym ","block insert "," block_dup_check ","msg to_sym ","result line ","id to_sym "," new_ new_call  "," s  line "," new_call  line "]}," Ruby22Parser _reduce_70":{"type":"method","name":"_reduce_70","children":[],"call":["val [] "," new_call ","val [] to_sym ","block insert "," block_dup_check ","msg to_sym ","result line ","lhs line ","op to_sym "," new_ new_call  ","val []  line "," new_call  line "]}," Ruby22Parser _reduce_68":{"type":"method","name":"_reduce_68","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last ","val [] concat ","val [] sexp_body ","result insert "," block_dup_check ","call concat ","args sexp_body "," s val [] last  "," s line  insert ","val [] concat  insert ","call concat  insert "]}," Ruby22Parser _reduce_67":{"type":"method","name":"_reduce_67","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last "," new_call ","val [] to_sym ","val [] concat ","val [] sexp_body ","call concat ","args sexp_body "," new_call line ","msg to_sym "," s val [] last  "," new_call val [] last  "]}," Ruby22Parser _reduce_66":{"type":"method","name":"_reduce_66","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last ","result line= "," new_call ","val [] to_sym "," new_call line "," lexer lineno "," lexer ","msg to_sym ","result line "," s val [] last  "," s line  line= "," new_call  line= "," new_call line  line= ","result val [] last = "," new_call val [] last  "," lexer val [] last no "," s line  line "," new_call  line "," new_call line  line ","result val [] last  "]}," Ruby22Parser _reduce_65":{"type":"method","name":"_reduce_65","children":[],"call":[" new_yield ","val [] "," lexer lineno "," lexer ","result line= "," new_yield  line= "," lexer lineno  line= "]}," Ruby22Parser _reduce_64":{"type":"method","name":"_reduce_64","children":[],"call":[" new_super ","val [] "," new_call ","val [] to_sym "," lexer lineno "," lexer "," new_call line ","blk line ","msg to_sym "]}," Ruby22Parser _reduce_63":{"type":"method","name":"_reduce_63","children":[],"call":["block insert "," block_dup_check "," new_call ","msg to_sym ","val [] ","val [] to_sym "," new_call line ","blk line "," new_ new_call  "," new_ new_call  line "]}," Ruby22Parser _reduce_62":{"type":"method","name":"_reduce_62","children":[],"call":[" new_call ","val [] ","val [] to_sym "]}," Ruby22Parser _reduce_61":{"type":"method","name":"_reduce_61","children":[],"call":["block insert "," block_dup_check "," new_call ","val [] ","msg to_sym "," new_ new_call  "]}," Ruby22Parser _reduce_60":{"type":"method","name":"_reduce_60","children":[],"call":[" new_call ","val [] ","val [] to_sym "]}," Ruby22Parser _reduce_59":{"type":"method","name":"_reduce_59","children":[],"call":["result insert ","val [] "," block_dup_check ","val [] concat ","val [] sexp_body "," lexer cond pop "," lexer cond "," lexer ","val [] [] ","val [] concat  insert "]}," Ruby22Parser _reduce_58":{"type":"method","name":"_reduce_58","children":[],"call":["val [] concat ","val [] sexp_body ","val [] "," lexer cond push "," lexer cond "," lexer "," lexer cond pop ","val [] [] "]}," Ruby22Parser _reduce_57":{"type":"method","name":"_reduce_57","children":[],"call":[" new_call ","val [] to_sym ","val [] "," value_expr "," lexer cond push "," lexer cond "," lexer "]}," Ruby22Parser _reduce_56":{"type":"method","name":"_reduce_56","children":[],"call":[" env unextend "," env ","result line= ","val [] "," new_iter "," value_expr "," new_iter  line= "," value_expr  line= "]}," Ruby22Parser _reduce_55":{"type":"method","name":"_reduce_55","children":[],"call":[" s ","val [] "," new_call line ","cmd line "," new_call "]}," Ruby22Parser _reduce_54":{"type":"method","name":"_reduce_54","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," s ","val [] "," new_call line ","cmd line "," new_call "]}," Ruby22Parser _reduce_53":{"type":"method","name":"_reduce_53","children":[],"call":[" new_call ","val [] ","val [] to_sym "," logical_op "," s "," new_call line "]}," Ruby22Parser _reduce_49":{"type":"method","name":"_reduce_49","children":[],"call":[" value_expr ","val [] "," new_rescue "," new_resbody "," s "," value_ value_expr  "]}," Ruby22Parser _reduce_47":{"type":"method","name":"_reduce_47","children":[],"call":[" s ","val [] "," backref_assign_error "," s line ","id to_sym ","lhs2 to_sym "]}," Ruby22Parser _reduce_46":{"type":"method","name":"_reduce_46","children":[],"call":[" s ","val [] "," debug20 ","op to_sym ","lhs2 to_sym "," s line ","id to_sym "]}," Ruby22Parser _reduce_45":{"type":"method","name":"_reduce_45","children":[],"call":[" logical_op ","val [] "," debug20 "," s ","op to_sym ","lhs2 to_sym ","result line ","prim line ","result sexp_type= ","call_op == ","op_asgn to_sym ","id to_sym "," logop "," logical_op  line "," s  line "," logop  line "," logical_op  sexp_type= "," s  sexp_type= "," logop  sexp_type= "]}," Ruby22Parser _reduce_44":{"type":"method","name":"_reduce_44","children":[],"call":[" logical_op ","val [] ","result line= ","val [] line ","result sexp_type= ","val [] == "," s ","val [] to_sym ","result line ","prim line ","call_op == ","op_asgn to_sym ","id to_sym "," logop "," logical_op  line= "," s  line= "," logop  line= "," logical_op  sexp_type= "," s  sexp_type= "," logop  sexp_type= "," logical_op  line "," s  line "," logop  line "]}," Ruby22Parser _reduce_42":{"type":"method","name":"_reduce_42","children":[],"call":[" new_assign ","val [] "," s ","val [] to_sym "," new_op_asgn1 "," new_op_asgn "," node_assign "]}," Ruby22Parser _reduce_41":{"type":"method","name":"_reduce_41","children":[],"call":[" new_assign ","val [] "," new_op_asgn "," node_assign "]}," Ruby22Parser _reduce_39":{"type":"method","name":"_reduce_39","children":[],"call":[" new_masgn ","val [] "]}," Ruby22Parser _reduce_38":{"type":"method","name":"_reduce_38","children":[],"call":[" new_assign "," s ","val [] "," new_masgn "," s line ","rhs line "," node_assign "]}," Ruby22Parser _reduce_37":{"type":"method","name":"_reduce_37","children":[],"call":[" backref_assign_error ","val [] "," new_assign "," s "," s line ","rhs line "," new_masgn "]}," Ruby22Parser _reduce_36":{"type":"method","name":"_reduce_36","children":[],"call":[" debug20 "," s ","val [] "," new_masgn "]}," Ruby22Parser _reduce_35":{"type":"method","name":"_reduce_35","children":[],"call":[" debug20 "," s ","val [] "," new_iter "," s line "," yyerror "," debug "," in_single > "," in_single "," in_def "]}," Ruby22Parser _reduce_34":{"type":"method","name":"_reduce_34","children":[],"call":["result line= ","val [] line ","val [] ","result sexp_type= ","val [] == "," s ","val [] to_sym "," new_iter "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," s line "," new_rescue "," new_resbody ","resbody line ","result []= "," s  line= "," new_iter  line= "," new_rescue  line= "," s  sexp_type= "," new_iter  sexp_type= "," new_rescue  sexp_type= "," new_ new_resbody  "," new_resbody  line "," s  []= "," new_iter  []= "," new_rescue  []= "]}," Ruby22Parser _reduce_33":{"type":"method","name":"_reduce_33","children":[],"call":["result line= ","val [] line ","val [] ","result sexp_type= ","val [] == "," s ","val [] to_sym "," new_rescue "," new_resbody "," s line ","resbody line "," new_until ","result []= "," s  line= "," new_rescue  line= "," new_until  line= "," s  sexp_type= "," new_rescue  sexp_type= "," new_until  sexp_type= "," new_ new_resbody  "," new_resbody  line "," s  []= "," new_rescue  []= "," new_until  []= "]}," Ruby22Parser _reduce_32":{"type":"method","name":"_reduce_32","children":[],"call":[" s ","val [] ","val [] to_sym "," new_until "," new_while "]}," Ruby22Parser _reduce_31":{"type":"method","name":"_reduce_31","children":[],"call":[" new_op_asgn "," new_while ","val [] "," new_if "]}," Ruby22Parser _reduce_30":{"type":"method","name":"_reduce_30","children":[],"call":[" new_masgn ","val [] "," new_if "]}," Ruby22Parser _reduce_28":{"type":"method","name":"_reduce_28","children":[],"call":[" new_iter ","val [] "," s "," yyerror "," debug20 "," in_single > "," in_single "," in_def "]}," Ruby22Parser _reduce_27":{"type":"method","name":"_reduce_27","children":[],"call":[" s "," new_resbody ","val [] "," yyerror "," s line ","lhs to_sym "]}," Ruby22Parser _reduce_26":{"type":"method","name":"_reduce_26","children":[],"call":[" new_until ","val [] "," s ","val [] to_sym "," s line ","lhs to_sym ","rhs to_sym "]}," Ruby22Parser _reduce_25":{"type":"method","name":"_reduce_25","children":[],"call":[" new_while ","val [] "," s ","val [] to_sym "," s line ","rhs to_sym ","lhs to_sym "," s line line "]}," Ruby22Parser _reduce_24":{"type":"method","name":"_reduce_24","children":[],"call":[" new_if ","val [] "," s line "," s "," s line line "," lexer lex_state= "," lexer "]}," Ruby22Parser _reduce_23":{"type":"method","name":"_reduce_23","children":[],"call":[" new_if ","val [] "," lexer lineno "," lexer "," lexer lex_state= "]}," Ruby22Parser _reduce_22":{"type":"method","name":"_reduce_22","children":[],"call":["val [] "," yyerror "]}," Ruby22Parser _reduce_21":{"type":"method","name":"_reduce_21","children":[],"call":[" yyerror "," env extend "," env "," debug20 "," in_single > "," in_single "," in_def "]}," Ruby22Parser _reduce_20":{"type":"method","name":"_reduce_20","children":[],"call":[" s ","val [] ","val [] to_sym "," debug20 "," debug "]}," Ruby22Parser _reduce_19":{"type":"method","name":"_reduce_19","children":[],"call":[" s ","val [] to_sym ","val [] "," debug20 "," block_append "]}," Ruby22Parser _reduce_18":{"type":"method","name":"_reduce_18","children":[],"call":[" s line ","val [] "," s "," block_append "]}," Ruby22Parser _reduce_17":{"type":"method","name":"_reduce_17","children":[],"call":[" lexer lineno "," lexer "," lexer lex_state= "]}," Ruby22Parser _reduce_16":{"type":"method","name":"_reduce_16","children":[],"call":[" debug20 ","val [] "," new_compstmt "]}," Ruby22Parser _reduce_15":{"type":"method","name":"_reduce_15","children":[],"call":[" block_append ","val [] "," new_compstmt "," new_body "]}," Ruby22Parser _reduce_12":{"type":"method","name":"_reduce_12","children":[],"call":[" new_compstmt "," yyerror ","_values [] "," new_iter "," s line "," s "]}," Ruby22Parser _reduce_11":{"type":"method","name":"_reduce_11","children":[],"call":[" new_body "," new_iter "," s "," lexer lineno "," lexer "]}," Ruby22Parser _reduce_10":{"type":"method","name":"_reduce_10","children":[],"call":[" new_iter ","val [] "," s ","preexe line ","iter line "]}," Ruby22Parser _reduce_9":{"type":"method","name":"_reduce_9","children":[],"call":[" env extend "," env "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," debug "]}," Ruby22Parser _reduce_8":{"type":"method","name":"_reduce_8","children":[],"call":["val [] "]}," Ruby22Parser _reduce_6":{"type":"method","name":"_reduce_6","children":[],"call":[" block_append ","val [] "]}," Ruby22Parser _reduce_3":{"type":"method","name":"_reduce_3","children":[],"call":["val [] "]}," Ruby22Parser _reduce_2":{"type":"method","name":"_reduce_2","children":[],"call":[" new_compstmt "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer cond pop "," lexer cond "]}," Ruby22Parser _reduce_1":{"type":"method","name":"_reduce_1","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby21Parser _reduce_none":{"type":"method","name":"_reduce_none","children":[],"call":["val [] "]}," Ruby21Parser _reduce_623":{"type":"method","name":"_reduce_623","children":[],"call":[" yyerrok "]}," Ruby21Parser _reduce_622":{"type":"method","name":"_reduce_622","children":[],"call":[" yyerrok "]}," Ruby21Parser _reduce_619":{"type":"method","name":"_reduce_619","children":[],"call":[" yyerrok "," s line "," s ","label to_sym "]}," Ruby21Parser _reduce_596":{"type":"method","name":"_reduce_596","children":[],"call":[" s ","val [] "," block_append "," assignable "," s line ","optblk line ","id to_sym ","val [] [] to_sym ","val [] [] "]}," Ruby21Parser _reduce_595":{"type":"method","name":"_reduce_595","children":[],"call":[" s ","val [] ","val [] [] to_sym ","val [] [] ","val last "," assignable "," s line ","opt line "]}," Ruby21Parser _reduce_594":{"type":"method","name":"_reduce_594","children":[],"call":[" s ","val [] ","result << "," assignable ","val [] to_sym ","result []= ","list push ","more empty? ","val [] [] ","val [] dup ","val [] [] to_sym "," s  << ","val []  << "," assignable  << "," s  []= ","val []  []= "," assignable  []= ","val [] dup  push ","val [] []  empty? "]}," Ruby21Parser _reduce_593":{"type":"method","name":"_reduce_593","children":[],"call":["result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] ","val [] dup "," s "," env []= "," env "," s line ","optblk line "," block_append ","val [] [] to_sym ","val [] [] "," s  sexp_type= "," s line  sexp_type= "," block_append  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "]}," Ruby21Parser _reduce_591":{"type":"method","name":"_reduce_591","children":[],"call":["val [] "," assignable "," args ","result << ","result []= ","list push ","more empty? ","val [] [] ","val [] dup "," s ","val []  << "," assignable  << "," args  << "," s  << ","val []  []= "," assignable  []= "," args  []= "," s  []= ","val [] dup  push ","val [] []  empty? "]}," Ruby21Parser _reduce_590":{"type":"method","name":"_reduce_590","children":[],"call":[" s "," lexer lineno "," lexer "," env []= "," env "," s line ","optblk line "," yyerror ","result [] == ","result [] ","val [] "," s  [] == "," s line  [] == ","val []  [] == "," s  [] "," s line  [] ","val []  [] "]}," Ruby21Parser _reduce_589":{"type":"method","name":"_reduce_589","children":[],"call":[" yyerror ","result sexp_type == ","result sexp_type ","val [] "," assignable ","val [] to_sym ","list << ","item last "," args ","id to_sym "," lexer lex_state= "," lexer "," s ","val []  sexp_type == ","list <<  sexp_type == "," args  sexp_type == "," assignable  sexp_type == "," s  sexp_type == ","val []  sexp_type ","list <<  sexp_type "," args  sexp_type "," assignable  sexp_type "," s  sexp_type "]}," Ruby21Parser _reduce_588":{"type":"method","name":"_reduce_588","children":[],"call":[" lexer lex_state= "," lexer "," assignable "," s "," yyerror ","result [] == ","result [] ","val [] "," assignable  [] == "," s  [] == ","val []  [] == "," assignable  [] "," s  [] ","val []  [] "]}," Ruby21Parser _reduce_586":{"type":"method","name":"_reduce_586","children":[],"call":[" args "," s line "," s "," env []= "," env ","label to_sym "," assignable ","id to_sym "," lexer lex_state= "," lexer ","val [] ","label to_sym  to_sym "]}," Ruby21Parser _reduce_585":{"type":"method","name":"_reduce_585","children":[],"call":["val [] "," s line "," s "," env []= "," env ","label to_sym ","(str \"&\") to_sym ","val [] to_sym "]}," Ruby21Parser _reduce_584":{"type":"method","name":"_reduce_584","children":[],"call":["(str \"&\") to_sym "," env []= "," env ","val [] to_sym ","val [] ","list << ","item last "," s line "," s ","label to_sym "]}," Ruby21Parser _reduce_581":{"type":"method","name":"_reduce_581","children":[],"call":[" env []= "," env "," s ","val [] ","label to_sym "," raise ","val inspect "," debug20 "," s line "," lexer lineno "," lexer ","list << ","item last "," assignable ","val [] to_sym "]}," Ruby21Parser _reduce_580":{"type":"method","name":"_reduce_580","children":[],"call":[" assignable ","val [] to_sym ","val [] "," s "," env []= "," env ","label to_sym ","result << "," s line ","list line ","list sexp_type == ","list sexp_type "," s  << ","val []  << "," s line  << "]}," Ruby21Parser _reduce_577":{"type":"method","name":"_reduce_577","children":[],"call":[" block_append ","val [] ","result << "," s ","list sexp_type == ","list sexp_type ","item first ","Sexp  === "," s line ","list line ","result line_max= ","item line_max "," env []= "," env ","label to_sym "," block_append  << "," s  << "," s line  << "," block_append  line_max= "," s  line_max= "," s line  line_max= ","result item line_max = ","item item line_max  "]}," Ruby21Parser _reduce_576":{"type":"method","name":"_reduce_576","children":[],"call":[" s ","val [] "," raise ","val inspect "," debug20 ","result << "," yyerror "," env []= "," env ","val [] to_sym "," new_arg "," s line ","label to_sym "," block_append "," s  << ","val []  << "," new_arg  << "," s line  << "," block_append  << "]}," Ruby21Parser _reduce_575":{"type":"method","name":"_reduce_575","children":[],"call":["result << ","val [] "," yyerror "," block_append "," s ","val []  << "," block_append  << "," s  << "]}," Ruby21Parser _reduce_574":{"type":"method","name":"_reduce_574","children":[],"call":[" s ","val [] "," yyerror ","result line_max= ","result << ","item line_max ","Sexp  === "," s line ","list line ","list sexp_type == ","list sexp_type "," assignable "," s  line_max= "," s line  line_max= "," assignable  line_max= ","val []  line_max= ","result item line_max = "," s  << "," s line  << "," assignable  << ","val []  << ","item item line_max  "]}," Ruby21Parser _reduce_573":{"type":"method","name":"_reduce_573","children":[],"call":[" assignable ","val [] "," env []= "," env ","val [] to_sym "," yyerror ","id to_sym "," new_arg ","result << "," s "," assignable  << "," new_arg  << ","val []  << "," s  << "]}," Ruby21Parser _reduce_572":{"type":"method","name":"_reduce_572","children":[],"call":[" assignable ","val [] "," args "," yyerror "," s "," debug20 "]}," Ruby21Parser _reduce_571":{"type":"method","name":"_reduce_571","children":[],"call":[" yyerror "," args "," assignable ","val [] "]}," Ruby21Parser _reduce_570":{"type":"method","name":"_reduce_570","children":[],"call":["val [] "," yyerror "," args "," env []= "," env ","id to_sym "," assignable "]}," Ruby21Parser _reduce_567":{"type":"method","name":"_reduce_567","children":[],"call":[" args "," yyerror "]}," Ruby21Parser _reduce_565":{"type":"method","name":"_reduce_565","children":[],"call":["list << ","item last "," args "," yyerror "]}," Ruby21Parser _reduce_563":{"type":"method","name":"_reduce_563","children":[],"call":[" s "," env []= "," env ","label to_sym ","val [] "," args ","list << ","item last "]}," Ruby21Parser _reduce_562":{"type":"method","name":"_reduce_562","children":[],"call":[" s ","val [] "," env []= "," env ","label to_sym "," args "]}," Ruby21Parser _reduce_561":{"type":"method","name":"_reduce_561","children":[],"call":[" s "," env []= "," env ","label to_sym ","val [] "," args "," raise "]}," Ruby21Parser _reduce_560":{"type":"method","name":"_reduce_560","children":[],"call":[" s ","val [] "," env []= "," env ","label to_sym "," args "]}," Ruby21Parser _reduce_558":{"type":"method","name":"_reduce_558","children":[],"call":["result << "," s ","list sexp_type == ","list sexp_type "," args ","val [] "," env []= "," env ","label to_sym "," raise ","val inspect "," debug20 "," s  << "," args  << ","val []  << "]}," Ruby21Parser _reduce_557":{"type":"method","name":"_reduce_557","children":[],"call":[" raise ","val inspect "," debug20 ","val [] ","result << "," s "," args ","list sexp_type == ","list sexp_type ","val []  << "," s  << "," args  << "]}," Ruby21Parser _reduce_556":{"type":"method","name":"_reduce_556","children":[],"call":["val [] "," args ","result << "," s ","list sexp_type == ","list sexp_type "," raise ","val inspect "," debug20 ","val []  << "," args  << "," s  << "]}," Ruby21Parser _reduce_554":{"type":"method","name":"_reduce_554","children":[],"call":[" env []= "," env ","val [] to_sym ","val [] "," args "]}," Ruby21Parser _reduce_552":{"type":"method","name":"_reduce_552","children":[],"call":[" yyerror "," args "," env []= "," env ","val [] to_sym ","val [] "]}," Ruby21Parser _reduce_551":{"type":"method","name":"_reduce_551","children":[],"call":[" yyerror ","val [] "," lexer command_start= "," lexer "," lexer lex_state= "," in_kwarg= "," args "]}," Ruby21Parser _reduce_550":{"type":"method","name":"_reduce_550","children":[],"call":[" yyerror "," lexer lex_state "," lexer "," in_kwarg= "," in_kwarg "," args "]}," Ruby21Parser _reduce_549":{"type":"method","name":"_reduce_549","children":[],"call":[" yyerror "," args "," lexer command_start= "," lexer "," lexer lex_state= ","val [] "," in_kwarg= "]}," Ruby21Parser _reduce_548":{"type":"method","name":"_reduce_548","children":[],"call":[" args "," lexer lex_state "," lexer "," in_kwarg= "," in_kwarg ","val [] "," yyerror "]}," Ruby21Parser _reduce_547":{"type":"method","name":"_reduce_547","children":[],"call":[" args ","val [] "," lexer command_start= "," lexer "," lexer lex_state= "," yyerror "]}," Ruby21Parser _reduce_546":{"type":"method","name":"_reduce_546","children":[],"call":[" args "," lexer command_start= "," lexer "," lexer lex_state= "," in_kwarg= "," end_args "]}," Ruby21Parser _reduce_545":{"type":"method","name":"_reduce_545","children":[],"call":[" args "," in_kwarg= "," in_kwarg "," lexer lex_state "," lexer "," s line "," lexer lineno "," s ","val [] "]}," Ruby21Parser _reduce_544":{"type":"method","name":"_reduce_544","children":[],"call":[" args "," lexer command_start= "," lexer "," lexer lex_state= ","val [] "," s line "," lexer lineno "," s "," end_args "]}," Ruby21Parser _reduce_543":{"type":"method","name":"_reduce_543","children":[],"call":[" args "," debug20 "," assignable ","val [] "," s line "," lexer lineno "," lexer "," s "," end_args "]}," Ruby21Parser _reduce_542":{"type":"method","name":"_reduce_542","children":[],"call":[" args ","val [] "," assignable "," s line "," lexer lineno "," lexer "," s "," lexer lex_state "," in_kwarg= "," in_kwarg "]}," Ruby21Parser _reduce_541":{"type":"method","name":"_reduce_541","children":[],"call":[" args "," lexer command_start= "," lexer "," lexer lex_state= "," gettable ","Sexp  === ","val [] "," debug20 "," assignable "," end_args "]}," Ruby21Parser _reduce_540":{"type":"method","name":"_reduce_540","children":[],"call":[" args "," s ","val [] "," gettable ","Sexp  === "," assignable "," s line "]}," Ruby21Parser _reduce_539":{"type":"method","name":"_reduce_539","children":[],"call":[" args "," s ","val [] "," s line "," lexer lineno "," lexer "," gettable ","Sexp  === ","va lexer lineno  [] "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "," gettab lexer lineno e "]}," Ruby21Parser _reduce_538":{"type":"method","name":"_reduce_538","children":[],"call":[" args "," debug20 "," assignable ","val [] "," s line "," lexer lineno "," lexer "," s "," gettable ","Sexp  === "," debug "," lexer command_start= "," lexer lex_state= "]}," Ruby21Parser _reduce_537":{"type":"method","name":"_reduce_537","children":[],"call":[" args "," assignable ","val [] "," s line "," lexer lineno "," lexer "," s "," file "," assignab lexer lineno e ","va lexer lineno  [] "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "," fi lexer lineno e "]}," Ruby21Parser _reduce_536":{"type":"method","name":"_reduce_536","children":[],"call":[" args "," gettable ","Sexp  === ","val [] "," s line "," lexer lineno "," lexer "," s "]}," Ruby21Parser _reduce_535":{"type":"method","name":"_reduce_535","children":[],"call":[" args "," gettable ","Sexp  === ","val [] "," s line "," lexer lineno "," lexer "," s "," file ","result line "," raise ","val inspect ","val first "," debug "," assignable "," args  line "," gettable  line "," s line  line "," assignable  line "]}," Ruby21Parser _reduce_534":{"type":"method","name":"_reduce_534","children":[],"call":[" args "," s "," s line "," lexer lineno "," lexer "," assignable ","val [] "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "," assignab lexer lineno e ","va lexer lineno  [] "]}," Ruby21Parser _reduce_533":{"type":"method","name":"_reduce_533","children":[],"call":[" s "," lexer lineno "," lexer "," s line "," gettable ","Sexp  === ","val [] "," args "]}," Ruby21Parser _reduce_532":{"type":"method","name":"_reduce_532","children":[],"call":["val [] "," s "," file "," s line "," lexer lineno "," lexer ","result line "," gettable ","Sexp  === "," raise ","val inspect ","val first "," args ","val []  line "," s  line "," s line  line "," gettable  line "," args  line "]}," Ruby21Parser _reduce_530":{"type":"method","name":"_reduce_530","children":[],"call":[" args "," s "," s line "," lexer lineno "," lexer ","val [] "]}," Ruby21Parser _reduce_529":{"type":"method","name":"_reduce_529","children":[],"call":[" args "," s "," s line "," lexer lineno "," lexer "," file "]}," Ruby21Parser _reduce_528":{"type":"method","name":"_reduce_528","children":[],"call":[" args "," s "," s line "," lexer lineno "," lexer "]}," Ruby21Parser _reduce_527":{"type":"method","name":"_reduce_527","children":[],"call":[" lexer command_start= "," lexer "," lexer lex_state= ","val [] "," s line "," lexer lineno "," s "," args "]}," Ruby21Parser _reduce_526":{"type":"method","name":"_reduce_526","children":[],"call":[" lexer command_start= "," lexer "," lexer lex_state= ","val [] "," s line "," lexer lineno "," s "," args "]}," Ruby21Parser _reduce_525":{"type":"method","name":"_reduce_525","children":[],"call":[" debug20 "," yyerrok "," s line "," lexer lineno "," lexer "," s "," lexer command_start= "," lexer lex_state= ","val [] "]}," Ruby21Parser _reduce_524":{"type":"method","name":"_reduce_524","children":[],"call":["val [] "," lexer command_start= "," lexer "," lexer lex_state= "," debug20 "," yyerrok "]}," Ruby21Parser _reduce_523":{"type":"method","name":"_reduce_523","children":[],"call":[" lexer lex_state= "," lexer ","val [] -@ ","val [] "," debug20 "," yyerrok "]}," Ruby21Parser _reduce_522":{"type":"method","name":"_reduce_522","children":[],"call":["val [] "," lexer lex_state= "," lexer "]}," Ruby21Parser _reduce_521":{"type":"method","name":"_reduce_521","children":[],"call":[" s ","val [] "," debug20 "," s line ","result line ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," lexer lineno "," lexer "," lexer lex_state= ","val [] -@ "," s  line "," s line  line ","val [] -@  line "," s  last to_sym "," s line  last to_sym ","val [] -@  last to_sym "," s  last "," s line  last ","val [] -@  last "," s  sexp_type= "," s line  sexp_type= ","val [] -@  sexp_type= "," s  sexp_type "," s line  sexp_type ","val [] -@  sexp_type "]}," Ruby21Parser _reduce_520":{"type":"method","name":"_reduce_520","children":[],"call":[" s ","val [] "]}," Ruby21Parser _reduce_519":{"type":"method","name":"_reduce_519","children":[],"call":[" debug20 "," assignable ","val [] "," s line ","result line "," s ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," lexer lineno "," lexer "," lexer lex_state= "," assignable  line "," s line  line "," s  line "," assignable  last to_sym "," s line  last to_sym "," s  last to_sym "," assignable  last "," s line  last "," s  last "," assignable  sexp_type= "," s line  sexp_type= "," s  sexp_type= "," assignable  sexp_type "," s line  sexp_type "," s  sexp_type "]}," Ruby21Parser _reduce_518":{"type":"method","name":"_reduce_518","children":[],"call":[" assignable ","val [] ","val [] -@ ","num -@ "," s "," debug20 "]}," Ruby21Parser _reduce_517":{"type":"method","name":"_reduce_517","children":[],"call":[" gettable ","Sexp  === ","val [] "," debug20 "," assignable "]}," Ruby21Parser _reduce_516":{"type":"method","name":"_reduce_516","children":[],"call":[" gettable ","Sexp  === ","val [] "," debug20 "," s ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," lexer lex_state= "," lexer ","val [] to_sym "," debug "," s line ","result line "," lexer lineno "," assignable "," gettable  last to_sym "," s  last to_sym ","val []  last to_sym ","val [] to_sym  last to_sym "," s line  last to_sym "," assignable  last to_sym "," gettable  last "," s  last ","val []  last ","val [] to_sym  last "," s line  last "," assignable  last "," gettable  sexp_type= "," s  sexp_type= ","val []  sexp_type= ","val [] to_sym  sexp_type= "," s line  sexp_type= "," assignable  sexp_type= "," gettable  sexp_type "," s  sexp_type ","val []  sexp_type ","val [] to_sym  sexp_type "," s line  sexp_type "," assignable  sexp_type "," gettable  line "," s  line ","val []  line ","val [] to_sym  line "," s line  line "," assignable  line "]}," Ruby21Parser _reduce_515":{"type":"method","name":"_reduce_515","children":[],"call":[" s ","val [] to_sym ","val [] "," lexer lex_state= "," lexer ","num -@ "," gettable ","Sexp  === "]}," Ruby21Parser _reduce_514":{"type":"method","name":"_reduce_514","children":[],"call":[" s "," lexer lineno "," lexer ","val [] to_sym ","val [] "," gettable ","Sexp  === "]}," Ruby21Parser _reduce_513":{"type":"method","name":"_reduce_513","children":[],"call":[" s "," file "," s line "," lexer lineno "," lexer ","val [] to_sym ","val [] "," lexer lex_state= "," debug ","result line ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," s  line "," s line  line ","val [] to_sym  line "," s  last to_sym "," s line  last to_sym ","val [] to_sym  last to_sym "," s  last "," s line  last ","val [] to_sym  last "," s  sexp_type= "," s line  sexp_type= ","val [] to_sym  sexp_type= "," s  sexp_type "," s line  sexp_type ","val [] to_sym  sexp_type "]}," Ruby21Parser _reduce_512":{"type":"method","name":"_reduce_512","children":[],"call":[" s "," s line "," lexer lineno "," lexer ","val [] to_sym ","val [] "," file "]}," Ruby21Parser _reduce_511":{"type":"method","name":"_reduce_511","children":[],"call":[" s ","val [] to_sym ","val [] "," s line "," lexer lineno "," lexer ","id to_sym "," lexer lex_state= "," wrap "," file "]}," Ruby21Parser _reduce_510":{"type":"method","name":"_reduce_510","children":[],"call":[" s ","val [] to_sym ","val [] "," lexer lex_state= "," lexer "," raise ","stmt inspect "," debug20 "," s line ","stmt sexp_type "," lexer cmdarg restore "," lexer cmdarg "," lexer cond restore "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer lineno ","id to_sym "," wrap "]}," Ruby21Parser _reduce_509":{"type":"method","name":"_reduce_509","children":[],"call":[" s "," lexer lex_state= "," lexer "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer lineno "," lexer lex_state "," lexer cmdarg store "," lexer cmdarg "," lexer cond store "," lexer cond "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "," s line ","val [] to_sym ","val [] "]}," Ruby21Parser _reduce_499":{"type":"method","name":"_reduce_499","children":[],"call":["val [] -@ ","val [] ","val [] dup << "," new_qsym_list_entry ","val [] dup "," literal_concat "," new_string "," lexer lex_state= "," lexer "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," lexer lineno "," lexer lex_state "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "]}," Ruby21Parser _reduce_497":{"type":"method","name":"_reduce_497","children":[],"call":[" debug20 "," s ","result last to_sym ","result last ","result sexp_type= ","result sexp_type ","val [] "," lexer lex_state= "," lexer ","val [] dup << "," new_qword_list_entry ","val [] dup "," new_qsym_list_entry "," lexer lex_strterm= "," lexer lex_strterm ","val [] -@ "," s  last to_sym ","val []  last to_sym ","val [] dup <<  last to_sym "," lexer lex_strterm  last to_sym ","val [] -@  last to_sym "," s  last ","val []  last ","val [] dup <<  last "," lexer lex_strterm  last ","val [] -@  last "," s  sexp_type= ","val []  sexp_type= ","val [] dup <<  sexp_type= "," lexer lex_strterm  sexp_type= ","val [] -@  sexp_type= "," s  sexp_type ","val []  sexp_type ","val [] dup <<  sexp_type "," lexer lex_strterm  sexp_type ","val [] -@  sexp_type "]}," Ruby21Parser _reduce_492":{"type":"method","name":"_reduce_492","children":[],"call":["val [] to_sym ","val [] ","val [] dup << "," new_qword_list_entry ","val [] dup "," s line "," lexer lineno "," lexer "," s "," new_qsym_list_entry "]}," Ruby21Parser _reduce_491":{"type":"method","name":"_reduce_491","children":[],"call":["val [] to_sym ","val [] "," lexer lex_state= "," lexer "," new_qword_list ","list dup << "," new_symbol_list_entry ","list dup "," new_qsym_list "," literal_concat "]}," Ruby21Parser _reduce_489":{"type":"method","name":"_reduce_489","children":[],"call":[" s ","val [] to_sym ","val [] ","list line= ","list dup << "," new_symbol_list_entry ","list dup "," new_qword_list ","val [] dup << "," new_qsym_list_entry ","val [] dup "," lexer lex_state= "," lexer "]}," Ruby21Parser _reduce_488":{"type":"method","name":"_reduce_488","children":[],"call":[" s ","val [] to_sym ","val [] "," lexer lineno "," lexer "," new_symbol_list line "," new_symbol_list ","list line ","result line_max= "," new_qsym_list "," s  line_max= ","val []  line_max= "," lexer lineno  line_max= "," new_symbol_list line  line_max= ","list line  line_max= "," new_qsym_list  line_max= "]}," Ruby21Parser _reduce_487":{"type":"method","name":"_reduce_487","children":[],"call":[" s ","val [] to_sym ","val [] "," s line "," lexer lineno "," lexer ","list line= ","result line_max= ","val [] dup << "," new_qword_list_entry ","val [] dup "," s  line_max= "," s line  line_max= ","val [] dup <<  line_max= "]}," Ruby21Parser _reduce_486":{"type":"method","name":"_reduce_486","children":[],"call":[" raise ","stmt inspect "," debug20 "," s ","stmt sexp_type "," lexer lex_state= "," lexer "," lexer cmdarg restore "," lexer cmdarg "," lexer cond restore "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= ","val [] dup << "," new_symbol_list_entry ","val [] dup ","val [] "," literal_concat "," lexer lineno ","list line ","result line_max= "," new_qword_list ","val [] to_sym "," s  line_max= ","val [] dup <<  line_max= "," literal_concat  line_max= "," lexer lineno  line_max= ","list line  line_max= "," new_qword_list  line_max= "]}," Ruby21Parser _reduce_485":{"type":"method","name":"_reduce_485","children":[],"call":[" lexer lex_state= "," lexer "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer lex_state "," lexer cmdarg store "," lexer cmdarg "," lexer cond store "," lexer cond "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "," new_symbol_list "," s line "," lexer lineno "," s ","result line_max= ","list line ","val [] to_sym ","val [] "," raise ","stmt inspect "," debug20 ","stmt [] "," lexer cmdarg restore "," lexer cond restore "," new_symbol_list  line_max= "," s line  line_max= ","list line  line_max= "," s  line_max= "]}," Ruby21Parser _reduce_484":{"type":"method","name":"_reduce_484","children":[],"call":[" s ","val [] "," lexer lex_strterm= "," lexer ","val [] dup << "," new_word_list_entry ","val [] dup "," literal_concat ","list dup << "," new_symbol_list_entry ","list dup ","result line_max= "," s line "," raise ","stmt inspect "," debug20 ","stmt [] "," lexer cmdarg restore "," lexer cmdarg "," lexer cond restore "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_state= "," lexer lex_state "," lexer cmdarg store "," lexer cond store "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "," s  line_max= ","val []  line_max= ","val [] dup <<  line_max= "," literal_concat  line_max= ","list dup <<  line_max= "," s line  line_max= "]}," Ruby21Parser _reduce_483":{"type":"method","name":"_reduce_483","children":[],"call":[" lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm "," s "," new_word_list "," new_symbol_list ","result line_max= ","list line "," lexer string_nest= "," lexer brace_nest= "," lexer cmdarg store "," lexer cmdarg "," lexer cond store "," lexer cond "," lexer string_nest "," lexer brace_nest "," lexer lex_state ","val [] "," lexer lex_strterm  line_max= "," s  line_max= "," new_word_list  line_max= "," new_symbol_list  line_max= ","list line  line_max= "]}," Ruby21Parser _reduce_482":{"type":"method","name":"_reduce_482","children":[],"call":[" new_string "," literal_concat ","val [] ","val [] dup << "," new_word_list_entry ","val [] dup ","list line ","result line_max= "," s line "," s "," lexer lex_strterm= "," lexer "," lexer lex_state= "," lexer lex_strterm "," new_string  line_max= "," literal_concat  line_max= ","val []  line_max= ","val [] dup <<  line_max= ","list line  line_max= "," s line  line_max= "," s  line_max= "," lexer lex_strterm  line_max= "]}," Ruby21Parser _reduce_481":{"type":"method","name":"_reduce_481","children":[],"call":[" literal_concat ","val [] "," s line "," lexer lineno "," lexer "," s "," new_word_list ","result line_max= ","list dup << "," new_symbol_list_entry ","list dup "," lexer lex_state= "," lexer lex_strterm= "," lexer lex_strterm "," new_string "," literal_concat  line_max= "," s line  line_max= "," new_word_list  line_max= ","list dup <<  line_max= "," lexer lex_strterm  line_max= "," new_string  line_max= "]}," Ruby21Parser _reduce_480":{"type":"method","name":"_reduce_480","children":[],"call":["val [] dup << "," new_word_list_entry ","val [] dup ","val [] "," new_regexp "," literal_concat "," new_symbol_list "," s "," new_string "]}," Ruby21Parser _reduce_479":{"type":"method","name":"_reduce_479","children":[],"call":[" literal_concat ","val [] "," new_word_list "," new_xstring "," s line "," lexer lineno "," lexer "," s ","result line_max= ","list line "," literal_concat  line_max= "," new_word_list  line_max= "," new_xstring  line_max= "," s line  line_max= ","list line  line_max= "]}," Ruby21Parser _reduce_478":{"type":"method","name":"_reduce_478","children":[],"call":["val [] "," new_string "," new_regexp ","val [] dup << "," new_word_list_entry ","val [] dup ","result line_max= "," s line "," s "," literal_concat ","val []  line_max= "," new_string  line_max= "," new_regexp  line_max= ","val [] dup <<  line_max= "," s line  line_max= "," literal_concat  line_max= "]}," Ruby21Parser _reduce_477":{"type":"method","name":"_reduce_477","children":[],"call":[" literal_concat ","val [] "," s "," dedent ","func =~ "," new_xstring "," new_word_list "," new_x dedent ing "]}," Ruby21Parser _reduce_476":{"type":"method","name":"_reduce_476","children":[],"call":[" s "," new_regexp "," literal_concat ","val [] "," new_string ","list line ","result line_max= "," s  line_max= "," new_regexp  line_max= "," literal_concat  line_max= "," new_string  line_max= ","list line  line_max= "]}," Ruby21Parser _reduce_475":{"type":"method","name":"_reduce_475","children":[],"call":["val [] dup << "," new_qsym_list_entry ","val [] dup ","val [] "," new_xstring "," dedent ","func =~ "," s line "," s ","result line_max= "," new_word_list_entry "," literal_concat "," new_x dedent ing ","val [] dup <<  line_max= "," new_xstring  line_max= "," s line  line_max= "," literal_concat  line_max= "," s  line_max= "]}," Ruby21Parser _reduce_474":{"type":"method","name":"_reduce_474","children":[],"call":[" new_qsym_list "," new_string "," debug20 "," literal_concat ","val [] "," new_regexp "," new_word_list "," s ","val [] dup << "," new_qsym_list_entry ","val [] dup "]}," Ruby21Parser _reduce_473":{"type":"method","name":"_reduce_473","children":[],"call":["val [] dup << "," new_qword_list_entry ","val [] dup ","val [] "," s ","str value ","str sexp_type == ","str sexp_type "," new_xstring ","result line_max= ","list line ","val [] to_sym "," new_qsym_list_entry "," new_qsym_list "," s  value "," s  sexp_type == "," s  sexp_type "," new_x s ing ","val [] dup <<  line_max= ","val []  line_max= "," new_xstring  line_max= ","list line  line_max= "," new_qsym_list  line_max= "]}," Ruby21Parser _reduce_472":{"type":"method","name":"_reduce_472","children":[],"call":[" new_qword_list "," literal_concat ","val [] "," debug20 "," new_string ","result line_max= "," s line "," s "," new_qsym_list ","val [] dup << "," new_qword_list_entry ","val [] dup "," new_qword_list  line_max= "," literal_concat  line_max= "," new_string  line_max= "," s line  line_max= "," s  line_max= "," new_qsym_list  line_max= ","val [] dup <<  line_max= "]}," Ruby21Parser _reduce_471":{"type":"method","name":"_reduce_471","children":[],"call":["val [] ","result line= "," s "," lexer lineno "," lexer ","str value ","str sexp_type == ","str sexp_type ","str line "," dedent ","func =~ "," new_regexp ","val [] dup << ","val [] dup "," new_qword_list_entry "," new_qword_list ","val []  line= "," s  line= ","str line  line= "," new_regexp  line= ","val [] dup <<  line= "," new_qword_list  line= ","result  lexer lineno = "," lexer  lexer lineno no "," s  value "," dedent  value "," s  sexp_type == "," dedent  sexp_type == "," s  sexp_type "," dedent  sexp_type ","str  lexer lineno  "," s  line "," dedent  line "]}," Ruby21Parser _reduce_470":{"type":"method","name":"_reduce_470","children":[],"call":[" s "," debug20 ","result line= ","val [] "," lexer lineno "," lexer "," literal_concat "," new_xstring "," new_qword_list "," s  line= "," literal_concat  line= "," new_xstring  line= "," new_qword_list  line= ","val []  line= ","result  lexer lineno = "," lexer  lexer lineno no "]}," Ruby21Parser _reduce_469":{"type":"method","name":"_reduce_469","children":[],"call":["val [] ","val []= "," s ","val [] value ","val [] sexp_type == ","val [] sexp_type ","result line= "," lexer lineno "," lexer "," new_string ","val []  line= "," s  line= "," new_string  line= ","result  lexer lineno = "," lexer  lexer lineno no "]}," Ruby21Parser _reduce_468":{"type":"method","name":"_reduce_468","children":[],"call":[" s "," s line ","result line= ","val [] "," lexer lineno "," lexer "," debug ","str line "," dedent ","func =~ "," s  lexer lineno  "," s  line= ","str line  line= ","val []  line= ","result  lexer lineno = "," lexer  lexer lineno no ","str  lexer lineno  "," dedent  line "]}," Ruby21Parser _reduce_467":{"type":"method","name":"_reduce_467","children":[],"call":["val [] dup << "," new_symbol_list_entry ","val [] dup ","val [] "," s ","str value ","str sexp_type == ","str sexp_type "," literal_concat "," s  value "," s  sexp_type == "," s  sexp_type "]}," Ruby21Parser _reduce_466":{"type":"method","name":"_reduce_466","children":[],"call":[" new_symbol_list "," s ","val [] "," s line ","val [] dup << "," new_symbol_list_entry ","val [] dup "]}," Ruby21Parser _reduce_465":{"type":"method","name":"_reduce_465","children":[],"call":["val [] "," s line "," s "," debug ","list dup << ","list dup "," debug20 ","sym last to_sym ","sym last ","sym []= ","sym [] ","val [] dup << "," new_symbol_list_entry ","val [] dup "," new_symbol_list "," s  last to_ s  "," s  last "," s  []= "," s  [] "," new_ s bol_list_entry "," new_ s bol_list "]}," Ruby21Parser _reduce_464":{"type":"method","name":"_reduce_464","children":[],"call":[" s ","val [] ","str value ","str sexp_type == ","str sexp_type "," new_symbol_list "," s  value "," s  sexp_type == "," s  sexp_type "]}," Ruby21Parser _reduce_463":{"type":"method","name":"_reduce_463","children":[],"call":[" literal_concat ","val [] "," s line ","arg line "," s "]}," Ruby21Parser _reduce_461":{"type":"method","name":"_reduce_461","children":[],"call":["val [] dup << "," new_word_list_entry ","val [] dup ","val [] ","result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s line ","var line "," s ","arg line "," literal_concat ","val [] dup <<  << "," new_resbody  << "," s line  << ","val []  << "," literal_concat  << "]}," Ruby21Parser _reduce_460":{"type":"method","name":"_reduce_460","children":[],"call":[" new_word_list "," s line "," s ","val [] dup << "," new_word_list_entry ","val [] dup ","val [] "]}," Ruby21Parser _reduce_459":{"type":"method","name":"_reduce_459","children":[],"call":["val [] "," s ","result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s line ","var line ","val [] dup << ","val [] dup ","val [] [] == ","val [] [] "," new_word_list_entry "," new_word_list ","val []  << "," s  << "," new_resbody  << ","val [] dup <<  << "," new_word_list  << "," new_val [] _list_entry "," new_ s _list_entry "," new_val [] _list "," new_ s _list "]}," Ruby21Parser _reduce_458":{"type":"method","name":"_reduce_458","children":[],"call":[" s ","result << ","val [] ","result line= "," new_when "," s line ","arg line "," new_word_list "," s  << "," new_when  << "," s line  << ","val []  << "," new_word_list  << "," s  line= "," new_when  line= "," s line  line= ","val []  line= "," new_word_list  line= "]}," Ruby21Parser _reduce_457":{"type":"method","name":"_reduce_457","children":[],"call":[" new_regexp ","result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s "," lexer lineno "," lexer ","val [] "," new_regexp  << "," new_resbody  << "," lexer lineno  << ","val []  << "," s  << "]}," Ruby21Parser _reduce_456":{"type":"method","name":"_reduce_456","children":[],"call":[" new_xstring ","val [] "," lexer cmdarg restore "," lexer cmdarg "," lexer "," env unextend "," env "," new_do_body ","result << ","result line= "," new_when "," new_resbody ","klasses line ","klasses << "," new_assign "," s line ","var line "," s "," new_regexp "," new_xstring  << "," new_do_body  << "," new_when  << "," new_resbody  << "," s  << "," new_regexp  << "," new_xstring  line= "," new_do_body  line= "," new_when  line= "," new_resbody  line= "," s  line= "," new_regexp  line= "]}," Ruby21Parser _reduce_455":{"type":"method","name":"_reduce_455","children":[],"call":[" new_string "," lexer cmdarg store "," lexer cmdarg "," lexer "," lexer lineno "," s line ","arg line "," s "," new_regexp "," new_xstring ","val [] "]}," Ruby21Parser _reduce_454":{"type":"method","name":"_reduce_454","children":[],"call":["val [] ","result << ","result line= "," new_when "," lexer lineno "," lexer "," env extend "," env "," env unextend "," lexer cmdarg pop "," lexer cmdarg "," new_do_body "," new_xstring "," new_string ","val []  << "," new_when  << "," lexer lineno  << "," new_do_body  << "," new_xstring  << "," new_string  << ","val []  line= "," new_when  line= "," lexer lineno  line= "," new_do_body  line= "," new_xstring  line= "," new_string  line= "]}," Ruby21Parser _reduce_453":{"type":"method","name":"_reduce_453","children":[],"call":[" literal_concat ","val [] "," lexer lineno "," lexer "," lexer cmdarg pop "," lexer cmdarg "," lexer cmdarg restore "," env unextend "," env "," new_brace_body "," lexer cmdarg push ","result << ","result line "," new_when "," new_resbody ","klasses line ","klasses << "," new_assign "," s line ","var line "," s "," new_string "," literal_concat  << "," lexer lineno  << "," new_brace_body  << "," new_when  << "," new_resbody  << "," s  << "," new_string  << ","val []  << "," literal_concat  line "," lexer lineno  line "," new_brace_body  line "," new_when  line "," new_resbody  line "," s  line "," new_string  line ","val []  line "]}," Ruby21Parser _reduce_451":{"type":"method","name":"_reduce_451","children":[],"call":[" debug20 "," lexer cmdarg store "," lexer cmdarg "," lexer "," lexer lineno "," env extend "," env "," lexer cmdarg pop "," lexer cmdarg restore "," env unextend "," new_brace_body "," list_append "," s line ","id line "," s "," literal_concat ","val [] "]}," Ruby21Parser _reduce_450":{"type":"method","name":"_reduce_450","children":[],"call":["val [] ","val []= "," s ","val [] value ","val [] sexp_type == ","val [] sexp_type "," lexer lineno "," lexer "," env extend "," env "," env unextend ","result line= "," lexer cmdarg store "," lexer cmdarg "," list_append ","result << ","result line "," new_when "," debug20 ","val []  line= "," lexer lineno  line= "," lexer cmdarg store  line= "," list_append  line= "," new_when  line= ","val []  << "," lexer lineno  << "," lexer cmdarg store  << "," list_append  << "," new_when  << ","val []  line "," lexer lineno  line "," lexer cmdarg store  line "," list_append  line "," new_when  line "]}," Ruby21Parser _reduce_448":{"type":"method","name":"_reduce_448","children":[],"call":[" s ","val [] "," lexer cmdarg store "," lexer cmdarg "," lexer "," env unextend "," env ","result line= "," s line ","arg line "," list_append ","id line ","val []= ","val [] value ","val [] [] == ","val [] [] "," s  line= "," lexer cmdarg store  line= "," s line  line= "," list_append  line= ","val []  line= "]}," Ruby21Parser _reduce_447":{"type":"method","name":"_reduce_447","children":[],"call":[" s ","val [] "," lexer lineno "," lexer "," env extend "," env "," env unextend "," lexer cmdarg pop "," lexer cmdarg "," new_do_body "," list_append "]}," Ruby21Parser _reduce_445":{"type":"method","name":"_reduce_445","children":[],"call":[" s "," lexer lineno "," lexer "," env extend "," env "," s line ","arg line ","val [] "]}," Ruby21Parser _reduce_443":{"type":"method","name":"_reduce_443","children":[],"call":["val [] "," lexer lineno "," lexer "," env extend "," env "," new_call "," s line "," s "," lexer cmdarg store "," lexer cmdarg "," lexer cmdarg push "]}," Ruby21Parser _reduce_440":{"type":"method","name":"_reduce_440","children":[],"call":[" s ","val [] "," new_super "," new_call ","val [] to_sym "," lexer lineno "," lexer "," env extend "," env "," lexer cmdarg store "," lexer cmdarg "]}," Ruby21Parser _reduce_439":{"type":"method","name":"_reduce_439","children":[],"call":[" new_call ","val [] ","val [] to_sym "," env unextend "," env ","result line "," lexer lineno "," lexer "," env extend "," s "," new_call  line "," lexer lineno  line "," s  line "]}," Ruby21Parser _reduce_438":{"type":"method","name":"_reduce_438","children":[],"call":["result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s "," new_call ","val [] ","result line ","call concat ","args sexp_body ","val [] to_sym "," lexer lineno "," lexer "," env extend "," env "," env unextend "," new_resbody  << "," new_call  << ","call concat  << "," lexer lineno  << "," s  << "," new_resbody  line "," new_call  line ","call concat  line "," lexer lineno  line "," s  line "]}," Ruby21Parser _reduce_435":{"type":"method","name":"_reduce_435","children":[],"call":["result << ","val [] ","result line= "," new_when "," new_call ","val [] to_sym ","iter2 insert ","name to_sym "," lexer lineno "," lexer "," new_super "," env extend "," env "," new_when  << "," new_call  << "," lexer lineno  << "," new_super  << "," new_when  line= "," new_call  line= "," lexer lineno  line= "," new_super  line= "," new_ new_call  "]}," Ruby21Parser _reduce_434":{"type":"method","name":"_reduce_434","children":[],"call":[" lexer lineno "," lexer ","val [] concat ","args sexp_body ","val [] "," call_args "," new_call ","val [] to_sym ","iter2 insert ","name to_sym "," new_aref ","result << ","result line= "," new_when "," call_args  sexp_body "," call_ call_args  ","  new_call _args "," new_ new_call  "," lexer lineno  << ","val [] concat  << "," new_call  << "," new_aref  << "," new_when  << "," lexer lineno  line= ","val [] concat  line= "," new_call  line= "," new_aref  line= "," new_when  line= "]}," Ruby21Parser _reduce_433":{"type":"method","name":"_reduce_433","children":[],"call":[" env unextend "," env ","result line= "," new_iter "," lexer lineno "," lexer ","result insert "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? ","val [] ","iter2 insert "," new_call ","name to_sym "," s line "," s ","result << "," new_when "," new_iter  line= "," lexer lineno  line= "," new_call  line= "," s line  line= "," new_when  line= "," new_iter  insert "," lexer lineno  insert "," new_call  insert "," s line  insert "," new_when  insert "," invert_block_ new_call  "," invert_block_call  [] block_pass? "," invert_block_call  [] "," new_ new_call  "," new_iter  << "," lexer lineno  << "," new_call  << "," s line  << "," new_when  << "]}," Ruby21Parser _reduce_432":{"type":"method","name":"_reduce_432","children":[],"call":["iter2 insert "," new_call ","name to_sym ","iter line ","val [] ","val [] to_sym ","id to_sym "," new_super "," lexer lineno "," lexer "," env unextend "," env ","result line= "," new_iter "," new_ new_call  ","iter line  line= "," new_call  line= "," new_super  line= "," lexer lineno  line= "," new_iter  line= "]}," Ruby21Parser _reduce_431":{"type":"method","name":"_reduce_431","children":[],"call":[" lexer lineno "," lexer "," env extend "," env ","iter2 insert "," new_call ","name to_sym ","val [] ","result insert "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? ","op to_sym "," env unextend ","result line= "," new_iter "," new_ new_call  "," invert_block_call  [] "," lexer lineno  insert ","val []  insert "," new_call  insert "," new_iter  insert "," invert_block_ new_call  "," invert_block_call  [] block_pass? "," lexer lineno  line= ","val []  line= "," new_call  line= "," new_iter  line= "]}," Ruby21Parser _reduce_430":{"type":"method","name":"_reduce_430","children":[],"call":[" env unextend "," env ","result line= "," new_iter "," new_call ","val [] ","val [] to_sym ","iter line ","op to_sym ","result line_max= "," lexer lineno "," lexer "," env extend "," new_iter  line= "," new_call  line= ","val []  line= ","iter line  line= "," lexer lineno  line= "," new_iter  line_max= "," new_call  line_max= ","val []  line_max= ","iter line  line_max= "," lexer lineno  line_max= "]}," Ruby21Parser _reduce_429":{"type":"method","name":"_reduce_429","children":[],"call":["result insert ","val [] "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? ","result == "," s ","call concat ","args sexp_body ","result line_max= ","args line_max "," new_call ","id to_sym "," lexer lineno "," lexer "," env extend "," env "," env unextend ","result line= "," new_iter ","val []  insert ","call concat  insert "," new_call  insert "," lexer lineno  insert "," new_iter  insert "," invert_block_call  [] "," invert_block_call  [] block_pass? ","val []  == ","call concat  == "," new_call  == "," lexer lineno  == "," new_iter  == ","val []  line_max= ","call concat  line_max= "," new_call  line_max= "," lexer lineno  line_max= "," new_iter  line_max= ","val []  line= ","call concat  line= "," new_call  line= "," lexer lineno  line= "," new_iter  line= "]}," Ruby21Parser _reduce_428":{"type":"method","name":"_reduce_428","children":[],"call":[" lexer lineno "," lexer "," env extend "," env ","val [] "," args ","iter2 insert "," new_call ","name to_sym ","op to_sym "," env unextend ","result line= "," new_iter "," new_ new_call  "," lexer lineno  line= ","val []  line= "," args  line= "," new_call  line= "," new_iter  line= "]}," Ruby21Parser _reduce_427":{"type":"method","name":"_reduce_427","children":[],"call":[" new_aref ","val [] "," env unextend "," env ","result line= "," new_iter "," s line "," s "," lexer cmdarg lexpop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," lexer lpar_beg= ","result == ","iter2 insert "," new_call ","name to_sym ","result line_max= ","op to_sym "," lexer lineno "," env extend "," new_aref  line= ","val []  line= "," new_iter  line= "," new_call  line= "," lexer lineno  line= "," new_aref  == ","val []  == "," new_iter  == "," new_call  == "," lexer lineno  == "," new_ s line  "," new_ new_call  "," new_aref  line_max= ","val []  line_max= "," new_iter  line_max= "," new_call  line_max= "," lexer lineno  line_max= "]}," Ruby21Parser _reduce_426":{"type":"method","name":"_reduce_426","children":[],"call":[" s ","val [] "," lexer cmdarg store "," lexer cmdarg "," lexer "," args "," new_call ","id to_sym ","result line_max= ","args line_max ","call concat ","args sexp_body "," lexer lineno "," env extend "," env "," new_aref "," s  line_max= ","val []  line_max= "," lexer cmdarg store  line_max= "," args  line_max= "," new_call  line_max= "," lexer lineno  line_max= "," new_aref  line_max= "]}," Ruby21Parser _reduce_425":{"type":"method","name":"_reduce_425","children":[],"call":[" new_super ","val [] ","result == "," s "," lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," lexer lineno "," env extend "," env "," env unextend ","result line= "," new_iter "," s line "," lexer cmdarg pop "," lexer cmdarg ","result insert "," invert_block_call "," inverted? "," syntax_error ","cmd block_pass? ","iter2 insert "," new_call ","name to_sym "," new_aref "," invert_block_call  [] "," new_super  == ","val []  == "," new_iter  == "," new_aref  == "," s  == "," new_super  line= ","val []  line= "," new_iter  line= "," new_aref  line= "," s  line= "," new_super  insert ","val []  insert "," new_iter  insert "," new_aref  insert "," s  insert "," invert_block_ s line  "," invert_block_ new_call  "," new_ s line  "," new_ new_call  "]}," Ruby21Parser _reduce_424":{"type":"method","name":"_reduce_424","children":[],"call":[" new_call ","val [] "," args "," lexer cmdarg push "," lexer cmdarg "," lexer ","iter line ","iter2 insert ","name to_sym "," s "," new_super "," new_ new_call  "]}," Ruby21Parser _reduce_423":{"type":"method","name":"_reduce_423","children":[],"call":[" new_call ","val [] "," env unextend "," env ","result line= "," new_iter "," lexer cmdarg lexpop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," lexer lpar_beg= "," s line "," s ","id to_sym "," lexer lineno "," lexer paren_nest "," lexer lpar_beg "," env extend "," new_super "," new_ new_call  "," new_call  line= "," new_iter  line= "," s line  line= ","val []  line= "," new_super  line= ","result  lexer lineno = "," s  lexer lineno  "," lexer  lexer lineno no "]}," Ruby21Parser _reduce_422":{"type":"method","name":"_reduce_422","children":[],"call":[" new_call ","val [] to_sym ","val [] "," lexer lineno "," lexer "," lexer cmdarg store "," lexer cmdarg "," args ","result insert "," invert_block_call "," inverted? "," syntax_error ","cmd block_pass? "," invert_block_call  [] to_sym "," invert_block_call  [] "," new_call  insert "," args  insert ","val []  insert "]}," Ruby21Parser _reduce_421":{"type":"method","name":"_reduce_421","children":[],"call":[" new_call ","val [] ","val [] to_sym "," lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," lexer lineno "," env extend "," env "," args "," s line "," s ","id to_sym ","result == ","iter line "," lexer  lexer lineno no "," s  lexer lineno  "," new_call  == "," lexer lpar_beg  == "," lexer lineno  == "," args  == "," s line  == ","val []  == ","iter line  == ","iter  lexer lineno  "]}," Ruby21Parser _reduce_420":{"type":"method","name":"_reduce_420","children":[],"call":[" new_call ","val [] ","val [] to_sym "," args "]}," Ruby21Parser _reduce_419":{"type":"method","name":"_reduce_419","children":[],"call":["val [] concat ","args sexp_body ","val [] "," call_args "," s ","val [] to_sym "," args "," env unextend "," env ","result line "," new_iter "," s line "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer lpar_beg= "," new_call "," call_args  sexp_body "," call_ call_args  ","  s line _args ","  call_args  ","val [] concat  line "," s  line "," args  line "," new_iter  line ","val []  line "," new_call  line "," new_ s line  "]}," Ruby21Parser _reduce_418":{"type":"method","name":"_reduce_418","children":[],"call":[" lexer lineno "," lexer "," args "," lexer cmdarg push "," lexer cmdarg ","result == "," s ","val [] "," new_call ","val [] to_sym ","val [] concat ","args [] "," call_args ","  call_args  "," lexer lineno  == "," args  == ","val []  == "," new_call  == ","val [] concat  == "," call_args  [] "," call_ call_args  "]}," Ruby21Parser _reduce_417":{"type":"method","name":"_reduce_417","children":[],"call":["iter2 insert "," new_call ","name to_sym "," args "," s line "," lexer lineno "," lexer "," s "," lexer lpar_beg= "," lexer paren_nest "," lexer lpar_beg "," env extend "," env ","val [] concat ","args [] ","val [] "," call_args "," new_ new_call  ","  call_args  "," call_args  [] ","  new_call _args "," call_ call_args  "]}," Ruby21Parser _reduce_416":{"type":"method","name":"_reduce_416","children":[],"call":["iter2 insert "," new_call ","name to_sym "," args "," env unextend "," env ","result line "," new_iter "," s line "," s "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer lpar_beg= "," lexer lineno "," new_ new_call  "," new_ s line  "," args  line "," new_iter  line "," lexer lineno  line "]}," Ruby21Parser _reduce_415":{"type":"method","name":"_reduce_415","children":[],"call":[" new_call ","val [] ","val [] to_sym "," lexer command_start= "," lexer "," s line "," lexer lineno "," s ","id to_sym "," wrap "," lexer cmdarg push "," lexer cmdarg ","iter2 insert ","name to_sym "," new_ new_call  "]}," Ruby21Parser _reduce_414":{"type":"method","name":"_reduce_414","children":[],"call":["result insert ","val [] "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? "," args "," lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," lexer lineno "," env extend "," env ","iter2 insert "," new_call ","name to_sym ","val [] to_sym ","val []  insert "," args  insert "," new_call  insert "," invert_block_call  [] "," invert_block_ new_call  "," invert_block_call  [] block_pass? "," new_ new_call  "," invert_block_call  [] to_sym "]}," Ruby21Parser _reduce_413":{"type":"method","name":"_reduce_413","children":[],"call":[" env unextend "," env ","result line= ","val [] "," new_iter "," s "," args "," lexer command_start= "," lexer "," new_call ","val [] to_sym ","result insert "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? "," new_iter  line= "," s  line= "," args  line= "," new_call  line= ","val []  line= "," invert_block_call  [] "," val []  "," invert_block_call  [] to_sym "," new_iter  insert "," s  insert "," args  insert "," new_call  insert ","val []  insert "," invert_block_call  [] block_pass? "]}," Ruby21Parser _reduce_412":{"type":"method","name":"_reduce_412","children":[],"call":[" args "," wrap ","val [] ","result insert "," syntax_error ","val [] block_pass? "," invert_block_call "," inverted? "," env unextend "," env ","result line= "," new_iter "," val []  "," invert_block_call  [] "," args  insert "," wrap  insert ","val []  insert "," new_iter  insert "," invert_block_call  [] block_pass? "," args  line= "," wrap  line= ","val []  line= "," new_iter  line= "]}," Ruby21Parser _reduce_411":{"type":"method","name":"_reduce_411","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," lexer command_start= "," args "," env unextend ","result line= ","val [] "," new_iter "," val []  "," lexer lineno  line= "," args  line= "," new_iter  line= "]}," Ruby21Parser _reduce_410":{"type":"method","name":"_reduce_410","children":[],"call":["val [] "," args "," lexer lineno "," lexer "," env extend "," env "]}," Ruby21Parser _reduce_409":{"type":"method","name":"_reduce_409","children":[],"call":["val [] "," args "," s line "," lexer lineno "," lexer "," s "," env extend "," env "]}," Ruby21Parser _reduce_408":{"type":"method","name":"_reduce_408","children":[],"call":["result == "," s ","val [] "," args ","val []  == "," args  == "]}," Ruby21Parser _reduce_407":{"type":"method","name":"_reduce_407","children":[],"call":[" args "," lexer command_start= "," lexer ","val [] ","result == "," s "," args  == ","val []  == "]}," Ruby21Parser _reduce_406":{"type":"method","name":"_reduce_406","children":[],"call":[" env unextend "," env "," new_iter "," new_call "," lexer lpar_beg= "," lexer "," args "," s line "," lexer lineno "," s ","val [] ","result == "," new_ new_call  "," new_iter  == "," args  == "," s line  == ","val []  == "]}," Ruby21Parser _reduce_405":{"type":"method","name":"_reduce_405","children":[],"call":[" lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," lexer lineno "," env extend "," env "," args "," env unextend "," new_iter "," new_call "," new_ new_call  "]}," Ruby21Parser _reduce_403":{"type":"method","name":"_reduce_403","children":[],"call":[" s ","val [] to_sym ","val [] "," args "," lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," lexer lineno "," env extend "," env "]}," Ruby21Parser _reduce_402":{"type":"method","name":"_reduce_402","children":[],"call":[" args "," args << "," s ","val [] to_sym ","val [] "]}," Ruby21Parser _reduce_401":{"type":"method","name":"_reduce_401","children":[],"call":[" args "," s ","val [] to_sym ","val [] "]}," Ruby21Parser _reduce_400":{"type":"method","name":"_reduce_400","children":[],"call":[" args "]}," Ruby21Parser _reduce_398":{"type":"method","name":"_reduce_398","children":[],"call":[" args "]}," Ruby21Parser _reduce_397":{"type":"method","name":"_reduce_397","children":[],"call":[" s "," lexer command_start= "," lexer "," args "]}," Ruby21Parser _reduce_396":{"type":"method","name":"_reduce_396","children":[],"call":[" args ","result line "," call_args "," lexer lineno "," lexer "," args << "," s "," lexer command_start= "," args  line "," call_args  line "," args <<  line "," s  line ","result  lexer lineno  "," lexer  lexer lineno no "]}," Ruby21Parser _reduce_394":{"type":"method","name":"_reduce_394","children":[],"call":[" call_args ","result line "," lexer lineno "," lexer "," args ","result == "," s "," call_args  line "," args  line ","result  lexer lineno  "," lexer  lexer lineno no "," call_args  == "," args  == "]}," Ruby21Parser _reduce_393":{"type":"method","name":"_reduce_393","children":[],"call":[" args "," call_args "," args << "]}," Ruby21Parser _reduce_392":{"type":"method","name":"_reduce_392","children":[],"call":[" args "," call_args "," block_var "]}," Ruby21Parser _reduce_391":{"type":"method","name":"_reduce_391","children":[],"call":[" args "," call_args "," block_var "]}," Ruby21Parser _reduce_390":{"type":"method","name":"_reduce_390","children":[],"call":[" args "," call_args "," block_var "]}," Ruby21Parser _reduce_389":{"type":"method","name":"_reduce_389","children":[],"call":[" args "," call_args "," block_var "]}," Ruby21Parser _reduce_388":{"type":"method","name":"_reduce_388","children":[],"call":[" args "," block_var ","result line "," call_args "," args  line "," block_var  line "," call_args  line "]}," Ruby21Parser _reduce_387":{"type":"method","name":"_reduce_387","children":[],"call":[" args "," block_var "," call_args "]}," Ruby21Parser _reduce_386":{"type":"method","name":"_reduce_386","children":[],"call":[" args "," block_var ","(str \"*\") to_sym "," call_args "]}," Ruby21Parser _reduce_385":{"type":"method","name":"_reduce_385","children":[],"call":[" args "," block_var ","(str \"*\") to_sym "," call_args ","result line "," args  line "," block_var  line "," call_args  line "]}," Ruby21Parser _reduce_384":{"type":"method","name":"_reduce_384","children":[],"call":[" args "," block_var ","(str \"*\") to_sym ","result line "," lexer lineno "," lexer "," call_args "," args  line "," block_var  line "," call_args  line "]}," Ruby21Parser _reduce_383":{"type":"method","name":"_reduce_383","children":[],"call":[" args "," block_var "," list_append ","val [] ","(str \"*\") to_sym ","result line "," call_args "," args  line "," block_var  line "," list_append  line "," call_args  line "]}," Ruby21Parser _reduce_382":{"type":"method","name":"_reduce_382","children":[],"call":[" args "," block_var ","(str \"*\") to_sym "," s line "," lexer lineno "," lexer "," s "," call_args "]}," Ruby21Parser _reduce_381":{"type":"method","name":"_reduce_381","children":[],"call":[" args "," block_var ","(str \"*\") to_sym ","val [] "," list_append ","result line "," lexer lineno "," lexer "," args  line "," block_var  line ","val []  line "," list_append  line "]}," Ruby21Parser _reduce_380":{"type":"method","name":"_reduce_380","children":[],"call":[" args "," block_var "," s line "," lexer lineno "," lexer "," s ","result line ","(str \"*\") to_sym "," args  line "," block_var  line "," s line  line "]}," Ruby21Parser _reduce_379":{"type":"method","name":"_reduce_379","children":[],"call":[" args "," list_append ","val [] ","val [] delete_at ","val [] [] nil? ","val [] [] "," block_var "]}," Ruby21Parser _reduce_377":{"type":"method","name":"_reduce_377","children":[],"call":[" args ","val [] ","val [] delete_at ","val [] [] nil? ","val [] [] "," list_append "," block_var "]}," Ruby21Parser _reduce_376":{"type":"method","name":"_reduce_376","children":[],"call":[" call_args "," s line "," lexer lineno "," lexer "," s "," block_var "," args "]}," Ruby21Parser _reduce_375":{"type":"method","name":"_reduce_375","children":[],"call":[" call_args ","val [] delete_at ","val [] ","val [] [] nil? ","val [] [] "," s line "," s "," block_var "," args "]}," Ruby21Parser _reduce_374":{"type":"method","name":"_reduce_374","children":[],"call":[" call_args "," list_append ","val [] "]}," Ruby21Parser _reduce_373":{"type":"method","name":"_reduce_373","children":[],"call":[" call_args ","val [] "," s line "," s ","val [] delete_at ","val [] [] nil? ","val [] [] "," lexer lineno "," lexer "]}," Ruby21Parser _reduce_372":{"type":"method","name":"_reduce_372","children":[],"call":[" block_var ","val [] "," call_args "]}," Ruby21Parser _reduce_371":{"type":"method","name":"_reduce_371","children":[],"call":[" block_var "," s ","val [] "," call_args "]}," Ruby21Parser _reduce_370":{"type":"method","name":"_reduce_370","children":[],"call":[" block_var ","val [] delete_at ","val [] ","val [] [] nil? ","val [] [] "]}," Ruby21Parser _reduce_369":{"type":"method","name":"_reduce_369","children":[],"call":[" block_var "," s line "," s "," debug20 "]}," Ruby21Parser _reduce_368":{"type":"method","name":"_reduce_368","children":[],"call":[" block_var ","val [] "," debug20 "]}," Ruby21Parser _reduce_367":{"type":"method","name":"_reduce_367","children":[],"call":[" block_var "]}," Ruby21Parser _reduce_366":{"type":"method","name":"_reduce_366","children":[],"call":[" block_var ","(str \"*\") to_sym "," s line "," s "," debug20 "]}," Ruby21Parser _reduce_365":{"type":"method","name":"_reduce_365","children":[],"call":[" block_var ","(str \"*\") to_sym "]}," Ruby21Parser _reduce_364":{"type":"method","name":"_reduce_364","children":[],"call":[" block_var ","(str \"*\") to_sym "]}," Ruby21Parser _reduce_363":{"type":"method","name":"_reduce_363","children":[],"call":[" list_append ","val [] "," block_var ","(str \"*\") to_sym "]}," Ruby21Parser _reduce_362":{"type":"method","name":"_reduce_362","children":[],"call":[" s ","val [] "," block_var "," list_append "]}," Ruby21Parser _reduce_361":{"type":"method","name":"_reduce_361","children":[],"call":["val [] "," list_append "," s "]}," Ruby21Parser _reduce_359":{"type":"method","name":"_reduce_359","children":[],"call":["val [] delete_at ","val [] ","val [] [] nil? ","val [] [] "]}," Ruby21Parser _reduce_357":{"type":"method","name":"_reduce_357","children":[],"call":["val [] ","val [] delete_at ","val [] [] nil? ","val [] [] "]}," Ruby21Parser _reduce_355":{"type":"method","name":"_reduce_355","children":[],"call":[" s ","val [] "]}," Ruby21Parser _reduce_337":{"type":"method","name":"_reduce_337","children":[],"call":[" value_expr ","val [] "," lexer comments "," lexer "," in_def= "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," new_defn "," env extend "," yyerror "," in_single > "," in_single "," in_def "," comments push "," comments "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer lex_state= ","EXPR_ENDFN  | "," s line "," s "]}," Ruby21Parser _reduce_336":{"type":"method","name":"_reduce_336","children":[],"call":[" s "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," env extend "," env "," in_def= "," comments push "," lexer comments "," comments "," lexer cmdarg stack dup "," in_def "," lexer lineno "," env unextend "," new_module "," lexer lex_state= "," s line "," value_expr ","val [] "]}," Ruby21Parser _reduce_335":{"type":"method","name":"_reduce_335","children":[],"call":[" s "," lexer comments "," lexer "," env unextend "," env "," new_module "," new_sclass "," env extend "," yyerror "," in_single > "," in_single "," in_def "," comments push "," comments "," lexer ignore_body_comments "," in_def= "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," new_defn "," new_defs ","val delete_at "," value_expr ","val [] "]}," Ruby21Parser _reduce_334":{"type":"method","name":"_reduce_334","children":[],"call":[" s "," env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," lexer "," comments "," in_single= "," lexer lineno "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," in_def= "," lexer lex_state= ","EXPR_ENDFN  | "]}," Ruby21Parser _reduce_333":{"type":"method","name":"_reduce_333","children":[],"call":[" s "," lexer lineno "," lexer "," in_def= "," in_def "," lexer comments "," env unextend "," env "," new_sclass "," lexer ignore_body_comments "," new_module "," lexer lex_state= "]}," Ruby21Parser _reduce_332":{"type":"method","name":"_reduce_332","children":[],"call":[" lexer comments "," lexer "," in_single "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg ","result [] line ","result [] "," new_defs ","val [] "," new_sclass "," lexer lineno "," env extend "," in_single= "," yyerror "," in_single > "," in_def "," lexer ignore_body_comments "," in_def= "," lexer cmdarg pop "," lexer cond pop "," lexer cond "," new_defn "," s "," new_defs  [] line "," new_sclass  [] line "," lexer lineno  [] line "," in_single  [] line "," s  [] line "," new_defs  [] "," new_sclass  [] "," lexer lineno  [] "," in_single  [] "," s  [] "]}," Ruby21Parser _reduce_331":{"type":"method","name":"_reduce_331","children":[],"call":[" lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," lexer cmdarg stack dup "," lexer lineno "," lexer lex_state= "," env extend "," env "," in_single "," in_single= "," lexer comments "," env unextend "," new_class "," in_def= "," in_def "," lexer cond push "," lexer cond "," lexer cmdarg push "," s ","result [] line ","val [] ","result [] "," new_defs "," in_single  [] line "," new_class  [] line "," in_def  [] line "," lexer lineno  [] line "," s  [] line "," new_defs  [] line "," in_single  [] "," new_class  [] "," in_def  [] "," lexer lineno  [] "," s  [] "," new_defs  [] "]}," Ruby21Parser _reduce_330":{"type":"method","name":"_reduce_330","children":[],"call":[" lexer lex_state= "," lexer "," comments push "," lexer comments "," comments "," in_def= "," in_def "," env extend "," env "," yyerror "," in_single > "," in_single "," lexer lineno "," lexer ignore_body_comments "," env unextend "," new_sclass "," new_module ","result [] line ","val [] ","result [] "," new_defs "," in_def  [] line "," lexer lineno  [] line "," new_sclass  [] line "," new_module  [] line "," new_defs  [] line "," in_def  [] "," lexer lineno  [] "," new_sclass  [] "," new_module  [] "," new_defs  [] "]}," Ruby21Parser _reduce_329":{"type":"method","name":"_reduce_329","children":[],"call":[" lexer comments "," lexer "," in_def= "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," new_defn ","val [] "," lexer lineno "," new_class "," env extend "," in_single= "," in_single "," yyerror "," in_single > "," in_def "," lexer lex_state= "," comments push "," comments "]}," Ruby21Parser _reduce_328":{"type":"method","name":"_reduce_328","children":[],"call":[" lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," env extend "," env "," in_def= "," comments push "," lexer comments "," comments "," lexer cmdarg stack dup "," in_def "," env unextend "," new_class "," new_for "," yyerror "," in_single > "," in_single "," lexer ignore_body_comments "," new_sclass "," lexer lex_state= "," new_defn ","val [] "]}," Ruby21Parser _reduce_327":{"type":"method","name":"_reduce_327","children":[],"call":[" lexer comments "," lexer "," env unextend "," env "," new_module "," env extend "," yyerror "," in_single > "," in_single "," in_def "," comments push "," comments "," new_case "," lexer lineno "," in_single= "," in_def= "," new_defn ","val [] "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer cmdarg stack dup "," val []  "," val [] = "]}," Ruby21Parser _reduce_326":{"type":"method","name":"_reduce_326","children":[],"call":[" env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," lexer "," comments "," lexer lineno "," new_case "," new_for "," lexer ignore_body_comments "," env unextend "," new_class "," in_def= "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer cmdarg stack dup "," new_module "]}," Ruby21Parser _reduce_325":{"type":"method","name":"_reduce_325","children":[],"call":[" lexer lineno "," lexer "," new_for "," new_until "," new_case "," env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," lexer ignore_body_comments "," env unextend "," new_class "," lexer comments "," new_module "," comments push "," comments "]}," Ruby21Parser _reduce_324":{"type":"method","name":"_reduce_324","children":[],"call":[" lexer comments "," lexer "," env unextend "," env "," new_sclass "," new_case "," new_while "," lexer lineno "," env extend "," yyerror "," in_single > "," in_single "," in_def "," comments push "," comments "]}," Ruby21Parser _reduce_323":{"type":"method","name":"_reduce_323","children":[],"call":[" env extend "," env "," in_single= "," in_single "," new_case "," new_if "," new_until "," new_for "," lexer lineno "," lexer "," lexer comments "," env unextend "," new_sclass "]}," Ruby21Parser _reduce_322":{"type":"method","name":"_reduce_322","children":[],"call":[" in_def= "," in_def "," new_until "," new_if "," new_while "," new_case "," lexer comments "," lexer "," env unextend "," env "," new_sclass "," env extend "," in_single= "," in_single "]}," Ruby21Parser _reduce_321":{"type":"method","name":"_reduce_321","children":[],"call":[" lexer lineno "," lexer "," new_while ","val [] "," new_if "," new_case "," env extend "," env "," in_single= "," in_single "," in_def= "," in_def "]}," Ruby21Parser _reduce_320":{"type":"method","name":"_reduce_320","children":[],"call":[" lexer comments "," lexer "," env unextend "," env "," new_class "," new_if ","iter insert "," block_dup_check ","val [] "," new_until "," in_def= "," in_def "," lexer lineno "]}," Ruby21Parser _reduce_319":{"type":"method","name":"_reduce_319","children":[],"call":[" env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," lexer "," comments "," new_if ","val [] "," new_while "," lexer lineno "," env unextend "," new_class "]}," Ruby21Parser _reduce_318":{"type":"method","name":"_reduce_318","children":[],"call":[" lexer lineno "," lexer ","val [] ","iter insert "," block_dup_check "," new_if "," lexer comments "," env unextend "," env "," new_class "," env extend "," yyerror "," in_single > "," in_single "," in_def "," comments push "," comments "]}," Ruby21Parser _reduce_317":{"type":"method","name":"_reduce_317","children":[],"call":[" new_for ","val [] ","iter insert "," block_dup_check "," debug20 "," new_if "," env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," lexer "," comments "," lexer lineno "]}," Ruby21Parser _reduce_316":{"type":"method","name":"_reduce_316","children":[],"call":[" lexer cond pop "," lexer cond "," lexer "," new_call ","iter insert "," lexer lineno "," new_for ","val [] "]}," Ruby21Parser _reduce_315":{"type":"method","name":"_reduce_315","children":[],"call":[" lexer cond push "," lexer cond "," lexer ","call line= ","iter line ","iter insert ","val [] "," s line "," s "," debug20 "," block_dup_check "," new_for "," lexer cond pop "]}," Ruby21Parser _reduce_314":{"type":"method","name":"_reduce_314","children":[],"call":[" new_case "," debug20 "," new_yield "," new_call "," lexer cond pop "," lexer cond "," lexer "," lexer cond push "]}," Ruby21Parser _reduce_313":{"type":"method","name":"_reduce_313","children":[],"call":[" new_case "," s ","val [] "," new_yield "," s line ","iter insert "," lexer cond push "," lexer cond "," lexer "]}," Ruby21Parser _reduce_312":{"type":"method","name":"_reduce_312","children":[],"call":[" new_until ","val [] "," s "," new_yield "," debug "," new_case "]}," Ruby21Parser _reduce_311":{"type":"method","name":"_reduce_311","children":[],"call":[" lexer cond pop "," lexer cond "," lexer "," new_yield "," s line "," s "," new_call "," new_case "," new_until ","val [] "]}," Ruby21Parser _reduce_310":{"type":"method","name":"_reduce_310","children":[],"call":[" lexer cond push "," lexer cond "," lexer "," new_yield "," new_hash ","val [] "," s line "," s "," new_until "," lexer cond pop "]}," Ruby21Parser _reduce_309":{"type":"method","name":"_reduce_309","children":[],"call":[" new_while ","val [] "," new_yield "," lexer lineno "," lexer "," s line "," s "," new_yield line "," lexer cond pop "," lexer cond "," lexer cond push "]}," Ruby21Parser _reduce_308":{"type":"method","name":"_reduce_308","children":[],"call":[" lexer cond pop "," lexer cond "," lexer "," s ","result line ","result sexp_type= "," new_hash "," new_yield "," new_yield line "," lexer cond push "," new_while ","val [] "," s  line "," new_hash  line "," new_yield  line "," new_yield line  line "," new_while  line "," s  sexp_type= "," new_hash  sexp_type= "," new_yield  sexp_type= "," new_yield line  sexp_type= "," new_while  sexp_type= "]}," Ruby21Parser _reduce_307":{"type":"method","name":"_reduce_307","children":[],"call":[" lexer cond push "," lexer cond "," lexer "," new_hash "," lexer lineno "," new_yield ","val [] "," new_yield line "," new_while "," lexer cond pop "]}," Ruby21Parser _reduce_306":{"type":"method","name":"_reduce_306","children":[],"call":[" new_if ","val [] "," lexer lineno "," lexer "," s line "," s ","id to_sym ","result line ","result sexp_type= "," lexer cond pop "," lexer cond "," lexer cond push "," new_if  line "," lexer lineno  line "," s line  line "," new_if  sexp_type= "," lexer lineno  sexp_type= "," s line  sexp_type= "]}," Ruby21Parser _reduce_305":{"type":"method","name":"_reduce_305","children":[],"call":[" new_if ","val [] ","result sexp_type= "," s "," s line ","expr line ","id to_sym "," lexer lineno "," lexer "," new_hash "," lexer cond push "," lexer cond "," new_if  sexp_type= "," s line  sexp_type= "," lexer lineno  sexp_type= "," new_hash  sexp_type= "]}," Ruby21Parser _reduce_304":{"type":"method","name":"_reduce_304","children":[],"call":["val [] "," s ","val [] to_sym ","result paren= "," s line "," lexer lineno "," lexer ","id to_sym "," new_if ","val []  paren= "," s  paren= "," s line  paren= "," lexer lineno  paren= "," new_if  paren= "]}," Ruby21Parser _reduce_303":{"type":"method","name":"_reduce_303","children":[],"call":["iter insert "," block_dup_check ","val [] "," s ","val [] to_sym "," lexer cmdarg restore "," lexer cmdarg "," lexer "," warning "," s line ","expr line ","id to_sym ","result line ","result sexp_type= ","result line_max= "," new_if "," s  line "," s line  line "," new_if  line ","val []  line "," s  sexp_type= "," s line  sexp_type= "," new_if  sexp_type= ","val []  sexp_type= "," s  line_max= "," s line  line_max= "," new_if  line_max= ","val []  line_max= "]}," Ruby21Parser _reduce_301":{"type":"method","name":"_reduce_301","children":[],"call":["call line= ","iter line ","iter insert ","val [] "," lexer cmdarg restore "," lexer cmdarg "," lexer "," warning "," lexer cmdarg store "," s line "," s ","id to_sym "," wrap "," block_dup_check "]}," Ruby21Parser _reduce_300":{"type":"method","name":"_reduce_300","children":[],"call":[" debug20 "," lexer lex_state= "," lexer "," s line "," s ","expr line ","id to_sym ","call line= ","iter line ","iter insert ","val [] "]}," Ruby21Parser _reduce_299":{"type":"method","name":"_reduce_299","children":[],"call":[" s ","val [] "," lexer cmdarg store "," lexer cmdarg "," lexer "," lexer lineno "," lexer lex_state= "," s line ","result paren= ","call line= ","iter line ","iter insert "," debug20 "," s  paren= "," lexer cmdarg store  paren= "," lexer lineno  paren= "," s line  paren= "]}," Ruby21Parser _reduce_298":{"type":"method","name":"_reduce_298","children":[],"call":[" s ","val [] "," debug20 ","result line= "," lexer lineno "," lexer "," lexer lex_state= "," s  line= "," lexer lineno  line= "]}," Ruby21Parser _reduce_297":{"type":"method","name":"_reduce_297","children":[],"call":[" new_yield ","result line= ","val [] "," s "," lexer lineno "," lexer "," new_begin "," lexer cmdarg pop "," lexer cmdarg "," lexer lex_state= "," new_yield  line= "," s  line= "," lexer lineno  line= "," new_begin  line= "]}," Ruby21Parser _reduce_296":{"type":"method","name":"_reduce_296","children":[],"call":[" new_yield "," lexer lineno "," lexer "," new_call ","msg to_sym "," lexer cmdarg push "," lexer cmdarg "," s line "," s ","val [] "]}," Ruby21Parser _reduce_295":{"type":"method","name":"_reduce_295","children":[],"call":[" new_yield ","val [] "," new_call ","val [] to_sym ","msg to_sym "," lexer lineno "," lexer "," lexer lex_state= "]}," Ruby21Parser _reduce_294":{"type":"method","name":"_reduce_294","children":[],"call":[" s "," new_begin "," lexer cmdarg pop "," lexer cmdarg "," lexer "," new_yield ","val [] "]}," Ruby21Parser _reduce_293":{"type":"method","name":"_reduce_293","children":[],"call":[" new_hash "," lexer lineno "," lexer "," lexer cmdarg push "," lexer cmdarg "," new_yield ","val [] "," s "]}," Ruby21Parser _reduce_292":{"type":"method","name":"_reduce_292","children":[],"call":[" lexer lineno "," lexer ","result line "," new_call ","msg to_sym "," s "," new_hash "," lexer lineno  line "," new_call  line "," s  line "," new_hash  line "]}," Ruby21Parser _reduce_291":{"type":"method","name":"_reduce_291","children":[],"call":["result sexp_type= "," s ","val [] ","val [] values "," lexer lineno "," lexer "," s  sexp_type= "," lexer lineno  sexp_type= "]}," Ruby21Parser _reduce_290":{"type":"method","name":"_reduce_290","children":[],"call":[" s ","val [] to_sym ","val [] ","result []= "," s  []= "]}," Ruby21Parser _reduce_289":{"type":"method","name":"_reduce_289","children":[],"call":[" s ","val [] to_sym ","val [] "]}," Ruby21Parser _reduce_288":{"type":"method","name":"_reduce_288","children":[],"call":["result paren= "," s ","val [] ","val [] to_sym "," s  paren= "]}," Ruby21Parser _reduce_287":{"type":"method","name":"_reduce_287","children":[],"call":["val [] "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," warning ","result paren= "," s ","val []  paren= "]}," Ruby21Parser _reduce_286":{"type":"method","name":"_reduce_286","children":[],"call":[" lexer lex_state= "," lexer ","val [] "," warning "]}," Ruby21Parser _reduce_285":{"type":"method","name":"_reduce_285","children":[],"call":[" lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," lexer cmdarg stack dup "," s line ","arg line "," s "," lexer lex_state= "]}," Ruby21Parser _reduce_284":{"type":"method","name":"_reduce_284","children":[],"call":[" debug20 "," s ","val [] "," arg_concat "," s line ","arg line "]}," Ruby21Parser _reduce_283":{"type":"method","name":"_reduce_283","children":[],"call":["result line= ","val [] "," s "," arg_concat ","val [] << "," s  line= "," arg_concat  line= ","val [] <<  line= "]}," Ruby21Parser _reduce_282":{"type":"method","name":"_reduce_282","children":[],"call":[" lexer lineno "," lexer ","val [] << ","val [] "," new_masgn_arg "]}," Ruby21Parser _reduce_281":{"type":"method","name":"_reduce_281","children":[],"call":[" new_call ","val [] to_sym ","val [] "," new_masgn_arg "," s line ","arg line "," s "]}," Ruby21Parser _reduce_270":{"type":"method","name":"_reduce_270","children":[],"call":[" s ","val [] "," call_args "," s line ","arg line "]}," Ruby21Parser _reduce_269":{"type":"method","name":"_reduce_269","children":[],"call":[" arg_concat ","val [] "," arg_blk_pass "," call_args "," array_to_hash "," lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg pop ","(sym :tLBRACE_ARG) include? "]}," Ruby21Parser _reduce_268":{"type":"method","name":"_reduce_268","children":[],"call":["val [] << ","val [] "," arg_blk_pass "," call_args "," array_to_hash "," lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg pop ","(sym :tLPAREN) include? "," last_token_type first "," last_token_type "]}," Ruby21Parser _reduce_267":{"type":"method","name":"_reduce_267","children":[],"call":[" new_masgn_arg ","val [] "," arg_blk_pass "," call_args "]}," Ruby21Parser _reduce_266":{"type":"method","name":"_reduce_266","children":[],"call":[" new_masgn_arg ","val [] "," call_args "," warning "," array_to_hash "]}," Ruby21Parser _reduce_265":{"type":"method","name":"_reduce_265","children":[],"call":[" list_append "," s ","val [] "," args "," array_to_hash "," call_args "]}," Ruby21Parser _reduce_264":{"type":"method","name":"_reduce_264","children":[],"call":[" list_append ","val [] "," args "," array_to_hash "," call_args "]}," Ruby21Parser _reduce_263":{"type":"method","name":"_reduce_263","children":[],"call":[" s ","val [] "," args "," call_args "," warning "]}," Ruby21Parser _reduce_262":{"type":"method","name":"_reduce_262","children":[],"call":[" s ","val [] "," args "," array_to_hash "]}," Ruby21Parser _reduce_260":{"type":"method","name":"_reduce_260","children":[],"call":["val [] "," args "]}," Ruby21Parser _reduce_259":{"type":"method","name":"_reduce_259","children":[],"call":[" s ","val [] "]}," Ruby21Parser _reduce_258":{"type":"method","name":"_reduce_258","children":[],"call":["val [] "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "]}," Ruby21Parser _reduce_257":{"type":"method","name":"_reduce_257","children":[],"call":[" lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg stack dup "," lexer cmdarg stack "," new_rescue "," new_resbody "," s "," remove_begin "," value_expr "," s line "," new_ remove_begin  "," new_res value_expr  "]}," Ruby21Parser _reduce_256":{"type":"method","name":"_reduce_256","children":[],"call":[" call_args "]}," Ruby21Parser _reduce_255":{"type":"method","name":"_reduce_255","children":[],"call":[" arg_blk_pass ","val [] "," call_args "," array_to_hash "," args ","result line_max= "," arg_blk_pass  line_max= "," call_args  line_max= "," args  line_max= "]}," Ruby21Parser _reduce_254":{"type":"method","name":"_reduce_254","children":[],"call":[" arg_blk_pass ","val [] "," call_args "," array_to_hash "," args "," new_rescue "," new_resbody "," s line "," s "," remove_begin "," value_expr "," new_ remove_begin  "," new_res value_expr  "]}," Ruby21Parser _reduce_253":{"type":"method","name":"_reduce_253","children":[],"call":[" arg_blk_pass ","val [] "," call_args "," args "]}," Ruby21Parser _reduce_252":{"type":"method","name":"_reduce_252","children":[],"call":[" call_args "," warning "," args "," array_to_hash ","val [] "]}," Ruby21Parser _reduce_251":{"type":"method","name":"_reduce_251","children":[],"call":[" args "," array_to_hash ","val [] "," value_expr "]}," Ruby21Parser _reduce_250":{"type":"method","name":"_reduce_250","children":[],"call":[" args "," array_to_hash ","val [] "," new_call "," argl ","op to_sym "," warn "]}," Ruby21Parser _reduce_249":{"type":"method","name":"_reduce_249","children":[],"call":[" args "," new_call "," argl ","op to_sym "]}," Ruby21Parser _reduce_248":{"type":"method","name":"_reduce_248","children":[],"call":["val [] "," value_expr "]}," Ruby21Parser _reduce_247":{"type":"method","name":"_reduce_247","children":[],"call":["val [] "," new_call "," argl ","op to_sym "," warn "]}," Ruby21Parser _reduce_244":{"type":"method","name":"_reduce_244","children":[],"call":["val [] "]}," Ruby21Parser _reduce_243":{"type":"method","name":"_reduce_243","children":[],"call":[" args "," array_to_hash ","val [] "," s "," s line ","c line "]}," Ruby21Parser _reduce_242":{"type":"method","name":"_reduce_242","children":[],"call":[" args "," array_to_hash ","val [] "," s "," s line "]}," Ruby21Parser _reduce_241":{"type":"method","name":"_reduce_241","children":[],"call":[" args ","val [] "," logical_op "]}," Ruby21Parser _reduce_239":{"type":"method","name":"_reduce_239","children":[],"call":[" value_expr ","val [] "," new_call "," argl ","val []= "," s line "," s "]}," Ruby21Parser _reduce_237":{"type":"method","name":"_reduce_237","children":[],"call":[" s ","val [] "," new_call "," value_expr "," logical_op "]}," Ruby21Parser _reduce_236":{"type":"method","name":"_reduce_236","children":[],"call":[" s ","val [] "," new_call ","result line ","arg line "," argl ","val []= "," value_expr "," s  line "," new_call  line "]}," Ruby21Parser _reduce_235":{"type":"method","name":"_reduce_235","children":[],"call":[" logical_op ","val [] "," s "," new_match "," s line ","lhs line "," new_call "," argl ","val []= "," value_expr "," logop "]}," Ruby21Parser _reduce_234":{"type":"method","name":"_reduce_234","children":[],"call":[" logical_op ","val [] "," new_match "," new_call "," value_expr "," logop "]}," Ruby21Parser _reduce_233":{"type":"method","name":"_reduce_233","children":[],"call":[" new_call "," argl ","val [] ","val []= "," value_expr ","result line ","arg line "," new_call  line "]}," Ruby21Parser _reduce_232":{"type":"method","name":"_reduce_232","children":[],"call":[" new_call "," argl ","val [] ","val []= "," value_expr "," s line ","lhs line "," s "," new_match "]}," Ruby21Parser _reduce_231":{"type":"method","name":"_reduce_231","children":[],"call":[" new_call "," value_expr ","val [] "," argl "," new_match "]}," Ruby21Parser _reduce_230":{"type":"method","name":"_reduce_230","children":[],"call":[" new_call ","val [] "," argl "]}," Ruby21Parser _reduce_229":{"type":"method","name":"_reduce_229","children":[],"call":[" s "," new_match ","val [] "," new_call "," argl "," get_match_node "]}," Ruby21Parser _reduce_228":{"type":"method","name":"_reduce_228","children":[],"call":[" new_match ","val [] "," new_call "," argl "," get_match_node "]}," Ruby21Parser _reduce_227":{"type":"method","name":"_reduce_227","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby21Parser _reduce_226":{"type":"method","name":"_reduce_226","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby21Parser _reduce_225":{"type":"method","name":"_reduce_225","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby21Parser _reduce_224":{"type":"method","name":"_reduce_224","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby21Parser _reduce_223":{"type":"method","name":"_reduce_223","children":[],"call":[" new_call "," argl ","val [] "," s "," s line "," lexer lineno "," lexer "]}," Ruby21Parser _reduce_222":{"type":"method","name":"_reduce_222","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby21Parser _reduce_221":{"type":"method","name":"_reduce_221","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby21Parser _reduce_220":{"type":"method","name":"_reduce_220","children":[],"call":[" new_call "," argl ","val [] "," s line "," s "]}," Ruby21Parser _reduce_219":{"type":"method","name":"_reduce_219","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby21Parser _reduce_218":{"type":"method","name":"_reduce_218","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby21Parser _reduce_217":{"type":"method","name":"_reduce_217","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby21Parser _reduce_216":{"type":"method","name":"_reduce_216","children":[],"call":[" new_call ","val [] "," s ","v2 last ","v1 last ","Integer  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type "," s line ","v1 line "," argl "]}," Ruby21Parser _reduce_215":{"type":"method","name":"_reduce_215","children":[],"call":[" new_call ","val [] "," s ","v2 last ","v1 last ","Integer  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type "," s line ","v1 line "," argl "]}," Ruby21Parser _reduce_214":{"type":"method","name":"_reduce_214","children":[],"call":[" new_call "," argl ","val [] "," s "," backref_assign_error "," new_op_asgn "," new_op_ new_op_asgn  "]}," Ruby21Parser _reduce_213":{"type":"method","name":"_reduce_213","children":[],"call":[" new_call "," argl ","val [] "," raise ","not yet: %p % "," new_const_op_asgn "," s line "," s ","lhs to_sym ","v1 line ","v2 last ","v1 last ","Integer  === ","v2 sexp_type == ","v2 sexp_type ","v1 sexp_type == ","v1 sexp_type "," s line  to_sym "]}," Ruby21Parser _reduce_212":{"type":"method","name":"_reduce_212","children":[],"call":[" new_call "," argl ","val [] "," raise ","not yet: %p % "," lexer lineno "," lexer "," s line ","v1 line "," s ","v2 last ","v1 last ","Integer  === ","v2 sexp_type == ","v2 sexp_type ","v1 sexp_type == ","v1 sexp_type "]}," Ruby21Parser _reduce_211":{"type":"method","name":"_reduce_211","children":[],"call":[" new_call "," argl ","val [] "," s ","val [] to_sym "," new_const_op_asgn "," s line ","lhs1 line ","lhs2 to_sym "," backref_assign_error "," new_op_asgn "," new_const_op_ new_op_asgn  "," s line 1 line "," s line 2 to_sym "," new_op_ new_op_asgn  "]}," Ruby21Parser _reduce_210":{"type":"method","name":"_reduce_210","children":[],"call":[" new_call "," argl ","val [] "," new_op_asgn2 "," s ","val [] to_sym "," s line ","lhs line ","op to_sym ","id to_sym "," new_const_op_asgn ","lhs to_sym "," wrap "," s line  line "," wrap  line "," s line  to_sym "," wrap  to_sym "]}," Ruby21Parser _reduce_209":{"type":"method","name":"_reduce_209","children":[],"call":[" new_call "," argl ","val [] "," new_op_asgn2 "," new_const_op_asgn "," s line ","lhs1 line "," s ","lhs2 to_sym "," s line 1 line "," s line 2 to_sym "]}," Ruby21Parser _reduce_208":{"type":"method","name":"_reduce_208","children":[],"call":[" new_call "," argl ","val [] "," s ","val [] to_sym ","val [] sexp_type= "," new_op_asgn2 "," s line ","lhs line ","op to_sym ","id to_sym "]}," Ruby21Parser _reduce_207":{"type":"method","name":"_reduce_207","children":[],"call":[" s ","v2 last ","v1 last ","Integer  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type ","val [] "," new_op_asgn ","val [] to_sym ","val [] sexp_type= "," new_op_asgn1 "," new_op_asgn2 ","Fixnum  === "]}," Ruby21Parser _reduce_206":{"type":"method","name":"_reduce_206","children":[],"call":[" s ","v2 last ","v1 last ","Integer  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type ","val [] "," new_assign "," new_op_asgn "," new_op_asgn2 ","Fixnum  === "]}," Ruby21Parser _reduce_205":{"type":"method","name":"_reduce_205","children":[],"call":[" backref_assign_error ","val [] "," new_assign "," new_op_asgn1 "]}," Ruby21Parser _reduce_204":{"type":"method","name":"_reduce_204","children":[],"call":[" yyerror "," new_op_asgn "]}," Ruby21Parser _reduce_203":{"type":"method","name":"_reduce_203","children":[],"call":[" yyerror "," new_assign ","val [] "]}," Ruby21Parser _reduce_202":{"type":"method","name":"_reduce_202","children":[],"call":[" s ","val [] to_sym ","val [] "]}," Ruby21Parser _reduce_201":{"type":"method","name":"_reduce_201","children":[],"call":[" new_op_asgn2 "," s ","val [] ","val [] to_sym "]}," Ruby21Parser _reduce_200":{"type":"method","name":"_reduce_200","children":[],"call":[" new_op_asgn2 "," s ","val [] ","val [] to_sym "]}," Ruby21Parser _reduce_199":{"type":"method","name":"_reduce_199","children":[],"call":[" s ","val [] ","val [] to_sym ","val [] sexp_type= ","val [] []= "]}," Ruby21Parser _reduce_198":{"type":"method","name":"_reduce_198","children":[],"call":[" s "," new_resbody ","val [] "," new_op_asgn "]}," Ruby21Parser _reduce_197":{"type":"method","name":"_reduce_197","children":[],"call":[" new_op_asgn "]}," Ruby21Parser _reduce_196":{"type":"method","name":"_reduce_196","children":[],"call":[" new_assign "," s "," new_resbody ","val [] "," node_assign "]}," Ruby21Parser _reduce_195":{"type":"method","name":"_reduce_195","children":[],"call":[" new_assign ","val [] "," node_assign "]}," Ruby21Parser _reduce_123":{"type":"method","name":"_reduce_123","children":[],"call":[" new_undef ","val [] "]}," Ruby21Parser _reduce_122":{"type":"method","name":"_reduce_122","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby21Parser _reduce_121":{"type":"method","name":"_reduce_121","children":[],"call":[" new_undef ","val [] "," s ","val [] to_sym ","result line ","pval line ","name to_sym "," new_undef  line "," s  line "]}," Ruby21Parser _reduce_119":{"type":"method","name":"_reduce_119","children":[],"call":[" s ","val [] to_sym ","val [] "," s line ","name to_sym "," wrap "]}," Ruby21Parser _reduce_116":{"type":"method","name":"_reduce_116","children":[],"call":["val [] "," lexer lex_state= "," lexer "," backref_assign_error "," yyerror "]}," Ruby21Parser _reduce_115":{"type":"method","name":"_reduce_115","children":[],"call":["val [] "," lexer lex_state= "," lexer "," s ","val [] to_sym "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," backref_assign_error "," s line ","id to_sym "," debug "]}," Ruby21Parser _reduce_111":{"type":"method","name":"_reduce_111","children":[],"call":[" s ","val [] to_sym ","val [] "," new_attrasgn "]}," Ruby21Parser _reduce_110":{"type":"method","name":"_reduce_110","children":[],"call":["val [] to_sym ","val [] "," aryset "," new_attrasgn "]}," Ruby21Parser _reduce_109":{"type":"method","name":"_reduce_109","children":[],"call":[" s ","val [] to_sym ","val [] "," debug20 "," assignable "," aryset "," debug "]}," Ruby21Parser _reduce_107":{"type":"method","name":"_reduce_107","children":[],"call":[" yyerror "," backref_assign_error ","val [] "," assignable ","result line= "," lexer lineno "," lexer "," assignable  line= ","result  lexer lineno = "," lexer  lexer lineno no "]}," Ruby21Parser _reduce_106":{"type":"method","name":"_reduce_106","children":[],"call":[" backref_assign_error ","val [] "," s ","val [] to_sym "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," s line ","id to_sym "," debug "]}," Ruby21Parser _reduce_105":{"type":"method","name":"_reduce_105","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," s line ","id to_sym "," lexer lineno "," lexer ","expr line "," debug ","va lexer lineno  [] to_sym ","vaexpr line  [] to_sym ","va lexer lineno  [] ","vaexpr line  [] "," in_sing lexer lineno e > "," in_singexpr line e > "," in_sing lexer lineno e "," in_singexpr line e "," s  lexer lineno ine "," s expr line ine ","  lexer lineno exer  lexer lineno ineno "," expr line exer expr line ineno ","  lexer lineno exer "," expr line exer ","expr  lexer lineno ine ","expr expr line ine "]}," Ruby21Parser _reduce_104":{"type":"method","name":"_reduce_104","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," new_attrasgn "," s line ","id to_sym ","expr line ","vaexpr line  [] to_sym ","vaexpr line  [] "," in_singexpr line e > "," in_singexpr line e "," s expr line ine ","expr expr line ine "]}," Ruby21Parser _reduce_103":{"type":"method","name":"_reduce_103","children":[],"call":[" new_attrasgn ","val [] "," s "]}," Ruby21Parser _reduce_102":{"type":"method","name":"_reduce_102","children":[],"call":[" s ","val [] "," new_attrasgn "]}," Ruby21Parser _reduce_101":{"type":"method","name":"_reduce_101","children":[],"call":[" new_attrasgn ","val [] "," aryset "," s "]}," Ruby21Parser _reduce_100":{"type":"method","name":"_reduce_100","children":[],"call":[" aryset ","val [] "," assignable "]}," Ruby21Parser _reduce_99":{"type":"method","name":"_reduce_99","children":[],"call":[" debug20 "," assignable ","val [] "]}," Ruby21Parser _reduce_98":{"type":"method","name":"_reduce_98","children":[],"call":[" assignable ","val [] "," list_append "]}," Ruby21Parser _reduce_97":{"type":"method","name":"_reduce_97","children":[],"call":[" backref_assign_error ","val [] "," s "," list_append "," s line ","item line "]}," Ruby21Parser _reduce_96":{"type":"method","name":"_reduce_96","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," debug20 "," in_single > "," in_single "," in_def ","val [] << ","val [] compact "," s line ","item line "]}," Ruby21Parser _reduce_95":{"type":"method","name":"_reduce_95","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," debug20 "," in_single > "," in_single "," in_def ","val [] << ","val [] compact "," s line ","lhs line "]}," Ruby21Parser _reduce_94":{"type":"method","name":"_reduce_94","children":[],"call":[" new_attrasgn ","val [] "," s "," s line ","lhs line "]}," Ruby21Parser _reduce_93":{"type":"method","name":"_reduce_93","children":[],"call":[" s ","val [] "]}," Ruby21Parser _reduce_92":{"type":"method","name":"_reduce_92","children":[],"call":[" new_attrasgn ","val [] "," s ","val [] sexp_body "," s line ","post sexp_body ","post line ","vapost line  [] ","vapost line  [] sexp_body "," s post line ine ","post post line ine "]}," Ruby21Parser _reduce_91":{"type":"method","name":"_reduce_91","children":[],"call":[" aryset ","val [] "," s ","val [] sexp_body "," s line ","post sexp_body ","post line "," lexer lineno "," lexer ","  s line set ","vapost line  [] ","va lexer lineno  [] ","vapost line  [] sexp_body ","va lexer lineno  [] sexp_body "," s post line ine "," s  lexer lineno ine ","post post line ine ","post  lexer lineno ine "," post line exer post line ineno ","  lexer lineno exer  lexer lineno ineno "," post line exer ","  lexer lineno exer "]}," Ruby21Parser _reduce_90":{"type":"method","name":"_reduce_90","children":[],"call":[" assignable ","val [] "," s ","ary concat ","val [] sexp_body "," s line "," lexer lineno "," lexer ","ary line ","post sexp_body ","splat line ","node line "," assignab lexer lineno e ","va lexer lineno  [] "," s  concat "," s line  concat ","va lexer lineno  [] sexp_body "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "," s  line "," s line  line ","ary  lexer lineno ine ","sp lexer lineno at  lexer lineno ine ","node  lexer lineno ine "]}," Ruby21Parser _reduce_89":{"type":"method","name":"_reduce_89","children":[],"call":[" assignable ","val [] "," s ","ary concat ","val [] sexp_body "," s line ","ary line ","post sexp_body ","splat line ","node line "," assignabnode line e ","vanode line  [] "," s  concat "," s line  concat ","vanode line  [] sexp_body "," s node line ine "," s  line "," s line  line ","ary node line ine ","spnode line at node line ine ","node node line ine "]}," Ruby21Parser _reduce_88":{"type":"method","name":"_reduce_88","children":[],"call":[" list_append ","val [] "," s ","ary concat ","val [] sexp_body "," s line ","node line ","ary line ","post sexp_body ","head line "," node line ist_append ","vanode line  [] "," list_append  concat "," s line  concat ","vanode line  [] sexp_body "," s node line ine ","node node line ine "," list_append  line "," s line  line ","ary node line ine ","head node line ine "]}," Ruby21Parser _reduce_87":{"type":"method","name":"_reduce_87","children":[],"call":[" s ","val [] ","val [] << ","ary concat ","val [] sexp_body "," list_append "," s line ","ary line ","post sexp_body ","head line ","head << ","vahead line  [] ","vahead line  [] << "," list_append  concat ","vahead line  [] sexp_body "," head line ist_append "," s head line ine "," list_append  line ","ary head line ine ","head head line ine "]}," Ruby21Parser _reduce_86":{"type":"method","name":"_reduce_86","children":[],"call":["val [] << ","val [] compact ","val [] "," s ","result concat ","ary2 sexp_body "," list_append "," s line ","head << ","head line ","result line ","splat line ","vahead line  [] << ","vahead line  [] compact ","vahead line  [] ","val [] <<  concat "," s  concat "," list_append  concat "," s line  concat ","resuhead line t concat "," head line ist_append "," s head line ine ","head head line ine ","val [] <<  line "," s  line "," list_append  line "," s line  line ","resuhead line t head line ine ","sphead line at head line ine "]}," Ruby21Parser _reduce_85":{"type":"method","name":"_reduce_85","children":[],"call":[" s ","val [] ","val [] << ","result concat ","ary2 sexp_body "," list_append "," s line ","result line ","splat line ","head line ","head << ","tail line "," s  concat "," list_append  concat "," s line  concat "," s  line "," list_append  line "," s line  line "]}," Ruby21Parser _reduce_84":{"type":"method","name":"_reduce_84","children":[],"call":["val [] "," s ","val [] << ","val [] compact "," s line ","head line ","head << ","tail line ","lhs line ","lhs << ","rhs compact "]}," Ruby21Parser _reduce_82":{"type":"method","name":"_reduce_82","children":[],"call":[" s ","val [] sexp_body ","val [] "," s line ","head line ","arg line ","val [] [] ","vaarg line  [] sexp_body ","vaarg line  [] "," s arg line ine ","head arg line ine ","arg arg line ine ","vaarg line  [] [] "]}," Ruby21Parser _reduce_81":{"type":"method","name":"_reduce_81","children":[],"call":[" s ","val [] "," s line ","arg line ","vaarg line  [] "," s arg line ine ","arg arg line ine "]}," Ruby21Parser _reduce_80":{"type":"method","name":"_reduce_80","children":[],"call":[" s ","ary concat ","val [] sexp_body ","val [] ","val [] [] "," s  concat "]}," Ruby21Parser _reduce_79":{"type":"method","name":"_reduce_79","children":[],"call":[" s ","val [] "]}," Ruby21Parser _reduce_78":{"type":"method","name":"_reduce_78","children":[],"call":[" s ","ary concat ","val [] sexp_body ","val [] "," list_append "," s line "," ret_args ","val [] last ","val [] [] "," list_append  concat "," s val [] last  "]}," Ruby21Parser _reduce_77":{"type":"method","name":"_reduce_77","children":[],"call":[" s ","val [] << ","val [] "," s line "," ret_args ","val [] last "," s val [] last  "]}," Ruby21Parser _reduce_76":{"type":"method","name":"_reduce_76","children":[],"call":[" s ","result concat ","ary2 sexp_body "," list_append "," s line "," ret_args ","val [] ","val [] last ","ary2 [] "," s  concat "," list_append  concat "," s line  concat "," s val [] last  "]}," Ruby21Parser _reduce_75":{"type":"method","name":"_reduce_75","children":[],"call":[" s ","val [] << ","val [] "," new_yield "," s line "," ret_args ","val [] last ","result line "," s val [] last  "," s  line "," new_yield  line "," s line  line ","result val [] last  "]}," Ruby21Parser _reduce_74":{"type":"method","name":"_reduce_74","children":[],"call":[" s ","val [] << ","val [] compact ","val [] "," new_super "," new_yield ","result line "," s  line "," new_super  line "," new_yield  line "]}," Ruby21Parser _reduce_73":{"type":"method","name":"_reduce_73","children":[],"call":[" s ","val [] ","block insert "," block_dup_check "," new_call ","msg to_sym "," new_super "," new_ new_call  "]}," Ruby21Parser _reduce_72":{"type":"method","name":"_reduce_72","children":[],"call":[" s ","val [] "," new_call ","val [] to_sym ","block insert "," block_dup_check ","msg to_sym ","result line ","id to_sym "," new_ new_call  "," s  line "," new_call  line "]}," Ruby21Parser _reduce_70":{"type":"method","name":"_reduce_70","children":[],"call":["val [] "," new_call ","val [] to_sym ","block insert "," block_dup_check ","msg to_sym ","result line ","lhs line ","op to_sym "," new_ new_call  ","val []  line "," new_call  line "]}," Ruby21Parser _reduce_68":{"type":"method","name":"_reduce_68","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last ","val [] concat ","val [] sexp_body ","result insert "," block_dup_check ","call concat ","args sexp_body "," s val [] last  "," s line  insert ","val [] concat  insert ","call concat  insert "]}," Ruby21Parser _reduce_67":{"type":"method","name":"_reduce_67","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last "," new_call ","val [] to_sym ","val [] concat ","val [] sexp_body ","call concat ","args sexp_body "," new_call line ","msg to_sym "," s val [] last  "," new_call val [] last  "]}," Ruby21Parser _reduce_66":{"type":"method","name":"_reduce_66","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last ","result line= "," new_call ","val [] to_sym "," new_call line "," lexer lineno "," lexer ","msg to_sym ","result line "," s val [] last  "," s line  line= "," new_call  line= "," new_call line  line= ","result val [] last = "," new_call val [] last  "," lexer val [] last no "," s line  line "," new_call  line "," new_call line  line ","result val [] last  "]}," Ruby21Parser _reduce_65":{"type":"method","name":"_reduce_65","children":[],"call":[" new_yield ","val [] "," lexer lineno "," lexer ","result line= "," new_yield  line= "," lexer lineno  line= "]}," Ruby21Parser _reduce_64":{"type":"method","name":"_reduce_64","children":[],"call":[" new_super ","val [] "," new_call ","val [] to_sym "," lexer lineno "," lexer "," new_call line ","blk line ","msg to_sym "]}," Ruby21Parser _reduce_63":{"type":"method","name":"_reduce_63","children":[],"call":["block insert "," block_dup_check "," new_call ","msg to_sym ","val [] ","val [] to_sym "," new_call line ","blk line "," new_ new_call  "," new_ new_call  line "]}," Ruby21Parser _reduce_62":{"type":"method","name":"_reduce_62","children":[],"call":[" new_call ","val [] ","val [] to_sym "]}," Ruby21Parser _reduce_61":{"type":"method","name":"_reduce_61","children":[],"call":["block insert "," block_dup_check "," new_call ","val [] ","msg to_sym "," new_ new_call  "]}," Ruby21Parser _reduce_60":{"type":"method","name":"_reduce_60","children":[],"call":[" new_call ","val [] ","val [] to_sym "]}," Ruby21Parser _reduce_59":{"type":"method","name":"_reduce_59","children":[],"call":["result insert ","val [] "," block_dup_check ","val [] concat ","val [] sexp_body "," lexer cond pop "," lexer cond "," lexer ","val [] [] ","val [] concat  insert "]}," Ruby21Parser _reduce_58":{"type":"method","name":"_reduce_58","children":[],"call":["val [] concat ","val [] sexp_body ","val [] "," lexer cond push "," lexer cond "," lexer "," lexer cond pop ","val [] [] "]}," Ruby21Parser _reduce_57":{"type":"method","name":"_reduce_57","children":[],"call":[" new_call ","val [] to_sym ","val [] "," value_expr "," lexer cond push "," lexer cond "," lexer "]}," Ruby21Parser _reduce_56":{"type":"method","name":"_reduce_56","children":[],"call":[" env unextend "," env ","result line= ","val [] "," new_iter "," value_expr "," new_iter  line= "," value_expr  line= "]}," Ruby21Parser _reduce_55":{"type":"method","name":"_reduce_55","children":[],"call":[" s ","val [] "," new_call line ","cmd line "," new_call "]}," Ruby21Parser _reduce_54":{"type":"method","name":"_reduce_54","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," s ","val [] "," new_call line ","cmd line "," new_call "]}," Ruby21Parser _reduce_53":{"type":"method","name":"_reduce_53","children":[],"call":[" new_call ","val [] ","val [] to_sym "," logical_op "," s "," new_call line "]}," Ruby21Parser _reduce_49":{"type":"method","name":"_reduce_49","children":[],"call":[" value_expr ","val [] "," new_rescue "," new_resbody "," s "," value_ value_expr  "]}," Ruby21Parser _reduce_47":{"type":"method","name":"_reduce_47","children":[],"call":[" s ","val [] "," backref_assign_error "," s line ","id to_sym ","lhs2 to_sym "]}," Ruby21Parser _reduce_46":{"type":"method","name":"_reduce_46","children":[],"call":[" s ","val [] "," debug20 ","op to_sym ","lhs2 to_sym "," s line ","id to_sym "]}," Ruby21Parser _reduce_45":{"type":"method","name":"_reduce_45","children":[],"call":[" logical_op ","val [] "," debug20 "," s ","op to_sym ","lhs2 to_sym ","result line ","prim line ","result sexp_type= ","call_op == ","op_asgn to_sym ","id to_sym "," logop "," logical_op  line "," s  line "," logop  line "," logical_op  sexp_type= "," s  sexp_type= "," logop  sexp_type= "]}," Ruby21Parser _reduce_44":{"type":"method","name":"_reduce_44","children":[],"call":[" logical_op ","val [] ","result line= ","val [] line ","result sexp_type= ","val [] == "," s ","val [] to_sym ","result line ","prim line ","call_op == ","op_asgn to_sym ","id to_sym "," logop "," logical_op  line= "," s  line= "," logop  line= "," logical_op  sexp_type= "," s  sexp_type= "," logop  sexp_type= "," logical_op  line "," s  line "," logop  line "]}," Ruby21Parser _reduce_42":{"type":"method","name":"_reduce_42","children":[],"call":[" new_assign ","val [] "," s ","val [] to_sym "," new_op_asgn1 "," new_op_asgn "," node_assign "]}," Ruby21Parser _reduce_41":{"type":"method","name":"_reduce_41","children":[],"call":[" new_assign ","val [] "," new_op_asgn "," node_assign "]}," Ruby21Parser _reduce_39":{"type":"method","name":"_reduce_39","children":[],"call":[" new_masgn ","val [] "]}," Ruby21Parser _reduce_38":{"type":"method","name":"_reduce_38","children":[],"call":[" new_assign "," s ","val [] "," new_masgn "," s line ","rhs line "," node_assign "]}," Ruby21Parser _reduce_37":{"type":"method","name":"_reduce_37","children":[],"call":[" backref_assign_error ","val [] "," new_assign "," s "," s line ","rhs line "," new_masgn "]}," Ruby21Parser _reduce_36":{"type":"method","name":"_reduce_36","children":[],"call":[" debug20 "," s ","val [] "," new_masgn "]}," Ruby21Parser _reduce_35":{"type":"method","name":"_reduce_35","children":[],"call":[" debug20 "," s ","val [] "," new_iter "," s line "," yyerror "," debug "," in_single > "," in_single "," in_def "]}," Ruby21Parser _reduce_34":{"type":"method","name":"_reduce_34","children":[],"call":["result line= ","val [] line ","val [] ","result sexp_type= ","val [] == "," s ","val [] to_sym "," new_iter "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," s line "," new_rescue "," new_resbody ","resbody line ","result []= "," s  line= "," new_iter  line= "," new_rescue  line= "," s  sexp_type= "," new_iter  sexp_type= "," new_rescue  sexp_type= "," new_ new_resbody  "," new_resbody  line "," s  []= "," new_iter  []= "," new_rescue  []= "]}," Ruby21Parser _reduce_33":{"type":"method","name":"_reduce_33","children":[],"call":["result line= ","val [] line ","val [] ","result sexp_type= ","val [] == "," s ","val [] to_sym "," new_rescue "," new_resbody "," s line ","resbody line "," new_until ","result []= "," s  line= "," new_rescue  line= "," new_until  line= "," s  sexp_type= "," new_rescue  sexp_type= "," new_until  sexp_type= "," new_ new_resbody  "," new_resbody  line "," s  []= "," new_rescue  []= "," new_until  []= "]}," Ruby21Parser _reduce_32":{"type":"method","name":"_reduce_32","children":[],"call":[" s ","val [] ","val [] to_sym "," new_until "," new_while "]}," Ruby21Parser _reduce_31":{"type":"method","name":"_reduce_31","children":[],"call":[" new_op_asgn "," new_while ","val [] "," new_if "]}," Ruby21Parser _reduce_30":{"type":"method","name":"_reduce_30","children":[],"call":[" new_masgn ","val [] "," new_if "]}," Ruby21Parser _reduce_28":{"type":"method","name":"_reduce_28","children":[],"call":[" new_iter ","val [] "," s "," yyerror "," debug20 "," in_single > "," in_single "," in_def "]}," Ruby21Parser _reduce_27":{"type":"method","name":"_reduce_27","children":[],"call":[" s "," new_resbody ","val [] "," yyerror "," s line ","lhs to_sym "]}," Ruby21Parser _reduce_26":{"type":"method","name":"_reduce_26","children":[],"call":[" new_until ","val [] "," s ","val [] to_sym "," s line ","lhs to_sym ","rhs to_sym "]}," Ruby21Parser _reduce_25":{"type":"method","name":"_reduce_25","children":[],"call":[" new_while ","val [] "," s ","val [] to_sym "," s line ","rhs to_sym ","lhs to_sym "," s line line "]}," Ruby21Parser _reduce_24":{"type":"method","name":"_reduce_24","children":[],"call":[" new_if ","val [] "," s line "," s "," s line line "," lexer lex_state= "," lexer "]}," Ruby21Parser _reduce_23":{"type":"method","name":"_reduce_23","children":[],"call":[" new_if ","val [] "," lexer lineno "," lexer "," lexer lex_state= "]}," Ruby21Parser _reduce_22":{"type":"method","name":"_reduce_22","children":[],"call":["val [] "," yyerror "]}," Ruby21Parser _reduce_21":{"type":"method","name":"_reduce_21","children":[],"call":[" yyerror "," env extend "," env "," debug20 "," in_single > "," in_single "," in_def "]}," Ruby21Parser _reduce_20":{"type":"method","name":"_reduce_20","children":[],"call":[" s ","val [] ","val [] to_sym "," debug20 "," debug "]}," Ruby21Parser _reduce_19":{"type":"method","name":"_reduce_19","children":[],"call":[" s ","val [] to_sym ","val [] "," debug20 "," block_append "]}," Ruby21Parser _reduce_18":{"type":"method","name":"_reduce_18","children":[],"call":[" s line ","val [] "," s "," block_append "]}," Ruby21Parser _reduce_17":{"type":"method","name":"_reduce_17","children":[],"call":[" lexer lineno "," lexer "," lexer lex_state= "]}," Ruby21Parser _reduce_16":{"type":"method","name":"_reduce_16","children":[],"call":[" debug20 ","val [] "," new_compstmt "]}," Ruby21Parser _reduce_15":{"type":"method","name":"_reduce_15","children":[],"call":[" block_append ","val [] "," new_compstmt "," new_body "]}," Ruby21Parser _reduce_12":{"type":"method","name":"_reduce_12","children":[],"call":[" new_compstmt "," yyerror ","_values [] "," new_iter "," s line "," s "]}," Ruby21Parser _reduce_11":{"type":"method","name":"_reduce_11","children":[],"call":[" new_body "," new_iter "," s "," lexer lineno "," lexer "]}," Ruby21Parser _reduce_10":{"type":"method","name":"_reduce_10","children":[],"call":[" new_iter ","val [] "," s ","preexe line ","iter line "]}," Ruby21Parser _reduce_9":{"type":"method","name":"_reduce_9","children":[],"call":[" env extend "," env "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," debug "]}," Ruby21Parser _reduce_8":{"type":"method","name":"_reduce_8","children":[],"call":["val [] "]}," Ruby21Parser _reduce_6":{"type":"method","name":"_reduce_6","children":[],"call":[" block_append ","val [] "]}," Ruby21Parser _reduce_3":{"type":"method","name":"_reduce_3","children":[],"call":["val [] "]}," Ruby21Parser _reduce_2":{"type":"method","name":"_reduce_2","children":[],"call":[" new_compstmt "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer cond pop "," lexer cond "]}," Ruby21Parser _reduce_1":{"type":"method","name":"_reduce_1","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby20Parser _reduce_none":{"type":"method","name":"_reduce_none","children":[],"call":["val [] "]}," Ruby20Parser _reduce_619":{"type":"method","name":"_reduce_619","children":[],"call":[]}," Ruby20Parser _reduce_618":{"type":"method","name":"_reduce_618","children":[],"call":[" yyerrok "]}," Ruby20Parser _reduce_615":{"type":"method","name":"_reduce_615","children":[],"call":[" yyerrok "," s line "," s ","arg line "," s arg line  ","arg arg line  "]}," Ruby20Parser _reduce_592":{"type":"method","name":"_reduce_592","children":[],"call":[" s ","val [] "," assignable ","result << "," lexer lineno "," lexer "," env []= "," env "," yyerror ","result [] == ","result [] "," s  << "," assignable  << ","val []  << "," s  [] == "," assignable  [] == ","val []  [] == "," s  [] "," assignable  [] ","val []  [] "]}," Ruby20Parser _reduce_591":{"type":"method","name":"_reduce_591","children":[],"call":[" s ","val [] ","val [] [] to_sym ","val [] [] ","val last "," block_append "," assignable "," s line ","optblk line ","id to_sym "," lexer lex_state= "," lexer "]}," Ruby20Parser _reduce_590":{"type":"method","name":"_reduce_590","children":[],"call":[" s ","val [] "," assignable "," s line ","opt line ","val [] [] to_sym ","val [] [] "]}," Ruby20Parser _reduce_589":{"type":"method","name":"_reduce_589","children":[],"call":["result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] ","val [] dup ","result << "," assignable ","val [] to_sym "," s ","val [] [] to_sym ","val [] [] ","result []= ","val []  sexp_type= "," assignable  sexp_type= "," s  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? ","val [] []  empty? ","val []  << "," assignable  << "," s  << ","val []  []= "," assignable  []= "," s  []= "]}," Ruby20Parser _reduce_587":{"type":"method","name":"_reduce_587","children":[],"call":["val [] "," assignable ","val [] to_sym ","result []= ","list push ","more empty? ","val [] [] ","val [] dup "," s line ","opt line "," s ","(str \"&\") to_sym "," env []= "," env ","val []  []= "," assignable  []= "," s line  []= ","(str \"&\") to_sym  []= ","val [] dup  push ","val [] []  empty? "]}," Ruby20Parser _reduce_586":{"type":"method","name":"_reduce_586","children":[],"call":[" s "," assignable ","val [] "," args ","result << "," s  << "," assignable  << "," args  << ","val []  << "]}," Ruby20Parser _reduce_585":{"type":"method","name":"_reduce_585","children":[],"call":[" yyerror ","result sexp_type == ","result sexp_type ","val [] "," lexer lineno "," lexer "," env []= "," env "," s line ","optblk line "," s ","result [] == ","result [] ","val []  sexp_type == "," s line  sexp_type == "," s  sexp_type == ","val []  sexp_type "," s line  sexp_type "," s  sexp_type ","val []  [] == "," s line  [] == "," s  [] == ","val []  [] "," s line  [] "," s  [] "]}," Ruby20Parser _reduce_584":{"type":"method","name":"_reduce_584","children":[],"call":[" lexer lex_state= "," lexer "," assignable ","val [] to_sym ","val [] ","list << ","item last "," args ","id to_sym "," s "," env []= "," env "," yyerror ","result [] == ","result [] ","list <<  [] == "," args  [] == "," s  [] == "," assignable  [] == ","val []  [] == ","list <<  [] "," args  [] "," s  [] "," assignable  [] ","val []  [] "]}," Ruby20Parser _reduce_582":{"type":"method","name":"_reduce_582","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym ","list << ","item last "," lexer lex_state= "," lexer "," lexer lineno "]}," Ruby20Parser _reduce_581":{"type":"method","name":"_reduce_581","children":[],"call":["val [] "," args "," s line "," s "," env []= "," env ","label to_sym "," assignable ","id to_sym "]}," Ruby20Parser _reduce_580":{"type":"method","name":"_reduce_580","children":[],"call":["(str \"&\") to_sym "," env []= "," env ","val [] to_sym ","val [] ","result << "," s line ","list line "," s ","list sexp_type == ","list sexp_type ","label to_sym "," block_append ","(str \"&\") to_sym  << "," s line  << "," block_append  << ","val []  << "]}," Ruby20Parser _reduce_577":{"type":"method","name":"_reduce_577","children":[],"call":[" env []= "," env "," s ","val [] ","label to_sym "," raise ","val inspect "," debug20 "," s line "," lexer lineno "," lexer "]}," Ruby20Parser _reduce_576":{"type":"method","name":"_reduce_576","children":[],"call":[" assignable ","val [] to_sym ","val [] "," s "," env []= "," env ","label to_sym "," s line ","list << ","item last "]}," Ruby20Parser _reduce_573":{"type":"method","name":"_reduce_573","children":[],"call":[" block_append ","val [] "," yyerror "," s line "," s "," env []= "," env ","label to_sym "]}," Ruby20Parser _reduce_572":{"type":"method","name":"_reduce_572","children":[],"call":[" s ","val [] "," yyerror ","result line_max= ","result << ","item line_max ","Sexp  === "," s line ","list line ","list sexp_type == ","list sexp_type "," block_append "," s  line_max= "," s line  line_max= "," block_append  line_max= ","result item line_max = "," s  << "," s line  << "," block_append  << ","item item line_max  "]}," Ruby20Parser _reduce_571":{"type":"method","name":"_reduce_571","children":[],"call":["result << ","val [] "," env []= "," env ","val [] to_sym "," yyerror ","id to_sym "," block_append "," new_arg "," s ","val []  << "," block_append  << "," new_arg  << "," s  << "]}," Ruby20Parser _reduce_570":{"type":"method","name":"_reduce_570","children":[],"call":[" s ","val [] "," args "," yyerror ","result << "," s  << "," args  << ","val []  << "]}," Ruby20Parser _reduce_569":{"type":"method","name":"_reduce_569","children":[],"call":[" assignable ","val [] "," yyerror "," args ","result << "," s "," assignable  << "," args  << ","val []  << "," s  << "]}," Ruby20Parser _reduce_568":{"type":"method","name":"_reduce_568","children":[],"call":[" assignable ","val [] "," yyerror "," args "," s "," env []= "," env ","id to_sym ","list << ","item last "]}," Ruby20Parser _reduce_567":{"type":"method","name":"_reduce_567","children":[],"call":[" yyerror "," args "," assignable ","val [] "," debug20 "]}," Ruby20Parser _reduce_566":{"type":"method","name":"_reduce_566","children":[],"call":["val [] "," yyerror "," args "," assignable "," s "," env []= "," env ","label to_sym "]}," Ruby20Parser _reduce_563":{"type":"method","name":"_reduce_563","children":[],"call":[" args "," yyerror "," raise ","val inspect "," debug20 ","val [] ","result << "," s "," args  << ","val []  << "," s  << "]}," Ruby20Parser _reduce_561":{"type":"method","name":"_reduce_561","children":[],"call":["list << ","item last "," args "]}," Ruby20Parser _reduce_559":{"type":"method","name":"_reduce_559","children":[],"call":[" s ","val [] "," env []= "," env ","label to_sym "," args "," debug20 ","list << ","item last "]}," Ruby20Parser _reduce_558":{"type":"method","name":"_reduce_558","children":[],"call":[" s ","val [] "," env []= "," env ","label to_sym "," args "]}," Ruby20Parser _reduce_557":{"type":"method","name":"_reduce_557","children":[],"call":["result << "," s ","list sexp_type == ","list sexp_type "," args ","val [] ","label to_sym "," env []= "," env ","val [] to_sym "," s  << "," args  << "]}," Ruby20Parser _reduce_556":{"type":"method","name":"_reduce_556","children":[],"call":[" raise ","val inspect "," debug20 ","val [] ","result << "," s "," args ","label to_sym "," env []= "," env ","list sexp_type == ","list sexp_type ","val []  << "," s  << "," args  << "]}," Ruby20Parser _reduce_555":{"type":"method","name":"_reduce_555","children":[],"call":["val [] "," args ","result << "," s ","list sexp_type == ","list sexp_type "," yyerror "," raise ","val inspect "," debug20 ","val []  << "," args  << "," s  << "]}," Ruby20Parser _reduce_553":{"type":"method","name":"_reduce_553","children":[],"call":[" env []= "," env ","val [] to_sym ","val [] "," args "," yyerror "]}," Ruby20Parser _reduce_551":{"type":"method","name":"_reduce_551","children":[],"call":[" yyerror "," args "," env []= "," env ","val [] to_sym ","val [] "]}," Ruby20Parser _reduce_550":{"type":"method","name":"_reduce_550","children":[],"call":[" yyerror "," args "]}," Ruby20Parser _reduce_549":{"type":"method","name":"_reduce_549","children":[],"call":[" yyerror ","val [] "," lexer command_start= "," lexer "," lexer lex_state= "," in_kwarg= "," args "]}," Ruby20Parser _reduce_548":{"type":"method","name":"_reduce_548","children":[],"call":[" yyerror "," lexer lex_state "," lexer "," in_kwarg= "," in_kwarg "," args "]}," Ruby20Parser _reduce_547":{"type":"method","name":"_reduce_547","children":[],"call":[" args "," lexer command_start= "," lexer "," lexer lex_state= ","val [] "," in_kwarg= "," yyerror "]}," Ruby20Parser _reduce_546":{"type":"method","name":"_reduce_546","children":[],"call":[" args "," lexer lex_state "," lexer "," in_kwarg= "," in_kwarg "," yyerror ","val [] "]}," Ruby20Parser _reduce_545":{"type":"method","name":"_reduce_545","children":[],"call":[" args ","val [] "," lexer command_start= "," lexer "," lexer lex_state= "]}," Ruby20Parser _reduce_544":{"type":"method","name":"_reduce_544","children":[],"call":[" args "," lexer command_start= "," lexer "," lexer lex_state= "," in_kwarg= "," end_args "]}," Ruby20Parser _reduce_543":{"type":"method","name":"_reduce_543","children":[],"call":[" args "," in_kwarg= "," in_kwarg "," lexer lex_state "," lexer "," s line "," lexer lineno "," s ","val [] "]}," Ruby20Parser _reduce_542":{"type":"method","name":"_reduce_542","children":[],"call":[" args "," lexer command_start= "," lexer "," lexer lex_state= ","val [] "," s line "," lexer lineno "," s "," end_args "]}," Ruby20Parser _reduce_541":{"type":"method","name":"_reduce_541","children":[],"call":[" args "," debug20 "," assignable ","val [] "," s line "," lexer lineno "," lexer "," s "," end_args "]}," Ruby20Parser _reduce_540":{"type":"method","name":"_reduce_540","children":[],"call":[" args ","val [] "," assignable "," s line "," lexer lineno "," lexer "," s "," lexer lex_state "," in_kwarg= "," in_kwarg "]}," Ruby20Parser _reduce_539":{"type":"method","name":"_reduce_539","children":[],"call":[" args "," lexer command_start= "," lexer "," lexer lex_state= "," gettable ","Sexp  === ","val [] "," debug20 "," assignable "," end_args "]}," Ruby20Parser _reduce_538":{"type":"method","name":"_reduce_538","children":[],"call":[" args "," s ","val [] "," gettable ","Sexp  === "," assignable "," s line "]}," Ruby20Parser _reduce_537":{"type":"method","name":"_reduce_537","children":[],"call":[" args "," s ","val [] "," s line "," lexer lineno "," lexer "," gettable ","Sexp  === ","va lexer lineno  [] "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "," gettab lexer lineno e "]}," Ruby20Parser _reduce_536":{"type":"method","name":"_reduce_536","children":[],"call":[" args "," debug20 "," assignable ","val [] "," s line "," lexer lineno "," lexer "," s "," gettable ","Sexp  === "," debug "," lexer command_start= "," lexer lex_state= "]}," Ruby20Parser _reduce_535":{"type":"method","name":"_reduce_535","children":[],"call":[" args "," assignable ","val [] "," s line "," lexer lineno "," lexer "," s "," file "," assignab lexer lineno e ","va lexer lineno  [] "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "," fi lexer lineno e "]}," Ruby20Parser _reduce_534":{"type":"method","name":"_reduce_534","children":[],"call":[" args "," gettable ","Sexp  === ","val [] "," s line "," lexer lineno "," lexer "," s "]}," Ruby20Parser _reduce_533":{"type":"method","name":"_reduce_533","children":[],"call":[" args "," gettable ","Sexp  === ","val [] "," s line "," lexer lineno "," lexer "," s "," file ","result line "," raise ","val inspect ","val first "," debug "," assignable "," args  line "," gettable  line "," s line  line "," assignable  line "]}," Ruby20Parser _reduce_532":{"type":"method","name":"_reduce_532","children":[],"call":[" s "," s line "," lexer lineno "," lexer "," args "," assignable ","val [] "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "," assignab lexer lineno e ","va lexer lineno  [] "]}," Ruby20Parser _reduce_531":{"type":"method","name":"_reduce_531","children":[],"call":["val [] "," s "," lexer lineno "," lexer "," s line "," args "," gettable ","Sexp  === "]}," Ruby20Parser _reduce_529":{"type":"method","name":"_reduce_529","children":[],"call":[" args "," s "," s line "," lexer lineno "," lexer ","val [] "," lexer command_start= "," lexer lex_state= "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer ","va lexer lineno  [] ","  lexer lineno exer command_start= ","  lexer lineno exer  lexer lineno ex_state= "]}," Ruby20Parser _reduce_528":{"type":"method","name":"_reduce_528","children":[],"call":[" args "," s "," s line "," lexer lineno "," lexer "," debug20 "," yyerrok "]}," Ruby20Parser _reduce_527":{"type":"method","name":"_reduce_527","children":[],"call":[" args "," s "," s line "," lexer lineno "," lexer "," file ","val [] "]}," Ruby20Parser _reduce_526":{"type":"method","name":"_reduce_526","children":[],"call":[" lexer command_start= "," lexer "," lexer lex_state= ","val [] "," s "," s line "," lexer lineno "," args "]}," Ruby20Parser _reduce_525":{"type":"method","name":"_reduce_525","children":[],"call":[" lexer command_start= "," lexer "," lexer lex_state= ","val [] ","val [] -@ "," args "," s line "," lexer lineno "," s "]}," Ruby20Parser _reduce_524":{"type":"method","name":"_reduce_524","children":[],"call":[" debug20 "," yyerrok ","val [] -@ ","val [] "," lexer lex_state= "," lexer "," s line "," lexer lineno "," s "," lexer command_start= "]}," Ruby20Parser _reduce_523":{"type":"method","name":"_reduce_523","children":[],"call":["val [] ","val [] -@ "," lexer command_start= "," lexer "," lexer lex_state= "," s line "," lexer lineno "," s "," debug20 "," yyerrok "]}," Ruby20Parser _reduce_522":{"type":"method","name":"_reduce_522","children":[],"call":[" lexer lex_state= "," lexer ","val [] -@ ","val [] "," debug20 "," yyerrok "," assignable "]}," Ruby20Parser _reduce_521":{"type":"method","name":"_reduce_521","children":[],"call":[" debug20 "," s line ","result line "," s ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," lexer lineno "," lexer "," lexer lex_state= ","val [] "," assignable "," s line  line ","val []  line "," assignable  line "," s line  last to_sym ","val []  last to_sym "," assignable  last to_sym "," s line  last ","val []  last "," assignable  last "," s line  sexp_type= ","val []  sexp_type= "," assignable  sexp_type= "," s line  sexp_type ","val []  sexp_type "," assignable  sexp_type "]}," Ruby20Parser _reduce_520":{"type":"method","name":"_reduce_520","children":[],"call":[" s ","val [] ","val [] -@ ","num -@ "," lexer lex_state= "," lexer "," gettable ","Sexp  === "]}," Ruby20Parser _reduce_519":{"type":"method","name":"_reduce_519","children":[],"call":[" s ","val [] ","val [] -@ "," debug20 "," s line ","result line ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," lexer lineno "," lexer "," lexer lex_state= ","num -@ "," gettable ","Sexp  === "," s  line ","val [] -@  line "," s line  line "," gettable  line "," s  last to_sym ","val [] -@  last to_sym "," s line  last to_sym "," gettable  last to_sym "," s  last ","val [] -@  last "," s line  last "," gettable  last "," s  sexp_type= ","val [] -@  sexp_type= "," s line  sexp_type= "," gettable  sexp_type= "," s  sexp_type ","val [] -@  sexp_type "," s line  sexp_type "," gettable  sexp_type "]}," Ruby20Parser _reduce_518":{"type":"method","name":"_reduce_518","children":[],"call":[" debug20 "," assignable ","val [] "," s "]}," Ruby20Parser _reduce_517":{"type":"method","name":"_reduce_517","children":[],"call":[" assignable ","val [] "," s ","num -@ "," lexer lineno "," lexer "," debug20 "]}," Ruby20Parser _reduce_516":{"type":"method","name":"_reduce_516","children":[],"call":[" gettable ","Sexp  === ","val [] "," debug20 "," s ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," lexer lex_state= "," lexer ","val [] to_sym "," debug "," s line ","result line "," lexer lineno "," assignable ","num -@ "," file "," gettable  last to_sym "," s  last to_sym ","val []  last to_sym ","val [] to_sym  last to_sym "," s line  last to_sym "," assignable  last to_sym "," gettable  last "," s  last ","val []  last ","val [] to_sym  last "," s line  last "," assignable  last "," gettable  sexp_type= "," s  sexp_type= ","val []  sexp_type= ","val [] to_sym  sexp_type= "," s line  sexp_type= "," assignable  sexp_type= "," gettable  sexp_type "," s  sexp_type ","val []  sexp_type ","val [] to_sym  sexp_type "," s line  sexp_type "," assignable  sexp_type "," gettable  line "," s  line ","val []  line ","val [] to_sym  line "," s line  line "," assignable  line "]}," Ruby20Parser _reduce_515":{"type":"method","name":"_reduce_515","children":[],"call":[" gettable ","Sexp  === ","val [] ","val [] to_sym "," lexer lex_state= "," lexer "," assignable "," s "]}," Ruby20Parser _reduce_514":{"type":"method","name":"_reduce_514","children":[],"call":[" s ","val [] to_sym ","val [] "," gettable ","Sexp  === "]}," Ruby20Parser _reduce_513":{"type":"method","name":"_reduce_513","children":[],"call":[" s "," lexer lineno "," lexer "," s line ","val [] to_sym ","val [] "," lexer lex_state= "," gettable ","Sexp  === "," debug ","result line ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," s  line "," s line  line ","val [] to_sym  line "," gettable  line "," s  last to_sym "," s line  last to_sym ","val [] to_sym  last to_sym "," gettable  last to_sym "," s  last "," s line  last ","val [] to_sym  last "," gettable  last "," s  sexp_type= "," s line  sexp_type= ","val [] to_sym  sexp_type= "," gettable  sexp_type= "," s  sexp_type "," s line  sexp_type ","val [] to_sym  sexp_type "," gettable  sexp_type "]}," Ruby20Parser _reduce_512":{"type":"method","name":"_reduce_512","children":[],"call":[" s "," file "," s line "," lexer lineno "," lexer ","val [] to_sym ","val [] "]}," Ruby20Parser _reduce_511":{"type":"method","name":"_reduce_511","children":[],"call":[" s ","val [] to_sym ","val [] "," s line "," lexer lineno "," lexer ","id to_sym "," lexer lex_state= "," wrap "," lexer src current_line "," lexer src "," file "]}," Ruby20Parser _reduce_510":{"type":"method","name":"_reduce_510","children":[],"call":[" s ","val [] to_sym ","val [] "," lexer lex_state= "," lexer "," raise ","stmt inspect "," debug20 "," s line ","stmt sexp_type "," lexer cmdarg restore "," lexer cmdarg "," lexer cond restore "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer lineno ","id to_sym "," wrap "," file "]}," Ruby20Parser _reduce_509":{"type":"method","name":"_reduce_509","children":[],"call":[" s "," lexer lex_state= "," lexer "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer lineno "," lexer lex_state "," lexer cmdarg store "," lexer cmdarg "," lexer cond store "," lexer cond "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "," s line ","val [] to_sym ","val [] "]}," Ruby20Parser _reduce_508":{"type":"method","name":"_reduce_508","children":[],"call":[" s ","val [] to_sym ","val [] "," s line ","str line "," lexer lex_strterm= "," lexer "," raise ","stmt inspect "," debug20 ","stmt sexp_type "," lexer lex_state= "," lexer cond pop "," lexer cond "," lexer cmdarg pop "," lexer cmdarg "," lexer string_nest= "," lexer brace_nest= "," wrap "]}," Ruby20Parser _reduce_502":{"type":"method","name":"_reduce_502","children":[],"call":["val [] -@ ","val [] "," lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm "," lexer string_nest= "," lexer brace_nest= "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," lexer lineno "," lexer lex_state "," lexer string_nest "," lexer brace_nest "," wrap "]}," Ruby20Parser _reduce_501":{"type":"method","name":"_reduce_501","children":[],"call":["val [] -@ ","val [] "," new_string "," literal_concat "," s line ","str line "," s "," lexer lex_strterm= "," lexer "," wrap "]}," Ruby20Parser _reduce_498":{"type":"method","name":"_reduce_498","children":[],"call":[" debug20 "," s ","result last to_sym ","result last ","result sexp_type= ","result sexp_type ","val [] "," lexer lex_state= "," lexer "," literal_concat "," new_qsym_list "," s line "," lexer lineno ","str line "," lexer lex_strterm= ","result []= ","result [] "," s  last to_sym ","val []  last to_sym "," literal_concat  last to_sym "," new_qsym_list  last to_sym "," s line  last to_sym "," s  last ","val []  last "," literal_concat  last "," new_qsym_list  last "," s line  last "," s  sexp_type= ","val []  sexp_type= "," literal_concat  sexp_type= "," new_qsym_list  sexp_type= "," s line  sexp_type= "," s  sexp_type ","val []  sexp_type "," literal_concat  sexp_type "," new_qsym_list  sexp_type "," s line  sexp_type "," s  []= ","val []  []= "," literal_concat  []= "," new_qsym_list  []= "," s line  []= "," s  [] ","val []  [] "," literal_concat  [] "," new_qsym_list  [] "," s line  [] "]}," Ruby20Parser _reduce_493":{"type":"method","name":"_reduce_493","children":[],"call":["val [] to_sym ","val [] "," new_qsym_list "," s line "," s "," +@ "," prev_value_to_lineno ","_values last "," literal_concat "," s  prev_value_to_lineno  "," prev_value_to_ prev_value_to_lineno no "]}," Ruby20Parser _reduce_492":{"type":"method","name":"_reduce_492","children":[],"call":["val [] to_sym ","val [] "," lexer lex_state= "," lexer ","val [] dup << "," new_qword_list_entry ","val [] dup "," s line "," lexer lineno "," s "," new_qsym_list_entry "]}," Ruby20Parser _reduce_490":{"type":"method","name":"_reduce_490","children":[],"call":[" s ","val [] to_sym ","val [] "," new_symbol_list line "," lexer lineno "," lexer "," new_symbol_list "," s line ","val [] dup << "," new_qword_list_entry ","val [] dup "," lexer lex_state= "," +@ "," prev_value_to_lineno ","_values last "," new_symbol_list  prev_value_to_lineno  "," lexer  prev_value_to_lineno no "," s  prev_value_to_lineno  "," prev_value_to_ prev_value_to_lineno no "]}," Ruby20Parser _reduce_489":{"type":"method","name":"_reduce_489","children":[],"call":[" s ","val [] to_sym ","val [] ","list line= ","list dup << "," new_symbol_list_entry ","list dup "," new_qword_list ","val [] dup << "," new_qsym_list_entry ","val [] dup "]}," Ruby20Parser _reduce_488":{"type":"method","name":"_reduce_488","children":[],"call":[" s ","val [] to_sym ","val [] "," lexer lineno "," lexer "," new_symbol_list line "," new_symbol_list ","list line ","result line_max= "," new_qsym_list "," s  line_max= ","val []  line_max= "," lexer lineno  line_max= "," new_symbol_list line  line_max= ","list line  line_max= "," new_qsym_list  line_max= "]}," Ruby20Parser _reduce_487":{"type":"method","name":"_reduce_487","children":[],"call":[" raise ","stmt inspect "," debug20 "," s ","stmt sexp_type "," lexer lex_state= "," lexer "," lexer cmdarg restore "," lexer cmdarg "," lexer cond restore "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," s line "," lexer lineno ","list line= ","val [] to_sym ","val [] ","result line_max= ","val [] dup << "," new_qword_list_entry ","val [] dup ","stmt [] "," s  line_max= "," s line  line_max= ","val [] dup <<  line_max= "]}," Ruby20Parser _reduce_486":{"type":"method","name":"_reduce_486","children":[],"call":[" lexer lex_state= "," lexer "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer lex_state "," lexer cmdarg store "," lexer cmdarg "," lexer cond store "," lexer cond "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm ","val [] dup << "," new_symbol_list_entry ","val [] dup ","val [] "," literal_concat "," lexer lineno ","list line "," s ","val [] to_sym ","result line_max= "," new_qword_list "," raise ","stmt inspect "," debug20 ","stmt [] "," lexer cmdarg restore "," lexer cond restore ","val [] dup <<  line_max= "," literal_concat  line_max= "," lexer lineno  line_max= ","list line  line_max= "," s  line_max= "," new_qword_list  line_max= "]}," Ruby20Parser _reduce_485":{"type":"method","name":"_reduce_485","children":[],"call":[" s ","val [] "," lexer lex_strterm= "," lexer "," new_symbol_list "," s line "," lexer lineno "," raise ","stmt inspect "," debug20 ","stmt [] "," lexer cmdarg lexpop "," lexer cmdarg "," lexer cond lexpop "," lexer cond "," lexer string_nest= "," lexer brace_nest= ","result line_max= ","list line "," lexer cmdarg restore "," lexer cond restore "," lexer lex_state= "," lexer lex_state "," lexer cmdarg store "," lexer cond store "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "," s  line_max= "," new_symbol_list  line_max= "," s line  line_max= ","list line  line_max= "]}," Ruby20Parser _reduce_484":{"type":"method","name":"_reduce_484","children":[],"call":[" lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm ","val [] ","val [] dup << "," new_word_list_entry ","val [] dup "," literal_concat ","list dup << "," new_symbol_list_entry ","list dup "," lexer cmdarg push "," lexer cmdarg "," lexer cond push "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer string_nest "," lexer brace_nest ","result line_max= "," s line "," s "," lexer cmdarg store "," lexer cond store "," lexer lex_state "," lexer lex_strterm  line_max= ","val []  line_max= ","val [] dup <<  line_max= "," literal_concat  line_max= ","list dup <<  line_max= "," s line  line_max= "," s  line_max= "]}," Ruby20Parser _reduce_483":{"type":"method","name":"_reduce_483","children":[],"call":[" new_string "," s "," new_word_list "," new_symbol_list ","val [] "," lexer lex_strterm= "," lexer ","result line_max= ","list line "," lexer lex_state= "," lexer lex_strterm "," new_string  line_max= "," s  line_max= "," new_word_list  line_max= "," new_symbol_list  line_max= ","list line  line_max= "," lexer lex_strterm  line_max= "]}," Ruby20Parser _reduce_482":{"type":"method","name":"_reduce_482","children":[],"call":[" literal_concat ","val [] ","val [] dup << "," new_word_list_entry ","val [] dup ","list line "," lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm ","result line_max= "," s line "," s "," new_string "," literal_concat  line_max= ","val []  line_max= ","val [] dup <<  line_max= "," lexer lex_strterm  line_max= ","list line  line_max= "," s line  line_max= "," new_string  line_max= "]}," Ruby20Parser _reduce_481":{"type":"method","name":"_reduce_481","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," new_word_list ","val [] ","result line_max= ","list dup << "," new_symbol_list_entry ","list dup "," new_string "," literal_concat "," s line  line_max= "," new_word_list  line_max= "," s  line_max= ","list dup <<  line_max= "," new_string  line_max= "," literal_concat  line_max= "]}," Ruby20Parser _reduce_480":{"type":"method","name":"_reduce_480","children":[],"call":[" literal_concat ","val [] ","val [] dup << "," new_word_list_entry ","val [] dup "," new_regexp "," new_symbol_list "]}," Ruby20Parser _reduce_479":{"type":"method","name":"_reduce_479","children":[],"call":[" new_word_list "," new_xstring ","val [] "," s line "," lexer lineno "," lexer "," s ","result line_max= ","list line "," literal_concat "," new_word_list  line_max= "," new_xstring  line_max= "," s line  line_max= ","list line  line_max= "," literal_concat  line_max= "]}," Ruby20Parser _reduce_478":{"type":"method","name":"_reduce_478","children":[],"call":[" literal_concat ","val [] "," new_string "," new_regexp ","val [] dup << "," new_word_list_entry ","val [] dup ","result line_max= "," s line "," s "," literal_concat  line_max= ","val []  line_max= "," new_string  line_max= "," new_regexp  line_max= ","val [] dup <<  line_max= "," s line  line_max= "]}," Ruby20Parser _reduce_477":{"type":"method","name":"_reduce_477","children":[],"call":[" s "," dedent ","func =~ "," new_xstring "," new_word_list "," literal_concat ","val [] "," new_x dedent ing "]}," Ruby20Parser _reduce_476":{"type":"method","name":"_reduce_476","children":[],"call":["val [] dup << "," new_qsym_list_entry ","val [] dup ","val [] "," new_regexp "," literal_concat "," new_string ","list line ","result line_max= "," s ","val [] to_sym ","val [] dup <<  line_max= "," new_regexp  line_max= "," literal_concat  line_max= "," new_string  line_max= ","list line  line_max= "," s  line_max= "]}," Ruby20Parser _reduce_475":{"type":"method","name":"_reduce_475","children":[],"call":[" new_qsym_list "," new_xstring ","val [] "," dedent ","func =~ "," s line "," s ","result line_max= ","val [] dup << "," new_word_list_entry ","val [] dup "," new_qsym_list_entry "," new_x dedent ing "," new_qsym_list  line_max= "," new_xstring  line_max= "," s line  line_max= "," s  line_max= ","val [] dup <<  line_max= "]}," Ruby20Parser _reduce_474":{"type":"method","name":"_reduce_474","children":[],"call":["val [] dup << "," new_qword_list_entry ","val [] dup ","val [] "," new_string "," debug20 "," literal_concat "," new_regexp "," s ","val [] to_sym "," new_word_list "," new_qsym_list "]}," Ruby20Parser _reduce_473":{"type":"method","name":"_reduce_473","children":[],"call":[" new_qword_list ","val [] "," s ","str value ","str sexp_type == ","str sexp_type "," new_xstring ","result line_max= ","list line ","val [] dup << "," new_qword_list_entry ","val [] dup "," s  value "," s  sexp_type == "," s  sexp_type "," new_x s ing "," new_qword_list  line_max= ","val []  line_max= "," new_xstring  line_max= "," s  line_max= ","list line  line_max= ","val [] dup <<  line_max= "]}," Ruby20Parser _reduce_472":{"type":"method","name":"_reduce_472","children":[],"call":["val [] "," literal_concat "," debug20 "," new_string ","val [] dup << "," s ","val [] dup ","result line_max= "," s line "," new_qword_list ","val []  line_max= "," literal_concat  line_max= "," new_string  line_max= ","val [] dup <<  line_max= "," s line  line_max= "," new_qword_list  line_max= "]}," Ruby20Parser _reduce_471":{"type":"method","name":"_reduce_471","children":[],"call":[" s ","result line= ","val [] "," lexer lineno "," lexer ","str value ","str sexp_type == ","str sexp_type ","str line "," dedent ","func =~ "," new_regexp "," s  line= ","str line  line= "," new_regexp  line= ","val []  line= ","result  lexer lineno = "," lexer  lexer lineno no "," s  value "," dedent  value "," s  sexp_type == "," dedent  sexp_type == "," s  sexp_type "," dedent  sexp_type ","str  lexer lineno  "," s  line "," dedent  line "]}," Ruby20Parser _reduce_470":{"type":"method","name":"_reduce_470","children":[],"call":["val [] "," debug20 ","result line= "," s "," lexer lineno "," lexer "," literal_concat "," new_xstring ","val []  line= "," s  line= "," literal_concat  line= "," new_xstring  line= ","result  lexer lineno = "," lexer  lexer lineno no "]}," Ruby20Parser _reduce_469":{"type":"method","name":"_reduce_469","children":[],"call":[" s ","val [] ","val []= ","val [] value ","val [] sexp_type == ","val [] sexp_type ","result line= "," lexer lineno "," lexer "," new_string "," s  line= ","val []  line= "," new_string  line= ","result  lexer lineno = "," lexer  lexer lineno no "]}," Ruby20Parser _reduce_468":{"type":"method","name":"_reduce_468","children":[],"call":["val [] dup << "," new_symbol_list_entry ","val [] dup ","val [] "," s line "," s ","result line= "," lexer lineno "," lexer "," debug ","str line "," dedent ","func =~ ","list dup << ","list dup "," debug20 ","sym last to_sym ","sym last ","sym []= ","sym [] "," new_ s bol_list_entry "," s  lexer lineno  ","val [] dup <<  line= "," s  line= ","val []  line= ","str line  line= ","list dup <<  line= ","result  lexer lineno = "," lexer  lexer lineno no ","str  lexer lineno  "," dedent  line "," s  last to_ s  "," s  last "," s  []= "," s  [] "]}," Ruby20Parser _reduce_467":{"type":"method","name":"_reduce_467","children":[],"call":[" new_symbol_list "," s ","val [] ","str value ","str sexp_type == ","str sexp_type "," literal_concat ","val [] dup << "," new_symbol_list_entry ","val [] dup "," s  value "," s  sexp_type == "," s  sexp_type "]}," Ruby20Parser _reduce_466":{"type":"method","name":"_reduce_466","children":[],"call":["val [] "," s "," s line ","list dup << ","list dup "," debug20 ","sym last to_sym ","sym last ","sym []= ","sym [] "," new_symbol_list "," s  last to_ s  "," s  last "," s  []= "," s  [] "," new_ s bol_list "]}," Ruby20Parser _reduce_465":{"type":"method","name":"_reduce_465","children":[],"call":[" s "," s line "," debug ","val [] "]}," Ruby20Parser _reduce_464":{"type":"method","name":"_reduce_464","children":[],"call":[" literal_concat ","val [] "," s ","str value ","str sexp_type == ","str sexp_type "," s  value "," s  sexp_type == "," s  sexp_type "]}," Ruby20Parser _reduce_462":{"type":"method","name":"_reduce_462","children":[],"call":["val [] dup << "," new_word_list_entry ","val [] dup ","val [] "," literal_concat "," s line "," s ","val [] [] == ","val [] [] "," new_val [] _list_entry "," new_ s _list_entry "]}," Ruby20Parser _reduce_461":{"type":"method","name":"_reduce_461","children":[],"call":[" new_word_list ","result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s line ","var line "," s ","arg line ","val [] ","val [] dup << "," new_word_list_entry ","val [] dup "," new_word_list  << "," new_resbody  << "," s line  << ","val []  << "," s  << ","val [] dup <<  << "]}," Ruby20Parser _reduce_460":{"type":"method","name":"_reduce_460","children":[],"call":["val [] ","val [] dup << ","val [] dup "," s ","val [] [] == ","val [] [] "," s line "," new_word_list "," new_val [] _list "," new_ s _list "]}," Ruby20Parser _reduce_459":{"type":"method","name":"_reduce_459","children":[],"call":[" s ","val [] ","result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s line ","var line "," s  << "," new_resbody  << ","val []  << "]}," Ruby20Parser _reduce_458":{"type":"method","name":"_reduce_458","children":[],"call":[" new_regexp ","result << ","val [] ","result line= "," new_when "," s line ","arg line "," s "," new_regexp  << "," new_when  << "," s line  << ","val []  << "," s  << "," new_regexp  line= "," new_when  line= "," s line  line= ","val []  line= "," s  line= "]}," Ruby20Parser _reduce_457":{"type":"method","name":"_reduce_457","children":[],"call":[" new_xstring ","val [] ","result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s "," lexer lineno "," lexer "," new_regexp "," new_xstring  << "," new_resbody  << "," lexer lineno  << "," s  << "," new_regexp  << "]}," Ruby20Parser _reduce_456":{"type":"method","name":"_reduce_456","children":[],"call":[" new_string "," lexer cmdarg restore "," lexer cmdarg "," lexer "," env unextend "," env "," new_do_body ","result << ","val [] ","result line= "," new_when "," new_resbody ","klasses line ","klasses << "," new_assign "," s line ","var line "," s "," new_regexp "," new_xstring "," new_string  << "," new_do_body  << "," new_when  << "," new_resbody  << "," new_regexp  << "," new_xstring  << "," new_string  line= "," new_do_body  line= "," new_when  line= "," new_resbody  line= "," new_regexp  line= "," new_xstring  line= "]}," Ruby20Parser _reduce_455":{"type":"method","name":"_reduce_455","children":[],"call":["val [] "," lexer cmdarg store "," lexer cmdarg "," lexer "," lexer lineno "," new_xstring "," s line ","arg line "," s "," new_string "]}," Ruby20Parser _reduce_454":{"type":"method","name":"_reduce_454","children":[],"call":[" literal_concat ","val [] ","result << ","result line= "," new_when "," lexer lineno "," lexer "," env extend "," env "," env unextend "," lexer cmdarg pop "," lexer cmdarg "," new_do_body "," s "," new_string "," literal_concat  << "," new_when  << "," lexer lineno  << "," new_do_body  << "," s  << "," new_string  << ","val []  << "," literal_concat  line= "," new_when  line= "," lexer lineno  line= "," new_do_body  line= "," s  line= "," new_string  line= ","val []  line= "]}," Ruby20Parser _reduce_452":{"type":"method","name":"_reduce_452","children":[],"call":[" debug20 "," lexer cmdarg restore "," lexer cmdarg "," lexer "," env unextend "," env "," new_do_body "," lexer cmdarg store "," lexer lineno "," env extend "," literal_concat ","val [] "]}," Ruby20Parser _reduce_451":{"type":"method","name":"_reduce_451","children":[],"call":["val [] ","val []= "," s ","val [] value ","val [] sexp_type == ","val [] sexp_type "," lexer cmdarg store "," lexer cmdarg "," lexer "," lexer lineno "," env extend "," env "," lexer cmdarg pop "," lexer cmdarg restore "," env unextend "," new_brace_body "," list_append "," s line ","id line ","val [] [] == ","val [] [] "," debug20 "]}," Ruby20Parser _reduce_449":{"type":"method","name":"_reduce_449","children":[],"call":[" s ","val [] "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," env unextend "," env "," new_brace_body "," lexer lineno "," env extend "," s line ","arg line ","val []= ","val [] value ","val [] [] == ","val [] [] "]}," Ruby20Parser _reduce_448":{"type":"method","name":"_reduce_448","children":[],"call":[" s ","val [] "," lexer cmdarg store "," lexer cmdarg "," lexer "," env unextend "," env ","result line= "," s line ","arg line "," list_append ","id line "," s  line= "," lexer cmdarg store  line= "," s line  line= "," list_append  line= "]}," Ruby20Parser _reduce_446":{"type":"method","name":"_reduce_446","children":[],"call":[" s "," env unextend "," env ","result line= "," new_aref "," lexer cmdarg push "," lexer cmdarg "," lexer ","val [] "," s line ","arg line "," new_aref  line= "," s  line= "," s line  line= "]}," Ruby20Parser _reduce_444":{"type":"method","name":"_reduce_444","children":[],"call":["val [] "," env unextend "," env ","result line= "," new_super "," new_aref "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," new_brace_body "," s "," new_do_body ","val []  line= "," new_super  line= "," new_aref  line= "," new_brace_body  line= "," new_do_body  line= "]}," Ruby20Parser _reduce_441":{"type":"method","name":"_reduce_441","children":[],"call":[" s ","val [] "," new_call ","val [] to_sym "," env unextend "," env ","result line "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," new_brace_body "," s  line "," new_call  line "," new_brace_body  line "]}," Ruby20Parser _reduce_440":{"type":"method","name":"_reduce_440","children":[],"call":[" new_super ","val [] "," new_call ","val [] to_sym "," lexer lineno "," lexer "," env extend "," env "," lexer cmdarg store "," lexer cmdarg "," s "]}," Ruby20Parser _reduce_439":{"type":"method","name":"_reduce_439","children":[],"call":["result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s "," new_call ","val [] ","val [] to_sym "," env unextend "," env ","result line "," lexer lineno "," lexer "," env extend "," node_assign "," new_resbody  << "," new_call  << "," s  << "," lexer lineno  << "," new_resbody  line "," new_call  line "," s  line "," lexer lineno  line "]}," Ruby20Parser _reduce_436":{"type":"method","name":"_reduce_436","children":[],"call":["result << ","val [] ","result line= "," new_when "," new_call ","val [] to_sym ","iter2 insert ","name to_sym ","result line ","call concat ","args sexp_body "," s line "," lexer lineno "," lexer "," s "," env unextend "," env "," new_when  << "," new_call  << ","call concat  << "," s line  << "," new_when  line= "," new_call  line= ","call concat  line= "," s line  line= "," new_ new_call  "," new_when  line "," new_call  line ","call concat  line "," s line  line "," new_call  concat "]}," Ruby20Parser _reduce_435":{"type":"method","name":"_reduce_435","children":[],"call":[" lexer lineno "," lexer "," new_call ","val [] ","val [] to_sym ","iter2 insert ","name to_sym "," new_super "," env extend "," env ","result << ","result line= "," new_when "," new_ new_call  "," lexer lineno  << "," new_call  << "," new_super  << "," new_when  << "," lexer lineno  line= "," new_call  line= "," new_super  line= "," new_when  line= "]}," Ruby20Parser _reduce_434":{"type":"method","name":"_reduce_434","children":[],"call":[" env unextend "," env ","result line= "," new_iter ","val [] concat ","args sexp_body ","val [] "," call_args "," new_call ","val [] to_sym ","iter2 insert ","name to_sym ","result << "," new_when "," new_aref "," lexer lineno "," lexer "," new_iter  line= ","val [] concat  line= "," new_call  line= "," new_when  line= "," new_aref  line= "," lexer lineno  line= "," call_args  sexp_body "," call_ call_args  ","  new_call _args "," new_ new_call  "," new_iter  << ","val [] concat  << "," new_call  << "," new_when  << "," new_aref  << "," lexer lineno  << "]}," Ruby20Parser _reduce_433":{"type":"method","name":"_reduce_433","children":[],"call":[" lexer lineno "," lexer ","result insert "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? ","val [] ","iter2 insert "," new_call ","name to_sym "," s line "," s "," env unextend "," env ","result line= "," new_iter "," lexer lineno  insert "," new_call  insert "," s line  insert "," new_iter  insert "," invert_block_ new_call  "," invert_block_call  [] block_pass? "," invert_block_call  [] "," new_ new_call  "," lexer lineno  line= "," new_call  line= "," s line  line= "," new_iter  line= "]}," Ruby20Parser _reduce_432":{"type":"method","name":"_reduce_432","children":[],"call":[" lexer lineno "," lexer "," env extend "," env ","iter2 insert "," new_call ","name to_sym ","iter line ","val [] ","val [] to_sym ","id to_sym "," env unextend ","result line= "," new_iter "," new_super "," new_ new_call  "," lexer lineno  line= ","iter line  line= "," new_call  line= "," new_iter  line= "," new_super  line= "]}," Ruby20Parser _reduce_431":{"type":"method","name":"_reduce_431","children":[],"call":[" env unextend "," env ","result line= "," new_iter ","iter2 insert "," new_call ","name to_sym ","val [] ","result insert "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? ","op to_sym "," env dynamic keys "," env dynamic "," lexer lineno "," lexer "," env extend "," new_iter  line= ","val []  line= "," new_call  line= "," env dynamic keys  line= "," lexer lineno  line= "," new_ new_call  "," invert_block_call  [] "," new_iter  insert ","val []  insert "," new_call  insert "," env dynamic keys  insert "," lexer lineno  insert "," invert_block_ new_call  "," invert_block_call  [] block_pass? "]}," Ruby20Parser _reduce_430":{"type":"method","name":"_reduce_430","children":[],"call":[" new_call ","val [] ","val [] to_sym ","iter line ","op to_sym "," lexer lineno "," lexer "," env extend "," env ","result line_max= "," env unextend ","result line= "," new_iter "," new_call  line_max= ","val []  line_max= ","iter line  line_max= "," lexer lineno  line_max= "," new_iter  line_max= "," new_call  line= ","val []  line= ","iter line  line= "," lexer lineno  line= "," new_iter  line= "]}," Ruby20Parser _reduce_429":{"type":"method","name":"_reduce_429","children":[],"call":[" lexer lineno "," lexer "," env extend "," env ","result insert ","val [] "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? ","result == "," s ","call concat ","args sexp_body "," env unextend ","result line= "," new_iter ","result line_max= ","args line_max "," new_call ","id to_sym "," lexer lineno  insert ","val []  insert ","call concat  insert "," new_iter  insert "," new_call  insert "," invert_block_call  [] "," invert_block_call  [] block_pass? "," lexer lineno  == ","val []  == ","call concat  == "," new_iter  == "," new_call  == "," lexer lineno  line= ","val []  line= ","call concat  line= "," new_iter  line= "," new_call  line= "," lexer lineno  line_max= ","val []  line_max= ","call concat  line_max= "," new_iter  line_max= "," new_call  line_max= "]}," Ruby20Parser _reduce_428":{"type":"method","name":"_reduce_428","children":[],"call":[" new_aref ","val [] "," args ","iter2 insert "," new_call ","name to_sym "," env dynamic keys "," env dynamic "," env ","op to_sym "," lexer lineno "," lexer "," env extend "," new_ new_call  "]}," Ruby20Parser _reduce_427":{"type":"method","name":"_reduce_427","children":[],"call":[" s ","val [] "," env unextend "," env ","result line= "," new_iter "," s line "," lexer cmdarg lexpop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," lexer lpar_beg= ","result == ","iter2 insert "," new_call ","name to_sym "," lexer lineno "," env extend ","result line_max= ","op to_sym "," new_aref "," s  line= ","val []  line= "," new_iter  line= "," lexer lineno  line= "," new_call  line= "," new_aref  line= "," s  == ","val []  == "," new_iter  == "," lexer lineno  == "," new_call  == "," new_aref  == "," new_ s line  "," new_ new_call  "," s  line_max= ","val []  line_max= "," new_iter  line_max= "," lexer lineno  line_max= "," new_call  line_max= "," new_aref  line_max= "]}," Ruby20Parser _reduce_426":{"type":"method","name":"_reduce_426","children":[],"call":[" new_super ","val [] "," lexer cmdarg store "," lexer cmdarg "," lexer "," args "," new_call ","id to_sym "," new_aref ","result line_max= ","args line_max ","call concat ","args sexp_body "," s "," new_super  line_max= ","val []  line_max= "," lexer cmdarg store  line_max= "," args  line_max= "," new_call  line_max= "," new_aref  line_max= "," s  line_max= "]}," Ruby20Parser _reduce_425":{"type":"method","name":"_reduce_425","children":[],"call":[" new_call ","val [] ","result == "," s "," lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," lexer lineno "," env extend "," env "," env unextend ","result line= "," new_iter "," s line "," lexer cmdarg pop "," lexer cmdarg ","result insert "," invert_block_call "," inverted? "," syntax_error ","cmd block_pass? ","iter2 insert ","name to_sym "," new_super "," new_ s line  "," new_ new_call  "," invert_block_call  [] "," new_call  == ","val []  == "," new_iter  == "," s  == "," new_super  == "," new_call  line= ","val []  line= "," new_iter  line= "," s  line= "," new_super  line= "," new_call  insert ","val []  insert "," new_iter  insert "," s  insert "," new_super  insert "," invert_block_ s line  "," invert_block_ new_call  "]}," Ruby20Parser _reduce_424":{"type":"method","name":"_reduce_424","children":[],"call":[" new_call ","val [] "," args "," lexer cmdarg push "," lexer cmdarg "," lexer ","iter line "," new_super ","iter2 insert ","name to_sym "," new_ new_call  "]}," Ruby20Parser _reduce_423":{"type":"method","name":"_reduce_423","children":[],"call":[" new_call ","val [] to_sym ","val [] "," env unextend "," env ","result line= "," new_iter "," lexer cmdarg lexpop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," lexer lpar_beg= "," s line "," s ","id to_sym "," lexer lineno "," lexer paren_nest "," lexer lpar_beg "," env extend "," new_ new_call  "," new_call  line= "," new_iter  line= "," s line  line= ","val []  line= ","result  lexer lineno = "," s  lexer lineno  "," lexer  lexer lineno no "]}," Ruby20Parser _reduce_422":{"type":"method","name":"_reduce_422","children":[],"call":[" new_call ","val [] ","val [] to_sym "," lexer lineno "," lexer "," lexer cmdarg store "," lexer cmdarg "," args ","result insert "," invert_block_call "," inverted? "," syntax_error ","cmd block_pass? "," invert_block_call  [] "," invert_block_call  [] to_sym "," new_call  insert "," args  insert ","val []  insert "]}," Ruby20Parser _reduce_421":{"type":"method","name":"_reduce_421","children":[],"call":[" new_call ","val [] ","val [] to_sym "," lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," lexer lineno "," env extend "," env "," args "," s line "," s ","id to_sym ","result == ","iter line "," lexer  lexer lineno no "," s  lexer lineno  "," new_call  == "," lexer lpar_beg  == "," lexer lineno  == "," args  == "," s line  == ","val []  == ","iter line  == ","iter  lexer lineno  "]}," Ruby20Parser _reduce_420":{"type":"method","name":"_reduce_420","children":[],"call":["val [] concat ","args sexp_body ","val [] "," call_args "," args "," new_call ","val [] to_sym ","args [] "," call_args  sexp_body "," call_ call_args  ","  call_args  "," call_args  [] "]}," Ruby20Parser _reduce_419":{"type":"method","name":"_reduce_419","children":[],"call":[" lexer lineno "," lexer "," s ","val [] to_sym ","val [] "," args "," env unextend "," env ","result line "," new_iter "," s line "," lexer cmdarg pop "," lexer cmdarg "," lexer lpar_beg= "," new_call ","val [] concat ","args [] "," call_args ","  call_args  "," lexer lineno  line "," s  line "," args  line "," new_iter  line "," new_call  line ","val []  line ","val [] concat  line "," new_ s line  "," call_args  [] ","  s line _args "," call_ call_args  "]}," Ruby20Parser _reduce_418":{"type":"method","name":"_reduce_418","children":[],"call":["iter2 insert "," new_call ","name to_sym "," args "," lexer cmdarg push "," lexer cmdarg "," lexer ","val [] concat ","args [] ","val [] "," call_args ","result == "," s "," lexer lineno "," new_ new_call  ","  call_args  "," call_args  [] ","  new_call _args "," call_ call_args  "," args  == ","val [] concat  == ","val []  == "," lexer lineno  == "]}," Ruby20Parser _reduce_417":{"type":"method","name":"_reduce_417","children":[],"call":["iter2 insert "," new_call ","name to_sym "," args "," s line "," lexer lineno "," lexer "," s "," lexer lpar_beg= "," lexer paren_nest "," lexer lpar_beg "," env extend "," env "," new_ new_call  "]}," Ruby20Parser _reduce_416":{"type":"method","name":"_reduce_416","children":[],"call":[" new_call ","val [] ","val [] to_sym "," args "," debug20 "," env unextend "," env ","result line "," new_iter "," s line "," s "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer lpar_beg= ","iter2 insert ","name to_sym "," new_ s line  "," new_ new_call  "," new_call  line "," args  line "," new_iter  line "]}," Ruby20Parser _reduce_415":{"type":"method","name":"_reduce_415","children":[],"call":["result insert ","val [] "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? "," lexer command_start= "," lexer "," s line "," lexer lineno "," s ","id to_sym "," wrap "," debug20 "," lexer cmdarg push "," lexer cmdarg ","iter2 insert "," new_call ","name to_sym ","val [] to_sym ","val []  insert "," s line  insert "," wrap  insert "," new_call  insert "," invert_block_call  [] "," invert_block_ new_call  "," invert_block_call  [] block_pass? "," new_ new_call  "," invert_block_call  [] to_sym "]}," Ruby20Parser _reduce_414":{"type":"method","name":"_reduce_414","children":[],"call":[" env unextend "," env ","result line= ","val [] "," new_iter "," args "," new_call ","val [] to_sym "," lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," lexer lineno "," env extend ","result insert "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? "," new_iter  line= "," args  line= "," new_call  line= ","val []  line= "," invert_block_call  [] "," val []  "," invert_block_call  [] to_sym "," new_iter  insert "," args  insert "," new_call  insert ","val []  insert "," invert_block_call  [] block_pass? "]}," Ruby20Parser _reduce_413":{"type":"method","name":"_reduce_413","children":[],"call":[" s "," args "," lexer command_start= "," lexer ","result insert ","val [] "," syntax_error ","val [] block_pass? "," invert_block_call "," inverted? "," env unextend "," env ","result line= "," new_iter "," val []  "," s  insert "," args  insert ","val []  insert "," new_iter  insert "," invert_block_call  [] "," invert_block_call  [] block_pass? "," s  line= "," args  line= ","val []  line= "," new_iter  line= "]}," Ruby20Parser _reduce_412":{"type":"method","name":"_reduce_412","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," args "," env unextend ","result line= ","val [] "," new_iter "," wrap "," val []  "," lexer lineno  line= "," args  line= "," new_iter  line= "," wrap  line= "]}," Ruby20Parser _reduce_411":{"type":"method","name":"_reduce_411","children":[],"call":["val [] "," lexer command_start= "," lexer "," args "," env dynamic keys "," env dynamic "," env "," lexer lineno "," env extend "]}," Ruby20Parser _reduce_410":{"type":"method","name":"_reduce_410","children":[],"call":["val [] "," args "," lexer lineno "," lexer "," env extend "," env "]}," Ruby20Parser _reduce_409":{"type":"method","name":"_reduce_409","children":[],"call":["result == "," s ","val [] "," args "," s line "," lexer lineno "," lexer ","val []  == "," args  == "," s line  == "]}," Ruby20Parser _reduce_408":{"type":"method","name":"_reduce_408","children":[],"call":[" args ","val [] ","result == "," s "," args  == ","val []  == "]}," Ruby20Parser _reduce_407":{"type":"method","name":"_reduce_407","children":[],"call":[" env unextend "," env "," new_iter "," new_call "," lexer lpar_beg= "," lexer "," args "," lexer command_start= ","val [] ","result == "," s "," new_ new_call  "," new_iter  == "," args  == ","val []  == "]}," Ruby20Parser _reduce_406":{"type":"method","name":"_reduce_406","children":[],"call":[" lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," lexer lineno "," env extend "," env "," args "," s line "," s "," env unextend "," new_iter "," new_call "," new_ new_call  "]}," Ruby20Parser _reduce_404":{"type":"method","name":"_reduce_404","children":[],"call":[" s ","val [] to_sym ","val [] "," args "," args << "," lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," lexer command_start= "," lexer lineno "," env extend "," env "]}," Ruby20Parser _reduce_403":{"type":"method","name":"_reduce_403","children":[],"call":[" args "," s ","val [] to_sym ","val [] "]}," Ruby20Parser _reduce_402":{"type":"method","name":"_reduce_402","children":[],"call":[" args "," args << "," s ","val [] to_sym ","val [] "]}," Ruby20Parser _reduce_401":{"type":"method","name":"_reduce_401","children":[],"call":[" args "]}," Ruby20Parser _reduce_399":{"type":"method","name":"_reduce_399","children":[],"call":[" args "]}," Ruby20Parser _reduce_398":{"type":"method","name":"_reduce_398","children":[],"call":[" s "," lexer command_start= "," lexer "," args "]}," Ruby20Parser _reduce_397":{"type":"method","name":"_reduce_397","children":[],"call":[" args "," s "," lexer command_start= "," lexer "]}," Ruby20Parser _reduce_395":{"type":"method","name":"_reduce_395","children":[],"call":[" args "," call_args ","result == "," s "," args  == "," call_args  == "]}," Ruby20Parser _reduce_394":{"type":"method","name":"_reduce_394","children":[],"call":[" args "," call_args ","result line "," lexer lineno "," lexer "," args  line "," call_args  line ","result  lexer lineno  "," lexer  lexer lineno no "]}," Ruby20Parser _reduce_393":{"type":"method","name":"_reduce_393","children":[],"call":[" args "," call_args "," args << "]}," Ruby20Parser _reduce_392":{"type":"method","name":"_reduce_392","children":[],"call":[" args "," call_args "," block_var "]}," Ruby20Parser _reduce_391":{"type":"method","name":"_reduce_391","children":[],"call":[" args "," call_args "," block_var "]}," Ruby20Parser _reduce_390":{"type":"method","name":"_reduce_390","children":[],"call":[" args "," call_args "," block_var "]}," Ruby20Parser _reduce_389":{"type":"method","name":"_reduce_389","children":[],"call":[" args "," call_args "," block_var "]}," Ruby20Parser _reduce_388":{"type":"method","name":"_reduce_388","children":[],"call":[" args "," block_var ","result line "," call_args "," args  line "," block_var  line "," call_args  line "]}," Ruby20Parser _reduce_387":{"type":"method","name":"_reduce_387","children":[],"call":[" args "," block_var "," call_args "]}," Ruby20Parser _reduce_386":{"type":"method","name":"_reduce_386","children":[],"call":[" args "," block_var ","(str \"*\") to_sym "," call_args "]}," Ruby20Parser _reduce_385":{"type":"method","name":"_reduce_385","children":[],"call":[" args "," block_var ","(str \"*\") to_sym "," call_args ","result line "," args  line "," block_var  line "," call_args  line "]}," Ruby20Parser _reduce_384":{"type":"method","name":"_reduce_384","children":[],"call":[" args "," block_var ","(str \"*\") to_sym ","result line "," lexer lineno "," lexer "," call_args "," args  line "," block_var  line "," call_args  line "]}," Ruby20Parser _reduce_383":{"type":"method","name":"_reduce_383","children":[],"call":[" args "," block_var "," list_append ","val [] ","(str \"*\") to_sym ","result line "," call_args "," args  line "," block_var  line "," list_append  line "," call_args  line "]}," Ruby20Parser _reduce_382":{"type":"method","name":"_reduce_382","children":[],"call":[" args "," block_var ","(str \"*\") to_sym "," s line "," lexer lineno "," lexer "," s "," call_args "]}," Ruby20Parser _reduce_381":{"type":"method","name":"_reduce_381","children":[],"call":[" args "," block_var ","(str \"*\") to_sym ","val [] "," list_append ","result line "," lexer lineno "," lexer "," args  line "," block_var  line ","val []  line "," list_append  line "]}," Ruby20Parser _reduce_380":{"type":"method","name":"_reduce_380","children":[],"call":[" args "," block_var "," s line "," lexer lineno "," lexer "," s ","result line ","(str \"*\") to_sym "," args  line "," block_var  line "," s line  line "]}," Ruby20Parser _reduce_378":{"type":"method","name":"_reduce_378","children":[],"call":[" args "," s ","val [] "," block_var "]}," Ruby20Parser _reduce_377":{"type":"method","name":"_reduce_377","children":[],"call":[" call_args ","val [] ","val [] delete_at ","val [] [] nil? ","val [] [] "," list_append "," block_var "," args "]}," Ruby20Parser _reduce_376":{"type":"method","name":"_reduce_376","children":[],"call":[" call_args "," s line "," lexer lineno "," lexer "," s "," args "," block_var "]}," Ruby20Parser _reduce_375":{"type":"method","name":"_reduce_375","children":[],"call":[" call_args ","val [] delete_at ","val [] ","val [] [] nil? ","val [] [] "," s line "," s "," block_var "]}," Ruby20Parser _reduce_374":{"type":"method","name":"_reduce_374","children":[],"call":[" call_args "," list_append ","val [] "]}," Ruby20Parser _reduce_373":{"type":"method","name":"_reduce_373","children":[],"call":[" block_var ","val [] "," s line "," s ","val [] delete_at ","val [] [] nil? ","val [] [] "," call_args "," lexer lineno "," lexer "]}," Ruby20Parser _reduce_372":{"type":"method","name":"_reduce_372","children":[],"call":[" block_var "," call_args ","val [] "," debug20 "]}," Ruby20Parser _reduce_371":{"type":"method","name":"_reduce_371","children":[],"call":[" block_var "," s ","val [] "," debug20 "]}," Ruby20Parser _reduce_370":{"type":"method","name":"_reduce_370","children":[],"call":[" block_var "," debug20 ","val [] delete_at ","val [] ","val [] [] nil? ","val [] [] "]}," Ruby20Parser _reduce_369":{"type":"method","name":"_reduce_369","children":[],"call":[" block_var "," s line "," s "," debug20 "]}," Ruby20Parser _reduce_368":{"type":"method","name":"_reduce_368","children":[],"call":[" block_var ","val [] "]}," Ruby20Parser _reduce_367":{"type":"method","name":"_reduce_367","children":[],"call":[" block_var ","(str \"*\") to_sym "," debug20 "]}," Ruby20Parser _reduce_366":{"type":"method","name":"_reduce_366","children":[],"call":[" block_var ","(str \"*\") to_sym "," s line "," s "]}," Ruby20Parser _reduce_365":{"type":"method","name":"_reduce_365","children":[],"call":[" block_var ","(str \"*\") to_sym "]}," Ruby20Parser _reduce_364":{"type":"method","name":"_reduce_364","children":[],"call":[" list_append ","val [] "," block_var ","(str \"*\") to_sym "]}," Ruby20Parser _reduce_363":{"type":"method","name":"_reduce_363","children":[],"call":[" s ","val [] "," block_var "," list_append "]}," Ruby20Parser _reduce_362":{"type":"method","name":"_reduce_362","children":[],"call":["val [] "," list_append "," s "]}," Ruby20Parser _reduce_360":{"type":"method","name":"_reduce_360","children":[],"call":["val [] delete_at ","val [] ","val [] [] nil? ","val [] [] "]}," Ruby20Parser _reduce_358":{"type":"method","name":"_reduce_358","children":[],"call":["val [] ","val [] delete_at ","val [] [] nil? ","val [] [] "]}," Ruby20Parser _reduce_356":{"type":"method","name":"_reduce_356","children":[],"call":[" s ","val [] "]}," Ruby20Parser _reduce_338":{"type":"method","name":"_reduce_338","children":[],"call":[" value_expr ","val [] "," lexer lex_state= "," lexer "," comments push "," lexer comments "," comments "," env unextend "," env "," new_module "," lexer lineno "," lexer ignore_body_comments "," in_single "," in_def= "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," new_defs ","val delete_at "," s line "," s "]}," Ruby20Parser _reduce_337":{"type":"method","name":"_reduce_337","children":[],"call":[" s "," lexer comments "," lexer "," in_def= "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," new_defn ","val [] "," env extend "," yyerror "," in_single > "," in_single "," in_def "," comments push "," comments "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer lex_state= ","EXPR_ENDFN  | "," s line "," value_expr "]}," Ruby20Parser _reduce_336":{"type":"method","name":"_reduce_336","children":[],"call":[" s "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," env extend "," env "," in_def= "," comments push "," lexer comments "," comments "," lexer cmdarg stack dup "," in_def "," lexer lineno "," env unextend "," new_module "," lexer lex_state= "," value_expr ","val [] "," s line "]}," Ruby20Parser _reduce_335":{"type":"method","name":"_reduce_335","children":[],"call":[" s "," lexer comments "," lexer "," env unextend "," env "," new_module "," new_sclass "," env extend "," yyerror "," in_single > "," in_single "," in_def "," comments push "," comments "," lexer ignore_body_comments "," in_def= "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," new_defn "," new_defs ","val delete_at "]}," Ruby20Parser _reduce_334":{"type":"method","name":"_reduce_334","children":[],"call":[" s "," env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," lexer "," comments "," in_single= "," lexer lineno "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," in_def= "," lexer lex_state= ","EXPR_ENDFN  | "]}," Ruby20Parser _reduce_333":{"type":"method","name":"_reduce_333","children":[],"call":[" lexer comments "," lexer "," in_single "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg ","result [] line ","result [] "," new_defs ","val [] "," lexer lineno "," in_def= "," in_def "," new_sclass "," lexer ignore_body_comments "," new_module "," s "," lexer lex_state= "," new_defs  [] line "," lexer lineno  [] line "," in_def  [] line "," new_sclass  [] line "," new_module  [] line "," s  [] line "," new_defs  [] "," lexer lineno  [] "," in_def  [] "," new_sclass  [] "," new_module  [] "," s  [] "]}," Ruby20Parser _reduce_332":{"type":"method","name":"_reduce_332","children":[],"call":[" lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," lexer cmdarg stack dup "," lexer lineno "," lexer lex_state= "," env extend "," env "," in_single "," lexer comments "," env unextend "," new_sclass "," in_single= "," yyerror "," in_single > "," in_def "," s "," lexer ignore_body_comments "," in_def= "," lexer cmdarg pop "," lexer cond pop "," lexer cond "," new_defn ","result [] line ","val [] ","result [] "," new_defs "," new_sclass  [] line "," lexer lineno  [] line "," in_single  [] line "," s  [] line "," new_defs  [] line "," new_sclass  [] "," lexer lineno  [] "," in_single  [] "," s  [] "," new_defs  [] "]}," Ruby20Parser _reduce_331":{"type":"method","name":"_reduce_331","children":[],"call":[" lexer lex_state= "," lexer "," comments push "," lexer comments "," comments "," env extend "," env "," in_single= "," in_single "," env unextend "," new_class "," in_def= "," in_def "," lexer lineno ","result [] line ","val [] ","result [] "," new_defs "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," in_single  [] line "," new_class  [] line "," in_def  [] line "," lexer lineno  [] line "," new_defs  [] line "," in_single  [] "," new_class  [] "," in_def  [] "," lexer lineno  [] "," new_defs  [] "]}," Ruby20Parser _reduce_330":{"type":"method","name":"_reduce_330","children":[],"call":[" lexer comments "," lexer "," in_def= "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," new_defn ","val [] "," in_def "," env extend "," yyerror "," in_single > "," in_single "," comments push "," comments "," lexer lineno "," lexer ignore_body_comments "," new_sclass "," lexer lex_state= "," new_module "]}," Ruby20Parser _reduce_329":{"type":"method","name":"_reduce_329","children":[],"call":[" lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," env extend "," env "," in_def= "," comments push "," lexer comments "," comments "," lexer cmdarg stack dup "," in_def "," lexer lineno "," env unextend "," new_class "," in_single= "," in_single "," lexer lex_state= "," yyerror "," in_single > "," new_defn ","val [] "]}," Ruby20Parser _reduce_328":{"type":"method","name":"_reduce_328","children":[],"call":[" lexer comments "," lexer "," env unextend "," env "," new_module "," new_class "," new_for "," env extend "," yyerror "," in_single > "," in_single "," in_def "," comments push "," comments "," in_def= ","result [] line ","val [] ","result [] "," new_defn "," lexer ignore_body_comments "," new_sclass "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer cmdarg stack dup "," val []  "," val [] = "," new_module  [] line "," new_class  [] line "," new_for  [] line "," in_def  [] line "," new_defn  [] line "," new_sclass  [] line "," new_module  [] "," new_class  [] "," new_for  [] "," in_def  [] "," new_defn  [] "," new_sclass  [] "]}," Ruby20Parser _reduce_327":{"type":"method","name":"_reduce_327","children":[],"call":[" env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," lexer "," comments "," new_case "," lexer lineno "," in_def= "," in_single= "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer cmdarg stack dup "," env unextend "," new_module "]}," Ruby20Parser _reduce_326":{"type":"method","name":"_reduce_326","children":[],"call":[" lexer lineno "," lexer "," new_case "," new_for "," lexer ignore_body_comments "," env unextend "," env "," new_class "," lexer comments "," new_module "," in_def= "," in_def "," env extend "," yyerror "," in_single > "," in_single "," comments push "," comments "]}," Ruby20Parser _reduce_325":{"type":"method","name":"_reduce_325","children":[],"call":[" lexer comments "," lexer "," env unextend "," env "," new_sclass "," new_for "," new_until "," new_case "," env extend "," yyerror "," in_single > "," in_single "," in_def "," comments push "," comments "," lexer ignore_body_comments "," new_class "," lexer lineno "]}," Ruby20Parser _reduce_324":{"type":"method","name":"_reduce_324","children":[],"call":[" env extend "," env "," in_single= "," in_single "," new_case "," new_while "," lexer lineno "," lexer "," yyerror "," in_single > "," in_def "," lexer comments "," env unextend "," new_sclass "]}," Ruby20Parser _reduce_323":{"type":"method","name":"_reduce_323","children":[],"call":[" in_def= "," in_def "," new_case "," new_if "," new_until "," new_for "," lexer comments "," lexer "," env unextend "," env "," new_sclass "," env extend "," in_single= "," in_single "]}," Ruby20Parser _reduce_322":{"type":"method","name":"_reduce_322","children":[],"call":[" lexer lineno "," lexer "," new_until "," new_if "," new_while "," new_case "," env extend "," env "," in_single= "," in_single "," in_def= "," in_def "]}," Ruby20Parser _reduce_321":{"type":"method","name":"_reduce_321","children":[],"call":[" lexer comments "," lexer "," env unextend "," env "," new_class "," new_while ","val [] "," new_if "," new_case "," in_def= "," in_def "," lexer lineno "]}," Ruby20Parser _reduce_320":{"type":"method","name":"_reduce_320","children":[],"call":[" env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," lexer "," comments "," new_if ","iter insert "," block_dup_check ","val [] "," new_until "," lexer lineno "," env unextend "," new_class "]}," Ruby20Parser _reduce_319":{"type":"method","name":"_reduce_319","children":[],"call":[" lexer lineno "," lexer "," new_if ","val [] "," new_while "," lexer comments "," env unextend "," env "," new_class "," env extend "," yyerror "," in_single > "," in_single "," in_def "," comments push "," comments "]}," Ruby20Parser _reduce_318":{"type":"method","name":"_reduce_318","children":[],"call":[" new_for ","val [] ","iter insert "," block_dup_check "," new_if "," env extend "," env "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," lexer "," comments "," lexer lineno "]}," Ruby20Parser _reduce_317":{"type":"method","name":"_reduce_317","children":[],"call":[" lexer cond pop "," lexer cond "," lexer ","iter insert "," block_dup_check ","val [] "," debug20 "," new_if "," lexer lineno "," new_for "]}," Ruby20Parser _reduce_316":{"type":"method","name":"_reduce_316","children":[],"call":[" lexer cond push "," lexer cond "," lexer "," new_call ","iter insert "," new_for ","val [] "," lexer cond pop "]}," Ruby20Parser _reduce_315":{"type":"method","name":"_reduce_315","children":[],"call":[" new_case ","call line= ","iter line ","iter insert ","val [] "," s line "," s "," debug20 "," block_dup_check "," lexer cond pop "," lexer cond "," lexer "," lexer cond push "]}," Ruby20Parser _reduce_314":{"type":"method","name":"_reduce_314","children":[],"call":[" new_case "," debug20 "," new_yield "," new_call "," lexer cond push "," lexer cond "," lexer "]}," Ruby20Parser _reduce_313":{"type":"method","name":"_reduce_313","children":[],"call":[" new_until ","val [] "," s "," new_yield "," s line ","iter insert "," new_case "]}," Ruby20Parser _reduce_312":{"type":"method","name":"_reduce_312","children":[],"call":[" lexer cond pop "," lexer cond "," lexer "," s ","val [] "," new_yield "," debug "," new_case "," new_until "]}," Ruby20Parser _reduce_311":{"type":"method","name":"_reduce_311","children":[],"call":[" lexer cond push "," lexer cond "," lexer "," new_yield "," s line "," s "," new_call "," new_until ","val [] "," lexer cond pop "]}," Ruby20Parser _reduce_310":{"type":"method","name":"_reduce_310","children":[],"call":[" new_while ","val [] "," new_yield "," new_hash "," s line "," s "," lexer cond pop "," lexer cond "," lexer "," lexer cond push "]}," Ruby20Parser _reduce_309":{"type":"method","name":"_reduce_309","children":[],"call":[" lexer cond pop "," lexer cond "," lexer "," new_yield ","val [] "," lexer lineno "," s line "," s "," new_yield line "," lexer cond push "," new_while "]}," Ruby20Parser _reduce_308":{"type":"method","name":"_reduce_308","children":[],"call":[" lexer cond push "," lexer cond "," lexer "," s ","result line ","result sexp_type= "," new_hash "," new_yield "," new_yield line "," new_while ","val [] "," lexer cond pop "," s  line "," new_hash  line "," new_yield  line "," new_yield line  line "," new_while  line "," s  sexp_type= "," new_hash  sexp_type= "," new_yield  sexp_type= "," new_yield line  sexp_type= "," new_while  sexp_type= "]}," Ruby20Parser _reduce_307":{"type":"method","name":"_reduce_307","children":[],"call":[" new_if ","val [] "," new_hash "," lexer lineno "," lexer "," new_yield "," new_yield line "," lexer cond pop "," lexer cond "," lexer cond push "]}," Ruby20Parser _reduce_306":{"type":"method","name":"_reduce_306","children":[],"call":[" new_if ","val [] "," lexer lineno "," lexer "," s line "," s ","id to_sym ","result line ","result sexp_type= "," lexer cond push "," lexer cond "," new_if  line "," lexer lineno  line "," s line  line "," new_if  sexp_type= "," lexer lineno  sexp_type= "," s line  sexp_type= "]}," Ruby20Parser _reduce_305":{"type":"method","name":"_reduce_305","children":[],"call":["val [] ","result sexp_type= "," s "," s line ","expr line ","id to_sym "," lexer lineno "," lexer "," new_hash "," new_if ","val []  sexp_type= "," s line  sexp_type= "," lexer lineno  sexp_type= "," new_hash  sexp_type= "," new_if  sexp_type= "]}," Ruby20Parser _reduce_304":{"type":"method","name":"_reduce_304","children":[],"call":["iter insert "," block_dup_check ","val [] "," s ","val [] to_sym ","result paren= "," s line "," lexer lineno "," lexer ","id to_sym "," new_if "," s  paren= "," s line  paren= "," lexer lineno  paren= "," new_if  paren= ","val []  paren= "]}," Ruby20Parser _reduce_302":{"type":"method","name":"_reduce_302","children":[],"call":["call line= ","iter line ","iter insert ","val [] ","result paren= "," s "," lexer lex_state= "," lexer "," s line "," lexer lineno "," block_dup_check "," lexer lineno  paren= "]}," Ruby20Parser _reduce_301":{"type":"method","name":"_reduce_301","children":[],"call":[" debug20 "," lexer cmdarg restore "," lexer cmdarg "," lexer "," warning "," lexer cmdarg store "," s line "," s ","id to_sym "," wrap ","val [] ","call line= ","iter line ","iter insert "]}," Ruby20Parser _reduce_300":{"type":"method","name":"_reduce_300","children":[],"call":[" s ","val [] "," lexer lex_state= "," lexer "," s line ","expr line ","id to_sym ","call line= ","iter line ","iter insert "," debug20 "]}," Ruby20Parser _reduce_299":{"type":"method","name":"_reduce_299","children":[],"call":[" s ","val [] "," lexer cmdarg store "," lexer cmdarg "," lexer "," lexer lineno "," lexer lex_state= "," s line ","result paren= "," debug20 "," s  paren= "," lexer cmdarg store  paren= "," lexer lineno  paren= "," s line  paren= "]}," Ruby20Parser _reduce_298":{"type":"method","name":"_reduce_298","children":[],"call":[" new_yield "," debug20 ","result line= ","val [] "," s "," lexer lineno "," lexer "," lexer lex_state= "," new_yield  line= "," s  line= "," lexer lineno  line= "]}," Ruby20Parser _reduce_297":{"type":"method","name":"_reduce_297","children":[],"call":[" new_yield ","result line= ","val [] "," s "," lexer lineno "," lexer "," new_begin "," lexer cmdarg pop "," lexer cmdarg "," lexer lex_state= "," new_yield  line= "," s  line= "," lexer lineno  line= "," new_begin  line= "]}," Ruby20Parser _reduce_296":{"type":"method","name":"_reduce_296","children":[],"call":[" new_yield ","val [] "," lexer lineno "," lexer "," new_call ","msg to_sym "," lexer cmdarg push "," lexer cmdarg "," s line "," s "]}," Ruby20Parser _reduce_295":{"type":"method","name":"_reduce_295","children":[],"call":[" s "," new_call ","val [] to_sym ","val [] ","msg to_sym "," lexer lineno "," lexer "," lexer lex_state= "," new_yield "]}," Ruby20Parser _reduce_294":{"type":"method","name":"_reduce_294","children":[],"call":[" new_hash "," new_begin "," lexer cmdarg pop "," lexer cmdarg "," lexer "," new_yield ","val [] "," s ","val [] values "]}," Ruby20Parser _reduce_293":{"type":"method","name":"_reduce_293","children":[],"call":[" lexer lineno "," lexer "," lexer cmdarg push "," lexer cmdarg "," s ","result []= ","val [] "," new_hash "," lexer lineno  []= "," s  []= "," new_hash  []= "]}," Ruby20Parser _reduce_292":{"type":"method","name":"_reduce_292","children":[],"call":["result sexp_type= "," s ","val [] ","result line "," new_call ","msg to_sym ","val [] values ","val [] to_sym "," lexer lineno "," lexer "," new_call  sexp_type= "," s  sexp_type= "," lexer lineno  sexp_type= "," new_call  line "," s  line "," lexer lineno  line "]}," Ruby20Parser _reduce_291":{"type":"method","name":"_reduce_291","children":[],"call":[" s ","val [] to_sym ","val [] ","result []= "," s  []= "]}," Ruby20Parser _reduce_290":{"type":"method","name":"_reduce_290","children":[],"call":[" s ","val [] to_sym ","val [] ","result paren= "," s  paren= "]}," Ruby20Parser _reduce_289":{"type":"method","name":"_reduce_289","children":[],"call":["result paren= "," s ","val [] ","val [] to_sym "," warning "," s  paren= ","val []  paren= "]}," Ruby20Parser _reduce_288":{"type":"method","name":"_reduce_288","children":[],"call":["val [] "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," warning ","result paren= "," s "," lexer lex_state= ","val []  paren= "]}," Ruby20Parser _reduce_287":{"type":"method","name":"_reduce_287","children":[],"call":[" lexer lex_state= "," lexer ","val [] "," warning "," debug20 "]}," Ruby20Parser _reduce_286":{"type":"method","name":"_reduce_286","children":[],"call":[" lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," lexer cmdarg stack dup "," lexer lex_state= ","result line= ","val [] "," s "," lexer cmdarg stack dup  line= "," s  line= "]}," Ruby20Parser _reduce_285":{"type":"method","name":"_reduce_285","children":[],"call":[" debug20 "," s line ","arg line "," s "," lexer lineno "," lexer "]}," Ruby20Parser _reduce_284":{"type":"method","name":"_reduce_284","children":[],"call":["result line= ","val [] "," s "," arg_concat "," s line ","arg line "," new_call ","val [] to_sym "," s  line= "," arg_concat  line= "," s line  line= "," new_call  line= "]}," Ruby20Parser _reduce_283":{"type":"method","name":"_reduce_283","children":[],"call":[" lexer lineno "," lexer "," arg_concat ","val [] ","val [] << "]}," Ruby20Parser _reduce_282":{"type":"method","name":"_reduce_282","children":[],"call":[" new_call ","val [] to_sym ","val [] ","val [] << "," list_append "," s line "," s "]}," Ruby20Parser _reduce_271":{"type":"method","name":"_reduce_271","children":[],"call":[" s ","val [] "," arg_blk_pass "," call_args "," array_to_hash "," lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg pop ","(sym :tLBRACE_ARG) include? ","val [] << "]}," Ruby20Parser _reduce_270":{"type":"method","name":"_reduce_270","children":[],"call":[" arg_concat ","val [] "," arg_blk_pass "," call_args "," array_to_hash "," lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg pop ","(sym :tLPAREN) include? "," last_token_type first "," last_token_type "," new_masgn_arg "]}," Ruby20Parser _reduce_269":{"type":"method","name":"_reduce_269","children":[],"call":["val [] << ","val [] "," arg_blk_pass "," call_args "," new_masgn_arg "]}," Ruby20Parser _reduce_268":{"type":"method","name":"_reduce_268","children":[],"call":[" list_append "," s ","val [] "," call_args "," warning "," array_to_hash "]}," Ruby20Parser _reduce_267":{"type":"method","name":"_reduce_267","children":[],"call":[" list_append ","val [] "," args "," array_to_hash "," call_args "]}," Ruby20Parser _reduce_266":{"type":"method","name":"_reduce_266","children":[],"call":[" s ","val [] "," args "," array_to_hash "," call_args "]}," Ruby20Parser _reduce_265":{"type":"method","name":"_reduce_265","children":[],"call":[" s ","val [] "," args "," call_args "," warning "]}," Ruby20Parser _reduce_263":{"type":"method","name":"_reduce_263","children":[],"call":["val [] "," args "," array_to_hash "]}," Ruby20Parser _reduce_262":{"type":"method","name":"_reduce_262","children":[],"call":[" s ","val [] "," args "]}," Ruby20Parser _reduce_261":{"type":"method","name":"_reduce_261","children":[],"call":["val [] "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "]}," Ruby20Parser _reduce_260":{"type":"method","name":"_reduce_260","children":[],"call":[" lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg stack dup "," lexer cmdarg stack ","val [] "]}," Ruby20Parser _reduce_259":{"type":"method","name":"_reduce_259","children":[],"call":[" call_args "," new_rescue "," new_resbody "," s "," remove_begin "," value_expr "," s line "," new_ remove_begin  "," new_res value_expr  "]}," Ruby20Parser _reduce_258":{"type":"method","name":"_reduce_258","children":[],"call":[" arg_blk_pass ","val [] "," call_args "," array_to_hash "]}," Ruby20Parser _reduce_257":{"type":"method","name":"_reduce_257","children":[],"call":[" arg_blk_pass ","val [] "," call_args "," array_to_hash "," args ","result line_max= "," arg_blk_pass  line_max= "," call_args  line_max= "," args  line_max= "]}," Ruby20Parser _reduce_256":{"type":"method","name":"_reduce_256","children":[],"call":[" arg_blk_pass ","val [] "," call_args "," args "," array_to_hash "," new_rescue "," new_resbody "," s line "," s "," remove_begin "," value_expr "," new_ remove_begin  "," new_res value_expr  "]}," Ruby20Parser _reduce_255":{"type":"method","name":"_reduce_255","children":[],"call":[" call_args "," warning "," args ","val [] "]}," Ruby20Parser _reduce_254":{"type":"method","name":"_reduce_254","children":[],"call":[" args "," array_to_hash ","val [] "]}," Ruby20Parser _reduce_253":{"type":"method","name":"_reduce_253","children":[],"call":[" args "," array_to_hash ","val [] "," value_expr "]}," Ruby20Parser _reduce_252":{"type":"method","name":"_reduce_252","children":[],"call":[" args "," new_call "," argl ","op to_sym "," warn ","val [] "]}," Ruby20Parser _reduce_251":{"type":"method","name":"_reduce_251","children":[],"call":["val [] "," new_call "," argl ","op to_sym "]}," Ruby20Parser _reduce_250":{"type":"method","name":"_reduce_250","children":[],"call":["val [] "," value_expr "]}," Ruby20Parser _reduce_247":{"type":"method","name":"_reduce_247","children":[],"call":["val [] "]}," Ruby20Parser _reduce_246":{"type":"method","name":"_reduce_246","children":[],"call":[" args "," array_to_hash ","val [] "," s ","val [] values ","result []= "," args  []= "," s  []= "]}," Ruby20Parser _reduce_245":{"type":"method","name":"_reduce_245","children":[],"call":[" args "," array_to_hash ","val [] "," s "," s line ","c line ","val [] values "]}," Ruby20Parser _reduce_244":{"type":"method","name":"_reduce_244","children":[],"call":[" args ","val [] "," s "," s line "]}," Ruby20Parser _reduce_242":{"type":"method","name":"_reduce_242","children":[],"call":[" value_expr ","val [] "," logical_op "," s line ","c line "," s "]}," Ruby20Parser _reduce_240":{"type":"method","name":"_reduce_240","children":[],"call":[" s ","val [] "," new_call "," argl ","val []= "," value_expr "," logical_op "," lexer tern pop "," lexer tern "," lexer "]}," Ruby20Parser _reduce_239":{"type":"method","name":"_reduce_239","children":[],"call":[" s ","val [] "," new_call "," value_expr "," logical_op "]}," Ruby20Parser _reduce_238":{"type":"method","name":"_reduce_238","children":[],"call":[" logical_op ","val [] "," new_call ","result line ","arg line "," argl ","val []= "," value_expr "," logop "," logical_op  line "," new_call  line "," logop  line "]}," Ruby20Parser _reduce_237":{"type":"method","name":"_reduce_237","children":[],"call":[" logical_op ","val [] "," s "," new_match "," s line ","lhs line "," new_call "," argl ","val []= "," value_expr "," logop "]}," Ruby20Parser _reduce_236":{"type":"method","name":"_reduce_236","children":[],"call":[" new_call "," argl ","val [] ","val []= "," value_expr "," new_match "]}," Ruby20Parser _reduce_235":{"type":"method","name":"_reduce_235","children":[],"call":[" new_call "," argl ","val [] ","val []= "," value_expr ","result line ","arg line "," new_call  line "]}," Ruby20Parser _reduce_234":{"type":"method","name":"_reduce_234","children":[],"call":[" new_call "," value_expr ","val [] "," argl "," s line ","lhs line "," s "," new_match "]}," Ruby20Parser _reduce_233":{"type":"method","name":"_reduce_233","children":[],"call":[" new_call ","val [] "," argl "," new_match "]}," Ruby20Parser _reduce_232":{"type":"method","name":"_reduce_232","children":[],"call":[" s "," new_match ","val [] "," new_call "," argl "," get_match_node "]}," Ruby20Parser _reduce_231":{"type":"method","name":"_reduce_231","children":[],"call":[" new_match ","val [] "," new_call "," argl "," get_match_node "]}," Ruby20Parser _reduce_230":{"type":"method","name":"_reduce_230","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby20Parser _reduce_229":{"type":"method","name":"_reduce_229","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby20Parser _reduce_228":{"type":"method","name":"_reduce_228","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby20Parser _reduce_227":{"type":"method","name":"_reduce_227","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby20Parser _reduce_226":{"type":"method","name":"_reduce_226","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby20Parser _reduce_225":{"type":"method","name":"_reduce_225","children":[],"call":[" new_call "," argl ","val [] "," debug20 "," s "," s line "," lexer lineno "," lexer "]}," Ruby20Parser _reduce_224":{"type":"method","name":"_reduce_224","children":[],"call":[" new_call "," argl ","val [] "," s "," s line "," lexer lineno "," lexer "]}," Ruby20Parser _reduce_223":{"type":"method","name":"_reduce_223","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby20Parser _reduce_222":{"type":"method","name":"_reduce_222","children":[],"call":[" new_call "," argl ","val [] "," debug "," s line "," s "]}," Ruby20Parser _reduce_221":{"type":"method","name":"_reduce_221","children":[],"call":[" new_call "," argl ","val [] "," s line "," s "]}," Ruby20Parser _reduce_220":{"type":"method","name":"_reduce_220","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby20Parser _reduce_219":{"type":"method","name":"_reduce_219","children":[],"call":[" new_call ","val [] "," argl "]}," Ruby20Parser _reduce_218":{"type":"method","name":"_reduce_218","children":[],"call":[" new_call ","val [] "," argl "]}," Ruby20Parser _reduce_217":{"type":"method","name":"_reduce_217","children":[],"call":[" debug20 "," new_call "," argl ","val [] "," s ","v2 last ","v1 last ","Integer  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type "," s line ","v1 line "]}," Ruby20Parser _reduce_216":{"type":"method","name":"_reduce_216","children":[],"call":[" new_call "," argl ","val [] "," s ","v2 last ","v1 last ","Integer  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type "," s line ","v1 line "]}," Ruby20Parser _reduce_215":{"type":"method","name":"_reduce_215","children":[],"call":[" new_call "," argl ","val [] "," backref_assign_error "," new_op_asgn "," new_op_ new_op_asgn  "]}," Ruby20Parser _reduce_214":{"type":"method","name":"_reduce_214","children":[],"call":[" new_call "," argl ","val [] "," raise ","not yet: %p % "," new_const_op_asgn "," s line "," s ","lhs to_sym ","v1 line ","v2 last ","v1 last ","Integer  === ","v2 sexp_type == ","v2 sexp_type ","v1 sexp_type == ","v1 sexp_type "," s line  to_sym "]}," Ruby20Parser _reduce_213":{"type":"method","name":"_reduce_213","children":[],"call":[" new_call "," argl ","val [] "," raise ","not yet: %p % "," lexer lineno "," lexer "," s line ","v1 line "," s ","v2 last ","v1 last ","Integer  === ","v2 sexp_type == ","v2 sexp_type ","v1 sexp_type == ","v1 sexp_type "]}," Ruby20Parser _reduce_212":{"type":"method","name":"_reduce_212","children":[],"call":[" new_call "," argl ","val [] "," s ","val [] to_sym "," new_const_op_asgn "," s line ","lhs1 line ","lhs2 to_sym "," backref_assign_error "," new_op_asgn "," new_const_op_ new_op_asgn  "," s line 1 line "," s line 2 to_sym "," new_op_ new_op_asgn  "]}," Ruby20Parser _reduce_211":{"type":"method","name":"_reduce_211","children":[],"call":[" new_call "," argl ","val [] "," new_op_asgn2 "," s ","val [] to_sym "," s line ","lhs line ","op to_sym ","id to_sym "," new_const_op_asgn ","lhs to_sym "," wrap "," s line  line "," wrap  line "," s line  to_sym "," wrap  to_sym "]}," Ruby20Parser _reduce_210":{"type":"method","name":"_reduce_210","children":[],"call":[" new_call "," argl ","val [] "," new_op_asgn2 "," new_const_op_asgn "," s line ","lhs1 line "," s ","lhs2 to_sym "," s line 1 line "," s line 2 to_sym "]}," Ruby20Parser _reduce_209":{"type":"method","name":"_reduce_209","children":[],"call":[" s ","v2 last ","v1 last ","Integer  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type ","val [] ","val [] to_sym ","val [] sexp_type= "," new_op_asgn2 "," s line ","lhs line ","op to_sym ","id to_sym ","Fixnum  === "]}," Ruby20Parser _reduce_208":{"type":"method","name":"_reduce_208","children":[],"call":[" s ","v2 last ","v1 last ","Integer  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type ","val [] "," new_op_asgn ","val [] to_sym ","val [] sexp_type= "," new_op_asgn1 "," new_op_asgn2 ","Fixnum  === "]}," Ruby20Parser _reduce_207":{"type":"method","name":"_reduce_207","children":[],"call":[" backref_assign_error ","val [] "," new_assign "," new_op_asgn "," new_op_asgn2 "]}," Ruby20Parser _reduce_206":{"type":"method","name":"_reduce_206","children":[],"call":[" yyerror "," new_assign ","val [] "," new_op_asgn1 "]}," Ruby20Parser _reduce_205":{"type":"method","name":"_reduce_205","children":[],"call":[" yyerror "," new_op_asgn "]}," Ruby20Parser _reduce_204":{"type":"method","name":"_reduce_204","children":[],"call":[" s ","val [] to_sym ","val [] "," new_assign "]}," Ruby20Parser _reduce_203":{"type":"method","name":"_reduce_203","children":[],"call":[" new_op_asgn2 "," s ","val [] ","val [] to_sym "]}," Ruby20Parser _reduce_202":{"type":"method","name":"_reduce_202","children":[],"call":[" new_op_asgn2 "," s ","val [] ","val [] to_sym "]}," Ruby20Parser _reduce_201":{"type":"method","name":"_reduce_201","children":[],"call":[" s ","val [] ","val [] to_sym ","val [] sexp_type= ","val [] []= "]}," Ruby20Parser _reduce_200":{"type":"method","name":"_reduce_200","children":[],"call":[" s "," new_resbody ","val [] "," new_op_asgn "]}," Ruby20Parser _reduce_199":{"type":"method","name":"_reduce_199","children":[],"call":[" new_op_asgn "]}," Ruby20Parser _reduce_198":{"type":"method","name":"_reduce_198","children":[],"call":[" new_assign "," s "," new_resbody ","val [] "," node_assign "]}," Ruby20Parser _reduce_197":{"type":"method","name":"_reduce_197","children":[],"call":[" new_assign ","val [] "," node_assign "]}," Ruby20Parser _reduce_124":{"type":"method","name":"_reduce_124","children":[],"call":[" new_undef ","val [] "]}," Ruby20Parser _reduce_123":{"type":"method","name":"_reduce_123","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby20Parser _reduce_122":{"type":"method","name":"_reduce_122","children":[],"call":[" new_undef ","val [] "," s ","val [] to_sym ","result line ","pval line ","name to_sym "," new_undef  line "," s  line "]}," Ruby20Parser _reduce_120":{"type":"method","name":"_reduce_120","children":[],"call":[" s ","val [] to_sym ","val [] "," s line ","name to_sym "," wrap "]}," Ruby20Parser _reduce_117":{"type":"method","name":"_reduce_117","children":[],"call":["val [] "," lexer lex_state= "," lexer "," backref_assign_error "," yyerror "]}," Ruby20Parser _reduce_116":{"type":"method","name":"_reduce_116","children":[],"call":["val [] "," lexer lex_state= "," lexer "," s ","val [] to_sym "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," backref_assign_error "," s line ","id to_sym "," debug "]}," Ruby20Parser _reduce_112":{"type":"method","name":"_reduce_112","children":[],"call":[" s ","val [] to_sym ","val [] "," new_attrasgn "]}," Ruby20Parser _reduce_111":{"type":"method","name":"_reduce_111","children":[],"call":["val [] to_sym ","val [] "," aryset "," new_attrasgn "]}," Ruby20Parser _reduce_110":{"type":"method","name":"_reduce_110","children":[],"call":[" s ","val [] to_sym ","val [] "," debug20 "," assignable "," aryset "," debug "]}," Ruby20Parser _reduce_108":{"type":"method","name":"_reduce_108","children":[],"call":[" yyerror "," backref_assign_error ","val [] "," assignable ","result line= "," lexer lineno "," lexer "," assignable  line= ","result  lexer lineno = "," lexer  lexer lineno no "]}," Ruby20Parser _reduce_107":{"type":"method","name":"_reduce_107","children":[],"call":[" backref_assign_error ","val [] "," s ","val [] to_sym "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," s line ","id to_sym "," debug "]}," Ruby20Parser _reduce_106":{"type":"method","name":"_reduce_106","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," s line ","id to_sym "," lexer lineno "," lexer ","expr line "," debug ","va lexer lineno  [] to_sym ","vaexpr line  [] to_sym ","va lexer lineno  [] ","vaexpr line  [] "," in_sing lexer lineno e > "," in_singexpr line e > "," in_sing lexer lineno e "," in_singexpr line e "," s  lexer lineno ine "," s expr line ine ","  lexer lineno exer  lexer lineno ineno "," expr line exer expr line ineno ","  lexer lineno exer "," expr line exer ","expr  lexer lineno ine ","expr expr line ine "]}," Ruby20Parser _reduce_105":{"type":"method","name":"_reduce_105","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," new_attrasgn "," s line ","id to_sym ","expr line ","vaexpr line  [] to_sym ","vaexpr line  [] "," in_singexpr line e > "," in_singexpr line e "," s expr line ine ","expr expr line ine "]}," Ruby20Parser _reduce_104":{"type":"method","name":"_reduce_104","children":[],"call":[" new_attrasgn ","val [] "," s "]}," Ruby20Parser _reduce_103":{"type":"method","name":"_reduce_103","children":[],"call":[" s ","val [] "," new_attrasgn "]}," Ruby20Parser _reduce_102":{"type":"method","name":"_reduce_102","children":[],"call":[" new_attrasgn ","val [] "," aryset "," s "]}," Ruby20Parser _reduce_101":{"type":"method","name":"_reduce_101","children":[],"call":[" aryset ","val [] "," assignable "]}," Ruby20Parser _reduce_100":{"type":"method","name":"_reduce_100","children":[],"call":[" debug20 "," assignable ","val [] "]}," Ruby20Parser _reduce_99":{"type":"method","name":"_reduce_99","children":[],"call":[" assignable ","val [] "," list_append "]}," Ruby20Parser _reduce_98":{"type":"method","name":"_reduce_98","children":[],"call":[" backref_assign_error ","val [] "," s "," list_append "," s line ","item line "]}," Ruby20Parser _reduce_97":{"type":"method","name":"_reduce_97","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," debug20 "," in_single > "," in_single "," in_def ","val [] << ","val [] compact "," s line ","item line "]}," Ruby20Parser _reduce_96":{"type":"method","name":"_reduce_96","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," debug20 "," in_single > "," in_single "," in_def ","val [] << ","val [] compact "," s line ","lhs line "]}," Ruby20Parser _reduce_95":{"type":"method","name":"_reduce_95","children":[],"call":[" new_attrasgn ","val [] "," s "," s line ","lhs line "]}," Ruby20Parser _reduce_94":{"type":"method","name":"_reduce_94","children":[],"call":[" s ","val [] "]}," Ruby20Parser _reduce_93":{"type":"method","name":"_reduce_93","children":[],"call":[" new_attrasgn ","val [] "," s ","val [] sexp_body "," s line ","post sexp_body ","post line ","vapost line  [] ","vapost line  [] sexp_body "," s post line ine ","post post line ine "]}," Ruby20Parser _reduce_92":{"type":"method","name":"_reduce_92","children":[],"call":[" aryset ","val [] "," s ","val [] sexp_body "," s line ","post sexp_body ","post line "," lexer lineno "," lexer ","  s line set ","vapost line  [] ","va lexer lineno  [] ","vapost line  [] sexp_body ","va lexer lineno  [] sexp_body "," s post line ine "," s  lexer lineno ine ","post post line ine ","post  lexer lineno ine "," post line exer post line ineno ","  lexer lineno exer  lexer lineno ineno "," post line exer ","  lexer lineno exer "]}," Ruby20Parser _reduce_91":{"type":"method","name":"_reduce_91","children":[],"call":[" assignable ","val [] "," s ","ary concat ","val [] sexp_body "," s line "," lexer lineno "," lexer ","ary line ","post sexp_body ","splat line ","node line "," assignab lexer lineno e ","va lexer lineno  [] "," s  concat "," s line  concat ","va lexer lineno  [] sexp_body "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "," s  line "," s line  line ","ary  lexer lineno ine ","sp lexer lineno at  lexer lineno ine ","node  lexer lineno ine "]}," Ruby20Parser _reduce_90":{"type":"method","name":"_reduce_90","children":[],"call":[" assignable ","val [] "," s ","ary concat ","val [] sexp_body "," s line ","ary line ","post sexp_body ","splat line ","node line "," assignabnode line e ","vanode line  [] "," s  concat "," s line  concat ","vanode line  [] sexp_body "," s node line ine "," s  line "," s line  line ","ary node line ine ","spnode line at node line ine ","node node line ine "]}," Ruby20Parser _reduce_89":{"type":"method","name":"_reduce_89","children":[],"call":[" list_append ","val [] "," s ","ary concat ","val [] sexp_body "," s line ","node line ","ary line ","post sexp_body ","head line "," node line ist_append ","vanode line  [] "," list_append  concat "," s line  concat ","vanode line  [] sexp_body "," s node line ine ","node node line ine "," list_append  line "," s line  line ","ary node line ine ","head node line ine "]}," Ruby20Parser _reduce_88":{"type":"method","name":"_reduce_88","children":[],"call":[" s ","val [] ","val [] << ","ary concat ","val [] sexp_body "," list_append "," s line ","ary line ","post sexp_body ","head line ","head << ","vahead line  [] ","vahead line  [] << "," list_append  concat ","vahead line  [] sexp_body "," head line ist_append "," s head line ine "," list_append  line ","ary head line ine ","head head line ine "]}," Ruby20Parser _reduce_87":{"type":"method","name":"_reduce_87","children":[],"call":["val [] << ","val [] compact ","val [] "," s ","result concat ","ary2 sexp_body "," list_append "," s line ","head << ","head line ","result line ","splat line ","vahead line  [] << ","vahead line  [] compact ","vahead line  [] ","val [] <<  concat "," s  concat "," list_append  concat "," s line  concat ","resuhead line t concat "," head line ist_append "," s head line ine ","head head line ine ","val [] <<  line "," s  line "," list_append  line "," s line  line ","resuhead line t head line ine ","sphead line at head line ine "]}," Ruby20Parser _reduce_86":{"type":"method","name":"_reduce_86","children":[],"call":[" s ","val [] ","val [] << ","result concat ","ary2 sexp_body "," list_append "," s line ","result line ","splat line ","head line ","head << ","tail line "," s  concat "," list_append  concat "," s line  concat "," s  line "," list_append  line "," s line  line "]}," Ruby20Parser _reduce_85":{"type":"method","name":"_reduce_85","children":[],"call":["val [] "," s ","val [] << ","val [] compact "," s line ","head line ","head << ","tail line ","lhs line ","lhs << ","rhs compact "]}," Ruby20Parser _reduce_83":{"type":"method","name":"_reduce_83","children":[],"call":[" s ","val [] sexp_body ","val [] "," s line ","head line ","arg line ","val [] [] ","vaarg line  [] sexp_body ","vaarg line  [] "," s arg line ine ","head arg line ine ","arg arg line ine ","vaarg line  [] [] "]}," Ruby20Parser _reduce_82":{"type":"method","name":"_reduce_82","children":[],"call":[" s ","val [] "," s line ","arg line ","vaarg line  [] "," s arg line ine ","arg arg line ine "]}," Ruby20Parser _reduce_81":{"type":"method","name":"_reduce_81","children":[],"call":[" s ","ary concat ","val [] sexp_body ","val [] ","val [] [] "," s  concat "]}," Ruby20Parser _reduce_80":{"type":"method","name":"_reduce_80","children":[],"call":[" s ","val [] "]}," Ruby20Parser _reduce_79":{"type":"method","name":"_reduce_79","children":[],"call":[" s ","ary concat ","val [] sexp_body ","val [] "," list_append "," s line "," ret_args ","val [] last ","val [] [] "," list_append  concat "," s val [] last  "]}," Ruby20Parser _reduce_78":{"type":"method","name":"_reduce_78","children":[],"call":[" s ","val [] << ","val [] "," s line "," ret_args ","val [] last "," s val [] last  "]}," Ruby20Parser _reduce_77":{"type":"method","name":"_reduce_77","children":[],"call":[" s ","result concat ","ary2 sexp_body "," list_append "," s line "," ret_args ","val [] ","val [] last ","ary2 [] "," s  concat "," list_append  concat "," s line  concat "," s val [] last  "]}," Ruby20Parser _reduce_76":{"type":"method","name":"_reduce_76","children":[],"call":[" s ","val [] << ","val [] "," new_yield "," s line "," ret_args ","val [] last ","result line "," s val [] last  "," s  line "," new_yield  line "," s line  line ","result val [] last  "]}," Ruby20Parser _reduce_75":{"type":"method","name":"_reduce_75","children":[],"call":[" s ","val [] << ","val [] compact ","val [] "," new_super "," new_yield ","result line "," s  line "," new_super  line "," new_yield  line "]}," Ruby20Parser _reduce_74":{"type":"method","name":"_reduce_74","children":[],"call":[" s ","val [] ","block insert "," block_dup_check "," new_call ","msg to_sym "," new_super "," new_ new_call  "]}," Ruby20Parser _reduce_73":{"type":"method","name":"_reduce_73","children":[],"call":[" s ","val [] "," new_call ","val [] to_sym ","block insert "," block_dup_check ","msg to_sym ","result line ","id to_sym "," new_ new_call  "," s  line "," new_call  line "]}," Ruby20Parser _reduce_71":{"type":"method","name":"_reduce_71","children":[],"call":["val [] "," new_call ","val [] to_sym ","block insert "," block_dup_check ","msg to_sym ","result line ","lhs line ","op to_sym "," new_ new_call  ","val []  line "," new_call  line "]}," Ruby20Parser _reduce_69":{"type":"method","name":"_reduce_69","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last ","val [] concat ","val [] sexp_body ","result insert "," block_dup_check ","call concat ","args sexp_body "," s val [] last  "," s line  insert ","val [] concat  insert ","call concat  insert "]}," Ruby20Parser _reduce_68":{"type":"method","name":"_reduce_68","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last "," new_call ","val [] to_sym ","val [] concat ","val [] sexp_body ","call concat ","args sexp_body "," new_call line ","msg to_sym "," s val [] last  "," new_call val [] last  "]}," Ruby20Parser _reduce_67":{"type":"method","name":"_reduce_67","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last ","result line= "," new_call ","val [] to_sym "," new_call line "," lexer lineno "," lexer ","msg to_sym ","result line "," s val [] last  "," s line  line= "," new_call  line= "," new_call line  line= ","result val [] last = "," new_call val [] last  "," lexer val [] last no "," s line  line "," new_call  line "," new_call line  line ","result val [] last  "]}," Ruby20Parser _reduce_66":{"type":"method","name":"_reduce_66","children":[],"call":[" new_yield ","val [] "," lexer lineno "," lexer ","result line= "," new_yield  line= "," lexer lineno  line= "]}," Ruby20Parser _reduce_65":{"type":"method","name":"_reduce_65","children":[],"call":[" new_super ","val [] "," new_call ","val [] to_sym "," lexer lineno "," lexer "," new_call line ","blk line ","msg to_sym "]}," Ruby20Parser _reduce_64":{"type":"method","name":"_reduce_64","children":[],"call":["block insert "," block_dup_check "," new_call ","msg to_sym ","val [] ","val [] to_sym "," new_call line ","blk line "," new_ new_call  "," new_ new_call  line "]}," Ruby20Parser _reduce_63":{"type":"method","name":"_reduce_63","children":[],"call":[" new_call ","val [] ","val [] to_sym "]}," Ruby20Parser _reduce_62":{"type":"method","name":"_reduce_62","children":[],"call":["block insert "," block_dup_check "," new_call ","val [] ","msg to_sym "," new_ new_call  "]}," Ruby20Parser _reduce_61":{"type":"method","name":"_reduce_61","children":[],"call":[" new_call ","val [] ","val [] to_sym "]}," Ruby20Parser _reduce_60":{"type":"method","name":"_reduce_60","children":[],"call":["result insert ","val [] "," block_dup_check ","val [] concat ","val [] sexp_body "," lexer cond pop "," lexer cond "," lexer ","val [] [] ","val [] concat  insert "]}," Ruby20Parser _reduce_59":{"type":"method","name":"_reduce_59","children":[],"call":["val [] concat ","val [] sexp_body ","val [] "," lexer cond push "," lexer cond "," lexer "," lexer cond pop ","val [] [] "]}," Ruby20Parser _reduce_58":{"type":"method","name":"_reduce_58","children":[],"call":[" new_call ","val [] to_sym ","val [] "," value_expr "," lexer cond push "," lexer cond "," lexer "]}," Ruby20Parser _reduce_57":{"type":"method","name":"_reduce_57","children":[],"call":[" env unextend "," env ","result line= ","val [] "," new_iter "," value_expr "," new_iter  line= "," value_expr  line= "]}," Ruby20Parser _reduce_56":{"type":"method","name":"_reduce_56","children":[],"call":[" s ","val [] "," new_call line ","cmd line "," new_call "," env dynamic keys "," env dynamic "," env "]}," Ruby20Parser _reduce_55":{"type":"method","name":"_reduce_55","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," s ","val [] "," new_call line ","cmd line "," new_call "]}," Ruby20Parser _reduce_54":{"type":"method","name":"_reduce_54","children":[],"call":[" new_call ","val [] ","val [] to_sym "," logical_op "," s "," new_call line "]}," Ruby20Parser _reduce_50":{"type":"method","name":"_reduce_50","children":[],"call":[" value_expr ","val [] "," new_rescue "," new_resbody "," s "," value_ value_expr  "]}," Ruby20Parser _reduce_48":{"type":"method","name":"_reduce_48","children":[],"call":[" s ","val [] "," backref_assign_error "," s line ","id to_sym ","lhs2 to_sym "]}," Ruby20Parser _reduce_47":{"type":"method","name":"_reduce_47","children":[],"call":[" s ","val [] "," debug20 ","op to_sym ","lhs2 to_sym "," s line ","id to_sym "]}," Ruby20Parser _reduce_46":{"type":"method","name":"_reduce_46","children":[],"call":[" logical_op ","val [] "," debug20 "," s ","op to_sym ","lhs2 to_sym ","result line ","prim line ","result sexp_type= ","call_op == ","op_asgn to_sym ","id to_sym "," logop "," logical_op  line "," s  line "," logop  line "," logical_op  sexp_type= "," s  sexp_type= "," logop  sexp_type= "]}," Ruby20Parser _reduce_45":{"type":"method","name":"_reduce_45","children":[],"call":[" logical_op ","val [] ","result line= ","val [] line ","result sexp_type= ","val [] == "," s ","val [] to_sym ","result line ","prim line ","call_op == ","op_asgn to_sym ","id to_sym "," logop "," logical_op  line= "," s  line= "," logop  line= "," logical_op  sexp_type= "," s  sexp_type= "," logop  sexp_type= "," logical_op  line "," s  line "," logop  line "]}," Ruby20Parser _reduce_43":{"type":"method","name":"_reduce_43","children":[],"call":[" new_assign ","val [] "," s ","val [] to_sym "," new_op_asgn1 "," new_op_asgn "," node_assign "]}," Ruby20Parser _reduce_42":{"type":"method","name":"_reduce_42","children":[],"call":[" new_assign ","val [] "," new_op_asgn "," node_assign "]}," Ruby20Parser _reduce_40":{"type":"method","name":"_reduce_40","children":[],"call":[" new_masgn ","val [] "]}," Ruby20Parser _reduce_39":{"type":"method","name":"_reduce_39","children":[],"call":[" new_masgn ","val [] "]}," Ruby20Parser _reduce_38":{"type":"method","name":"_reduce_38","children":[],"call":[" new_assign "," s ","val [] "," new_masgn "," s line ","rhs line "," node_assign "]}," Ruby20Parser _reduce_37":{"type":"method","name":"_reduce_37","children":[],"call":[" backref_assign_error ","val [] "," new_assign "," s "," s line ","rhs line "," new_masgn "]}," Ruby20Parser _reduce_36":{"type":"method","name":"_reduce_36","children":[],"call":[" debug20 "," s ","val [] "," new_masgn "]}," Ruby20Parser _reduce_35":{"type":"method","name":"_reduce_35","children":[],"call":[" debug20 "," s ","val [] "," new_iter "," s line "," yyerror "," debug "," in_single > "," in_single "," in_def "]}," Ruby20Parser _reduce_34":{"type":"method","name":"_reduce_34","children":[],"call":["result line= ","val [] line ","val [] ","result sexp_type= ","val [] == "," s ","val [] to_sym "," new_iter "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," s line "," new_rescue "," new_resbody ","resbody line ","result []= "," s  line= "," new_iter  line= "," new_rescue  line= "," s  sexp_type= "," new_iter  sexp_type= "," new_rescue  sexp_type= "," new_ new_resbody  "," new_resbody  line "," s  []= "," new_iter  []= "," new_rescue  []= "]}," Ruby20Parser _reduce_33":{"type":"method","name":"_reduce_33","children":[],"call":["result line= ","val [] line ","val [] ","result sexp_type= ","val [] == "," s ","val [] to_sym "," new_rescue "," new_resbody "," s line ","resbody line "," new_until ","result []= "," s  line= "," new_rescue  line= "," new_until  line= "," s  sexp_type= "," new_rescue  sexp_type= "," new_until  sexp_type= "," new_ new_resbody  "," new_resbody  line "," s  []= "," new_rescue  []= "," new_until  []= "]}," Ruby20Parser _reduce_32":{"type":"method","name":"_reduce_32","children":[],"call":[" s ","val [] ","val [] to_sym "," new_until "," new_while "]}," Ruby20Parser _reduce_31":{"type":"method","name":"_reduce_31","children":[],"call":[" new_op_asgn "," new_while ","val [] "," new_if "]}," Ruby20Parser _reduce_30":{"type":"method","name":"_reduce_30","children":[],"call":[" new_masgn ","val [] "," new_if "]}," Ruby20Parser _reduce_28":{"type":"method","name":"_reduce_28","children":[],"call":[" new_iter ","val [] "," s "," yyerror "," debug20 "," in_single > "," in_single "," in_def "]}," Ruby20Parser _reduce_27":{"type":"method","name":"_reduce_27","children":[],"call":[" s "," new_resbody ","val [] "," yyerror "," s line ","lhs to_sym "]}," Ruby20Parser _reduce_26":{"type":"method","name":"_reduce_26","children":[],"call":[" new_until ","val [] "," s ","val [] to_sym "," s line ","lhs to_sym ","rhs to_sym "]}," Ruby20Parser _reduce_25":{"type":"method","name":"_reduce_25","children":[],"call":[" new_while ","val [] "," s ","val [] to_sym "," s line ","rhs to_sym ","lhs to_sym "," s line line "]}," Ruby20Parser _reduce_24":{"type":"method","name":"_reduce_24","children":[],"call":[" new_if ","val [] "," s line "," s "," s line line "," lexer lex_state= "," lexer "]}," Ruby20Parser _reduce_23":{"type":"method","name":"_reduce_23","children":[],"call":[" new_if ","val [] "," lexer lineno "," lexer "," lexer lex_state= "]}," Ruby20Parser _reduce_22":{"type":"method","name":"_reduce_22","children":[],"call":["val [] "," yyerror "]}," Ruby20Parser _reduce_21":{"type":"method","name":"_reduce_21","children":[],"call":[" yyerror "," env extend "," env "," debug20 "," in_single > "," in_single "," in_def "]}," Ruby20Parser _reduce_20":{"type":"method","name":"_reduce_20","children":[],"call":[" s ","val [] ","val [] to_sym "," debug20 "," debug "]}," Ruby20Parser _reduce_19":{"type":"method","name":"_reduce_19","children":[],"call":[" s ","val [] to_sym ","val [] "," debug20 "," block_append "]}," Ruby20Parser _reduce_18":{"type":"method","name":"_reduce_18","children":[],"call":[" s line ","val [] "," s "," block_append "]}," Ruby20Parser _reduce_17":{"type":"method","name":"_reduce_17","children":[],"call":[" lexer lineno "," lexer "," lexer lex_state= "]}," Ruby20Parser _reduce_16":{"type":"method","name":"_reduce_16","children":[],"call":[" debug20 ","val [] "," new_compstmt "]}," Ruby20Parser _reduce_15":{"type":"method","name":"_reduce_15","children":[],"call":[" block_append ","val [] "," new_compstmt "," new_body "]}," Ruby20Parser _reduce_12":{"type":"method","name":"_reduce_12","children":[],"call":[" new_compstmt "," yyerror ","_values [] "," new_iter "," s line "," s "]}," Ruby20Parser _reduce_11":{"type":"method","name":"_reduce_11","children":[],"call":[" new_body "," new_iter "," s "," lexer lineno "," lexer "]}," Ruby20Parser _reduce_10":{"type":"method","name":"_reduce_10","children":[],"call":[" new_iter ","val [] "," s ","preexe line ","iter line "]}," Ruby20Parser _reduce_9":{"type":"method","name":"_reduce_9","children":[],"call":[" env extend "," env "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," debug "]}," Ruby20Parser _reduce_8":{"type":"method","name":"_reduce_8","children":[],"call":["val [] "]}," Ruby20Parser _reduce_6":{"type":"method","name":"_reduce_6","children":[],"call":[" block_append ","val [] "]}," Ruby20Parser _reduce_3":{"type":"method","name":"_reduce_3","children":[],"call":["val [] "]}," Ruby20Parser _reduce_2":{"type":"method","name":"_reduce_2","children":[],"call":[" new_compstmt "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer cond pop "," lexer cond "]}," Ruby20Parser _reduce_1":{"type":"method","name":"_reduce_1","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby19Parser _reduce_579":{"type":"method","name":"_reduce_579","children":[],"call":[]}," Ruby19Parser _reduce_578":{"type":"method","name":"_reduce_578","children":[],"call":[" yyerrok "]}," Ruby19Parser _reduce_575":{"type":"method","name":"_reduce_575","children":[],"call":[" yyerrok "]}," Ruby19Parser _reduce_553":{"type":"method","name":"_reduce_553","children":[],"call":[" s ","val [] ","label to_sym ","val last "]}," Ruby19Parser _reduce_552":{"type":"method","name":"_reduce_552","children":[],"call":[" s ","val [] ","label to_sym "]}," Ruby19Parser _reduce_548":{"type":"method","name":"_reduce_548","children":[],"call":[" s ","val [] "]}," Ruby19Parser _reduce_543":{"type":"method","name":"_reduce_543","children":[],"call":["val [] "]}," Ruby19Parser _reduce_539":{"type":"method","name":"_reduce_539","children":[],"call":[" env []= "," env "]}," Ruby19Parser _reduce_535":{"type":"method","name":"_reduce_535","children":[],"call":[" block_append ","val [] "]}," Ruby19Parser _reduce_471":{"type":"method","name":"_reduce_471","children":[],"call":["val [] to_sym ","val [] "]}," Ruby19Parser _reduce_467":{"type":"method","name":"_reduce_467","children":[],"call":[" s ","val [] to_sym ","val [] "]}," Ruby19Parser _reduce_427":{"type":"method","name":"_reduce_427","children":[],"call":[" s ","val [] "]}," Ruby19Parser _reduce_422":{"type":"method","name":"_reduce_422","children":[],"call":[" lexer lineno "," lexer ","result << ","val [] ","result line= "," new_when "," lexer lineno  << "," new_when  << "," lexer lineno  line= "," new_when  line= "]}," Ruby19Parser _reduce_383":{"type":"method","name":"_reduce_383","children":[],"call":[]}," Ruby19Parser _reduce_382":{"type":"method","name":"_reduce_382","children":[],"call":[" args "]}," Ruby19Parser _reduce_352":{"type":"method","name":"_reduce_352","children":[],"call":["val [] "]}," Ruby19Parser _reduce_350":{"type":"method","name":"_reduce_350","children":[],"call":[" s ","val [] "]}," Ruby18Parser _reduce_520":{"type":"method","name":"_reduce_520","children":[],"call":[]}," Ruby18Parser _reduce_516":{"type":"method","name":"_reduce_516","children":[],"call":[" yyerrok "]}," Ruby18Parser _reduce_496":{"type":"method","name":"_reduce_496","children":[],"call":[" s ","val [] "]}," Ruby18Parser _reduce_493":{"type":"method","name":"_reduce_493","children":[],"call":["val [] "," yyerror ","val [] inspect ","size % != ","size % ","val [] size ","val [] size  % != ","val [] size  % ","val [] val [] size  "]}," Ruby18Parser _reduce_487":{"type":"method","name":"_reduce_487","children":[],"call":[]}," Ruby18Parser _reduce_482":{"type":"method","name":"_reduce_482","children":[],"call":[" env []= "," env "]}," Ruby18Parser _reduce_478":{"type":"method","name":"_reduce_478","children":[],"call":[" block_append ","val [] "]}," Ruby18Parser _reduce_438":{"type":"method","name":"_reduce_438","children":[],"call":["val [] -@ ","val [] "]}," Ruby18Parser _reduce_434":{"type":"method","name":"_reduce_434","children":[],"call":[" s ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," yyerror ","result empty? ","result nil? ","val [] "," lexer lex_state= "," lexer ","result []= ","result [] "," s  last to_sym ","val []  last to_sym "," s  last ","val []  last "," s  sexp_type= ","val []  sexp_type= "," s  sexp_type ","val []  sexp_type "," s  empty? ","val []  empty? "," s  nil? ","val []  nil? "," s  []= ","val []  []= "," s  [] ","val []  [] "]}," Ruby18Parser _reduce_429":{"type":"method","name":"_reduce_429","children":[],"call":["val [] to_sym ","val [] "]}," Ruby18Parser _reduce_426":{"type":"method","name":"_reduce_426","children":[],"call":[" s ","val [] to_sym ","val [] "]}," Ruby18Parser _reduce_408":{"type":"method","name":"_reduce_408","children":[],"call":["val [] << "," new_word_list_entry ","val [] "]}," Ruby18Parser _reduce_398":{"type":"method","name":"_reduce_398","children":[],"call":["val [] ","val []= "," s ","val [] value ","val [] sexp_type == ","val [] sexp_type ","val [] [] == ","val [] [] "]}," Ruby18Parser _reduce_396":{"type":"method","name":"_reduce_396","children":[],"call":[" s ","val [] "]}," Ruby18Parser _reduce_393":{"type":"method","name":"_reduce_393","children":[],"call":[" s ","val [] ","val [] != "]}," Ruby18Parser _reduce_391":{"type":"method","name":"_reduce_391","children":[],"call":["val [] "]}," Ruby18Parser _reduce_388":{"type":"method","name":"_reduce_388","children":[],"call":[" s ","val [] "]}," Ruby18Parser _reduce_383":{"type":"method","name":"_reduce_383","children":[],"call":[" s ","val [] "]}," Ruby18Parser _reduce_380":{"type":"method","name":"_reduce_380","children":[],"call":["result << ","val [] ","result line= "," new_when "," new_when  << "," new_when  line= "]}," Ruby18Parser _reduce_355":{"type":"method","name":"_reduce_355","children":[],"call":[" block_var18 ","val [] "]}," Ruby18Parser _reduce_339":{"type":"method","name":"_reduce_339","children":[],"call":["val [] "]}," Ruby18Parser _reduce_337":{"type":"method","name":"_reduce_337","children":[],"call":[" s ","val [] "]}," Ruby18Parser _reduce_328":{"type":"method","name":"_reduce_328","children":[],"call":[" value_expr ","val [] "]}," Ruby18Parser _reduce_292":{"type":"method","name":"_reduce_292","children":[],"call":["call line= ","iter line ","iter insert "," new_call ","oper to_sym ","val [] "," new_call  line= "," new_ new_call  "]}," String clean_caller":{"type":"method","name":"clean_caller","children":[],"call":[" sub sub "," sub ","File  dirname "]}," RubyLexer ruby23plus?":{"type":"method","name":"ruby23plus?","children":[],"call":[" parser class version >= "," parser class version "," parser class "," parser "]}," Ruby25Parser _reduce_none":{"type":"method","name":"_reduce_none","children":[],"call":["val [] "]}," Ruby25Parser _reduce_627":{"type":"method","name":"_reduce_627","children":[],"call":[]}," Ruby25Parser _reduce_626":{"type":"method","name":"_reduce_626","children":[],"call":[" yyerrok "]}," Ruby25Parser _reduce_623":{"type":"method","name":"_reduce_623","children":[],"call":[" yyerrok "," s line "," s ","arg line "," s arg line  ","arg arg line  "]}," Ruby25Parser _reduce_599":{"type":"method","name":"_reduce_599","children":[],"call":[" s ","val [] "," assignable ","result << "," lexer lineno "," lexer "," env []= "," env "," s  << "," assignable  << "]}," Ruby25Parser _reduce_598":{"type":"method","name":"_reduce_598","children":[],"call":[" raise ","val inspect "," block_append ","val [] "," assignable "," s line ","optblk line "," s ","id to_sym "]}," Ruby25Parser _reduce_597":{"type":"method","name":"_reduce_597","children":[],"call":[" s ","sym sexp_type= "," block_append ","val [] "," assignable "," s line ","opt line "]}," Ruby25Parser _reduce_596":{"type":"method","name":"_reduce_596","children":[],"call":[" s ","val last ","val [] [] to_sym ","val [] [] ","val [] ","result << "," assignable ","val [] to_sym "," s  << ","val []  << "," assignable  << "]}," Ruby25Parser _reduce_595":{"type":"method","name":"_reduce_595","children":[],"call":[" s ","val [] ","result << "," env []= "," env "," s line ","optblk line "," block_append "," s  << ","val []  << "," s line  << "," block_append  << "]}," Ruby25Parser _reduce_594":{"type":"method","name":"_reduce_594","children":[],"call":["result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] ","val [] dup "," s "," assignable ","val [] to_sym "," s line ","opt line "," s  sexp_type= "," assignable  sexp_type= "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "]}," Ruby25Parser _reduce_592":{"type":"method","name":"_reduce_592","children":[],"call":["val [] "," assignable "," lexer lineno "," lexer "," env []= "," env "," s line ","optblk line "," s "]}," Ruby25Parser _reduce_591":{"type":"method","name":"_reduce_591","children":[],"call":[" s "," assignable ","val [] to_sym ","val [] ","list << ","item last "," args ","id to_sym "]}," Ruby25Parser _reduce_590":{"type":"method","name":"_reduce_590","children":[],"call":[" yyerror ","result sexp_type == ","result sexp_type ","val [] "," assignable ","val [] to_sym ","val []  sexp_type == "," assignable  sexp_type == ","val []  sexp_type "," assignable  sexp_type "]}," Ruby25Parser _reduce_589":{"type":"method","name":"_reduce_589","children":[],"call":[" lexer lex_state= "," lexer "," s line "," s "," env []= "," env ","label to_sym ","list << ","item last "," lexer lineno "]}," Ruby25Parser _reduce_587":{"type":"method","name":"_reduce_587","children":[],"call":[" args "," s line "," s "," env []= "," env ","label to_sym "]}," Ruby25Parser _reduce_586":{"type":"method","name":"_reduce_586","children":[],"call":["val [] ","list << ","item last "," s line "," s "," env []= "," env ","label to_sym "]}," Ruby25Parser _reduce_585":{"type":"method","name":"_reduce_585","children":[],"call":["(str \"&\") to_sym "," env []= "," env ","val [] to_sym ","val [] ","list << ","item last "," s line "," s ","label to_sym "," args "]}," Ruby25Parser _reduce_582":{"type":"method","name":"_reduce_582","children":[],"call":[" env []= "," env "," s ","val [] ","label to_sym ","result << "," s line ","list line ","list sexp_type == ","list sexp_type "," s  << ","val []  << "," s line  << "]}," Ruby25Parser _reduce_581":{"type":"method","name":"_reduce_581","children":[],"call":[" assignable ","val [] to_sym ","val [] "," s "," env []= "," env ","label to_sym "," raise ","val inspect "," debug20 "," s line "," lexer lineno "," lexer "]}," Ruby25Parser _reduce_578":{"type":"method","name":"_reduce_578","children":[],"call":[" block_append ","val [] ","result << "," s ","list sexp_type == ","list sexp_type "," raise ","val inspect "," debug20 "," new_arg "," s line "," env []= "," env ","label to_sym "," block_append  << "," s  << ","val []  << "," new_arg  << "," s line  << "]}," Ruby25Parser _reduce_577":{"type":"method","name":"_reduce_577","children":[],"call":[" s ","val [] "," raise ","val inspect "," debug20 ","result << "," yyerror "," env []= "," env ","val [] to_sym "," s  << ","val []  << "]}," Ruby25Parser _reduce_576":{"type":"method","name":"_reduce_576","children":[],"call":["result << ","val [] "," yyerror ","result line_max= ","item line_max ","Sexp  === "," s line ","list line "," s ","list sexp_type == ","list sexp_type ","val []  << "," s line  << ","val []  line_max= "," s line  line_max= ","result item line_max = ","item item line_max  "]}," Ruby25Parser _reduce_575":{"type":"method","name":"_reduce_575","children":[],"call":[" s ","val [] "," yyerror "," new_arg "]}," Ruby25Parser _reduce_574":{"type":"method","name":"_reduce_574","children":[],"call":[" assignable ","val [] "," env []= "," env ","val [] to_sym "," yyerror ","id to_sym "]}," Ruby25Parser _reduce_573":{"type":"method","name":"_reduce_573","children":[],"call":[" assignable ","val [] "," env []= "," env ","val [] to_sym "," args "," yyerror "]}," Ruby25Parser _reduce_572":{"type":"method","name":"_reduce_572","children":[],"call":[" yyerror "," args "]}," Ruby25Parser _reduce_571":{"type":"method","name":"_reduce_571","children":[],"call":["val [] "," yyerror "," args "," env []= "," env ","id to_sym "]}," Ruby25Parser _reduce_568":{"type":"method","name":"_reduce_568","children":[],"call":[" args "," yyerror "]}," Ruby25Parser _reduce_566":{"type":"method","name":"_reduce_566","children":[],"call":["list << ","item last "," args "," yyerror "]}," Ruby25Parser _reduce_564":{"type":"method","name":"_reduce_564","children":[],"call":[" s "," env []= "," env ","label to_sym ","val [] "," args "]}," Ruby25Parser _reduce_563":{"type":"method","name":"_reduce_563","children":[],"call":[" s ","val [] "," env []= "," env ","label to_sym "," args "]}," Ruby25Parser _reduce_562":{"type":"method","name":"_reduce_562","children":[],"call":[" s "," env []= "," env ","label to_sym ","val [] "," args "]}," Ruby25Parser _reduce_561":{"type":"method","name":"_reduce_561","children":[],"call":[" s ","val [] "," env []= "," env ","label to_sym "," args "]}," Ruby25Parser _reduce_559":{"type":"method","name":"_reduce_559","children":[],"call":["result << "," s ","list sexp_type == ","list sexp_type "," args "," s  << "," args  << "]}," Ruby25Parser _reduce_558":{"type":"method","name":"_reduce_558","children":[],"call":[" raise ","val inspect "," debug20 ","val [] ","result << "," s "," args ","val []  << "," s  << "," args  << "]}," Ruby25Parser _reduce_557":{"type":"method","name":"_reduce_557","children":[],"call":["val [] "," args "]}," Ruby25Parser _reduce_554":{"type":"method","name":"_reduce_554","children":[],"call":[" env []= "," env ","val [] to_sym ","val [] "," args "]}," Ruby25Parser _reduce_552":{"type":"method","name":"_reduce_552","children":[],"call":[" yyerror ","val [] "," lexer command_start= "," lexer "," lexer lex_state= "," in_kwarg= "," args "]}," Ruby25Parser _reduce_551":{"type":"method","name":"_reduce_551","children":[],"call":[" yyerror ","val [] "," lexer lex_state "," lexer "," in_kwarg= "," in_kwarg "," args "]}," Ruby25Parser _reduce_550":{"type":"method","name":"_reduce_550","children":[],"call":[" yyerror "," args "," lexer command_start= "," lexer "," lexer lex_state= ","val [] "," in_kwarg= "]}," Ruby25Parser _reduce_549":{"type":"method","name":"_reduce_549","children":[],"call":[" yyerror "," args "," lexer lex_state "," lexer "," in_kwarg= "," in_kwarg ","val [] "]}," Ruby25Parser _reduce_548":{"type":"method","name":"_reduce_548","children":[],"call":[" args ","val [] "," lexer command_start= "," lexer "," lexer lex_state= "]}," Ruby25Parser _reduce_547":{"type":"method","name":"_reduce_547","children":[],"call":[" args "," lexer command_start= "," lexer "," lexer lex_state= "," in_kwarg= "," end_args "]}," Ruby25Parser _reduce_546":{"type":"method","name":"_reduce_546","children":[],"call":[" args "," lexer command_start= "," lexer "," lexer lex_state= "," in_kwarg= "," lexer lex_state "," in_kwarg "," s line "," lexer lineno "," s ","val [] "]}," Ruby25Parser _reduce_545":{"type":"method","name":"_reduce_545","children":[],"call":[" args "," in_kwarg= "," in_kwarg "," lexer command_start= "," lexer "," lexer lex_state= ","val [] "," s line "," lexer lineno "," s "," end_args "]}," Ruby25Parser _reduce_544":{"type":"method","name":"_reduce_544","children":[],"call":[" args "," lexer command_start= "," lexer "," lexer lex_state= ","val [] "," debug20 "," assignable "," s line "," lexer lineno "," s "," end_args "]}," Ruby25Parser _reduce_543":{"type":"method","name":"_reduce_543","children":[],"call":[" args ","val [] "," assignable "," s line "," lexer lineno "," lexer "," s "," lexer lex_state "," in_kwarg= "," in_kwarg "]}," Ruby25Parser _reduce_542":{"type":"method","name":"_reduce_542","children":[],"call":[" args ","val [] "," lexer command_start= "," lexer "," lexer lex_state= "," gettable ","Sexp  === "," debug20 "," assignable "," end_args "]}," Ruby25Parser _reduce_541":{"type":"method","name":"_reduce_541","children":[],"call":[" args "," lexer command_start= "," lexer "," lexer lex_state= "," s ","val [] "," gettable ","Sexp  === "," assignable "," s line "]}," Ruby25Parser _reduce_540":{"type":"method","name":"_reduce_540","children":[],"call":[" args "," s ","val [] "," s line "," lexer lineno "," lexer "," gettable ","Sexp  === ","va lexer lineno  [] "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "," gettab lexer lineno e "]}," Ruby25Parser _reduce_539":{"type":"method","name":"_reduce_539","children":[],"call":[" args "," s ","val [] "," debug20 "," assignable "," s line "," lexer lineno "," lexer "," gettable ","Sexp  === "," debug "," lexer command_start= "," lexer lex_state= "]}," Ruby25Parser _reduce_538":{"type":"method","name":"_reduce_538","children":[],"call":[" args "," debug20 "," assignable ","val [] "," s line "," lexer lineno "," lexer "," s "," file "," assignab lexer lineno e ","va lexer lineno  [] "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "," fi lexer lineno e "]}," Ruby25Parser _reduce_537":{"type":"method","name":"_reduce_537","children":[],"call":[" args "," assignable ","val [] "," gettable ","Sexp  === "," s line "," lexer lineno "," lexer "," s "]}," Ruby25Parser _reduce_536":{"type":"method","name":"_reduce_536","children":[],"call":[" args "," gettable ","Sexp  === ","val [] "," s line "," lexer lineno "," lexer "," s "," file ","result line "," raise ","val inspect ","val first "," debug "," assignable "," args  line "," gettable  line "," s line  line "," assignable  line "]}," Ruby25Parser _reduce_535":{"type":"method","name":"_reduce_535","children":[],"call":[" args "," gettable ","Sexp  === ","val [] "," s "," s line "," lexer lineno "," lexer "," assignable "," gettab lexer lineno e ","va lexer lineno  [] "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "," assignab lexer lineno e "]}," Ruby25Parser _reduce_534":{"type":"method","name":"_reduce_534","children":[],"call":[" args "," s "," lexer lineno "," lexer "," s line "," gettable ","Sexp  === ","val [] "]}," Ruby25Parser _reduce_533":{"type":"method","name":"_reduce_533","children":[],"call":[" s "," lexer lineno "," lexer "," file "," s line ","result line "," gettable ","Sexp  === "," raise ","val inspect ","val first "," s  line "," s line  line "," gettable  line "]}," Ruby25Parser _reduce_532":{"type":"method","name":"_reduce_532","children":[],"call":["val [] "," s "," file "," s line "," lexer lineno "," lexer ","va lexer lineno  [] "," fi lexer lineno e "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "]}," Ruby25Parser _reduce_530":{"type":"method","name":"_reduce_530","children":[],"call":[" args "," s "," s line "," lexer lineno "," lexer "," file "]}," Ruby25Parser _reduce_529":{"type":"method","name":"_reduce_529","children":[],"call":[" args "," s "," s line "," lexer lineno "," lexer "]}," Ruby25Parser _reduce_528":{"type":"method","name":"_reduce_528","children":[],"call":[" args "," s "," s line "," lexer lineno "," lexer "]}," Ruby25Parser _reduce_527":{"type":"method","name":"_reduce_527","children":[],"call":[" lexer command_start= "," lexer "," lexer lex_state= ","val [] "," s line "," lexer lineno "," s "]}," Ruby25Parser _reduce_526":{"type":"method","name":"_reduce_526","children":[],"call":[" lexer command_start= "," lexer "," lexer lex_state= ","val [] "," s line "," lexer lineno "," s "]}," Ruby25Parser _reduce_525":{"type":"method","name":"_reduce_525","children":[],"call":[" debug20 "," yyerrok "]}," Ruby25Parser _reduce_524":{"type":"method","name":"_reduce_524","children":[],"call":["val [] ","val [] -@ "]}," Ruby25Parser _reduce_523":{"type":"method","name":"_reduce_523","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby25Parser _reduce_522":{"type":"method","name":"_reduce_522","children":[],"call":[" debug20 "," s line ","result line "," s ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," lexer lineno "," lexer "," lexer lex_state= ","val [] -@ ","val [] "," s line  line ","val [] -@  line "," s line  last to_sym ","val [] -@  last to_sym "," s line  last ","val [] -@  last "," s line  sexp_type= ","val [] -@  sexp_type= "," s line  sexp_type ","val [] -@  sexp_type "]}," Ruby25Parser _reduce_521":{"type":"method","name":"_reduce_521","children":[],"call":[" s ","val [] "]}," Ruby25Parser _reduce_520":{"type":"method","name":"_reduce_520","children":[],"call":[" s ","val [] "," debug20 "," s line ","result line ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," lexer lineno "," lexer "," lexer lex_state= "," s  line "," s line  line "," s  last to_sym "," s line  last to_sym "," s  last "," s line  last "," s  sexp_type= "," s line  sexp_type= "," s  sexp_type "," s line  sexp_type "]}," Ruby25Parser _reduce_519":{"type":"method","name":"_reduce_519","children":[],"call":[" debug20 "," assignable ","val [] ","val [] -@ ","num -@ "]}," Ruby25Parser _reduce_518":{"type":"method","name":"_reduce_518","children":[],"call":[" assignable ","val [] ","val [] -@ "]}," Ruby25Parser _reduce_517":{"type":"method","name":"_reduce_517","children":[],"call":[" gettable ","Sexp  === ","val [] "," debug20 "," s ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," lexer lex_state= "," lexer ","val [] to_sym "," debug "," s line ","result line "," lexer lineno "," gettable  last to_sym "," s  last to_sym ","val []  last to_sym ","val [] to_sym  last to_sym "," s line  last to_sym "," gettable  last "," s  last ","val []  last ","val [] to_sym  last "," s line  last "," gettable  sexp_type= "," s  sexp_type= ","val []  sexp_type= ","val [] to_sym  sexp_type= "," s line  sexp_type= "," gettable  sexp_type "," s  sexp_type ","val []  sexp_type ","val [] to_sym  sexp_type "," s line  sexp_type "," gettable  line "," s  line ","val []  line ","val [] to_sym  line "," s line  line "]}," Ruby25Parser _reduce_516":{"type":"method","name":"_reduce_516","children":[],"call":[" gettable ","Sexp  === ","val [] "," debug20 "," s ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," lexer lex_state= "," lexer ","val [] to_sym ","num -@ "," gettable  last to_sym "," s  last to_sym ","val []  last to_sym ","val [] to_sym  last to_sym "," gettable  last "," s  last ","val []  last ","val [] to_sym  last "," gettable  sexp_type= "," s  sexp_type= ","val []  sexp_type= ","val [] to_sym  sexp_type= "," gettable  sexp_type "," s  sexp_type ","val []  sexp_type ","val [] to_sym  sexp_type "]}," Ruby25Parser _reduce_515":{"type":"method","name":"_reduce_515","children":[],"call":[" s ","val [] to_sym ","val [] "]}," Ruby25Parser _reduce_514":{"type":"method","name":"_reduce_514","children":[],"call":[" s "," lexer lineno "," lexer "," s line ","val [] to_sym ","val [] "," lexer lex_state= "," debug ","result line ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," s  line "," s line  line ","val [] to_sym  line "," s  last to_sym "," s line  last to_sym ","val [] to_sym  last to_sym "," s  last "," s line  last ","val [] to_sym  last "," s  sexp_type= "," s line  sexp_type= ","val [] to_sym  sexp_type= "," s  sexp_type "," s line  sexp_type ","val [] to_sym  sexp_type "]}," Ruby25Parser _reduce_513":{"type":"method","name":"_reduce_513","children":[],"call":[" s "," file "," s line "," lexer lineno "," lexer ","val [] to_sym ","val [] "]}," Ruby25Parser _reduce_512":{"type":"method","name":"_reduce_512","children":[],"call":[" s ","val [] to_sym ","val [] "," s line "," lexer lineno "," lexer ","id to_sym "," lexer lex_state= "," wrap "]}," Ruby25Parser _reduce_511":{"type":"method","name":"_reduce_511","children":[],"call":[" s ","val [] to_sym ","val [] "," lexer lex_state= "," lexer "," raise ","stmt inspect "," debug20 "," s line ","stmt sexp_type "," lexer cmdarg restore "," lexer cmdarg "," lexer cond restore "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer lineno ","id to_sym "," wrap "]}," Ruby25Parser _reduce_510":{"type":"method","name":"_reduce_510","children":[],"call":[" s ","val [] to_sym ","val [] "," lexer lex_state= "," lexer "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer lineno "," lexer lex_state "," lexer cmdarg store "," lexer cmdarg "," lexer cond store "," lexer cond "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "," s line "]}," Ruby25Parser _reduce_509":{"type":"method","name":"_reduce_509","children":[],"call":[" s ","val [] to_sym ","val [] "," s line ","str line "," lexer lex_strterm= "," lexer "," raise ","stmt inspect "," debug20 ","stmt sexp_type "," lexer lex_state= "," lexer cond pop "," lexer cond "," lexer cmdarg pop "," lexer cmdarg "," lexer string_nest= "," lexer brace_nest= "," wrap "]}," Ruby25Parser _reduce_499":{"type":"method","name":"_reduce_499","children":[],"call":["val [] -@ ","val [] "," literal_concat "," new_qsym_list "," s line "," lexer lineno "," lexer "," s ","str line "," lexer lex_strterm= "]}," Ruby25Parser _reduce_497":{"type":"method","name":"_reduce_497","children":[],"call":[" debug20 "," s ","result last to_sym ","result last ","result sexp_type= ","result sexp_type ","val [] "," lexer lex_state= "," lexer "," literal_concat "," new_qword_list "," new_qsym_list "," new_string "," s  last to_sym ","val []  last to_sym "," literal_concat  last to_sym "," new_qword_list  last to_sym "," new_qsym_list  last to_sym "," new_string  last to_sym "," s  last ","val []  last "," literal_concat  last "," new_qword_list  last "," new_qsym_list  last "," new_string  last "," s  sexp_type= ","val []  sexp_type= "," literal_concat  sexp_type= "," new_qword_list  sexp_type= "," new_qsym_list  sexp_type= "," new_string  sexp_type= "," s  sexp_type ","val []  sexp_type "," literal_concat  sexp_type "," new_qword_list  sexp_type "," new_qsym_list  sexp_type "," new_string  sexp_type "]}," Ruby25Parser _reduce_492":{"type":"method","name":"_reduce_492","children":[],"call":["val [] to_sym ","val [] ","val [] dup << "," new_qword_list_entry ","val [] dup "," new_qword_list ","list dup << "," new_symbol_list_entry ","list dup "," new_qsym_list "," literal_concat "]}," Ruby25Parser _reduce_491":{"type":"method","name":"_reduce_491","children":[],"call":["val [] to_sym ","val [] "," lexer lex_state= "," lexer "," new_qword_list "," new_symbol_list line "," lexer lineno "," new_symbol_list "," s line "," s ","val [] dup << "," new_qword_list_entry ","val [] dup "," +@ "," prev_value_to_lineno ","_values last "," new_symbol_list  prev_value_to_lineno  "," lexer  prev_value_to_lineno no "," s  prev_value_to_lineno  "," prev_value_to_ prev_value_to_lineno no "]}," Ruby25Parser _reduce_489":{"type":"method","name":"_reduce_489","children":[],"call":[" s ","val [] to_sym ","val [] "," lexer lineno "," lexer "," new_symbol_list line "," new_symbol_list ","list line ","result line_max= "," new_qsym_list "," s  line_max= ","val []  line_max= "," lexer lineno  line_max= "," new_symbol_list line  line_max= ","list line  line_max= "," new_qsym_list  line_max= "]}," Ruby25Parser _reduce_488":{"type":"method","name":"_reduce_488","children":[],"call":[" s ","val [] to_sym ","val [] "," s line "," lexer lineno "," lexer ","list line= ","result line_max= ","val [] dup << "," new_qword_list_entry ","val [] dup "," s  line_max= ","val []  line_max= "," s line  line_max= ","val [] dup <<  line_max= "]}," Ruby25Parser _reduce_487":{"type":"method","name":"_reduce_487","children":[],"call":[" s ","val [] to_sym ","val [] ","val [] dup << "," new_symbol_list_entry ","val [] dup "," literal_concat "," lexer lineno "," lexer ","list line ","result line_max= "," new_qword_list "," s  line_max= ","val [] dup <<  line_max= "," literal_concat  line_max= "," lexer lineno  line_max= ","list line  line_max= "," new_qword_list  line_max= "]}," Ruby25Parser _reduce_486":{"type":"method","name":"_reduce_486","children":[],"call":[" raise ","stmt inspect "," debug20 "," s ","stmt sexp_type "," lexer lex_state= "," lexer "," lexer cmdarg restore "," lexer cmdarg "," lexer cond restore "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= ","val [] dup << "," new_symbol_list_entry ","val [] dup ","val [] "," new_symbol_list "," s line "," lexer lineno ","result line_max= ","list line "," s  line_max= ","val [] dup <<  line_max= "," new_symbol_list  line_max= "," s line  line_max= ","list line  line_max= "]}," Ruby25Parser _reduce_485":{"type":"method","name":"_reduce_485","children":[],"call":[" lexer lex_state= "," lexer "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer lex_state "," lexer cmdarg store "," lexer cmdarg "," lexer cond store "," lexer cond "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "," new_symbol_list ","val [] ","val [] dup << "," new_word_list_entry ","val [] dup "," literal_concat ","list dup << "," new_symbol_list_entry ","list dup ","result line_max= "," s line "," s "," new_symbol_list  line_max= ","val []  line_max= ","val [] dup <<  line_max= "," literal_concat  line_max= ","list dup <<  line_max= "," s line  line_max= "]}," Ruby25Parser _reduce_484":{"type":"method","name":"_reduce_484","children":[],"call":[" s ","val [] "," lexer lex_strterm= "," lexer "," new_word_list "," new_symbol_list ","result line_max= ","list line "," s  line_max= ","val []  line_max= "," new_word_list  line_max= "," new_symbol_list  line_max= ","list line  line_max= "]}," Ruby25Parser _reduce_483":{"type":"method","name":"_reduce_483","children":[],"call":[" lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm "," s "," literal_concat ","val [] ","val [] dup << "," new_word_list_entry ","val [] dup ","list line ","result line_max= "," s line "," lexer lex_strterm  line_max= "," s  line_max= "," literal_concat  line_max= ","val []  line_max= ","val [] dup <<  line_max= ","list line  line_max= "," s line  line_max= "]}," Ruby25Parser _reduce_482":{"type":"method","name":"_reduce_482","children":[],"call":[" new_string "," literal_concat ","val [] "," s line "," lexer lineno "," lexer "," s "," new_word_list ","result line_max= ","list dup << "," new_symbol_list_entry ","list dup "," new_string  line_max= "," literal_concat  line_max= "," s line  line_max= "," new_word_list  line_max= ","list dup <<  line_max= "]}," Ruby25Parser _reduce_481":{"type":"method","name":"_reduce_481","children":[],"call":[" literal_concat ","val [] ","val [] dup << "," new_word_list_entry ","val [] dup "," new_regexp "," new_symbol_list "]}," Ruby25Parser _reduce_480":{"type":"method","name":"_reduce_480","children":[],"call":["val [] dup << "," new_word_list_entry ","val [] dup ","val [] "," new_word_list "," new_xstring "," s line "," lexer lineno "," lexer "," s ","result line_max= ","list line ","val [] dup <<  line_max= "," new_word_list  line_max= "," new_xstring  line_max= "," s line  line_max= ","list line  line_max= "]}," Ruby25Parser _reduce_479":{"type":"method","name":"_reduce_479","children":[],"call":[" literal_concat ","val [] "," new_word_list "," new_string "," new_regexp ","val [] dup << "," new_word_list_entry ","val [] dup ","result line_max= "," s line "," s "," literal_concat  line_max= "," new_word_list  line_max= ","val []  line_max= "," new_string  line_max= "," new_regexp  line_max= ","val [] dup <<  line_max= "," s line  line_max= "]}," Ruby25Parser _reduce_478":{"type":"method","name":"_reduce_478","children":[],"call":["val [] "," s "," dedent ","func =~ "," new_xstring "," new_word_list "," literal_concat "," new_x dedent ing "]}," Ruby25Parser _reduce_477":{"type":"method","name":"_reduce_477","children":[],"call":[" literal_concat ","val [] "," s "," new_regexp "," new_string ","list line ","result line_max= "," literal_concat  line_max= "," s  line_max= "," new_regexp  line_max= "," new_string  line_max= ","list line  line_max= "]}," Ruby25Parser _reduce_476":{"type":"method","name":"_reduce_476","children":[],"call":[" s "," new_regexp "," new_xstring ","val [] "," dedent ","func =~ "," s line ","result line_max= ","val [] dup << "," new_word_list_entry ","val [] dup "," new_x dedent ing "," s  line_max= "," new_regexp  line_max= "," new_xstring  line_max= "," s line  line_max= ","val [] dup <<  line_max= "]}," Ruby25Parser _reduce_475":{"type":"method","name":"_reduce_475","children":[],"call":["val [] dup << "," new_qsym_list_entry ","val [] dup ","val [] "," new_xstring "," new_string "," debug20 "," literal_concat "," new_regexp "," new_word_list "]}," Ruby25Parser _reduce_474":{"type":"method","name":"_reduce_474","children":[],"call":[" new_qsym_list "," new_string ","val [] "," s ","str value ","str sexp_type == ","str sexp_type "," new_xstring ","result line_max= ","list line "," new_ s ing "," s  value "," s  sexp_type == "," s  sexp_type "," new_x s ing "," new_qsym_list  line_max= "," new_string  line_max= ","val []  line_max= "," new_xstring  line_max= ","list line  line_max= "]}," Ruby25Parser _reduce_473":{"type":"method","name":"_reduce_473","children":[],"call":["val [] dup << "," new_qword_list_entry ","val [] dup ","val [] "," literal_concat "," debug20 "," new_string ","result line_max= "," s line "," s ","val [] dup <<  line_max= ","val []  line_max= "," literal_concat  line_max= "," new_string  line_max= "," s line  line_max= "]}," Ruby25Parser _reduce_472":{"type":"method","name":"_reduce_472","children":[],"call":[" new_qword_list "," literal_concat ","val [] ","result line= "," s "," lexer lineno "," lexer ","str value ","str sexp_type == ","str sexp_type ","str line "," dedent ","func =~ "," new_regexp "," new_qword_list  line= "," literal_concat  line= "," s  line= ","str line  line= "," new_regexp  line= ","result  lexer lineno = "," lexer  lexer lineno no "," s  value "," dedent  value "," s  sexp_type == "," dedent  sexp_type == "," s  sexp_type "," dedent  sexp_type ","str  lexer lineno  "," s  line "," dedent  line "]}," Ruby25Parser _reduce_471":{"type":"method","name":"_reduce_471","children":[],"call":["val [] "," debug20 ","result line= "," s "," lexer lineno "," lexer "," literal_concat "," new_xstring ","val []  line= "," s  line= "," literal_concat  line= "," new_xstring  line= ","result  lexer lineno = "," lexer  lexer lineno no "]}," Ruby25Parser _reduce_470":{"type":"method","name":"_reduce_470","children":[],"call":[" s "," debug20 ","val [] ","val []= ","val [] value ","val [] sexp_type == ","val [] sexp_type ","result line= "," lexer lineno "," lexer "," new_string "," s  line= ","val []  line= "," new_string  line= ","result  lexer lineno = "," lexer  lexer lineno no "]}," Ruby25Parser _reduce_469":{"type":"method","name":"_reduce_469","children":[],"call":["val [] ","val []= "," s ","val [] value ","val [] sexp_type == ","val [] sexp_type "," s line ","result line= "," lexer lineno "," lexer "," debug ","str line "," dedent ","func =~ "," s  lexer lineno  ","val []  line= "," s  line= ","str line  line= ","result  lexer lineno = "," lexer  lexer lineno no ","str  lexer lineno  "," dedent  line "]}," Ruby25Parser _reduce_468":{"type":"method","name":"_reduce_468","children":[],"call":[" s ","val [] ","str value ","str sexp_type == ","str sexp_type "," literal_concat "," s  value "," s  sexp_type == "," s  sexp_type "]}," Ruby25Parser _reduce_467":{"type":"method","name":"_reduce_467","children":[],"call":["val [] dup << "," new_symbol_list_entry ","val [] dup ","val [] "," s "," s line "]}," Ruby25Parser _reduce_466":{"type":"method","name":"_reduce_466","children":[],"call":[" new_symbol_list "," s ","val [] "," s line "," debug "]}," Ruby25Parser _reduce_465":{"type":"method","name":"_reduce_465","children":[],"call":["val [] "," s ","str value ","str sexp_type == ","str sexp_type "," s  value "," s  sexp_type == "," s  sexp_type "]}," Ruby25Parser _reduce_464":{"type":"method","name":"_reduce_464","children":[],"call":[" s "," s line ","arg line "]}," Ruby25Parser _reduce_463":{"type":"method","name":"_reduce_463","children":[],"call":[" literal_concat ","val [] "," s line "," s "]}," Ruby25Parser _reduce_461":{"type":"method","name":"_reduce_461","children":[],"call":["val [] dup << "," new_word_list_entry ","val [] dup ","val [] "," s line "," s "]}," Ruby25Parser _reduce_460":{"type":"method","name":"_reduce_460","children":[],"call":[" new_word_list "," s ","val [] ","result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s line ","var line "," new_word_list  << "," s  << "," new_resbody  << "]}," Ruby25Parser _reduce_459":{"type":"method","name":"_reduce_459","children":[],"call":["val [] "," s ","result << ","result line= "," new_when "," s line ","arg line ","val []  << "," s  << "," new_when  << "," s line  << ","val []  line= "," s  line= "," new_when  line= "," s line  line= "]}," Ruby25Parser _reduce_458":{"type":"method","name":"_reduce_458","children":[],"call":[" s ","result << "," new_resbody ","klasses line ","klasses << "," new_assign "," lexer lineno "," lexer "," s  << "," new_resbody  << "," lexer lineno  << "]}," Ruby25Parser _reduce_457":{"type":"method","name":"_reduce_457","children":[],"call":[" new_regexp ","result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s "," lexer cmdarg restore "," lexer cmdarg "," lexer "," env unextend "," env "," new_do_body ","val [] ","result line= "," new_when "," s line ","var line "," new_regexp  << "," new_resbody  << "," new_do_body  << "," new_when  << "," new_regexp  line= "," new_resbody  line= "," new_do_body  line= "," new_when  line= "]}," Ruby25Parser _reduce_456":{"type":"method","name":"_reduce_456","children":[],"call":[" new_xstring ","val [] "," lexer cmdarg store "," lexer cmdarg "," lexer "," lexer lineno "," s line ","arg line "," s "]}," Ruby25Parser _reduce_455":{"type":"method","name":"_reduce_455","children":[],"call":[" new_string ","result << ","val [] ","result line= "," new_when "," lexer lineno "," lexer "," env extend "," env "," env unextend "," lexer cmdarg pop "," lexer cmdarg "," new_do_body "," new_string  << "," new_when  << "," lexer lineno  << "," new_do_body  << "," new_string  line= "," new_when  line= "," lexer lineno  line= "," new_do_body  line= "]}," Ruby25Parser _reduce_454":{"type":"method","name":"_reduce_454","children":[],"call":["val [] ","result << ","result line= "," new_when "," lexer lineno "," lexer "," lexer cmdarg pop "," lexer cmdarg "," lexer cmdarg restore "," env unextend "," env "," new_brace_body "," lexer cmdarg push ","result line "," new_resbody ","klasses line ","klasses << "," new_assign "," s line ","var line "," s ","val []  << "," new_when  << "," lexer lineno  << "," new_brace_body  << "," new_resbody  << ","val []  line= "," new_when  line= "," lexer lineno  line= "," new_brace_body  line= "," new_resbody  line= ","val []  line "," new_when  line "," lexer lineno  line "," new_brace_body  line "," new_resbody  line "]}," Ruby25Parser _reduce_453":{"type":"method","name":"_reduce_453","children":[],"call":[" literal_concat ","val [] "," lexer lineno "," lexer "," lexer cmdarg restore "," lexer cmdarg "," env unextend "," env "," new_do_body "," lexer cmdarg store "," env extend "]}," Ruby25Parser _reduce_451":{"type":"method","name":"_reduce_451","children":[],"call":[" debug20 "," lexer cmdarg store "," lexer cmdarg "," lexer "," lexer lineno "," env extend "," env "," env unextend ","result line= "," list_append ","result << ","val [] ","result line "," new_when "," lexer cmdarg store  line= "," lexer lineno  line= "," list_append  line= "," new_when  line= "," lexer cmdarg store  << "," lexer lineno  << "," list_append  << "," new_when  << "," lexer cmdarg store  line "," lexer lineno  line "," list_append  line "," new_when  line "]}," Ruby25Parser _reduce_450":{"type":"method","name":"_reduce_450","children":[],"call":["val [] ","val []= "," s ","val [] value ","val [] sexp_type == ","val [] sexp_type "," lexer lineno "," lexer "," env extend "," env "," lexer cmdarg pop "," lexer cmdarg "," lexer cmdarg restore "," env unextend "," new_brace_body "," s line ","arg line "]}," Ruby25Parser _reduce_448":{"type":"method","name":"_reduce_448","children":[],"call":[" s ","val [] "," lexer cmdarg store "," lexer cmdarg "," lexer "," lexer lineno "," env extend "," env "," env unextend "," lexer cmdarg pop "," new_do_body "," list_append "]}," Ruby25Parser _reduce_447":{"type":"method","name":"_reduce_447","children":[],"call":[" s ","val [] "," lexer lineno "," lexer "," env extend "," env "," env unextend ","result line= "," new_aref "," lexer cmdarg push "," lexer cmdarg "," s line ","arg line "," s  line= "," lexer lineno  line= "," new_aref  line= "," s line  line= "]}," Ruby25Parser _reduce_445":{"type":"method","name":"_reduce_445","children":[],"call":[" s "," lexer lineno "," lexer "," env extend "," env "," env unextend ","result line= "," new_super ","val [] "," new_aref "," lexer cmdarg pop "," lexer cmdarg "," lexer cmdarg restore "," new_brace_body "," new_do_body "," lexer lineno  line= "," new_super  line= "," new_aref  line= "," new_brace_body  line= "," new_do_body  line= "]}," Ruby25Parser _reduce_443":{"type":"method","name":"_reduce_443","children":[],"call":["val [] "," lexer lineno "," lexer "," env extend "," env "," new_aref "," new_call "," new_super "]}," Ruby25Parser _reduce_440":{"type":"method","name":"_reduce_440","children":[],"call":[" s ","val [] "," new_super "," new_call ","val [] to_sym "," env unextend "," env ","result line "," lexer lineno "," lexer "," env extend "," s  line "," new_super  line "," new_call  line "," lexer lineno  line "]}," Ruby25Parser _reduce_439":{"type":"method","name":"_reduce_439","children":[],"call":[" new_call ","val [] ","result line ","call concat ","args sexp_body ","val [] to_sym "," lexer lineno "," lexer "," env extend "," env "," env unextend "," new_call  line ","call concat  line "," lexer lineno  line "]}," Ruby25Parser _reduce_438":{"type":"method","name":"_reduce_438","children":[],"call":["result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s "," new_call ","val [] ","val [] to_sym "," lexer lineno "," lexer "," new_aref "," env extend "," env "," new_resbody  << "," new_call  << "," lexer lineno  << "," new_aref  << "]}," Ruby25Parser _reduce_435":{"type":"method","name":"_reduce_435","children":[],"call":["result << ","val [] ","result line= "," new_when "," new_call ","val [] to_sym ","val [] concat ","args sexp_body "," call_args ","iter2 insert ","name to_sym "," new_aref "," new_when  << "," new_call  << ","val [] concat  << "," new_aref  << "," new_when  line= "," new_call  line= ","val [] concat  line= "," new_aref  line= "," new_ new_call  "," call_args  sexp_body "," call_ call_args  ","  new_call _args "]}," Ruby25Parser _reduce_434":{"type":"method","name":"_reduce_434","children":[],"call":[" lexer lineno "," lexer ","val [] concat ","args sexp_body ","val [] "," call_args ","result insert "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? ","iter2 insert "," new_call ","name to_sym "," s line "," s "," invert_block_call  [] concat "," call_args  sexp_body "," invert_block_call  [] "," call_ call_args  ","  new_call _args "," lexer lineno  insert ","val [] concat  insert "," new_call  insert "," s line  insert "," invert_block_ new_call  "," invert_block_call  [] block_pass? "," new_ new_call  "]}," Ruby25Parser _reduce_433":{"type":"method","name":"_reduce_433","children":[],"call":[" env unextend "," env ","result line= "," new_iter "," lexer lineno "," lexer ","iter2 insert "," new_call ","name to_sym ","iter line ","val [] ","val [] to_sym ","id to_sym "," new_super "," new_iter  line= "," lexer lineno  line= ","iter line  line= "," new_call  line= "," new_super  line= "," new_ new_call  "]}," Ruby25Parser _reduce_432":{"type":"method","name":"_reduce_432","children":[],"call":["iter2 insert "," new_call ","name to_sym ","val [] ","result insert "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? ","op to_sym "," new_ new_call  "," invert_block_call  [] ","val []  insert "," new_call  insert "," invert_block_ new_call  "," invert_block_call  [] block_pass? "]}," Ruby25Parser _reduce_431":{"type":"method","name":"_reduce_431","children":[],"call":[" lexer lineno "," lexer "," env extend "," env ","iter2 insert "," new_call ","name to_sym ","val [] ","val [] to_sym ","iter line ","op to_sym ","result line_max= "," new_ new_call  "," lexer lineno  line_max= "," new_call  line_max= ","val []  line_max= ","iter line  line_max= "]}," Ruby25Parser _reduce_430":{"type":"method","name":"_reduce_430","children":[],"call":[" env unextend "," env ","result line= "," new_iter "," new_call ","val [] ","val [] to_sym ","result insert "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? ","result == "," s ","call concat ","args sexp_body ","result line_max= ","args line_max ","id to_sym "," new_iter  line= "," new_call  line= ","val []  line= ","call concat  line= "," invert_block_call  [] "," invert_block_call  [] to_sym "," new_iter  insert "," new_call  insert ","val []  insert ","call concat  insert "," invert_block_call  [] block_pass? "," new_iter  == "," new_call  == ","val []  == ","call concat  == "," new_iter  line_max= "," new_call  line_max= ","val []  line_max= ","call concat  line_max= "]}," Ruby25Parser _reduce_429":{"type":"method","name":"_reduce_429","children":[],"call":["result insert ","val [] "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? "," args ","iter2 insert "," new_call ","name to_sym ","op to_sym ","val []  insert "," args  insert "," new_call  insert "," invert_block_call  [] "," invert_block_ new_call  "," invert_block_call  [] block_pass? "," new_ new_call  "]}," Ruby25Parser _reduce_428":{"type":"method","name":"_reduce_428","children":[],"call":[" lexer lineno "," lexer "," env extend "," env ","val [] "," env unextend ","result line= "," new_iter "," s line "," s "," lexer cmdarg lexpop "," lexer cmdarg "," lexer cmdarg restore "," lexer lpar_beg= ","result == ","iter2 insert "," new_call ","name to_sym ","result line_max= ","op to_sym "," lexer lineno  line= ","val []  line= "," new_iter  line= "," new_call  line= "," lexer lineno  == ","val []  == "," new_iter  == "," new_call  == "," new_ s line  "," new_ new_call  "," lexer lineno  line_max= ","val []  line_max= "," new_iter  line_max= "," new_call  line_max= "]}," Ruby25Parser _reduce_427":{"type":"method","name":"_reduce_427","children":[],"call":[" new_aref ","val [] "," lexer cmdarg store "," lexer cmdarg "," lexer "," args "," new_call ","id to_sym ","result line_max= ","args line_max ","call concat ","args sexp_body "," new_aref  line_max= ","val []  line_max= "," lexer cmdarg store  line_max= "," args  line_max= "," new_call  line_max= "]}," Ruby25Parser _reduce_426":{"type":"method","name":"_reduce_426","children":[],"call":[" s ","val [] ","result == "," lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," lexer lineno "," env extend "," env "," env unextend ","result line= "," new_iter "," s line "," lexer cmdarg pop "," lexer cmdarg ","result insert "," invert_block_call "," inverted? "," syntax_error ","cmd block_pass? ","iter2 insert "," new_call ","name to_sym "," invert_block_call  [] "," s  == ","val []  == "," new_iter  == "," s  line= ","val []  line= "," new_iter  line= "," s  insert ","val []  insert "," new_iter  insert "," invert_block_ s line  "," invert_block_ new_call  "," new_ s line  "," new_ new_call  "]}," Ruby25Parser _reduce_425":{"type":"method","name":"_reduce_425","children":[],"call":[" new_super ","val [] ","result == "," s "," args "," lexer cmdarg push "," lexer cmdarg "," lexer ","iter line ","iter2 insert "," new_call ","name to_sym "," new_super  == ","val []  == "," args  == ","iter line  == "," new_ new_call  "]}," Ruby25Parser _reduce_424":{"type":"method","name":"_reduce_424","children":[],"call":[" new_call ","val [] "," args "," env unextend "," env ","result line= "," new_iter "," lexer cmdarg lexpop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," lexer lpar_beg= "," s line "," s ","id to_sym "," lexer lineno "," lexer paren_nest "," lexer lpar_beg "," env extend "," new_ new_call  "," new_call  line= "," args  line= "," new_iter  line= "," s line  line= ","val []  line= ","result  lexer lineno = "," s  lexer lineno  "," lexer  lexer lineno no "]}," Ruby25Parser _reduce_423":{"type":"method","name":"_reduce_423","children":[],"call":[" new_call ","val [] "," env unextend "," env ","result line= "," new_iter "," lexer cmdarg lexpop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," lexer lpar_beg= "," lexer lineno "," lexer cmdarg store "," args ","result insert "," invert_block_call "," inverted? "," syntax_error ","cmd block_pass? "," new_ new_call  "," invert_block_call  [] "," new_call  line= "," new_iter  line= "," args  line= ","val []  line= "," new_call  insert "," new_iter  insert "," args  insert ","val []  insert "," invert_block_ new_call  "]}," Ruby25Parser _reduce_422":{"type":"method","name":"_reduce_422","children":[],"call":[" new_call ","val [] to_sym ","val [] "," lexer lineno "," lexer "," lexer cmdarg store "," lexer cmdarg "," lexer lpar_beg= "," lexer paren_nest "," lexer lpar_beg "," env extend "," env "," args "," s line "," s ","id to_sym ","result == ","iter line "," lexer  lexer lineno no "," s  lexer lineno  "," new_call  == "," lexer lpar_beg  == "," lexer lineno  == "," args  == "," s line  == ","val []  == ","iter line  == ","iter  lexer lineno  "]}," Ruby25Parser _reduce_421":{"type":"method","name":"_reduce_421","children":[],"call":[" new_call ","val [] ","val [] to_sym "," lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," lexer lineno "," env extend "," env "," args "]}," Ruby25Parser _reduce_420":{"type":"method","name":"_reduce_420","children":[],"call":[" new_call ","val [] ","val [] to_sym "," s "," args "," env unextend "," env ","result line "," new_iter "," s line "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer lpar_beg= "," new_ s line  "," new_call  line "," s  line "," args  line "," new_iter  line ","val []  line "]}," Ruby25Parser _reduce_419":{"type":"method","name":"_reduce_419","children":[],"call":["val [] concat ","args sexp_body ","val [] "," call_args "," s ","val [] to_sym "," args "," lexer cmdarg push "," lexer cmdarg "," lexer ","result == "," call_args  sexp_body "," call_ call_args  ","  call_args  ","val [] concat  == "," s  == "," args  == ","val []  == "]}," Ruby25Parser _reduce_418":{"type":"method","name":"_reduce_418","children":[],"call":[" lexer lineno "," lexer "," args "," s line "," s "," lexer lpar_beg= "," lexer paren_nest "," lexer lpar_beg "," env extend "," env "]}," Ruby25Parser _reduce_417":{"type":"method","name":"_reduce_417","children":[],"call":["iter2 insert "," new_call ","name to_sym "," args "," env unextend "," env ","result line "," new_iter "," s line "," s "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer lpar_beg= "," new_ new_call  "," new_ s line  "," args  line "," new_iter  line "]}," Ruby25Parser _reduce_416":{"type":"method","name":"_reduce_416","children":[],"call":["iter2 insert "," new_call ","name to_sym "," args "," lexer command_start= "," lexer "," s line "," lexer lineno "," s ","id to_sym "," wrap ","val [] "," lexer cmdarg push "," lexer cmdarg "," new_ new_call  "]}," Ruby25Parser _reduce_415":{"type":"method","name":"_reduce_415","children":[],"call":[" new_call ","val [] ","val [] to_sym "," args "," lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," lexer lineno "," env extend "," env "]}," Ruby25Parser _reduce_414":{"type":"method","name":"_reduce_414","children":[],"call":["result insert ","val [] "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? "," args "," s "," lexer command_start= "," lexer ","val []  insert "," args  insert "," s  insert "," invert_block_call  [] "," invert_block_call  [] block_pass? "]}," Ruby25Parser _reduce_413":{"type":"method","name":"_reduce_413","children":[],"call":[" env unextend "," env ","result line= ","val [] "," new_iter "," s "," args "," wrap "," new_iter  line= "," s  line= "," args  line= "," wrap  line= "," val []  "]}," Ruby25Parser _reduce_412":{"type":"method","name":"_reduce_412","children":[],"call":[" args "," lexer command_start= "," lexer "]}," Ruby25Parser _reduce_411":{"type":"method","name":"_reduce_411","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," lexer command_start= "," args "]}," Ruby25Parser _reduce_410":{"type":"method","name":"_reduce_410","children":[],"call":["val [] "," args "," s line "," lexer lineno "," lexer "," s "]}," Ruby25Parser _reduce_409":{"type":"method","name":"_reduce_409","children":[],"call":["val [] "," args "]}," Ruby25Parser _reduce_408":{"type":"method","name":"_reduce_408","children":[],"call":["result == "," s ","val [] "," args "," lexer command_start= "," lexer ","val []  == "," args  == "]}," Ruby25Parser _reduce_407":{"type":"method","name":"_reduce_407","children":[],"call":[" args "," s line "," lexer lineno "," lexer "," s "]}," Ruby25Parser _reduce_406":{"type":"method","name":"_reduce_406","children":[],"call":[" env unextend "," env "," new_iter "," new_call "," lexer lpar_beg= "," lexer "," args "," new_ new_call  "]}," Ruby25Parser _reduce_405":{"type":"method","name":"_reduce_405","children":[],"call":[" lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," lexer lineno "," env extend "," env "," args "," args << "," lexer command_start= "]}," Ruby25Parser _reduce_403":{"type":"method","name":"_reduce_403","children":[],"call":[" s ","val [] to_sym ","val [] "," args "," args << "]}," Ruby25Parser _reduce_402":{"type":"method","name":"_reduce_402","children":[],"call":[" args "]}," Ruby25Parser _reduce_401":{"type":"method","name":"_reduce_401","children":[],"call":[" args "]}," Ruby25Parser _reduce_400":{"type":"method","name":"_reduce_400","children":[],"call":[" args "]}," Ruby25Parser _reduce_398":{"type":"method","name":"_reduce_398","children":[],"call":[" args "]}," Ruby25Parser _reduce_397":{"type":"method","name":"_reduce_397","children":[],"call":[" s "," lexer command_start= "," lexer "," args ","result line "," call_args "," lexer lineno "," args << "," s  line "," args  line "," call_args  line "," args <<  line ","result  lexer lineno  "," lexer  lexer lineno no "]}," Ruby25Parser _reduce_396":{"type":"method","name":"_reduce_396","children":[],"call":[" args "," call_args "]}," Ruby25Parser _reduce_394":{"type":"method","name":"_reduce_394","children":[],"call":[" args "," call_args "," args << "]}," Ruby25Parser _reduce_393":{"type":"method","name":"_reduce_393","children":[],"call":[" args "," call_args "," block_var "]}," Ruby25Parser _reduce_392":{"type":"method","name":"_reduce_392","children":[],"call":[" args "," call_args "," block_var "]}," Ruby25Parser _reduce_391":{"type":"method","name":"_reduce_391","children":[],"call":[" args "," call_args "," block_var "]}," Ruby25Parser _reduce_390":{"type":"method","name":"_reduce_390","children":[],"call":[" args "," call_args "," block_var "]}," Ruby25Parser _reduce_389":{"type":"method","name":"_reduce_389","children":[],"call":[" args "," call_args "," block_var ","result line "," args  line "," call_args  line "," block_var  line "]}," Ruby25Parser _reduce_388":{"type":"method","name":"_reduce_388","children":[],"call":[" args "," block_var "," call_args "]}," Ruby25Parser _reduce_387":{"type":"method","name":"_reduce_387","children":[],"call":[" args "," block_var ","(str \"*\") to_sym "," call_args "]}," Ruby25Parser _reduce_386":{"type":"method","name":"_reduce_386","children":[],"call":[" args "," block_var ","(str \"*\") to_sym "," call_args ","result line "," args  line "," block_var  line "," call_args  line "]}," Ruby25Parser _reduce_385":{"type":"method","name":"_reduce_385","children":[],"call":[" args "," block_var ","(str \"*\") to_sym ","result line "," lexer lineno "," lexer "," call_args "," args  line "," block_var  line "," call_args  line "]}," Ruby25Parser _reduce_384":{"type":"method","name":"_reduce_384","children":[],"call":[" args "," block_var "," list_append ","val [] ","(str \"*\") to_sym ","result line "," call_args "," args  line "," block_var  line "," list_append  line "," call_args  line "]}," Ruby25Parser _reduce_383":{"type":"method","name":"_reduce_383","children":[],"call":[" args "," block_var ","(str \"*\") to_sym "," s line "," lexer lineno "," lexer "," s "," call_args "]}," Ruby25Parser _reduce_382":{"type":"method","name":"_reduce_382","children":[],"call":[" args "," block_var ","(str \"*\") to_sym ","val [] "," list_append ","result line "," lexer lineno "," lexer "," args  line "," block_var  line ","val []  line "," list_append  line "]}," Ruby25Parser _reduce_381":{"type":"method","name":"_reduce_381","children":[],"call":[" args "," block_var ","(str \"*\") to_sym "," s line "," lexer lineno "," lexer "," s ","result line "," args  line "," block_var  line "," s line  line "]}," Ruby25Parser _reduce_380":{"type":"method","name":"_reduce_380","children":[],"call":[" args "," block_var "," list_append ","val [] ","val [] delete_at ","val [] [] nil? ","val [] [] "]}," Ruby25Parser _reduce_379":{"type":"method","name":"_reduce_379","children":[],"call":[" args "," list_append ","val [] "," s "," block_var "]}," Ruby25Parser _reduce_377":{"type":"method","name":"_reduce_377","children":[],"call":[" args ","val [] "," s line "," lexer lineno "," lexer "," s "," block_var "]}," Ruby25Parser _reduce_376":{"type":"method","name":"_reduce_376","children":[],"call":[" call_args ","val [] delete_at ","val [] ","val [] [] nil? ","val [] [] "," s line "," s "," block_var "]}," Ruby25Parser _reduce_375":{"type":"method","name":"_reduce_375","children":[],"call":[" call_args ","val [] delete_at ","val [] ","val [] [] nil? ","val [] [] "," list_append "]}," Ruby25Parser _reduce_374":{"type":"method","name":"_reduce_374","children":[],"call":[" call_args ","val [] "," s line "," s ","val [] delete_at ","val [] [] nil? ","val [] [] "," lexer lineno "," lexer "]}," Ruby25Parser _reduce_373":{"type":"method","name":"_reduce_373","children":[],"call":[" call_args ","val [] "]}," Ruby25Parser _reduce_372":{"type":"method","name":"_reduce_372","children":[],"call":[" block_var "," s ","val [] "]}," Ruby25Parser _reduce_371":{"type":"method","name":"_reduce_371","children":[],"call":[" block_var "," s ","val [] ","val [] delete_at ","val [] [] nil? ","val [] [] "]}," Ruby25Parser _reduce_370":{"type":"method","name":"_reduce_370","children":[],"call":[" block_var "," s line "," s "]}," Ruby25Parser _reduce_369":{"type":"method","name":"_reduce_369","children":[],"call":[" block_var ","val [] "]}," Ruby25Parser _reduce_368":{"type":"method","name":"_reduce_368","children":[],"call":[" block_var "]}," Ruby25Parser _reduce_367":{"type":"method","name":"_reduce_367","children":[],"call":[" block_var "," s line "," s "]}," Ruby25Parser _reduce_366":{"type":"method","name":"_reduce_366","children":[],"call":[" block_var ","(str \"*\") to_sym "]}," Ruby25Parser _reduce_365":{"type":"method","name":"_reduce_365","children":[],"call":[" block_var ","(str \"*\") to_sym "]}," Ruby25Parser _reduce_364":{"type":"method","name":"_reduce_364","children":[],"call":[" block_var "]}," Ruby25Parser _reduce_363":{"type":"method","name":"_reduce_363","children":[],"call":[" list_append ","val [] "]}," Ruby25Parser _reduce_362":{"type":"method","name":"_reduce_362","children":[],"call":[" s ","val [] "]}," Ruby25Parser _reduce_361":{"type":"method","name":"_reduce_361","children":[],"call":["val [] "]}," Ruby25Parser _reduce_359":{"type":"method","name":"_reduce_359","children":[],"call":["val [] delete_at ","val [] ","val [] [] nil? ","val [] [] "]}," Ruby25Parser _reduce_357":{"type":"method","name":"_reduce_357","children":[],"call":["val [] "]}," Ruby25Parser _reduce_355":{"type":"method","name":"_reduce_355","children":[],"call":[" s ","val [] "]}," Ruby25Parser _reduce_337":{"type":"method","name":"_reduce_337","children":[],"call":[" value_expr ","val [] "," lexer comments "," lexer "," in_def= "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," new_defn "," env extend "," comments push "," comments "," lexer cmdarg stack dup "," in_def "," lexer lineno "," new_module "," lexer lex_state= "," s line "," s "]}," Ruby25Parser _reduce_336":{"type":"method","name":"_reduce_336","children":[],"call":[" s "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," env extend "," env "," in_def= "," comments push "," lexer comments "," comments "," lexer cmdarg stack dup "," in_def "," env unextend "," new_module "," new_sclass "," yyerror "," in_single > "," in_single "," lexer ignore_body_comments "," lexer cmdarg pop "," lexer cond pop "," lexer cond "," new_defn "," new_defs ","val delete_at "]}," Ruby25Parser _reduce_335":{"type":"method","name":"_reduce_335","children":[],"call":[" s "," lexer comments "," lexer "," env unextend "," env "," new_module "," env extend "," yyerror "," in_single > "," in_single "," in_def "," comments push "," comments "," in_single= "," lexer lineno "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," in_def= "," lexer lex_state= ","EXPR_ENDFN  | "]}," Ruby25Parser _reduce_334":{"type":"method","name":"_reduce_334","children":[],"call":[" s "," env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," lexer "," comments "," lexer lineno "," in_def= "," env unextend "," new_sclass "," lexer ignore_body_comments "," new_module "," lexer lex_state= "]}," Ruby25Parser _reduce_333":{"type":"method","name":"_reduce_333","children":[],"call":[" s "," lexer lineno "," lexer "," lexer comments "," env unextend "," env "," new_sclass "," env extend "," in_single= "," in_single "," yyerror "," in_single > "," in_def "," lexer ignore_body_comments "," in_def= "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," new_defn "]}," Ruby25Parser _reduce_332":{"type":"method","name":"_reduce_332","children":[],"call":[" lexer comments "," lexer "," in_single "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg ","result [] line ","result [] "," new_defs ","val [] "," new_sclass "," env extend "," in_single= "," new_class "," in_def= "," in_def "," lexer lineno "," lexer cond push "," lexer cond "," lexer cmdarg push "," new_defs  [] line "," new_sclass  [] line "," in_single  [] line "," new_class  [] line "," in_def  [] line "," lexer lineno  [] line "," new_defs  [] "," new_sclass  [] "," in_single  [] "," new_class  [] "," in_def  [] "," lexer lineno  [] "]}," Ruby25Parser _reduce_331":{"type":"method","name":"_reduce_331","children":[],"call":[" lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," lexer cmdarg stack dup "," lexer lineno "," lexer lex_state= "," env extend "," env "," in_single "," in_single= "," in_def= "," in_def "," yyerror "," in_single > "," comments push "," lexer comments "," comments "," lexer ignore_body_comments "," env unextend "," new_sclass "," new_module "]}," Ruby25Parser _reduce_330":{"type":"method","name":"_reduce_330","children":[],"call":[" lexer lex_state= "," lexer "," comments push "," lexer comments "," comments "," in_def= "," in_def "," lexer lineno "," env unextend "," env "," new_class "," env extend "," in_single= "," in_single "," yyerror "," in_single > "]}," Ruby25Parser _reduce_329":{"type":"method","name":"_reduce_329","children":[],"call":[" lexer comments "," lexer "," in_def= "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," new_defn ","val [] "," lexer lineno "," new_class "," new_for "," env extend "," yyerror "," in_single > "," in_single "," in_def "," comments push "," comments "," lexer ignore_body_comments "," new_sclass "]}," Ruby25Parser _reduce_328":{"type":"method","name":"_reduce_328","children":[],"call":[" lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," env extend "," env "," in_def= "," comments push "," lexer comments "," comments "," lexer cmdarg stack dup "," in_def "," env unextend "," new_class "," yyerror "," in_single > "," in_single "," new_case "," lexer lineno "," in_single= "]}," Ruby25Parser _reduce_327":{"type":"method","name":"_reduce_327","children":[],"call":[" lexer comments "," lexer "," env unextend "," env "," new_module "," env extend "," yyerror "," in_single > "," in_single "," in_def "," comments push "," comments "," lexer lineno "," new_case "," new_for "," lexer ignore_body_comments "," new_class "," in_def= "]}," Ruby25Parser _reduce_326":{"type":"method","name":"_reduce_326","children":[],"call":[" env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," lexer "," comments "," lexer lineno "," new_for "," new_until "," new_case "," lexer ignore_body_comments "," env unextend "," new_class "]}," Ruby25Parser _reduce_325":{"type":"method","name":"_reduce_325","children":[],"call":[" lexer lineno "," lexer "," new_for "," new_case "," new_while "," env extend "," env "," yyerror "," in_single > "," in_single "," in_def "]}," Ruby25Parser _reduce_324":{"type":"method","name":"_reduce_324","children":[],"call":[" lexer comments "," lexer "," env unextend "," env "," new_sclass "," new_case "," new_if "," new_until "," new_for "]}," Ruby25Parser _reduce_323":{"type":"method","name":"_reduce_323","children":[],"call":[" env extend "," env "," in_single= "," in_single "," new_case "," new_until "," new_if "," new_while "]}," Ruby25Parser _reduce_322":{"type":"method","name":"_reduce_322","children":[],"call":[" in_def= "," in_def "," new_until "," new_while ","val [] "," new_if "," new_case "]}," Ruby25Parser _reduce_321":{"type":"method","name":"_reduce_321","children":[],"call":[" lexer lineno "," lexer "," new_while "," new_if ","iter insert "," block_dup_check ","val [] "," new_until "]}," Ruby25Parser _reduce_320":{"type":"method","name":"_reduce_320","children":[],"call":[" lexer comments "," lexer "," env unextend "," env "," new_class "," new_if ","val [] "," new_while "]}," Ruby25Parser _reduce_319":{"type":"method","name":"_reduce_319","children":[],"call":[" env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," lexer "," comments "," new_if ","val [] ","iter insert "," block_dup_check "]}," Ruby25Parser _reduce_318":{"type":"method","name":"_reduce_318","children":[],"call":[" lexer lineno "," lexer ","val [] ","iter insert "," block_dup_check "," debug20 "," new_if "]}," Ruby25Parser _reduce_317":{"type":"method","name":"_reduce_317","children":[],"call":[" new_for ","val [] ","iter insert "," block_dup_check "," new_call "]}," Ruby25Parser _reduce_316":{"type":"method","name":"_reduce_316","children":[],"call":[" lexer cond pop "," lexer cond "," lexer ","call line= ","iter line ","iter insert ","val [] "," s line "," s "," debug20 "," block_dup_check "]}," Ruby25Parser _reduce_315":{"type":"method","name":"_reduce_315","children":[],"call":[" lexer cond push "," lexer cond "," lexer ","call line= ","iter line ","iter insert ","val [] "," debug20 "," new_yield "," new_call "]}," Ruby25Parser _reduce_314":{"type":"method","name":"_reduce_314","children":[],"call":[" new_case "," debug20 "," s ","val [] "," new_yield "," s line ","iter insert "]}," Ruby25Parser _reduce_313":{"type":"method","name":"_reduce_313","children":[],"call":[" new_case "," s ","val [] "," new_yield "," debug "]}," Ruby25Parser _reduce_312":{"type":"method","name":"_reduce_312","children":[],"call":[" new_until ","val [] "," s "," new_yield "," s line "," new_call "]}," Ruby25Parser _reduce_311":{"type":"method","name":"_reduce_311","children":[],"call":[" lexer cond pop "," lexer cond "," lexer "," new_yield "," new_hash ","val [] "," s line "," s "]}," Ruby25Parser _reduce_310":{"type":"method","name":"_reduce_310","children":[],"call":[" lexer cond push "," lexer cond "," lexer "," new_yield ","val [] "," lexer lineno "," s line "," s "," new_yield line "]}," Ruby25Parser _reduce_309":{"type":"method","name":"_reduce_309","children":[],"call":[" new_while ","val [] "," new_yield "," s ","result line ","result sexp_type= "," new_hash "," new_yield line "," new_while  line "," new_yield  line "," s  line "," new_hash  line "," new_yield line  line "," new_while  sexp_type= "," new_yield  sexp_type= "," s  sexp_type= "," new_hash  sexp_type= "," new_yield line  sexp_type= "]}," Ruby25Parser _reduce_308":{"type":"method","name":"_reduce_308","children":[],"call":[" lexer cond pop "," lexer cond "," lexer "," s "," new_hash "," lexer lineno "," new_yield ","val [] "," new_yield line "]}," Ruby25Parser _reduce_307":{"type":"method","name":"_reduce_307","children":[],"call":[" lexer cond push "," lexer cond "," lexer "," new_hash "," lexer lineno "," s line "," s ","id to_sym ","result line ","result sexp_type= "," new_hash  line "," lexer lineno  line "," s line  line "," new_hash  sexp_type= "," lexer lineno  sexp_type= "," s line  sexp_type= "]}," Ruby25Parser _reduce_306":{"type":"method","name":"_reduce_306","children":[],"call":[" new_if ","val [] "," lexer lineno "," lexer ","result sexp_type= "," s "," s line ","expr line ","id to_sym "," new_hash "," new_if  sexp_type= "," lexer lineno  sexp_type= "," s line  sexp_type= "," new_hash  sexp_type= "]}," Ruby25Parser _reduce_305":{"type":"method","name":"_reduce_305","children":[],"call":[" new_if ","val [] ","result sexp_type= "," s ","val [] to_sym ","result paren= "," s line "," lexer lineno "," lexer ","id to_sym "," new_if  sexp_type= "," s  sexp_type= "," s line  sexp_type= "," lexer lineno  sexp_type= "," new_if  paren= "," s  paren= "," s line  paren= "," lexer lineno  paren= "]}," Ruby25Parser _reduce_304":{"type":"method","name":"_reduce_304","children":[],"call":["val [] "," s ","val [] to_sym "," lexer cmdarg restore "," lexer cmdarg "," lexer "," warning "," s line ","expr line ","id to_sym ","result line ","result sexp_type= ","result line_max= ","val []  line "," s  line "," s line  line ","val []  sexp_type= "," s  sexp_type= "," s line  sexp_type= ","val []  line_max= "," s  line_max= "," s line  line_max= "]}," Ruby25Parser _reduce_303":{"type":"method","name":"_reduce_303","children":[],"call":["iter insert "," block_dup_check ","val [] "," s ","val [] to_sym ","result paren= "," lexer lex_state= "," lexer "," s line "," lexer lineno "," s  paren= "," lexer lineno  paren= "]}," Ruby25Parser _reduce_301":{"type":"method","name":"_reduce_301","children":[],"call":["call line= ","iter line ","iter insert ","val [] "," lexer cmdarg restore "," lexer cmdarg "," lexer "," warning "," lexer lex_state= "," s line "," s ","expr line ","id to_sym "]}," Ruby25Parser _reduce_300":{"type":"method","name":"_reduce_300","children":[],"call":[" debug20 "," lexer lex_state= "," lexer "," lexer cmdarg store "," lexer cmdarg "," lexer lineno "," s line "," s ","result paren= "," lexer cmdarg store  paren= "," lexer lineno  paren= "," s line  paren= "]}," Ruby25Parser _reduce_299":{"type":"method","name":"_reduce_299","children":[],"call":[" s ","val [] "," lexer cmdarg store "," lexer cmdarg "," lexer "," debug20 ","result line= "," lexer lineno "," lexer lex_state= "," s  line= "," lexer cmdarg store  line= "," lexer lineno  line= "]}," Ruby25Parser _reduce_298":{"type":"method","name":"_reduce_298","children":[],"call":[" s ","val [] "," debug20 ","result line= "," lexer lineno "," lexer "," new_begin "," lexer cmdarg pop "," lexer cmdarg "," lexer lex_state= "," s  line= "," lexer lineno  line= "," new_begin  line= "]}," Ruby25Parser _reduce_297":{"type":"method","name":"_reduce_297","children":[],"call":[" new_yield ","result line= ","val [] "," s "," lexer lineno "," lexer "," new_call ","msg to_sym "," lexer cmdarg push "," lexer cmdarg "," s line "," new_yield  line= "," s  line= "," lexer lineno  line= "," new_call  line= "," s line  line= "]}," Ruby25Parser _reduce_296":{"type":"method","name":"_reduce_296","children":[],"call":[" new_yield "," lexer lineno "," lexer "," new_call ","val [] to_sym ","val [] ","msg to_sym "," lexer lex_state= "]}," Ruby25Parser _reduce_295":{"type":"method","name":"_reduce_295","children":[],"call":[" new_yield ","val [] "," new_call ","val [] to_sym "," new_begin "," lexer cmdarg pop "," lexer cmdarg "," lexer "]}," Ruby25Parser _reduce_294":{"type":"method","name":"_reduce_294","children":[],"call":[" s "," lexer lineno "," lexer "," lexer cmdarg push "," lexer cmdarg "]}," Ruby25Parser _reduce_293":{"type":"method","name":"_reduce_293","children":[],"call":[" new_hash ","result line "," new_call ","msg to_sym "," new_hash  line "," new_call  line "]}," Ruby25Parser _reduce_292":{"type":"method","name":"_reduce_292","children":[],"call":[" lexer lineno "," lexer "]}," Ruby25Parser _reduce_291":{"type":"method","name":"_reduce_291","children":[],"call":["result sexp_type= "," s ","val [] "]}," Ruby25Parser _reduce_290":{"type":"method","name":"_reduce_290","children":[],"call":[" s ","val [] to_sym ","val [] "]}," Ruby25Parser _reduce_289":{"type":"method","name":"_reduce_289","children":[],"call":[" s ","val [] to_sym ","val [] "]}," Ruby25Parser _reduce_288":{"type":"method","name":"_reduce_288","children":[],"call":["result paren= "," s ","val [] "]}," Ruby25Parser _reduce_287":{"type":"method","name":"_reduce_287","children":[],"call":["val [] "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," warning "]}," Ruby25Parser _reduce_286":{"type":"method","name":"_reduce_286","children":[],"call":[" lexer lex_state= "," lexer "," s line ","arg line "," s "]}," Ruby25Parser _reduce_285":{"type":"method","name":"_reduce_285","children":[],"call":[" lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," lexer cmdarg stack dup "," s ","val [] "," arg_concat "," s line ","arg line "]}," Ruby25Parser _reduce_284":{"type":"method","name":"_reduce_284","children":[],"call":[" debug20 "," s ","val [] "," arg_concat ","val [] << "]}," Ruby25Parser _reduce_283":{"type":"method","name":"_reduce_283","children":[],"call":["result line= ","val [] "," s "," arg_concat ","val [] << "," new_masgn_arg "," s  line= "," arg_concat  line= ","val [] <<  line= "," new_masgn_arg  line= "]}," Ruby25Parser _reduce_282":{"type":"method","name":"_reduce_282","children":[],"call":[" lexer lineno "," lexer ","val [] << ","val [] "," new_masgn_arg "," s line ","arg line "," s "]}," Ruby25Parser _reduce_281":{"type":"method","name":"_reduce_281","children":[],"call":[" new_call ","val [] to_sym ","val [] "," new_masgn_arg "," list_append "," s line "," s "," arg_concat "]}," Ruby25Parser _reduce_270":{"type":"method","name":"_reduce_270","children":[],"call":[" s ","val [] "," call_args "," arg_blk_pass "," array_to_hash "," lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg pop ","(sym :tLBRACE_ARG) include? "]}," Ruby25Parser _reduce_269":{"type":"method","name":"_reduce_269","children":[],"call":[" arg_concat ","val [] "," arg_blk_pass "," call_args "," array_to_hash "," lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg pop ","(sym :tLPAREN) include? "," last_token_type first "," last_token_type "]}," Ruby25Parser _reduce_268":{"type":"method","name":"_reduce_268","children":[],"call":["val [] << ","val [] "," arg_blk_pass "," call_args "," array_to_hash "]}," Ruby25Parser _reduce_267":{"type":"method","name":"_reduce_267","children":[],"call":[" new_masgn_arg ","val [] "," arg_blk_pass "," call_args "," warning "," array_to_hash "]}," Ruby25Parser _reduce_266":{"type":"method","name":"_reduce_266","children":[],"call":[" new_masgn_arg ","val [] "," call_args "," warning "," args "," array_to_hash "]}," Ruby25Parser _reduce_265":{"type":"method","name":"_reduce_265","children":[],"call":[" list_append "," s ","val [] "," args "," array_to_hash "," call_args "]}," Ruby25Parser _reduce_264":{"type":"method","name":"_reduce_264","children":[],"call":[" list_append ","val [] "," args "," array_to_hash "," call_args "," warning "]}," Ruby25Parser _reduce_263":{"type":"method","name":"_reduce_263","children":[],"call":[" s ","val [] "," args "," array_to_hash "]}," Ruby25Parser _reduce_262":{"type":"method","name":"_reduce_262","children":[],"call":[" s ","val [] "," args "," array_to_hash "]}," Ruby25Parser _reduce_260":{"type":"method","name":"_reduce_260","children":[],"call":["val [] "]}," Ruby25Parser _reduce_259":{"type":"method","name":"_reduce_259","children":[],"call":[" s ","val [] "]}," Ruby25Parser _reduce_258":{"type":"method","name":"_reduce_258","children":[],"call":["val [] "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," new_rescue "," new_resbody "," s "," remove_begin "," value_expr "," s line "," new_ remove_begin  "," new_res value_expr  "]}," Ruby25Parser _reduce_257":{"type":"method","name":"_reduce_257","children":[],"call":[" lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg stack dup "," lexer cmdarg stack "," new_rescue "," new_resbody "," s "," remove_begin "," value_expr "," new_ remove_begin  "," new_res value_expr  "]}," Ruby25Parser _reduce_256":{"type":"method","name":"_reduce_256","children":[],"call":[" call_args "," args "," array_to_hash ","val [] ","result line_max= "," call_args  line_max= "," args  line_max= "]}," Ruby25Parser _reduce_255":{"type":"method","name":"_reduce_255","children":[],"call":[" arg_blk_pass ","val [] "," call_args "," array_to_hash "," args "," new_rescue "," new_resbody "," s line "," s "," remove_begin "," value_expr "," new_ remove_begin  "," new_res value_expr  "]}," Ruby25Parser _reduce_254":{"type":"method","name":"_reduce_254","children":[],"call":[" arg_blk_pass ","val [] "," call_args "," array_to_hash "," args "]}," Ruby25Parser _reduce_253":{"type":"method","name":"_reduce_253","children":[],"call":[" arg_blk_pass ","val [] "," call_args "," args "," array_to_hash "]}," Ruby25Parser _reduce_252":{"type":"method","name":"_reduce_252","children":[],"call":[" call_args "," warning "," value_expr ","val [] "," args "," array_to_hash "]}," Ruby25Parser _reduce_251":{"type":"method","name":"_reduce_251","children":[],"call":[" args "," array_to_hash ","val [] "," value_expr "," new_call "," argl ","op to_sym "," warn "]}," Ruby25Parser _reduce_250":{"type":"method","name":"_reduce_250","children":[],"call":[" args "," array_to_hash ","val [] "," new_call "," argl ","op to_sym "," warn "]}," Ruby25Parser _reduce_249":{"type":"method","name":"_reduce_249","children":[],"call":[" args "," new_call "," argl ","op to_sym "," value_expr ","val [] "]}," Ruby25Parser _reduce_248":{"type":"method","name":"_reduce_248","children":[],"call":["val [] "," new_call "," argl ","op to_sym "," warn "]}," Ruby25Parser _reduce_247":{"type":"method","name":"_reduce_247","children":[],"call":["val [] "," new_call "," argl ","op to_sym "]}," Ruby25Parser _reduce_244":{"type":"method","name":"_reduce_244","children":[],"call":["val [] "," s "," s line ","c line "]}," Ruby25Parser _reduce_243":{"type":"method","name":"_reduce_243","children":[],"call":[" args "," array_to_hash ","val [] "," s "," s line "]}," Ruby25Parser _reduce_242":{"type":"method","name":"_reduce_242","children":[],"call":[" args "," array_to_hash ","val [] "," s "," logical_op "]}," Ruby25Parser _reduce_241":{"type":"method","name":"_reduce_241","children":[],"call":[" args ","val [] "," logical_op "," s line ","c line "," s "]}," Ruby25Parser _reduce_239":{"type":"method","name":"_reduce_239","children":[],"call":[" value_expr ","val [] "," new_call "," argl ","val []= "," logical_op "]}," Ruby25Parser _reduce_237":{"type":"method","name":"_reduce_237","children":[],"call":[" s ","val [] "," new_call "," value_expr ","result line ","arg line "," argl ","val []= "," s  line "," new_call  line "]}," Ruby25Parser _reduce_236":{"type":"method","name":"_reduce_236","children":[],"call":[" s ","val [] "," new_call "," new_match "," s line ","lhs line "," argl ","val []= "," value_expr "]}," Ruby25Parser _reduce_235":{"type":"method","name":"_reduce_235","children":[],"call":[" logical_op ","val [] "," s "," new_match "," new_call "," value_expr "]}," Ruby25Parser _reduce_234":{"type":"method","name":"_reduce_234","children":[],"call":[" logical_op ","val [] "," new_match "," new_call "," argl ","result line ","arg line "," logical_op  line "," new_match  line "," new_call  line "]}," Ruby25Parser _reduce_233":{"type":"method","name":"_reduce_233","children":[],"call":[" new_call "," argl ","val [] ","val []= "," value_expr "," s line ","lhs line "," s "," new_match "]}," Ruby25Parser _reduce_232":{"type":"method","name":"_reduce_232","children":[],"call":[" new_call "," argl ","val [] ","val []= "," value_expr "," new_match "]}," Ruby25Parser _reduce_231":{"type":"method","name":"_reduce_231","children":[],"call":[" new_call "," value_expr ","val [] "," argl "]}," Ruby25Parser _reduce_230":{"type":"method","name":"_reduce_230","children":[],"call":[" new_call ","val [] "," argl "]}," Ruby25Parser _reduce_229":{"type":"method","name":"_reduce_229","children":[],"call":[" s "," new_match ","val [] "," new_call "," argl "]}," Ruby25Parser _reduce_228":{"type":"method","name":"_reduce_228","children":[],"call":[" new_match ","val [] "," new_call "," argl "]}," Ruby25Parser _reduce_227":{"type":"method","name":"_reduce_227","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby25Parser _reduce_226":{"type":"method","name":"_reduce_226","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby25Parser _reduce_225":{"type":"method","name":"_reduce_225","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby25Parser _reduce_224":{"type":"method","name":"_reduce_224","children":[],"call":[" new_call "," argl ","val [] "," s "," s line "," lexer lineno "," lexer "]}," Ruby25Parser _reduce_223":{"type":"method","name":"_reduce_223","children":[],"call":[" new_call "," argl ","val [] "," s "]}," Ruby25Parser _reduce_222":{"type":"method","name":"_reduce_222","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby25Parser _reduce_221":{"type":"method","name":"_reduce_221","children":[],"call":[" new_call "," argl ","val [] "," s line "," s "]}," Ruby25Parser _reduce_220":{"type":"method","name":"_reduce_220","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby25Parser _reduce_219":{"type":"method","name":"_reduce_219","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby25Parser _reduce_218":{"type":"method","name":"_reduce_218","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby25Parser _reduce_217":{"type":"method","name":"_reduce_217","children":[],"call":[" new_call "," argl ","val [] "," s ","v2 last ","v1 last ","Integer  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type "," s line ","v1 line "]}," Ruby25Parser _reduce_216":{"type":"method","name":"_reduce_216","children":[],"call":[" new_call ","val [] "," s ","v2 last ","v1 last ","Integer  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type "," s line ","v1 line "," argl "]}," Ruby25Parser _reduce_215":{"type":"method","name":"_reduce_215","children":[],"call":[" new_call ","val [] "," s ","v2 last ","v1 last ","Integer  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type "," backref_assign_error "," new_op_asgn "," argl "," new_op_ new_op_asgn  "]}," Ruby25Parser _reduce_214":{"type":"method","name":"_reduce_214","children":[],"call":[" new_call "," argl ","val [] "," s "," backref_assign_error "," new_op_asgn "," new_const_op_asgn "," s line ","lhs to_sym ","v1 line ","v2 last ","v1 last ","Integer  === ","v2 sexp_type == ","v2 sexp_type ","v1 sexp_type == ","v1 sexp_type "," new_op_ new_op_asgn  "," new_const_op_ new_op_asgn  "," s line  to_sym "]}," Ruby25Parser _reduce_213":{"type":"method","name":"_reduce_213","children":[],"call":[" new_call "," argl ","val [] "," raise ","not yet: %p % "," lexer lineno "," lexer "," s line ","v1 line "," s ","v2 last ","v1 last ","Integer  === ","v2 sexp_type == ","v2 sexp_type ","v1 sexp_type == ","v1 sexp_type "]}," Ruby25Parser _reduce_212":{"type":"method","name":"_reduce_212","children":[],"call":[" new_call "," argl ","val [] "," raise ","not yet: %p % "," new_const_op_asgn "," s line ","lhs1 line "," s ","lhs2 to_sym "," backref_assign_error "," new_op_asgn "," new_const_op_ new_op_asgn  "," s line 1 line "," s line 2 to_sym "," new_op_ new_op_asgn  "]}," Ruby25Parser _reduce_211":{"type":"method","name":"_reduce_211","children":[],"call":[" new_call "," argl ","val [] "," s ","val [] to_sym "," s line ","lhs line ","op to_sym ","id to_sym "," new_const_op_asgn ","lhs to_sym "," wrap "," s line  line "," wrap  line "," s line  to_sym "," wrap  to_sym "]}," Ruby25Parser _reduce_210":{"type":"method","name":"_reduce_210","children":[],"call":[" new_call "," argl ","val [] "," new_op_asgn2 "," new_const_op_asgn "," s line ","lhs1 line "," s ","lhs2 to_sym "," s line 1 line "," s line 2 to_sym "]}," Ruby25Parser _reduce_209":{"type":"method","name":"_reduce_209","children":[],"call":[" new_call "," argl ","val [] "," new_op_asgn2 "," s line ","lhs line "," s ","op to_sym ","id to_sym "]}," Ruby25Parser _reduce_208":{"type":"method","name":"_reduce_208","children":[],"call":[" new_call "," argl ","val [] "," s ","val [] to_sym ","val [] sexp_type= "," new_op_asgn1 "," new_op_asgn2 "]}," Ruby25Parser _reduce_207":{"type":"method","name":"_reduce_207","children":[],"call":[" s ","v2 last ","v1 last ","Integer  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type ","val [] "," new_op_asgn "," new_op_asgn2 "]}," Ruby25Parser _reduce_206":{"type":"method","name":"_reduce_206","children":[],"call":[" s ","v2 last ","v1 last ","Integer  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type ","val [] "," new_assign "," new_op_asgn1 "]}," Ruby25Parser _reduce_205":{"type":"method","name":"_reduce_205","children":[],"call":[" backref_assign_error ","val [] "," new_op_asgn "]}," Ruby25Parser _reduce_204":{"type":"method","name":"_reduce_204","children":[],"call":[" yyerror "," new_assign ","val [] "]}," Ruby25Parser _reduce_203":{"type":"method","name":"_reduce_203","children":[],"call":[" yyerror "]}," Ruby25Parser _reduce_202":{"type":"method","name":"_reduce_202","children":[],"call":[" s ","val [] to_sym ","val [] "]}," Ruby25Parser _reduce_201":{"type":"method","name":"_reduce_201","children":[],"call":[" new_op_asgn2 "]}," Ruby25Parser _reduce_200":{"type":"method","name":"_reduce_200","children":[],"call":[" new_op_asgn2 "]}," Ruby25Parser _reduce_199":{"type":"method","name":"_reduce_199","children":[],"call":[" s ","val [] ","val [] to_sym ","val [] sexp_type= "]}," Ruby25Parser _reduce_198":{"type":"method","name":"_reduce_198","children":[],"call":[" s "," new_resbody ","val [] "," new_op_asgn "]}," Ruby25Parser _reduce_197":{"type":"method","name":"_reduce_197","children":[],"call":[" new_op_asgn "]}," Ruby25Parser _reduce_196":{"type":"method","name":"_reduce_196","children":[],"call":[" new_assign "," s "," new_resbody ","val [] "]}," Ruby25Parser _reduce_195":{"type":"method","name":"_reduce_195","children":[],"call":[" new_assign ","val [] "]}," Ruby25Parser _reduce_123":{"type":"method","name":"_reduce_123","children":[],"call":[" new_undef ","val [] "]}," Ruby25Parser _reduce_122":{"type":"method","name":"_reduce_122","children":[],"call":[" lexer lex_state= "," lexer ","result line ","pval line "," s ","name to_sym "," s  line "]}," Ruby25Parser _reduce_121":{"type":"method","name":"_reduce_121","children":[],"call":[" new_undef ","val [] "," s ","val [] to_sym ","result line ","pval line ","name to_sym ","id to_sym "," new_undef  line "," s  line "]}," Ruby25Parser _reduce_119":{"type":"method","name":"_reduce_119","children":[],"call":[" s ","val [] to_sym ","val [] "," s line "," lexer lineno "," lexer ","name to_sym "]}," Ruby25Parser _reduce_116":{"type":"method","name":"_reduce_116","children":[],"call":["val [] "," lexer lex_state= "," lexer "," backref_assign_error "," s line "," s ","id to_sym "," yyerror "," debug "," in_single > "," in_single "," in_def "]}," Ruby25Parser _reduce_115":{"type":"method","name":"_reduce_115","children":[],"call":["val [] "," lexer lex_state= "," lexer "," s ","val [] to_sym "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," s line ","id to_sym "," lexer lineno ","expr line "," debug ","va lexer lineno  [] ","vaexpr line  [] ","  lexer lineno exer  lexer lineno ex_state= "," expr line exer expr line ex_state= ","  lexer lineno exer "," expr line exer ","va lexer lineno  [] to_sym ","vaexpr line  [] to_sym "," in_sing lexer lineno e > "," in_singexpr line e > "," in_sing lexer lineno e "," in_singexpr line e "," s  lexer lineno ine "," s expr line ine ","  lexer lineno exer  lexer lineno ineno "," expr line exer expr line ineno ","expr  lexer lineno ine ","expr expr line ine "]}," Ruby25Parser _reduce_111":{"type":"method","name":"_reduce_111","children":[],"call":[" s ","val [] to_sym ","val [] "," new_attrasgn "," aryset "]}," Ruby25Parser _reduce_110":{"type":"method","name":"_reduce_110","children":[],"call":["val [] to_sym ","val [] "," aryset "," debug "," assignable "]}," Ruby25Parser _reduce_109":{"type":"method","name":"_reduce_109","children":[],"call":[" s ","val [] to_sym ","val [] "," debug20 "," assignable ","result line= "," lexer lineno "," lexer "," s  line= "," assignable  line= ","result  lexer lineno = "," lexer  lexer lineno no "]}," Ruby25Parser _reduce_107":{"type":"method","name":"_reduce_107","children":[],"call":[" yyerror "," backref_assign_error ","val [] "," s line "," s ","id to_sym "," debug "," in_single > "," in_single "," in_def "]}," Ruby25Parser _reduce_106":{"type":"method","name":"_reduce_106","children":[],"call":[" backref_assign_error ","val [] "," s ","val [] to_sym "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," s line ","id to_sym "," lexer lineno "," lexer ","expr line "," debug ","va lexer lineno  [] ","vaexpr line  [] ","va lexer lineno  [] to_sym ","vaexpr line  [] to_sym "," in_sing lexer lineno e > "," in_singexpr line e > "," in_sing lexer lineno e "," in_singexpr line e "," s  lexer lineno ine "," s expr line ine ","  lexer lineno exer  lexer lineno ineno "," expr line exer expr line ineno ","  lexer lineno exer "," expr line exer ","expr  lexer lineno ine ","expr expr line ine "]}," Ruby25Parser _reduce_105":{"type":"method","name":"_reduce_105","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," s line ","id to_sym ","expr line "," new_attrasgn ","vaexpr line  [] to_sym ","vaexpr line  [] "," in_singexpr line e > "," in_singexpr line e "," s expr line ine ","expr expr line ine "]}," Ruby25Parser _reduce_104":{"type":"method","name":"_reduce_104","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," new_attrasgn "]}," Ruby25Parser _reduce_103":{"type":"method","name":"_reduce_103","children":[],"call":[" new_attrasgn ","val [] "," s "]}," Ruby25Parser _reduce_102":{"type":"method","name":"_reduce_102","children":[],"call":[" s ","val [] "," new_attrasgn "," aryset "]}," Ruby25Parser _reduce_101":{"type":"method","name":"_reduce_101","children":[],"call":[" new_attrasgn ","val [] "," aryset "," assignable "]}," Ruby25Parser _reduce_100":{"type":"method","name":"_reduce_100","children":[],"call":[" aryset ","val [] "," assignable "]}," Ruby25Parser _reduce_99":{"type":"method","name":"_reduce_99","children":[],"call":[" debug20 "," assignable ","val [] "," list_append "]}," Ruby25Parser _reduce_98":{"type":"method","name":"_reduce_98","children":[],"call":[" assignable ","val [] "," list_append "," s line ","item line "," s "]}," Ruby25Parser _reduce_97":{"type":"method","name":"_reduce_97","children":[],"call":[" backref_assign_error ","val [] "," s "," s line ","item line ","val [] << ","val [] compact "]}," Ruby25Parser _reduce_96":{"type":"method","name":"_reduce_96","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," debug20 "," in_single > "," in_single "," in_def ","val [] << ","val [] compact "," s line ","lhs line "]}," Ruby25Parser _reduce_95":{"type":"method","name":"_reduce_95","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," s line ","lhs line "]}," Ruby25Parser _reduce_94":{"type":"method","name":"_reduce_94","children":[],"call":[" new_attrasgn ","val [] "]}," Ruby25Parser _reduce_93":{"type":"method","name":"_reduce_93","children":[],"call":[" s ","val [] "," s line ","post sexp_body ","post line ","vapost line  [] "," s post line ine ","post post line ine "]}," Ruby25Parser _reduce_92":{"type":"method","name":"_reduce_92","children":[],"call":[" new_attrasgn ","val [] "," s ","val [] sexp_body "," s line ","post sexp_body ","post line "," lexer lineno "," lexer ","vapost line  [] ","va lexer lineno  [] ","vapost line  [] sexp_body ","va lexer lineno  [] sexp_body "," s post line ine "," s  lexer lineno ine ","post post line ine ","post  lexer lineno ine "," post line exer post line ineno ","  lexer lineno exer  lexer lineno ineno "," post line exer ","  lexer lineno exer "]}," Ruby25Parser _reduce_91":{"type":"method","name":"_reduce_91","children":[],"call":[" aryset ","val [] "," s "," s line "," lexer lineno "," lexer ","ary line ","ary concat ","post sexp_body ","splat line ","node line ","  s line set ","va lexer lineno  [] "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer ","ary  lexer lineno ine "," s line  line "," s line  concat ","sp lexer lineno at  lexer lineno ine ","node  lexer lineno ine "]}," Ruby25Parser _reduce_90":{"type":"method","name":"_reduce_90","children":[],"call":[" assignable ","val [] "," s ","ary concat ","val [] sexp_body "," s line ","ary line ","post sexp_body ","splat line ","node line "," assignabnode line e ","vanode line  [] "," s  concat "," s line  concat ","vanode line  [] sexp_body "," s node line ine "," s  line "," s line  line ","ary node line ine ","spnode line at node line ine ","node node line ine "]}," Ruby25Parser _reduce_89":{"type":"method","name":"_reduce_89","children":[],"call":[" assignable ","val [] "," s "," s line ","node line ","ary line ","ary concat ","post sexp_body "," list_append ","head line "," assignabnode line e ","vanode line  [] "," s node line ine ","node node line ine "," s line  line "," list_append  line ","ary node line ine "," s line  concat "," list_append  concat "," node line ist_append ","head node line ine "]}," Ruby25Parser _reduce_88":{"type":"method","name":"_reduce_88","children":[],"call":[" list_append ","val [] "," s ","ary concat ","val [] sexp_body "," s line ","ary line ","post sexp_body ","head line ","head << "," head line ist_append ","vahead line  [] "," list_append  concat ","vahead line  [] sexp_body "," s head line ine "," list_append  line ","ary head line ine ","head head line ine "]}," Ruby25Parser _reduce_87":{"type":"method","name":"_reduce_87","children":[],"call":[" s ","val [] ","val [] << "," s line ","head << ","head line ","result line ","result concat ","ary2 sexp_body "," list_append ","splat line ","vahead line  [] ","vahead line  [] << "," s head line ine ","head head line ine "," s  line "," s line  line "," list_append  line ","resuhead line t head line ine "," s  concat "," s line  concat "," list_append  concat ","resuhead line t concat "," head line ist_append ","sphead line at head line ine "]}," Ruby25Parser _reduce_86":{"type":"method","name":"_reduce_86","children":[],"call":["val [] << ","val [] compact ","val [] "," s ","result concat ","ary2 sexp_body "," list_append "," s line ","result line ","splat line ","head line ","head << ","tail line ","val [] <<  concat "," s  concat "," list_append  concat "," s line  concat ","val [] <<  line "," s  line "," list_append  line "," s line  line "]}," Ruby25Parser _reduce_85":{"type":"method","name":"_reduce_85","children":[],"call":[" s ","val [] ","val [] << "," s line ","head line ","head << ","tail line ","lhs line ","lhs << ","rhs compact "]}," Ruby25Parser _reduce_84":{"type":"method","name":"_reduce_84","children":[],"call":["val [] "," s ","val [] << ","val [] compact "," s line ","lhs line ","lhs << ","rhs compact ","head line "]}," Ruby25Parser _reduce_82":{"type":"method","name":"_reduce_82","children":[],"call":[" s ","val [] sexp_body ","val [] "," s line ","arg line ","vaarg line  [] sexp_body ","vaarg line  [] "," s arg line ine ","arg arg line ine "]}," Ruby25Parser _reduce_81":{"type":"method","name":"_reduce_81","children":[],"call":[" s ","val [] "]}," Ruby25Parser _reduce_80":{"type":"method","name":"_reduce_80","children":[],"call":[" s ","ary concat ","val [] sexp_body ","val [] "," s  concat "]}," Ruby25Parser _reduce_79":{"type":"method","name":"_reduce_79","children":[],"call":[" s ","val [] "," s line "," ret_args ","val [] last "," s val [] last  "]}," Ruby25Parser _reduce_78":{"type":"method","name":"_reduce_78","children":[],"call":[" s ","ary concat ","val [] sexp_body ","val [] "," list_append "," s line "," ret_args ","val [] last "," list_append  concat "," s val [] last  "]}," Ruby25Parser _reduce_77":{"type":"method","name":"_reduce_77","children":[],"call":[" s ","val [] << ","val [] "," s line "," ret_args ","val [] last "," s val [] last  "]}," Ruby25Parser _reduce_76":{"type":"method","name":"_reduce_76","children":[],"call":[" s ","result concat ","ary2 sexp_body "," list_append "," s line "," ret_args ","val [] ","val [] last ","result line "," new_yield "," s  concat "," list_append  concat "," s line  concat "," new_yield  concat "," s val [] last  "," s  line "," list_append  line "," s line  line "," new_yield  line ","result val [] last  "]}," Ruby25Parser _reduce_75":{"type":"method","name":"_reduce_75","children":[],"call":[" s ","val [] << ","val [] "," new_yield ","result line "," new_super "," s  line "," new_yield  line "," new_super  line "]}," Ruby25Parser _reduce_74":{"type":"method","name":"_reduce_74","children":[],"call":[" s ","val [] << ","val [] compact ","val [] "," new_super ","block insert "," block_dup_check "," new_call ","msg to_sym "," new_ new_call  "]}," Ruby25Parser _reduce_73":{"type":"method","name":"_reduce_73","children":[],"call":[" s ","val [] ","block insert "," block_dup_check "," new_call ","msg to_sym ","result line ","id to_sym "," new_ new_call  "," s  line "," new_call  line "]}," Ruby25Parser _reduce_72":{"type":"method","name":"_reduce_72","children":[],"call":[" s ","val [] "," new_call ","val [] to_sym ","block insert "," block_dup_check ","msg to_sym "," new_ new_call  "]}," Ruby25Parser _reduce_70":{"type":"method","name":"_reduce_70","children":[],"call":["val [] "," new_call ","val [] to_sym ","op to_sym ","result insert "," block_dup_check ","call concat ","args sexp_body ","val []  insert "," new_call  insert ","call concat  insert "]}," Ruby25Parser _reduce_68":{"type":"method","name":"_reduce_68","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last ","val [] concat ","val [] sexp_body ","call concat ","args sexp_body "," new_call line "," new_call ","msg to_sym "," s val [] last  "," new_call val [] last  "]}," Ruby25Parser _reduce_67":{"type":"method","name":"_reduce_67","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last "," new_call ","val [] to_sym "," new_call line "," lexer lineno "," lexer ","msg to_sym ","result line "," s val [] last  "," new_call val [] last  "," lexer val [] last no "," s line  line "," new_call  line "," new_call line  line ","result val [] last  "]}," Ruby25Parser _reduce_66":{"type":"method","name":"_reduce_66","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last ","result line= "," lexer lineno "," lexer "," s val [] last  "," s line  line= "," lexer lineno  line= ","result val [] last = "," lexer val [] last no "]}," Ruby25Parser _reduce_65":{"type":"method","name":"_reduce_65","children":[],"call":[" new_yield ","val [] "," lexer lineno "," lexer "," new_call line ","blk line "," new_call ","msg to_sym "]}," Ruby25Parser _reduce_64":{"type":"method","name":"_reduce_64","children":[],"call":[" new_super ","val [] "," new_call ","val [] to_sym "," new_call line ","blk line ","msg to_sym "]}," Ruby25Parser _reduce_63":{"type":"method","name":"_reduce_63","children":[],"call":["block insert "," block_dup_check "," new_call ","msg to_sym "," new_ new_call  "]}," Ruby25Parser _reduce_62":{"type":"method","name":"_reduce_62","children":[],"call":[" new_call ","val [] ","val [] to_sym "]}," Ruby25Parser _reduce_61":{"type":"method","name":"_reduce_61","children":[],"call":["block insert "," block_dup_check "," new_call ","val [] ","msg to_sym "," new_ new_call  "]}," Ruby25Parser _reduce_60":{"type":"method","name":"_reduce_60","children":[],"call":[" new_call ","val [] ","val [] to_sym "," lexer cond pop "," lexer cond "," lexer "]}," Ruby25Parser _reduce_59":{"type":"method","name":"_reduce_59","children":[],"call":["result insert ","val [] "," block_dup_check ","val [] concat ","val [] sexp_body "," lexer cond pop "," lexer cond "," lexer "," lexer cond push ","val [] concat  insert "]}," Ruby25Parser _reduce_58":{"type":"method","name":"_reduce_58","children":[],"call":["val [] concat ","val [] sexp_body ","val [] "," lexer cond push "," lexer cond "," lexer "," value_expr "]}," Ruby25Parser _reduce_57":{"type":"method","name":"_reduce_57","children":[],"call":[" new_call ","val [] to_sym ","val [] "," value_expr "]}," Ruby25Parser _reduce_56":{"type":"method","name":"_reduce_56","children":[],"call":[" env unextend "," env ","result line= ","val [] "," new_iter "," new_call line ","cmd line "," new_call "," new_iter  line= "," new_call line  line= "]}," Ruby25Parser _reduce_55":{"type":"method","name":"_reduce_55","children":[],"call":[" s ","val [] "," new_call line ","cmd line "," new_call "]}," Ruby25Parser _reduce_54":{"type":"method","name":"_reduce_54","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," s ","val [] "," new_call line "," new_call "," logical_op "]}," Ruby25Parser _reduce_53":{"type":"method","name":"_reduce_53","children":[],"call":[" new_call ","val [] ","val [] to_sym "," logical_op "]}," Ruby25Parser _reduce_49":{"type":"method","name":"_reduce_49","children":[],"call":[" value_expr ","val [] "," new_rescue "," new_resbody "," s "," s line "," value_ value_expr  "]}," Ruby25Parser _reduce_47":{"type":"method","name":"_reduce_47","children":[],"call":[" s ","val [] "," backref_assign_error "," s line ","id to_sym ","lhs2 to_sym "]}," Ruby25Parser _reduce_46":{"type":"method","name":"_reduce_46","children":[],"call":[" s ","val [] "," debug20 ","op to_sym ","lhs2 to_sym "," s line ","id to_sym "]}," Ruby25Parser _reduce_45":{"type":"method","name":"_reduce_45","children":[],"call":[" logical_op ","val [] "," debug20 "," s ","op to_sym ","lhs2 to_sym ","result line ","prim line ","result sexp_type= ","call_op == ","op_asgn to_sym ","id to_sym "," logical_op  line "," s  line "," logical_op  sexp_type= "," s  sexp_type= "]}," Ruby25Parser _reduce_44":{"type":"method","name":"_reduce_44","children":[],"call":[" logical_op ","val [] ","result line= ","val [] line ","result sexp_type= ","val [] == "," s ","val [] to_sym ","result line ","prim line ","call_op == ","op_asgn to_sym ","id to_sym "," logical_op  line= "," s  line= "," logical_op  sexp_type= "," s  sexp_type= "," logical_op  line "," s  line "]}," Ruby25Parser _reduce_42":{"type":"method","name":"_reduce_42","children":[],"call":[" new_assign ","val [] "," s ","val [] to_sym "," new_op_asgn1 "," new_op_asgn "]}," Ruby25Parser _reduce_41":{"type":"method","name":"_reduce_41","children":[],"call":[" new_assign ","val [] "," new_op_asgn "]}," Ruby25Parser _reduce_39":{"type":"method","name":"_reduce_39","children":[],"call":[" new_masgn ","val [] "]}," Ruby25Parser _reduce_38":{"type":"method","name":"_reduce_38","children":[],"call":[" new_assign "," s ","val [] "," new_masgn "," s line ","rhs line "]}," Ruby25Parser _reduce_37":{"type":"method","name":"_reduce_37","children":[],"call":[" backref_assign_error ","val [] "," new_assign "," s "," s line ","rhs line "," new_masgn "]}," Ruby25Parser _reduce_36":{"type":"method","name":"_reduce_36","children":[],"call":[" debug20 "," s ","val [] "," new_masgn "]}," Ruby25Parser _reduce_35":{"type":"method","name":"_reduce_35","children":[],"call":[" debug20 "," s ","val [] "," new_iter "," s line "," yyerror "," debug "," in_single > "," in_single "," in_def "]}," Ruby25Parser _reduce_34":{"type":"method","name":"_reduce_34","children":[],"call":["result line= ","val [] line ","val [] ","result sexp_type= ","val [] == "," s ","val [] to_sym "," new_iter "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," s line "," new_rescue "," new_resbody ","resbody line "," s  line= "," new_iter  line= "," new_rescue  line= "," s  sexp_type= "," new_iter  sexp_type= "," new_rescue  sexp_type= "," new_ new_resbody  "," new_resbody  line "]}," Ruby25Parser _reduce_33":{"type":"method","name":"_reduce_33","children":[],"call":["result line= ","val [] line ","val [] ","result sexp_type= ","val [] == "," s ","val [] to_sym "," new_rescue "," new_resbody "," s line ","resbody line "," new_until "," s  line= "," new_rescue  line= "," new_until  line= "," s  sexp_type= "," new_rescue  sexp_type= "," new_until  sexp_type= "," new_ new_resbody  "," new_resbody  line "]}," Ruby25Parser _reduce_32":{"type":"method","name":"_reduce_32","children":[],"call":[" s ","val [] ","val [] to_sym "," new_until "," new_while "]}," Ruby25Parser _reduce_31":{"type":"method","name":"_reduce_31","children":[],"call":[" new_op_asgn "," new_while ","val [] "," new_if "]}," Ruby25Parser _reduce_30":{"type":"method","name":"_reduce_30","children":[],"call":[" new_masgn ","val [] "," new_if "]}," Ruby25Parser _reduce_28":{"type":"method","name":"_reduce_28","children":[],"call":[" new_iter ","val [] "," s "," yyerror "," debug20 "," in_single > "," in_single "," in_def "]}," Ruby25Parser _reduce_27":{"type":"method","name":"_reduce_27","children":[],"call":[" s "," new_resbody ","val [] "," yyerror "," s line ","lhs to_sym "]}," Ruby25Parser _reduce_26":{"type":"method","name":"_reduce_26","children":[],"call":[" new_until ","val [] "," s ","val [] to_sym "," s line ","lhs to_sym ","rhs to_sym "]}," Ruby25Parser _reduce_25":{"type":"method","name":"_reduce_25","children":[],"call":[" new_while ","val [] "," s ","val [] to_sym "," s line ","rhs to_sym ","lhs to_sym "," s line line "]}," Ruby25Parser _reduce_24":{"type":"method","name":"_reduce_24","children":[],"call":[" new_if ","val [] "," s line "," s "," s line line "," lexer lex_state= "," lexer "]}," Ruby25Parser _reduce_23":{"type":"method","name":"_reduce_23","children":[],"call":[" new_if ","val [] "," lexer lineno "," lexer "," lexer lex_state= "]}," Ruby25Parser _reduce_22":{"type":"method","name":"_reduce_22","children":[],"call":["val [] "," yyerror "]}," Ruby25Parser _reduce_21":{"type":"method","name":"_reduce_21","children":[],"call":[" yyerror "," env extend "," env "," debug20 "," in_single > "," in_single "," in_def "]}," Ruby25Parser _reduce_20":{"type":"method","name":"_reduce_20","children":[],"call":[" s ","val [] ","val [] to_sym "," debug20 "," debug "]}," Ruby25Parser _reduce_19":{"type":"method","name":"_reduce_19","children":[],"call":[" s ","val [] to_sym ","val [] "," debug20 "," block_append "]}," Ruby25Parser _reduce_18":{"type":"method","name":"_reduce_18","children":[],"call":[" s line ","val [] "," s "," block_append "]}," Ruby25Parser _reduce_17":{"type":"method","name":"_reduce_17","children":[],"call":[" lexer lineno "," lexer "," lexer lex_state= "]}," Ruby25Parser _reduce_16":{"type":"method","name":"_reduce_16","children":[],"call":[" debug20 ","val [] "," new_compstmt "]}," Ruby25Parser _reduce_15":{"type":"method","name":"_reduce_15","children":[],"call":[" block_append ","val [] "," new_compstmt "," new_body "]}," Ruby25Parser _reduce_12":{"type":"method","name":"_reduce_12","children":[],"call":[" new_compstmt "," yyerror ","_values [] "," new_iter "," s line "," s "]}," Ruby25Parser _reduce_11":{"type":"method","name":"_reduce_11","children":[],"call":[" new_body "," new_iter "," s "," lexer lineno "," lexer "]}," Ruby25Parser _reduce_10":{"type":"method","name":"_reduce_10","children":[],"call":[" new_iter ","val [] "," s ","preexe line ","iter line "]}," Ruby25Parser _reduce_9":{"type":"method","name":"_reduce_9","children":[],"call":[" env extend "," env "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," debug "]}," Ruby25Parser _reduce_8":{"type":"method","name":"_reduce_8","children":[],"call":["val [] "]}," Ruby25Parser _reduce_6":{"type":"method","name":"_reduce_6","children":[],"call":[" block_append ","val [] "]}," Ruby25Parser _reduce_3":{"type":"method","name":"_reduce_3","children":[],"call":["val [] "]}," Ruby25Parser _reduce_2":{"type":"method","name":"_reduce_2","children":[],"call":[" new_compstmt "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer cond pop "," lexer cond "]}," Ruby25Parser _reduce_1":{"type":"method","name":"_reduce_1","children":[],"call":[" lexer lex_state= "," lexer "]}," RubyParser Parser version=":{"type":"method","name":"version=","children":[],"call":[]}," RubyLexer possibly_escape_string":{"type":"method","name":"possibly_escape_string","children":[],"call":["content gsub gsub ","content gsub "," unescape ","text =~ "," match [] "," match "," unescape_string "," match []  gsub gsub "," match []  gsub "]}," RubyParserStuff StackState log":{"type":"method","name":"log","children":[],"call":[" warn ","%s_stack.%s: %p at %s % ","c clean_caller "," name "," caller [] "," caller ","c =~ ","%s_sta caller [] k.%s: %p at %s % "," caller []   caller [] lean_ caller [] aller ","  caller [] aller [] ","  caller [] aller "," caller []  =~ "]}," RubyParserStuff new_rescue":{"type":"method","name":"new_rescue","children":[],"call":[" s "," s line ","body line "]}," RubyParserStuff new_do_body":{"type":"method","name":"new_do_body","children":[],"call":[" new_iter line "," new_iter "]}," RubyParserStuff new_brace_body":{"type":"method","name":"new_brace_body","children":[],"call":[" new_iter line "," new_iter "]}," RubyLexer process_brace_open":{"type":"method","name":"process_brace_open","children":[],"call":[" expr_result "," command_start= ","token != "," lex_state "," paren_nest "," lpar_beg= "," lambda_beginning? "," brace_nest "," result "," cmdarg push "," cmdarg "," cond push "," cond ","token == "," lex_state =~ ","EXPR_ARG_ANY  | | ","EXPR_ARG_ANY  | "]}," RubyLexer process_brace_close":{"type":"method","name":"process_brace_close","children":[],"call":[" raise "," matched inspect "," matched "," lex_state= "," paren_nest "," brace_nest < "," brace_nest "," cmdarg lexpop "," cmdarg "," cond lexpop "," cond "," ruby24minus? "," cmdarg pop "," cond pop "]}," RubyLexer lambda_beginning?":{"type":"method","name":"lambda_beginning?","children":[],"call":[" lpar_beg == "," paren_nest "," lpar_beg "]}," RubyLexer lvar_defined?":{"type":"method","name":"lvar_defined?","children":[],"call":[" parser env [] == "," parser env [] ","id to_sym "," parser env "," parser "]}," Ruby26Parser _reduce_none":{"type":"method","name":"_reduce_none","children":[],"call":["val [] "]}," Ruby26Parser _reduce_649":{"type":"method","name":"_reduce_649","children":[],"call":[" yyerrok "]}," Ruby26Parser _reduce_648":{"type":"method","name":"_reduce_648","children":[],"call":[" yyerrok "]}," Ruby26Parser _reduce_645":{"type":"method","name":"_reduce_645","children":[],"call":[" yyerrok "]}," Ruby26Parser _reduce_619":{"type":"method","name":"_reduce_619","children":[],"call":[" s ","val [] ","sym sexp_type= ","result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] dup "," s line "," s  sexp_type= "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "]}," Ruby26Parser _reduce_618":{"type":"method","name":"_reduce_618","children":[],"call":[" s ","sym sexp_type= ","label to_sym "," s line "," lexer lineno "," lexer ","lit line "," wrap "," s line  line "," wrap  line "]}," Ruby26Parser _reduce_617":{"type":"method","name":"_reduce_617","children":[],"call":[" s ","label to_sym ","val [] "," yyerror ","result sexp_type == ","result sexp_type "," s line ","v1 line ","arg line "," s  sexp_type == ","val []  sexp_type == "," s line  sexp_type == "," s  sexp_type ","val []  sexp_type "," s line  sexp_type "," s arg line  ","v1 arg line  ","arg arg line  "]}," Ruby26Parser _reduce_616":{"type":"method","name":"_reduce_616","children":[],"call":[" s ","val [] ","result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] dup "," lexer lex_state= "," lexer "," s line "," lexer lineno ","sym sexp_type= "," s  sexp_type= "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "]}," Ruby26Parser _reduce_615":{"type":"method","name":"_reduce_615","children":[],"call":["result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] ","val [] dup "," yyerror ","result sexp_type == ","result sexp_type "," s line ","lit line "," s "," wrap ","val []  sexp_type= "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? ","val []  sexp_type == "," s line  sexp_type == ","val []  sexp_type "," s line  sexp_type "," wrap  line "]}," Ruby26Parser _reduce_613":{"type":"method","name":"_reduce_613","children":[],"call":["val [] "," s "," s line "," lexer lineno "," lexer ","result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] dup ","val []  sexp_type= "," s  sexp_type= "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "]}," Ruby26Parser _reduce_612":{"type":"method","name":"_reduce_612","children":[],"call":[" s "," yyerror ","result sexp_type == ","result sexp_type ","val [] ","(str \"&\") to_sym "," env []= "," env ","val [] to_sym "," s  sexp_type == ","val []  sexp_type == ","(str \"&\") to_sym  sexp_type == "," s  sexp_type ","val []  sexp_type ","(str \"&\") to_sym  sexp_type "]}," Ruby26Parser _reduce_611":{"type":"method","name":"_reduce_611","children":[],"call":[" yyerror ","result sexp_type == ","result sexp_type ","val [] "," lexer lex_state= "," lexer ","val []  sexp_type == ","val []  sexp_type "]}," Ruby26Parser _reduce_610":{"type":"method","name":"_reduce_610","children":[],"call":[" lexer lex_state= "," lexer ","(str \"&\") to_sym "," env []= "," env ","val [] to_sym ","val [] "," s line "," lexer lineno "," s "]}," Ruby26Parser _reduce_608":{"type":"method","name":"_reduce_608","children":[],"call":["val [] "," assignable ","val [] to_sym "," lexer lex_state= "," lexer "]}," Ruby26Parser _reduce_607":{"type":"method","name":"_reduce_607","children":[],"call":["val [] ","(str \"&\") to_sym "," env []= "," env ","val [] to_sym ","id to_sym "]}," Ruby26Parser _reduce_606":{"type":"method","name":"_reduce_606","children":[],"call":["(str \"&\") to_sym "," env []= "," env ","val [] to_sym ","val [] "," assignable "]}," Ruby26Parser _reduce_603":{"type":"method","name":"_reduce_603","children":[],"call":[" env []= "," env "," assignable ","val [] to_sym ","val [] ","result << "," block_append ","id to_sym "," block_append  << "]}," Ruby26Parser _reduce_602":{"type":"method","name":"_reduce_602","children":[],"call":[" assignable ","val [] to_sym ","val [] "," s line ","optblk line "," s ","opt line "]}," Ruby26Parser _reduce_599":{"type":"method","name":"_reduce_599","children":[],"call":[" block_append ","val [] "," s "," assignable "," s line ","opt line "]}," Ruby26Parser _reduce_598":{"type":"method","name":"_reduce_598","children":[],"call":[" s ","val [] ","result << "," assignable ","val [] to_sym "," s  << ","val []  << "," assignable  << "]}," Ruby26Parser _reduce_597":{"type":"method","name":"_reduce_597","children":[],"call":["result << ","val [] "," s "," env []= "," env "," s line ","optblk line "," block_append ","val []  << "," s  << "," s line  << "," block_append  << "]}," Ruby26Parser _reduce_596":{"type":"method","name":"_reduce_596","children":[],"call":[" s ","val [] "," assignable ","val [] to_sym "," s line ","opt line "]}," Ruby26Parser _reduce_595":{"type":"method","name":"_reduce_595","children":[],"call":[" assignable ","val [] "," args ","result << "," assignable  << "," args  << "]}," Ruby26Parser _reduce_594":{"type":"method","name":"_reduce_594","children":[],"call":[" assignable ","val [] "," lexer lineno "," lexer "," env []= "," env "," s line ","optblk line "," s "]}," Ruby26Parser _reduce_593":{"type":"method","name":"_reduce_593","children":[],"call":[" assignable ","val [] to_sym ","val [] ","list << ","item last "," args ","id to_sym "]}," Ruby26Parser _reduce_592":{"type":"method","name":"_reduce_592","children":[],"call":[" assignable ","val [] to_sym ","val [] "]}," Ruby26Parser _reduce_589":{"type":"method","name":"_reduce_589","children":[],"call":[" args "," s line "," s "," env []= "," env ","label to_sym "]}," Ruby26Parser _reduce_587":{"type":"method","name":"_reduce_587","children":[],"call":["list << ","item last "," s line "," s "," env []= "," env ","label to_sym "," args "]}," Ruby26Parser _reduce_585":{"type":"method","name":"_reduce_585","children":[],"call":[" s "," env []= "," env ","label to_sym ","val [] "," raise ","val inspect "," debug20 "," s line "," lexer lineno "," lexer ","list << ","item last "]}," Ruby26Parser _reduce_584":{"type":"method","name":"_reduce_584","children":[],"call":[" s ","val [] "," env []= "," env ","label to_sym ","result << "," s line ","list line ","list sexp_type == ","list sexp_type "," s  << ","val []  << "," s line  << "]}," Ruby26Parser _reduce_583":{"type":"method","name":"_reduce_583","children":[],"call":[" s "," env []= "," env ","label to_sym ","val [] "," raise ","val inspect "," debug20 "," s line "," lexer lineno "," lexer "]}," Ruby26Parser _reduce_582":{"type":"method","name":"_reduce_582","children":[],"call":[" s ","val [] "," env []= "," env ","label to_sym "," s line "]}," Ruby26Parser _reduce_580":{"type":"method","name":"_reduce_580","children":[],"call":["result << "," s ","list sexp_type == ","list sexp_type "," raise ","val inspect "," debug20 ","val [] "," new_arg "," s line "," env []= "," env ","label to_sym "," s  << ","val []  << "," new_arg  << "," s line  << "]}," Ruby26Parser _reduce_579":{"type":"method","name":"_reduce_579","children":[],"call":[" raise ","val inspect "," debug20 ","val [] ","result << "," s "," yyerror "," env []= "," env ","val [] to_sym ","val []  << "," s  << "]}," Ruby26Parser _reduce_578":{"type":"method","name":"_reduce_578","children":[],"call":["val [] "," yyerror ","result line_max= ","result << ","item line_max ","Sexp  === "," s line ","list line "," s ","list sexp_type == ","list sexp_type ","val []  line_max= "," s line  line_max= ","result item line_max = ","val []  << "," s line  << ","item item line_max  "]}," Ruby26Parser _reduce_575":{"type":"method","name":"_reduce_575","children":[],"call":[" env []= "," env ","val [] to_sym ","val [] "," args "," yyerror "]}," Ruby26Parser _reduce_573":{"type":"method","name":"_reduce_573","children":[],"call":[" yyerror "," args "," env []= "," env ","id to_sym "]}," Ruby26Parser _reduce_572":{"type":"method","name":"_reduce_572","children":[],"call":[" yyerror "," args "]}," Ruby26Parser _reduce_571":{"type":"method","name":"_reduce_571","children":[],"call":[" yyerror "," args "]}," Ruby26Parser _reduce_570":{"type":"method","name":"_reduce_570","children":[],"call":[" yyerror "," args "]}," Ruby26Parser _reduce_569":{"type":"method","name":"_reduce_569","children":[],"call":[" args "," yyerror "]}," Ruby26Parser _reduce_568":{"type":"method","name":"_reduce_568","children":[],"call":[" args "," yyerror "]}," Ruby26Parser _reduce_567":{"type":"method","name":"_reduce_567","children":[],"call":[" args "]}," Ruby26Parser _reduce_566":{"type":"method","name":"_reduce_566","children":[],"call":[" args "]}," Ruby26Parser _reduce_565":{"type":"method","name":"_reduce_565","children":[],"call":[" args "]}," Ruby26Parser _reduce_564":{"type":"method","name":"_reduce_564","children":[],"call":[" args "]}," Ruby26Parser _reduce_563":{"type":"method","name":"_reduce_563","children":[],"call":[" args "]}," Ruby26Parser _reduce_562":{"type":"method","name":"_reduce_562","children":[],"call":[" args "]}," Ruby26Parser _reduce_561":{"type":"method","name":"_reduce_561","children":[],"call":[" args "]}," Ruby26Parser _reduce_560":{"type":"method","name":"_reduce_560","children":[],"call":[" args "]}," Ruby26Parser _reduce_559":{"type":"method","name":"_reduce_559","children":[],"call":[" args ","val [] "]}," Ruby26Parser _reduce_558":{"type":"method","name":"_reduce_558","children":[],"call":[" args "]}," Ruby26Parser _reduce_557":{"type":"method","name":"_reduce_557","children":[],"call":[" args ","val [] "]}," Ruby26Parser _reduce_556":{"type":"method","name":"_reduce_556","children":[],"call":[" args "]}," Ruby26Parser _reduce_555":{"type":"method","name":"_reduce_555","children":[],"call":[" args "]}," Ruby26Parser _reduce_554":{"type":"method","name":"_reduce_554","children":[],"call":["val [] "," lexer command_start= "," lexer "," lexer lex_state= "," in_kwarg= "," args "]}," Ruby26Parser _reduce_553":{"type":"method","name":"_reduce_553","children":[],"call":["val [] "," lexer lex_state "," lexer "," in_kwarg= "," in_kwarg "," args "]}," Ruby26Parser _reduce_551":{"type":"method","name":"_reduce_551","children":[],"call":[" args "," lexer lex_state "," lexer "," in_kwarg= "," in_kwarg ","val [] "]}," Ruby26Parser _reduce_550":{"type":"method","name":"_reduce_550","children":[],"call":[" args ","val [] "," lexer command_start= "," lexer "," lexer lex_state= "]}," Ruby26Parser _reduce_549":{"type":"method","name":"_reduce_549","children":[],"call":[" args "," lexer command_start= "," lexer "," lexer lex_state= "," in_kwarg= "," end_args "]}," Ruby26Parser _reduce_548":{"type":"method","name":"_reduce_548","children":[],"call":[" lexer command_start= "," lexer "," lexer lex_state= "," in_kwarg= "," lexer lex_state "," in_kwarg "," s line "," lexer lineno "," s ","val [] "," args "]}," Ruby26Parser _reduce_547":{"type":"method","name":"_reduce_547","children":[],"call":[" in_kwarg= "," in_kwarg "," lexer command_start= "," lexer "," lexer lex_state= ","val [] "," s line "," lexer lineno "," s "," end_args "," args "]}," Ruby26Parser _reduce_546":{"type":"method","name":"_reduce_546","children":[],"call":[" lexer command_start= "," lexer "," lexer lex_state= ","val [] "," debug20 "," assignable "," s line "," lexer lineno "," s "," end_args "]}," Ruby26Parser _reduce_545":{"type":"method","name":"_reduce_545","children":[],"call":["val [] "," assignable "," s line "," lexer lineno "," lexer "," s "," lexer lex_state "," in_kwarg= "," in_kwarg "]}," Ruby26Parser _reduce_544":{"type":"method","name":"_reduce_544","children":[],"call":["val [] "," lexer command_start= "," lexer "," lexer lex_state= "," gettable ","Sexp  === "," debug20 "," assignable "," end_args "]}," Ruby26Parser _reduce_543":{"type":"method","name":"_reduce_543","children":[],"call":[" lexer command_start= "," lexer "," lexer lex_state= "," s ","val [] "," gettable ","Sexp  === "," assignable "," s line "]}," Ruby26Parser _reduce_542":{"type":"method","name":"_reduce_542","children":[],"call":[" s ","val [] "," s line "," lexer lineno "," lexer "," gettable ","Sexp  === ","va lexer lineno  [] "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "," gettab lexer lineno e "]}," Ruby26Parser _reduce_541":{"type":"method","name":"_reduce_541","children":[],"call":[" s ","val [] "," debug20 "," assignable "," s line "," lexer lineno "," lexer "," gettable ","Sexp  === "," debug "," lexer command_start= "," lexer lex_state= "]}," Ruby26Parser _reduce_540":{"type":"method","name":"_reduce_540","children":[],"call":[" debug20 "," assignable ","val [] "," s line "," lexer lineno "," lexer "," s "," file "," assignab lexer lineno e ","va lexer lineno  [] "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "," fi lexer lineno e "]}," Ruby26Parser _reduce_539":{"type":"method","name":"_reduce_539","children":[],"call":[" assignable ","val [] "," gettable ","Sexp  === "," s line "," lexer lineno "," lexer "," s "]}," Ruby26Parser _reduce_538":{"type":"method","name":"_reduce_538","children":[],"call":[" gettable ","Sexp  === ","val [] "," s line "," lexer lineno "," lexer "," s "," file ","result line "," raise ","val inspect ","val first "," debug "," assignable "," gettable  line "," s line  line "," assignable  line "]}," Ruby26Parser _reduce_537":{"type":"method","name":"_reduce_537","children":[],"call":[" gettable ","Sexp  === ","val [] "," s "," s line "," lexer lineno "," lexer "," assignable "," gettab lexer lineno e ","va lexer lineno  [] "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "," assignab lexer lineno e "]}," Ruby26Parser _reduce_536":{"type":"method","name":"_reduce_536","children":[],"call":[" s "," lexer lineno "," lexer "," s line "," gettable ","Sexp  === ","val [] "]}," Ruby26Parser _reduce_535":{"type":"method","name":"_reduce_535","children":[],"call":[" s "," lexer lineno "," lexer "," file "," s line ","result line "," gettable ","Sexp  === "," raise ","val inspect ","val first "," s  line "," s line  line "," gettable  line "]}," Ruby26Parser _reduce_534":{"type":"method","name":"_reduce_534","children":[],"call":[" s "," file "," s line "," lexer lineno "," lexer "," fi lexer lineno e "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "]}," Ruby26Parser _reduce_533":{"type":"method","name":"_reduce_533","children":[],"call":[" s "," s line "," lexer lineno "," lexer "]}," Ruby26Parser _reduce_532":{"type":"method","name":"_reduce_532","children":[],"call":[" s "," s line "," lexer lineno "," lexer "," file "]}," Ruby26Parser _reduce_531":{"type":"method","name":"_reduce_531","children":[],"call":[" s "," s line "," lexer lineno "," lexer "]}," Ruby26Parser _reduce_530":{"type":"method","name":"_reduce_530","children":[],"call":[" s "," s line "," lexer lineno "," lexer "]}," Ruby26Parser _reduce_520":{"type":"method","name":"_reduce_520","children":[],"call":["val [] -@ ","val [] "]}," Ruby26Parser _reduce_518":{"type":"method","name":"_reduce_518","children":[],"call":[" debug20 "," s ","result last to_sym ","result last ","result sexp_type= ","result sexp_type ","val [] "," lexer lex_state= "," lexer ","val [] to_sym ","num -@ "," s  last to_sym ","val []  last to_sym ","val [] to_sym  last to_sym "," s  last ","val []  last ","val [] to_sym  last "," s  sexp_type= ","val []  sexp_type= ","val [] to_sym  sexp_type= "," s  sexp_type ","val []  sexp_type ","val [] to_sym  sexp_type "]}," Ruby26Parser _reduce_513":{"type":"method","name":"_reduce_513","children":[],"call":["val [] to_sym ","val [] "," lexer lex_state= "," lexer "," raise ","stmt inspect "," debug20 "," s line "," s ","stmt sexp_type "," lexer cmdarg restore "," lexer cmdarg "," lexer cond restore "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer lineno ","id to_sym "," wrap "]}," Ruby26Parser _reduce_512":{"type":"method","name":"_reduce_512","children":[],"call":["val [] to_sym ","val [] "," lexer lex_state= "," lexer "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer lineno "," lexer lex_state "," lexer cmdarg store "," lexer cmdarg "," lexer cond store "," lexer cond "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "," s line "," s "]}," Ruby26Parser _reduce_510":{"type":"method","name":"_reduce_510","children":[],"call":[" s ","val [] to_sym ","val [] "," lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm "," lexer string_nest= "," lexer brace_nest= "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," lexer lineno "," lexer lex_state "," lexer string_nest "," lexer brace_nest "," wrap "]}," Ruby26Parser _reduce_509":{"type":"method","name":"_reduce_509","children":[],"call":[" s ","val [] to_sym ","val [] "," new_string "," s line ","str line "," lexer lex_strterm= "," lexer ","id to_sym "," wrap "]}," Ruby26Parser _reduce_508":{"type":"method","name":"_reduce_508","children":[],"call":[" s ","val [] to_sym ","val [] "," raise ","stmt inspect "," debug20 ","stmt sexp_type "," lexer lex_state= "," lexer "," lexer cmdarg restore "," lexer cmdarg "," lexer cond restore "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," literal_concat "," lexer lex_strterm "," s line ","id to_sym "," wrap "]}," Ruby26Parser _reduce_507":{"type":"method","name":"_reduce_507","children":[],"call":[" raise ","stmt inspect "," debug20 "," s ","stmt sexp_type "," lexer lex_state= "," lexer "," lexer cmdarg restore "," lexer cmdarg "," lexer cond restore "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer lex_state "," lexer cmdarg store "," lexer cond store "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "," new_string "," s line ","id to_sym "," wrap ","val [] "]}," Ruby26Parser _reduce_506":{"type":"method","name":"_reduce_506","children":[],"call":[" lexer lex_state= "," lexer "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer lex_state "," lexer cmdarg store "," lexer cmdarg "," lexer cond store "," lexer cond "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "," s ","val [] "," literal_concat "," raise ","stmt inspect "," debug "," s line ","stmt sexp_type "," lexer cmdarg pop "," lexer cond pop "," wrap "]}," Ruby26Parser _reduce_505":{"type":"method","name":"_reduce_505","children":[],"call":[" s ","val [] "," lexer lex_strterm= "," lexer "," lexer lex_state= "," lexer lex_strterm "," lexer string_nest= "," lexer brace_nest= "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," lexer lineno "," lexer lex_state "," lexer string_nest "," lexer brace_nest "," wrap "]}," Ruby26Parser _reduce_504":{"type":"method","name":"_reduce_504","children":[],"call":[" lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm "," new_string "," literal_concat "," s line ","str line "," s "," wrap ","val [] "]}," Ruby26Parser _reduce_503":{"type":"method","name":"_reduce_503","children":[],"call":[" new_string "," literal_concat ","val [] "," s line "," lexer lineno "," lexer "," s "," lexer lex_state= "," lexer lex_strterm= "," lexer lex_strterm "," raise ","stmt inspect "," debug ","stmt sexp_type "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," lexer string_nest= "," lexer brace_nest= "]}," Ruby26Parser _reduce_502":{"type":"method","name":"_reduce_502","children":[],"call":[" literal_concat ","val [] ","val [] dup << "," new_qsym_list_entry ","val [] dup "," new_string "," lexer lex_state= "," lexer "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," lexer lineno "," lexer lex_state "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "]}," Ruby26Parser _reduce_501":{"type":"method","name":"_reduce_501","children":[],"call":[" literal_concat ","val [] "," new_qsym_list "," s line "," lexer lineno "," lexer "," s ","str line "," lexer lex_strterm= "]}," Ruby26Parser _reduce_500":{"type":"method","name":"_reduce_500","children":[],"call":[" literal_concat ","val [] ","val [] dup << "," new_qword_list_entry ","val [] dup "," new_qsym_list_entry "," lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm "]}," Ruby26Parser _reduce_499":{"type":"method","name":"_reduce_499","children":[],"call":[" literal_concat ","val [] "," new_qword_list "," new_qsym_list "," new_string "]}," Ruby26Parser _reduce_498":{"type":"method","name":"_reduce_498","children":[],"call":[" literal_concat ","val [] "," s ","val [] dup << "," new_qword_list_entry ","val [] dup "]}," Ruby26Parser _reduce_497":{"type":"method","name":"_reduce_497","children":[],"call":[" s ","val [] dup << "," new_qsym_list_entry ","val [] dup ","val [] "," s line "," lexer lineno "," lexer "," new_qword_list "," literal_concat "]}," Ruby26Parser _reduce_496":{"type":"method","name":"_reduce_496","children":[],"call":["val [] dup << "," new_qsym_list_entry ","val [] dup ","val [] "," new_qsym_list "," s line "," s "," +@ "," prev_value_to_lineno ","_values last "," literal_concat "," s  prev_value_to_lineno  "," prev_value_to_ prev_value_to_lineno no "]}," Ruby26Parser _reduce_495":{"type":"method","name":"_reduce_495","children":[],"call":[" new_qsym_list ","val [] dup << "," new_qword_list_entry ","val [] dup ","val [] "," s line "," lexer lineno "," lexer "," s "," new_qsym_list_entry "]}," Ruby26Parser _reduce_494":{"type":"method","name":"_reduce_494","children":[],"call":["val [] dup << "," new_qword_list_entry ","val [] dup ","val [] "," new_qword_list ","list dup << "," new_symbol_list_entry ","list dup "," new_qsym_list "," literal_concat "]}," Ruby26Parser _reduce_493":{"type":"method","name":"_reduce_493","children":[],"call":[" new_qword_list ","val [] "," new_symbol_list line "," lexer lineno "," lexer "," new_symbol_list "," s line "," s ","val [] dup << "," new_qword_list_entry ","val [] dup "," +@ "," prev_value_to_lineno ","_values last "," new_symbol_list  prev_value_to_lineno  "," lexer  prev_value_to_lineno no "," s  prev_value_to_lineno  "," prev_value_to_ prev_value_to_lineno no "]}," Ruby26Parser _reduce_492":{"type":"method","name":"_reduce_492","children":[],"call":["val [] "," s ","list line= ","list dup << "," new_symbol_list_entry ","list dup "," new_qword_list ","val [] dup << "," new_qsym_list_entry ","val [] dup "]}," Ruby26Parser _reduce_491":{"type":"method","name":"_reduce_491","children":[],"call":[" s ","val [] "," lexer lineno "," lexer "," new_symbol_list line "," new_symbol_list ","list line ","result line_max= "," new_qsym_list "," s  line_max= ","val []  line_max= "," lexer lineno  line_max= "," new_symbol_list line  line_max= ","list line  line_max= "," new_qsym_list  line_max= "]}," Ruby26Parser _reduce_490":{"type":"method","name":"_reduce_490","children":[],"call":["val [] "," s "," s line "," lexer lineno "," lexer ","list line= ","result line_max= ","val [] dup << "," new_qword_list_entry ","val [] dup ","val []  line_max= "," s  line_max= "," s line  line_max= ","val [] dup <<  line_max= "]}," Ruby26Parser _reduce_489":{"type":"method","name":"_reduce_489","children":[],"call":[" s ","val [] dup << "," new_symbol_list_entry ","val [] dup ","val [] "," literal_concat "," lexer lineno "," lexer ","list line ","result line_max= "," new_qword_list "," s  line_max= ","val [] dup <<  line_max= "," literal_concat  line_max= "," lexer lineno  line_max= ","list line  line_max= "," new_qword_list  line_max= "]}," Ruby26Parser _reduce_488":{"type":"method","name":"_reduce_488","children":[],"call":["val [] dup << "," new_symbol_list_entry ","val [] dup ","val [] "," new_symbol_list "," s line "," lexer lineno "," lexer "," s ","result line_max= ","list line ","val [] dup <<  line_max= "," new_symbol_list  line_max= "," s line  line_max= ","list line  line_max= "]}," Ruby26Parser _reduce_487":{"type":"method","name":"_reduce_487","children":[],"call":[" new_symbol_list ","val [] ","val [] dup << "," new_word_list_entry ","val [] dup "," literal_concat ","list dup << "," new_symbol_list_entry ","list dup ","result line_max= "," s line "," s "," new_symbol_list  line_max= ","val []  line_max= ","val [] dup <<  line_max= "," literal_concat  line_max= ","list dup <<  line_max= "," s line  line_max= "]}," Ruby26Parser _reduce_486":{"type":"method","name":"_reduce_486","children":[],"call":["val [] "," s "," new_word_list "," new_symbol_list ","result line_max= ","list line ","val []  line_max= "," s  line_max= "," new_word_list  line_max= "," new_symbol_list  line_max= ","list line  line_max= "]}," Ruby26Parser _reduce_485":{"type":"method","name":"_reduce_485","children":[],"call":[" s "," literal_concat ","val [] ","val [] dup << "," new_word_list_entry ","val [] dup ","list line ","result line_max= "," s line "," s  line_max= "," literal_concat  line_max= ","val []  line_max= ","val [] dup <<  line_max= ","list line  line_max= "," s line  line_max= "]}," Ruby26Parser _reduce_484":{"type":"method","name":"_reduce_484","children":[],"call":[" literal_concat ","val [] "," s line "," lexer lineno "," lexer "," s "," new_word_list ","result line_max= ","list dup << "," new_symbol_list_entry ","list dup "," literal_concat  line_max= "," s line  line_max= "," new_word_list  line_max= ","list dup <<  line_max= "]}," Ruby26Parser _reduce_482":{"type":"method","name":"_reduce_482","children":[],"call":["val [] dup << "," new_word_list_entry ","val [] dup ","val [] "," new_word_list "," new_xstring "," s line "," lexer lineno "," lexer "," s ","result line_max= ","list line ","val [] dup <<  line_max= "," new_word_list  line_max= "," new_xstring  line_max= "," s line  line_max= ","list line  line_max= "]}," Ruby26Parser _reduce_481":{"type":"method","name":"_reduce_481","children":[],"call":[" new_word_list ","val [] "," new_string "," new_regexp ","val [] dup << "," new_word_list_entry ","val [] dup ","result line_max= "," s line "," s "," new_word_list  line_max= ","val []  line_max= "," new_string  line_max= "," new_regexp  line_max= ","val [] dup <<  line_max= "," s line  line_max= "]}," Ruby26Parser _reduce_480":{"type":"method","name":"_reduce_480","children":[],"call":["val [] "," s "," dedent ","func =~ "," new_xstring "," new_word_list "," literal_concat "," new_x dedent ing "]}," Ruby26Parser _reduce_479":{"type":"method","name":"_reduce_479","children":[],"call":[" s "," new_regexp "," literal_concat ","val [] "," new_string ","list line ","result line_max= "," s  line_max= "," new_regexp  line_max= "," literal_concat  line_max= "," new_string  line_max= ","list line  line_max= "]}," Ruby26Parser _reduce_478":{"type":"method","name":"_reduce_478","children":[],"call":[" new_regexp "," new_xstring ","val [] "," dedent ","func =~ "," s line "," s ","result line_max= ","val [] dup << "," new_word_list_entry ","val [] dup "," new_x dedent ing "," new_regexp  line_max= "," new_xstring  line_max= "," s line  line_max= ","val [] dup <<  line_max= "]}," Ruby26Parser _reduce_477":{"type":"method","name":"_reduce_477","children":[],"call":[" new_xstring ","val [] "," new_string "," debug20 "," literal_concat "," new_regexp "," new_word_list "]}," Ruby26Parser _reduce_476":{"type":"method","name":"_reduce_476","children":[],"call":[" new_string ","val [] "," s ","str value ","str sexp_type == ","str sexp_type "," new_xstring ","result line_max= ","list line "," new_ s ing "," s  value "," s  sexp_type == "," s  sexp_type "," new_x s ing "," new_string  line_max= ","val []  line_max= "," new_xstring  line_max= ","list line  line_max= "]}," Ruby26Parser _reduce_475":{"type":"method","name":"_reduce_475","children":[],"call":["val [] "," literal_concat "," debug20 "," new_string ","result line_max= "," s line "," s ","val []  line_max= "," literal_concat  line_max= "," new_string  line_max= "," s line  line_max= "]}," Ruby26Parser _reduce_474":{"type":"method","name":"_reduce_474","children":[],"call":[" literal_concat ","val [] ","result line= "," s "," lexer lineno "," lexer ","str value ","str sexp_type == ","str sexp_type ","str line "," dedent ","func =~ "," new_regexp "," literal_concat  line= "," s  line= ","str line  line= "," new_regexp  line= ","result  lexer lineno = "," lexer  lexer lineno no "," s  value "," dedent  value "," s  sexp_type == "," dedent  sexp_type == "," s  sexp_type "," dedent  sexp_type ","str  lexer lineno  "," s  line "," dedent  line "]}," Ruby26Parser _reduce_472":{"type":"method","name":"_reduce_472","children":[],"call":[" debug20 ","val [] ","val []= "," s ","val [] value ","val [] sexp_type == ","val [] sexp_type ","result line= "," lexer lineno "," lexer "," new_string ","val []  line= "," s  line= "," new_string  line= ","result  lexer lineno = "," lexer  lexer lineno no "]}," Ruby26Parser _reduce_471":{"type":"method","name":"_reduce_471","children":[],"call":["val [] ","val []= "," s ","val [] value ","val [] sexp_type == ","val [] sexp_type "," s line ","result line= "," lexer lineno "," lexer "," debug ","str line "," dedent ","func =~ "," s  lexer lineno  ","val []  line= "," s  line= ","str line  line= ","result  lexer lineno = "," lexer  lexer lineno no ","str  lexer lineno  "," dedent  line "]}," Ruby26Parser _reduce_469":{"type":"method","name":"_reduce_469","children":[],"call":[" s ","val [] "," s line "]}," Ruby26Parser _reduce_468":{"type":"method","name":"_reduce_468","children":[],"call":[" s ","val [] "," s line "," debug "]}," Ruby26Parser _reduce_466":{"type":"method","name":"_reduce_466","children":[],"call":[" s "," s line ","arg line "]}," Ruby26Parser _reduce_464":{"type":"method","name":"_reduce_464","children":[],"call":["val [] ","result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s line ","var line "," s ","arg line ","val []  << "," new_resbody  << "," s line  << "]}," Ruby26Parser _reduce_461":{"type":"method","name":"_reduce_461","children":[],"call":[" s ","val [] ","result << ","result line= "," new_when "," s line ","arg line "," s  << "," new_when  << "," s line  << ","val []  << "," s  line= "," new_when  line= "," s line  line= ","val []  line= "]}," Ruby26Parser _reduce_460":{"type":"method","name":"_reduce_460","children":[],"call":["result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s "," lexer lineno "," lexer "," new_resbody  << "," lexer lineno  << "]}," Ruby26Parser _reduce_459":{"type":"method","name":"_reduce_459","children":[],"call":["result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s "," lexer cmdarg restore "," lexer cmdarg "," lexer "," env unextend "," env "," new_do_body ","val [] ","result line= "," new_when "," s line ","var line "," new_resbody  << "," new_do_body  << "," new_when  << "," new_resbody  line= "," new_do_body  line= "," new_when  line= "]}," Ruby26Parser _reduce_456":{"type":"method","name":"_reduce_456","children":[],"call":["result << ","val [] ","result line= "," new_when "," lexer lineno "," lexer "," lexer cmdarg pop "," lexer cmdarg "," lexer cmdarg restore "," env unextend "," env "," new_brace_body "," lexer cmdarg push ","result line "," new_resbody ","klasses line ","klasses << "," new_assign "," s line ","var line "," s "," new_when  << "," lexer lineno  << "," new_brace_body  << "," new_resbody  << "," new_when  line= "," lexer lineno  line= "," new_brace_body  line= "," new_resbody  line= "," new_when  line "," lexer lineno  line "," new_brace_body  line "," new_resbody  line "]}," Ruby26Parser _reduce_455":{"type":"method","name":"_reduce_455","children":[],"call":[" lexer lineno "," lexer "," lexer cmdarg restore "," lexer cmdarg "," env unextend "," env "," new_do_body "," lexer cmdarg store "," env extend "]}," Ruby26Parser _reduce_454":{"type":"method","name":"_reduce_454","children":[],"call":[" lexer cmdarg restore "," lexer cmdarg "," lexer "," env unextend "," env "," new_do_body "," lexer cmdarg store "," lexer lineno "," env extend "," lexer cmdarg pop "," new_brace_body "," list_append "," s line ","id line "," s "]}," Ruby26Parser _reduce_453":{"type":"method","name":"_reduce_453","children":[],"call":[" lexer cmdarg store "," lexer cmdarg "," lexer "," lexer lineno "," env extend "," env "," env unextend ","result line= "," list_append ","result << ","val [] ","result line "," new_when "," lexer cmdarg store  line= "," lexer lineno  line= "," list_append  line= "," new_when  line= "," lexer cmdarg store  << "," lexer lineno  << "," list_append  << "," new_when  << "," lexer cmdarg store  line "," lexer lineno  line "," list_append  line "," new_when  line "]}," Ruby26Parser _reduce_452":{"type":"method","name":"_reduce_452","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," lexer cmdarg pop "," lexer cmdarg "," lexer cmdarg restore "," env unextend "," new_brace_body "," s line ","arg line "," s "]}," Ruby26Parser _reduce_451":{"type":"method","name":"_reduce_451","children":[],"call":[" lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," env unextend "," env "," new_brace_body "," lexer cmdarg store ","result line= "," s line ","arg line "," s "," list_append ","id line "," new_brace_body  line= "," lexer cmdarg store  line= "," s line  line= "," list_append  line= "]}," Ruby26Parser _reduce_450":{"type":"method","name":"_reduce_450","children":[],"call":[" lexer cmdarg store "," lexer cmdarg "," lexer "," lexer lineno "," env extend "," env "," env unextend "," lexer cmdarg pop "," new_do_body "," list_append "]}," Ruby26Parser _reduce_449":{"type":"method","name":"_reduce_449","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," env unextend ","result line= "," new_aref "," lexer cmdarg push "," lexer cmdarg "," s line ","arg line "," s "," lexer lineno  line= "," new_aref  line= "," s line  line= "]}," Ruby26Parser _reduce_448":{"type":"method","name":"_reduce_448","children":[],"call":[" env unextend "," env ","result line= "," lexer lineno "," lexer "," env extend "," s line "," s ","arg line "," lexer lineno  line= "," s line  line= "]}," Ruby26Parser _reduce_447":{"type":"method","name":"_reduce_447","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," env unextend ","result line= "," new_super ","val [] "," new_aref "," lexer cmdarg pop "," lexer cmdarg "," lexer cmdarg restore "," new_brace_body "," new_do_body "," lexer lineno  line= "," new_super  line= "," new_aref  line= "," new_brace_body  line= "," new_do_body  line= "]}," Ruby26Parser _reduce_446":{"type":"method","name":"_reduce_446","children":[],"call":[" env unextend "," env ","result line= "," lexer lineno "," lexer "," env extend "," new_call ","val [] "," s line "," s "," lexer cmdarg store "," lexer cmdarg "," lexer cmdarg push "," lexer lineno  line= "," new_call  line= "," s line  line= "," lexer cmdarg store  line= "]}," Ruby26Parser _reduce_445":{"type":"method","name":"_reduce_445","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," new_aref "," new_call ","val [] "," new_super "]}," Ruby26Parser _reduce_444":{"type":"method","name":"_reduce_444","children":[],"call":[" new_aref "," s "," new_call ","val [] to_sym ","val [] "," env unextend "," env ","result line "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," new_brace_body "," new_aref  line "," s  line "," new_call  line "," new_brace_body  line "]}," Ruby26Parser _reduce_443":{"type":"method","name":"_reduce_443","children":[],"call":[" s "," new_super ","val [] "," new_call ","val [] to_sym "," lexer lineno "," lexer "," env extend "," env "," lexer cmdarg store "," lexer cmdarg "]}," Ruby26Parser _reduce_442":{"type":"method","name":"_reduce_442","children":[],"call":[" new_super ","val [] "," new_call ","val [] to_sym "," env unextend "," env ","result line "," lexer lineno "," lexer "," env extend "," new_super  line "," new_call  line "," lexer lineno  line "]}," Ruby26Parser _reduce_441":{"type":"method","name":"_reduce_441","children":[],"call":[" new_call ","val [] ","result line ","call concat ","args sexp_body ","val [] to_sym "," lexer lineno "," lexer "," env extend "," env "," env unextend "," new_call  line ","call concat  line "," lexer lineno  line "]}," Ruby26Parser _reduce_440":{"type":"method","name":"_reduce_440","children":[],"call":[" new_call ","val [] ","val [] to_sym "," lexer lineno "," lexer "," new_aref "," env extend "," env "]}," Ruby26Parser _reduce_439":{"type":"method","name":"_reduce_439","children":[],"call":[" new_call ","val [] to_sym ","val [] ","iter2 insert ","name to_sym ","result line ","call concat ","args sexp_body "," s line "," lexer lineno "," lexer "," s "," env unextend "," env "," new_ new_call  "," new_call  line ","call concat  line "," s line  line "," new_call  concat "]}," Ruby26Parser _reduce_438":{"type":"method","name":"_reduce_438","children":[],"call":[" new_call ","val [] ","val [] to_sym ","iter2 insert ","name to_sym "," lexer lineno "," lexer "," new_super "," env extend "," env "," new_ new_call  "]}," Ruby26Parser _reduce_437":{"type":"method","name":"_reduce_437","children":[],"call":[" new_call ","val [] ","val [] to_sym ","val [] concat ","args sexp_body "," call_args ","iter2 insert ","name to_sym "," new_aref "," new_ new_call  "," call_args  sexp_body "," call_ call_args  ","  new_call _args "]}," Ruby26Parser _reduce_436":{"type":"method","name":"_reduce_436","children":[],"call":["val [] concat ","args sexp_body ","val [] "," call_args "," lexer lineno "," lexer ","result insert "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? ","iter2 insert "," new_call ","name to_sym "," s line "," s "," invert_block_call  [] concat "," call_args  sexp_body "," invert_block_call  [] "," call_ call_args  ","  new_call _args ","val [] concat  insert "," lexer lineno  insert "," new_call  insert "," s line  insert "," invert_block_ new_call  "," invert_block_call  [] block_pass? "," new_ new_call  "]}," Ruby26Parser _reduce_435":{"type":"method","name":"_reduce_435","children":[],"call":[" lexer lineno "," lexer ","iter2 insert "," new_call ","name to_sym ","iter line ","val [] ","val [] to_sym ","id to_sym "," new_super "," new_ new_call  "]}," Ruby26Parser _reduce_434":{"type":"method","name":"_reduce_434","children":[],"call":["iter2 insert "," new_call ","name to_sym ","val [] ","result insert "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? ","op to_sym "," new_ new_call  "," invert_block_call  [] ","val []  insert "," new_call  insert "," invert_block_ new_call  "," invert_block_call  [] block_pass? "]}," Ruby26Parser _reduce_433":{"type":"method","name":"_reduce_433","children":[],"call":["iter2 insert "," new_call ","name to_sym ","val [] ","val [] to_sym ","iter line ","op to_sym ","result line_max= "," new_ new_call  "," new_call  line_max= ","val []  line_max= ","iter line  line_max= "]}," Ruby26Parser _reduce_432":{"type":"method","name":"_reduce_432","children":[],"call":[" new_call ","val [] ","val [] to_sym ","result insert "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? ","result == "," s ","call concat ","args sexp_body ","result line_max= ","args line_max ","id to_sym "," invert_block_call  [] "," invert_block_call  [] to_sym "," new_call  insert ","val []  insert ","call concat  insert "," invert_block_call  [] block_pass? "," new_call  == ","val []  == ","call concat  == "," new_call  line_max= ","val []  line_max= ","call concat  line_max= "]}," Ruby26Parser _reduce_431":{"type":"method","name":"_reduce_431","children":[],"call":["result insert ","val [] "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? "," args ","iter2 insert "," new_call ","name to_sym ","op to_sym ","val []  insert "," args  insert "," new_call  insert "," invert_block_call  [] "," invert_block_ new_call  "," invert_block_call  [] block_pass? "," new_ new_call  "]}," Ruby26Parser _reduce_430":{"type":"method","name":"_reduce_430","children":[],"call":["val [] "," env unextend "," env ","result line= "," new_iter "," s line "," s "," lexer cmdarg lexpop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," lexer lpar_beg= ","result == ","iter2 insert "," new_call ","name to_sym ","result line_max= ","op to_sym ","val []  line= "," new_iter  line= "," new_call  line= ","val []  == "," new_iter  == "," new_call  == "," new_ s line  "," new_ new_call  ","val []  line_max= "," new_iter  line_max= "," new_call  line_max= "]}," Ruby26Parser _reduce_429":{"type":"method","name":"_reduce_429","children":[],"call":["val [] "," lexer cmdarg store "," lexer cmdarg "," lexer "," args "," new_call ","id to_sym ","result line_max= ","args line_max ","call concat ","args sexp_body ","val []  line_max= "," lexer cmdarg store  line_max= "," args  line_max= "," new_call  line_max= "]}," Ruby26Parser _reduce_428":{"type":"method","name":"_reduce_428","children":[],"call":["val [] ","result == "," s "," lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," lexer lineno "," env extend "," env "," env unextend ","result line= "," new_iter "," s line "," lexer cmdarg pop "," lexer cmdarg ","result insert "," invert_block_call "," inverted? "," syntax_error ","cmd block_pass? ","iter2 insert "," new_call ","name to_sym "," invert_block_call  [] ","val []  == "," new_iter  == ","val []  line= "," new_iter  line= ","val []  insert "," new_iter  insert "," invert_block_ s line  "," invert_block_ new_call  "," new_ s line  "," new_ new_call  "]}," Ruby26Parser _reduce_427":{"type":"method","name":"_reduce_427","children":[],"call":["result == "," s ","val [] "," args "," lexer cmdarg push "," lexer cmdarg "," lexer ","iter line ","iter2 insert "," new_call ","name to_sym ","val []  == "," args  == ","iter line  == "," new_ new_call  "]}," Ruby26Parser _reduce_426":{"type":"method","name":"_reduce_426","children":[],"call":[" args "," env unextend "," env ","result line= "," new_iter "," new_call "," lexer cmdarg lexpop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," lexer lpar_beg= "," s line "," s ","id to_sym "," lexer lineno "," lexer paren_nest "," lexer lpar_beg "," env extend ","val [] "," args  line= "," new_iter  line= "," s line  line= ","val []  line= "," new_call  line= ","result  lexer lineno = "," new_ new_call  "," s  lexer lineno  "," lexer  lexer lineno no "]}," Ruby26Parser _reduce_425":{"type":"method","name":"_reduce_425","children":[],"call":[" env unextend "," env ","result line= "," new_iter "," new_call "," lexer cmdarg lexpop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," lexer lpar_beg= "," lexer lineno "," lexer cmdarg store "," args ","val [] ","result insert "," invert_block_call "," inverted? "," syntax_error ","cmd block_pass? "," new_iter  line= "," args  line= ","val []  line= "," new_ new_call  "," invert_block_call  [] "," new_iter  insert "," args  insert ","val []  insert "," invert_block_ new_call  "]}," Ruby26Parser _reduce_424":{"type":"method","name":"_reduce_424","children":[],"call":[" lexer lineno "," lexer "," lexer cmdarg store "," lexer cmdarg "," lexer lpar_beg= "," lexer paren_nest "," lexer lpar_beg "," env extend "," env "," args "," s line "," s ","id to_sym ","result == ","val [] ","iter line "," lexer  lexer lineno no "," s  lexer lineno  "," lexer lpar_beg  == "," lexer lineno  == "," args  == "," s line  == ","val []  == ","iter line  == ","iter  lexer lineno  "]}," Ruby26Parser _reduce_423":{"type":"method","name":"_reduce_423","children":[],"call":[" lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," lexer lineno "," env extend "," env "," args ","val [] "]}," Ruby26Parser _reduce_421":{"type":"method","name":"_reduce_421","children":[],"call":[" s ","val [] to_sym ","val [] "," args "," lexer cmdarg push "," lexer cmdarg "," lexer ","result == "," s  == "," args  == ","val []  == "]}," Ruby26Parser _reduce_420":{"type":"method","name":"_reduce_420","children":[],"call":[" args "," s line "," lexer lineno "," lexer "," s "," lexer lpar_beg= "," lexer paren_nest "," lexer lpar_beg "," env extend "," env "]}," Ruby26Parser _reduce_419":{"type":"method","name":"_reduce_419","children":[],"call":[" args "," env unextend "," env ","result line "," new_iter "," s line "," s "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer lpar_beg= "," args  line "," new_iter  line "]}," Ruby26Parser _reduce_418":{"type":"method","name":"_reduce_418","children":[],"call":[" args "," lexer command_start= "," lexer "," s line "," lexer lineno "," s ","id to_sym "," wrap ","val [] "," lexer cmdarg push "," lexer cmdarg "]}," Ruby26Parser _reduce_416":{"type":"method","name":"_reduce_416","children":[],"call":[" args "," s "," lexer command_start= "," lexer "]}," Ruby26Parser _reduce_415":{"type":"method","name":"_reduce_415","children":[],"call":[" s "," args "," wrap ","val [] "]}," Ruby26Parser _reduce_414":{"type":"method","name":"_reduce_414","children":[],"call":[" args "," lexer command_start= "," lexer "]}," Ruby26Parser _reduce_413":{"type":"method","name":"_reduce_413","children":[],"call":[" lexer command_start= "," lexer "," args "]}," Ruby26Parser _reduce_412":{"type":"method","name":"_reduce_412","children":[],"call":[" args "," s line "," lexer lineno "," lexer "," s "]}," Ruby26Parser _reduce_411":{"type":"method","name":"_reduce_411","children":[],"call":[" args "]}," Ruby26Parser _reduce_410":{"type":"method","name":"_reduce_410","children":[],"call":[" args "," lexer command_start= "," lexer "]}," Ruby26Parser _reduce_409":{"type":"method","name":"_reduce_409","children":[],"call":[" args "," s line "," lexer lineno "," lexer "," s "]}," Ruby26Parser _reduce_408":{"type":"method","name":"_reduce_408","children":[],"call":[" args "]}," Ruby26Parser _reduce_407":{"type":"method","name":"_reduce_407","children":[],"call":[" args "," args << "," lexer command_start= "," lexer "]}," Ruby26Parser _reduce_406":{"type":"method","name":"_reduce_406","children":[],"call":[" args "]}," Ruby26Parser _reduce_405":{"type":"method","name":"_reduce_405","children":[],"call":[" args "," args << "]}," Ruby26Parser _reduce_404":{"type":"method","name":"_reduce_404","children":[],"call":[" args "]}," Ruby26Parser _reduce_403":{"type":"method","name":"_reduce_403","children":[],"call":[" args "]}," Ruby26Parser _reduce_402":{"type":"method","name":"_reduce_402","children":[],"call":[" args "]}," Ruby26Parser _reduce_401":{"type":"method","name":"_reduce_401","children":[],"call":[" args "]}," Ruby26Parser _reduce_400":{"type":"method","name":"_reduce_400","children":[],"call":[" args "]}," Ruby26Parser _reduce_399":{"type":"method","name":"_reduce_399","children":[],"call":[" args ","result line "," call_args "," lexer lineno "," lexer "," args << "," args  line "," call_args  line "," args <<  line ","result  lexer lineno  "," lexer  lexer lineno no "]}," Ruby26Parser _reduce_398":{"type":"method","name":"_reduce_398","children":[],"call":[" args "," call_args "]}," Ruby26Parser _reduce_397":{"type":"method","name":"_reduce_397","children":[],"call":[" args "," call_args ","result line "," lexer lineno "," lexer "," args  line "," call_args  line ","result  lexer lineno  "," lexer  lexer lineno no "]}," Ruby26Parser _reduce_395":{"type":"method","name":"_reduce_395","children":[],"call":[" args "," call_args "," block_var "]}," Ruby26Parser _reduce_394":{"type":"method","name":"_reduce_394","children":[],"call":[" call_args "," block_var "," args "]}," Ruby26Parser _reduce_393":{"type":"method","name":"_reduce_393","children":[],"call":[" call_args "," block_var "," args "]}," Ruby26Parser _reduce_392":{"type":"method","name":"_reduce_392","children":[],"call":[" call_args "," block_var "," args "]}," Ruby26Parser _reduce_391":{"type":"method","name":"_reduce_391","children":[],"call":[" call_args "," block_var ","result line "," args "," call_args  line "," block_var  line "," args  line "]}," Ruby26Parser _reduce_390":{"type":"method","name":"_reduce_390","children":[],"call":[" block_var "," call_args "]}," Ruby26Parser _reduce_389":{"type":"method","name":"_reduce_389","children":[],"call":[" block_var ","(str \"*\") to_sym "," call_args "," args "]}," Ruby26Parser _reduce_388":{"type":"method","name":"_reduce_388","children":[],"call":[" block_var ","(str \"*\") to_sym "," call_args ","result line "," block_var  line "," call_args  line "]}," Ruby26Parser _reduce_387":{"type":"method","name":"_reduce_387","children":[],"call":[" block_var ","(str \"*\") to_sym ","result line "," lexer lineno "," lexer "," args "," call_args "," block_var  line "," args  line "," call_args  line "]}," Ruby26Parser _reduce_386":{"type":"method","name":"_reduce_386","children":[],"call":[" block_var "," list_append ","val [] ","(str \"*\") to_sym ","result line "," args "," call_args "," block_var  line "," list_append  line "," args  line "," call_args  line "]}," Ruby26Parser _reduce_385":{"type":"method","name":"_reduce_385","children":[],"call":[" block_var ","(str \"*\") to_sym "," s line "," lexer lineno "," lexer "," s "," call_args "]}," Ruby26Parser _reduce_384":{"type":"method","name":"_reduce_384","children":[],"call":[" block_var ","(str \"*\") to_sym ","val [] "," list_append ","result line "," lexer lineno "," lexer "," args "," block_var  line ","val []  line "," list_append  line "," args  line "]}," Ruby26Parser _reduce_383":{"type":"method","name":"_reduce_383","children":[],"call":[" block_var ","(str \"*\") to_sym "," s line "," lexer lineno "," lexer "," s ","result line "," args "," block_var  line "," s line  line "," args  line "]}," Ruby26Parser _reduce_382":{"type":"method","name":"_reduce_382","children":[],"call":[" block_var "," list_append ","val [] ","val [] delete_at ","val [] [] nil? ","val [] [] "]}," Ruby26Parser _reduce_381":{"type":"method","name":"_reduce_381","children":[],"call":[" list_append ","val [] "," s "," block_var "]}," Ruby26Parser _reduce_380":{"type":"method","name":"_reduce_380","children":[],"call":[" s ","val [] ","val [] delete_at ","val [] [] nil? ","val [] [] "," list_append "," block_var "]}," Ruby26Parser _reduce_379":{"type":"method","name":"_reduce_379","children":[],"call":["val [] "," s line "," lexer lineno "," lexer "," s "," block_var "]}," Ruby26Parser _reduce_377":{"type":"method","name":"_reduce_377","children":[],"call":["val [] delete_at ","val [] ","val [] [] nil? ","val [] [] "," list_append "]}," Ruby26Parser _reduce_375":{"type":"method","name":"_reduce_375","children":[],"call":["val [] "]}," Ruby26Parser _reduce_373":{"type":"method","name":"_reduce_373","children":[],"call":[" s ","val [] ","val [] delete_at ","val [] [] nil? ","val [] [] "]}," Ruby26Parser _reduce_347":{"type":"method","name":"_reduce_347","children":[],"call":[" value_expr ","val [] "," s "," lexer comments "," lexer "," in_single "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," new_defs "," s line "]}," Ruby26Parser _reduce_346":{"type":"method","name":"_reduce_346","children":[],"call":[" s "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," lexer cmdarg stack dup "," lexer lineno "," lexer lex_state= "," env extend "," env "," in_single "," s line "," value_expr ","val [] "]}," Ruby26Parser _reduce_345":{"type":"method","name":"_reduce_345","children":[],"call":[" s "," lexer lex_state= "," lexer "," comments push "," lexer comments "," comments "," in_single "," in_def= "," env unextend "," env "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," new_defs "," s line "]}," Ruby26Parser _reduce_344":{"type":"method","name":"_reduce_344","children":[],"call":[" s "," lexer comments "," lexer "," in_def= "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," new_defn ","val [] "," comments push "," comments "," lexer lex_state= ","EXPR_ENDFN  | "," lexer cond push "," lexer cond "," lexer cmdarg push "," env extend "," in_single "," lexer lineno "," in_def "," s line "]}," Ruby26Parser _reduce_343":{"type":"method","name":"_reduce_343","children":[],"call":[" s "," lexer comments "," lexer "," in_single "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg ","result [] line ","result [] "," new_defs ","val [] "," lexer lineno "," lexer lex_state= "," s line "," value_expr "," s  [] line "," new_defs  [] line "," lexer lineno  [] line "," s line  [] line "," value_expr  [] line "," s  [] "," new_defs  [] "," lexer lineno  [] "," s line  [] "," value_expr  [] "]}," Ruby26Parser _reduce_342":{"type":"method","name":"_reduce_342","children":[],"call":[" lexer comments "," lexer "," in_single "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg ","result [] line ","result [] "," new_defs ","val [] "," lexer cmdarg stack dup "," lexer lineno "," lexer lex_state= "," env extend "," in_def= "," comments push "," comments "," in_def "," lexer cmdarg pop "," lexer cond pop "," lexer cond "," new_defn "," s line "," s "," new_defs  [] line "," new_defn  [] line "," s line  [] line "," new_defs  [] "," new_defn  [] "," s line  [] "," val [] = "," val []  "]}," Ruby26Parser _reduce_341":{"type":"method","name":"_reduce_341","children":[],"call":[" lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," lexer cmdarg stack dup "," lexer lineno "," lexer lex_state= "," env extend "," env "," in_single "," comments push "," lexer comments "," comments "," env unextend "," new_module "," lexer ignore_body_comments "," in_def= "," lexer cmdarg pop "," lexer cond pop "," lexer cond "," new_defs ","val delete_at "," s line "," s "]}," Ruby26Parser _reduce_340":{"type":"method","name":"_reduce_340","children":[],"call":[" lexer lex_state= "," lexer "," comments push "," lexer comments "," comments "," in_def= "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," new_defn ","val [] "," env extend "," yyerror "," in_single > "," in_single "," in_def "," lexer cond push "," lexer cond "," lexer cmdarg push ","EXPR_ENDFN  | "," s line "," s "]}," Ruby26Parser _reduce_339":{"type":"method","name":"_reduce_339","children":[],"call":[" lexer comments "," lexer "," in_def= "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," new_defn ","val [] "," env extend "," comments push "," comments "," lexer cmdarg stack dup "," in_def "," lexer lineno "," new_module "," lexer lex_state= "," s line "," s "]}," Ruby26Parser _reduce_338":{"type":"method","name":"_reduce_338","children":[],"call":[" lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," env extend "," env "," in_def= "," comments push "," lexer comments "," comments "," lexer cmdarg stack dup "," in_def "," env unextend "," new_module "," new_sclass "," yyerror "," in_single > "," in_single "," lexer ignore_body_comments "," lexer cmdarg pop "," lexer cond pop "," lexer cond "," new_defn "," new_defs ","val delete_at "]}," Ruby26Parser _reduce_337":{"type":"method","name":"_reduce_337","children":[],"call":[" lexer comments "," lexer "," env unextend "," env "," new_module "," env extend "," yyerror "," in_single > "," in_single "," in_def "," comments push "," comments "," in_single= "," lexer lineno "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," in_def= "," lexer lex_state= ","EXPR_ENDFN  | "]}," Ruby26Parser _reduce_336":{"type":"method","name":"_reduce_336","children":[],"call":[" env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," lexer "," comments "," lexer lineno "," in_def= "," env unextend "," new_sclass "," lexer ignore_body_comments "," new_module "," lexer lex_state= "]}," Ruby26Parser _reduce_335":{"type":"method","name":"_reduce_335","children":[],"call":[" lexer lineno "," lexer "," lexer comments "," env unextend "," env "," new_sclass "," env extend "," in_single= "," in_single "," yyerror "," in_single > "," in_def "," lexer ignore_body_comments "," in_def= "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," new_defn "]}," Ruby26Parser _reduce_334":{"type":"method","name":"_reduce_334","children":[],"call":[" lexer comments "," lexer "," env unextend "," env "," new_sclass "," env extend "," in_single= "," in_single "," new_class "," in_def= "," in_def "," lexer lineno "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "]}," Ruby26Parser _reduce_333":{"type":"method","name":"_reduce_333","children":[],"call":[" env extend "," env "," in_single= "," in_single "," in_def= "," in_def "," yyerror "," in_single > "," comments push "," lexer comments "," lexer "," comments "," lexer lineno "," lexer ignore_body_comments "," env unextend "," new_sclass "," new_module "]}," Ruby26Parser _reduce_332":{"type":"method","name":"_reduce_332","children":[],"call":[" in_def= "," in_def "," lexer lineno "," lexer "," lexer comments "," env unextend "," env "," new_class "," env extend "," in_single= "," in_single "," yyerror "," in_single > "]}," Ruby26Parser _reduce_331":{"type":"method","name":"_reduce_331","children":[],"call":[" lexer lineno "," lexer "," lexer comments "," env unextend "," env "," new_class "," new_for "," env extend "," yyerror "," in_single > "," in_single "," in_def "," comments push "," comments "," in_def= "," lexer ignore_body_comments "," new_sclass "]}," Ruby26Parser _reduce_330":{"type":"method","name":"_reduce_330","children":[],"call":[" lexer comments "," lexer "," env unextend "," env "," new_class "," env extend "," yyerror "," in_single > "," in_single "," in_def "," comments push "," comments "," new_case "," lexer lineno "," in_single= "]}," Ruby26Parser _reduce_329":{"type":"method","name":"_reduce_329","children":[],"call":[" env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," lexer "," comments "," lexer lineno "," new_case "," new_for "," lexer ignore_body_comments "," env unextend "," new_class "," in_def= "]}," Ruby26Parser _reduce_328":{"type":"method","name":"_reduce_328","children":[],"call":[" lexer lineno "," lexer "," new_for "," new_until "," new_case "," env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," lexer ignore_body_comments "," env unextend "," new_class "]}," Ruby26Parser _reduce_327":{"type":"method","name":"_reduce_327","children":[],"call":[" new_for "," new_case "," new_while "," lexer lineno "," lexer "," env extend "," env "," yyerror "," in_single > "," in_single "," in_def "]}," Ruby26Parser _reduce_326":{"type":"method","name":"_reduce_326","children":[],"call":[" new_case "," new_if "," new_until "," new_for "]}," Ruby26Parser _reduce_325":{"type":"method","name":"_reduce_325","children":[],"call":[" new_case "," new_until "," new_if "," new_while "]}," Ruby26Parser _reduce_324":{"type":"method","name":"_reduce_324","children":[],"call":[" new_until "," new_while ","val [] "," new_if "," new_case "]}," Ruby26Parser _reduce_323":{"type":"method","name":"_reduce_323","children":[],"call":[" new_while "," new_if ","iter insert "," block_dup_check ","val [] "," new_until "]}," Ruby26Parser _reduce_322":{"type":"method","name":"_reduce_322","children":[],"call":[" new_if ","val [] "," new_while "]}," Ruby26Parser _reduce_321":{"type":"method","name":"_reduce_321","children":[],"call":[" new_if ","val [] ","iter insert "," block_dup_check "]}," Ruby26Parser _reduce_320":{"type":"method","name":"_reduce_320","children":[],"call":["val [] ","iter insert "," block_dup_check "," debug20 "," new_if "]}," Ruby26Parser _reduce_319":{"type":"method","name":"_reduce_319","children":[],"call":["iter insert "," block_dup_check ","val [] "," new_call "]}," Ruby26Parser _reduce_317":{"type":"method","name":"_reduce_317","children":[],"call":["call line= ","iter line ","iter insert ","val [] "," debug20 "," new_yield "," new_call "]}," Ruby26Parser _reduce_316":{"type":"method","name":"_reduce_316","children":[],"call":[" debug20 "," s ","val [] "," new_yield "," s line ","iter insert "]}," Ruby26Parser _reduce_315":{"type":"method","name":"_reduce_315","children":[],"call":[" s ","val [] "," new_yield "," debug "]}," Ruby26Parser _reduce_314":{"type":"method","name":"_reduce_314","children":[],"call":[" s ","val [] "," new_yield "," s line "," new_call "]}," Ruby26Parser _reduce_313":{"type":"method","name":"_reduce_313","children":[],"call":[" new_yield "," new_hash ","val [] "," s line "," s "]}," Ruby26Parser _reduce_312":{"type":"method","name":"_reduce_312","children":[],"call":[" new_yield ","val [] "," lexer lineno "," lexer "," s line "," s "," new_yield line "]}," Ruby26Parser _reduce_311":{"type":"method","name":"_reduce_311","children":[],"call":[" new_yield ","val [] "," s ","result line ","result sexp_type= "," new_hash "," new_yield line "," new_yield  line "," s  line "," new_hash  line "," new_yield line  line "," new_yield  sexp_type= "," s  sexp_type= "," new_hash  sexp_type= "," new_yield line  sexp_type= "]}," Ruby26Parser _reduce_310":{"type":"method","name":"_reduce_310","children":[],"call":[" s "," new_hash "," lexer lineno "," lexer "," new_yield ","val [] "," new_yield line "]}," Ruby26Parser _reduce_309":{"type":"method","name":"_reduce_309","children":[],"call":[" new_hash "," lexer lineno "," lexer "," s line "," s ","id to_sym ","result line ","result sexp_type= "," new_hash  line "," lexer lineno  line "," s line  line "," new_hash  sexp_type= "," lexer lineno  sexp_type= "," s line  sexp_type= "]}," Ruby26Parser _reduce_308":{"type":"method","name":"_reduce_308","children":[],"call":[" lexer lineno "," lexer ","result sexp_type= "," s ","val [] "," s line ","expr line ","id to_sym "," new_hash "," lexer lineno  sexp_type= "," s line  sexp_type= "," new_hash  sexp_type= "]}," Ruby26Parser _reduce_307":{"type":"method","name":"_reduce_307","children":[],"call":["result sexp_type= "," s ","val [] ","val [] to_sym ","result paren= "," s line "," lexer lineno "," lexer ","id to_sym "," s  sexp_type= "," s line  sexp_type= "," lexer lineno  sexp_type= "," s  paren= "," s line  paren= "," lexer lineno  paren= "]}," Ruby26Parser _reduce_306":{"type":"method","name":"_reduce_306","children":[],"call":[" s ","val [] to_sym ","val [] "," lexer cmdarg restore "," lexer cmdarg "," lexer "," warning "," s line ","expr line ","id to_sym ","result line ","result sexp_type= ","result line_max= "," s  line "," s line  line "," s  sexp_type= "," s line  sexp_type= "," s  line_max= "," s line  line_max= "]}," Ruby26Parser _reduce_305":{"type":"method","name":"_reduce_305","children":[],"call":[" s ","val [] to_sym ","val [] ","result paren= "," lexer lex_state= "," lexer "," s line "," lexer lineno "," s  paren= "," lexer lineno  paren= "]}," Ruby26Parser _reduce_304":{"type":"method","name":"_reduce_304","children":[],"call":["result paren= "," s ","val [] "," lexer cmdarg restore "," lexer cmdarg "," lexer "," warning "," lexer cmdarg store "," s line ","id to_sym "," wrap "," lexer cmdarg store  paren= "," s line  paren= "," wrap  paren= "]}," Ruby26Parser _reduce_303":{"type":"method","name":"_reduce_303","children":[],"call":[" lexer cmdarg restore "," lexer cmdarg "," lexer "," warning "," lexer lex_state= "," s line "," s ","expr line ","id to_sym "]}," Ruby26Parser _reduce_302":{"type":"method","name":"_reduce_302","children":[],"call":[" lexer lex_state= "," lexer "," lexer cmdarg store "," lexer cmdarg "," lexer lineno "," s line "," s ","result paren= "," lexer cmdarg store  paren= "," lexer lineno  paren= "," s line  paren= "]}," Ruby26Parser _reduce_301":{"type":"method","name":"_reduce_301","children":[],"call":[" lexer cmdarg store "," lexer cmdarg "," lexer "," debug20 ","result line= ","val [] "," s "," lexer lineno "," lexer lex_state= "," lexer cmdarg store  line= "," s  line= "," lexer lineno  line= "]}," Ruby26Parser _reduce_300":{"type":"method","name":"_reduce_300","children":[],"call":[" debug20 ","result line= ","val [] "," s "," lexer lineno "," lexer "," new_begin "," lexer cmdarg pop "," lexer cmdarg "," lexer lex_state= "," s  line= "," lexer lineno  line= "," new_begin  line= "]}," Ruby26Parser _reduce_299":{"type":"method","name":"_reduce_299","children":[],"call":["result line= ","val [] "," s "," lexer lineno "," lexer "," new_call ","msg to_sym "," lexer cmdarg push "," lexer cmdarg "," s line "," s  line= "," lexer lineno  line= "," new_call  line= "," s line  line= "]}," Ruby26Parser _reduce_298":{"type":"method","name":"_reduce_298","children":[],"call":[" lexer lineno "," lexer "," new_call ","val [] to_sym ","val [] ","msg to_sym "," lexer lex_state= "]}," Ruby26Parser _reduce_297":{"type":"method","name":"_reduce_297","children":[],"call":[" new_call ","val [] to_sym ","val [] "," new_begin "," lexer cmdarg pop "," lexer cmdarg "," lexer "]}," Ruby26Parser _reduce_286":{"type":"method","name":"_reduce_286","children":[],"call":[" s ","val [] "," arg_concat ","val [] << "]}," Ruby26Parser _reduce_285":{"type":"method","name":"_reduce_285","children":[],"call":[" arg_concat ","val [] ","val [] << "," new_masgn_arg "]}," Ruby26Parser _reduce_284":{"type":"method","name":"_reduce_284","children":[],"call":["val [] << ","val [] "," new_masgn_arg "," s line ","arg line "," s "]}," Ruby26Parser _reduce_283":{"type":"method","name":"_reduce_283","children":[],"call":[" new_masgn_arg ","val [] "," list_append "," s line "," s "," arg_concat "]}," Ruby26Parser _reduce_282":{"type":"method","name":"_reduce_282","children":[],"call":[" new_masgn_arg ","val [] "," list_append "," s "," lexer lineno "," lexer "," s line ","val [] << "," lexer  lexer lineno no "," s  lexer lineno  "]}," Ruby26Parser _reduce_281":{"type":"method","name":"_reduce_281","children":[],"call":[" list_append "," s ","val [] "," new_masgn_arg "]}," Ruby26Parser _reduce_280":{"type":"method","name":"_reduce_280","children":[],"call":[" list_append ","val [] "," s "," s line ","arg line "," new_masgn_arg "]}," Ruby26Parser _reduce_279":{"type":"method","name":"_reduce_279","children":[],"call":[" s ","val [] "," s line ","arg line "," lexer lineno "," lexer "," list_append "," s  lexer lineno  ","arg  lexer lineno  "," lexer  lexer lineno no "]}," Ruby26Parser _reduce_278":{"type":"method","name":"_reduce_278","children":[],"call":[" s ","val [] "," list_append "]}," Ruby26Parser _reduce_276":{"type":"method","name":"_reduce_276","children":[],"call":["val [] "," s "," s line ","arg line "," lexer lineno "," lexer "]}," Ruby26Parser _reduce_275":{"type":"method","name":"_reduce_275","children":[],"call":[" s ","val [] "," lexer cmdarg restore "," lexer cmdarg "," lexer "," lexer cmdarg push "," lexer cmdarg pop ","(sym :tLBRACE_ARG) include? "]}," Ruby26Parser _reduce_274":{"type":"method","name":"_reduce_274","children":[],"call":["val [] "," lexer cmdarg restore "," lexer cmdarg "," lexer "," lexer cmdarg store "," lexer cmdarg push "," lexer cmdarg pop ","(sym :tLPAREN) include? "," last_token_type first "," last_token_type "]}," Ruby26Parser _reduce_273":{"type":"method","name":"_reduce_273","children":[],"call":[" lexer cmdarg store "," lexer cmdarg "," lexer "," call_args "," s line ","arg line "," s "]}," Ruby26Parser _reduce_272":{"type":"method","name":"_reduce_272","children":[],"call":[" call_args "," arg_blk_pass ","val [] "," array_to_hash "," lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg pop ","(sym :tLBRACE_ARG) include? "]}," Ruby26Parser _reduce_271":{"type":"method","name":"_reduce_271","children":[],"call":[" arg_blk_pass ","val [] "," call_args "," array_to_hash "," lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg pop ","(sym :tLPAREN) include? "," last_token_type first "," last_token_type "]}," Ruby26Parser _reduce_270":{"type":"method","name":"_reduce_270","children":[],"call":[" arg_blk_pass ","val [] "," call_args "," array_to_hash "]}," Ruby26Parser _reduce_269":{"type":"method","name":"_reduce_269","children":[],"call":[" arg_blk_pass ","val [] "," call_args "," warning "," array_to_hash "]}," Ruby26Parser _reduce_268":{"type":"method","name":"_reduce_268","children":[],"call":[" call_args "," warning "," args "," array_to_hash ","val [] "]}," Ruby26Parser _reduce_267":{"type":"method","name":"_reduce_267","children":[],"call":[" args "," array_to_hash ","val [] "," call_args "]}," Ruby26Parser _reduce_266":{"type":"method","name":"_reduce_266","children":[],"call":[" args "," array_to_hash ","val [] "," call_args "," warning "]}," Ruby26Parser _reduce_265":{"type":"method","name":"_reduce_265","children":[],"call":[" args ","val [] "," array_to_hash "]}," Ruby26Parser _reduce_264":{"type":"method","name":"_reduce_264","children":[],"call":["val [] "," args "," array_to_hash "]}," Ruby26Parser _reduce_263":{"type":"method","name":"_reduce_263","children":[],"call":["val [] "," args "]}," Ruby26Parser _reduce_260":{"type":"method","name":"_reduce_260","children":[],"call":["val [] "," new_rescue "," new_resbody "," s "," remove_begin "," value_expr "," s line "," new_ remove_begin  "," new_res value_expr  "]}," Ruby26Parser _reduce_259":{"type":"method","name":"_reduce_259","children":[],"call":[" new_rescue "," new_resbody "," s "," remove_begin "," value_expr "," new_ remove_begin  "," new_res value_expr  "]}," Ruby26Parser _reduce_257":{"type":"method","name":"_reduce_257","children":[],"call":[" args "," array_to_hash ","val [] "," new_rescue "," new_resbody "," s line "," s "," remove_begin "," value_expr "," new_ remove_begin  "," new_res value_expr  "]}," Ruby26Parser _reduce_256":{"type":"method","name":"_reduce_256","children":[],"call":[" args "," array_to_hash ","val [] "]}," Ruby26Parser _reduce_255":{"type":"method","name":"_reduce_255","children":[],"call":[" args ","val [] "," array_to_hash "]}," Ruby26Parser _reduce_253":{"type":"method","name":"_reduce_253","children":[],"call":[" value_expr ","val [] "," new_call "," argl ","op to_sym "," warn "," args "]}," Ruby26Parser _reduce_252":{"type":"method","name":"_reduce_252","children":[],"call":[" new_call "," argl ","op to_sym "," warn "]}," Ruby26Parser _reduce_251":{"type":"method","name":"_reduce_251","children":[],"call":[" new_call "," argl ","op to_sym "," value_expr ","val [] "]}," Ruby26Parser _reduce_245":{"type":"method","name":"_reduce_245","children":[],"call":[" s ","val [] "," s line "]}," Ruby26Parser _reduce_244":{"type":"method","name":"_reduce_244","children":[],"call":[" s ","val [] "," logical_op "]}," Ruby26Parser _reduce_243":{"type":"method","name":"_reduce_243","children":[],"call":[" logical_op ","val [] "," s line ","c line "," s "]}," Ruby26Parser _reduce_242":{"type":"method","name":"_reduce_242","children":[],"call":[" logical_op ","val [] "," new_call "," argl ","val []= "," value_expr "," s line "," s "]}," Ruby26Parser _reduce_241":{"type":"method","name":"_reduce_241","children":[],"call":[" new_call "," argl ","val [] ","val []= "," value_expr "," logical_op "]}," Ruby26Parser _reduce_240":{"type":"method","name":"_reduce_240","children":[],"call":[" new_call "," argl ","val [] ","val []= "," value_expr "," logical_op "]}," Ruby26Parser _reduce_239":{"type":"method","name":"_reduce_239","children":[],"call":[" new_call "," value_expr ","val [] ","result line ","arg line "," argl ","val []= "," new_call  line "]}," Ruby26Parser _reduce_238":{"type":"method","name":"_reduce_238","children":[],"call":[" new_call ","val [] "," s "," new_match "," s line ","lhs line "," argl ","val []= "," value_expr "]}," Ruby26Parser _reduce_237":{"type":"method","name":"_reduce_237","children":[],"call":[" s "," new_match ","val [] "," new_call "," value_expr "]}," Ruby26Parser _reduce_236":{"type":"method","name":"_reduce_236","children":[],"call":[" new_match ","val [] "," new_call "," argl ","result line ","arg line "," new_match  line "," new_call  line "]}," Ruby26Parser _reduce_235":{"type":"method","name":"_reduce_235","children":[],"call":[" new_call "," argl ","val [] "," s line ","lhs line "," s "," new_match "]}," Ruby26Parser _reduce_234":{"type":"method","name":"_reduce_234","children":[],"call":[" new_call "," argl ","val [] "," new_match "]}," Ruby26Parser _reduce_233":{"type":"method","name":"_reduce_233","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby26Parser _reduce_231":{"type":"method","name":"_reduce_231","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby26Parser _reduce_230":{"type":"method","name":"_reduce_230","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby26Parser _reduce_229":{"type":"method","name":"_reduce_229","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby26Parser _reduce_228":{"type":"method","name":"_reduce_228","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby26Parser _reduce_227":{"type":"method","name":"_reduce_227","children":[],"call":[" new_call ","val [] "," argl "]}," Ruby26Parser _reduce_226":{"type":"method","name":"_reduce_226","children":[],"call":[" new_call ","val [] "," argl "," s "," s line "," lexer lineno "," lexer "]}," Ruby26Parser _reduce_225":{"type":"method","name":"_reduce_225","children":[],"call":[" new_call "," argl ","val [] "," s "]}," Ruby26Parser _reduce_224":{"type":"method","name":"_reduce_224","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby26Parser _reduce_223":{"type":"method","name":"_reduce_223","children":[],"call":[" new_call "," argl ","val [] "," s line "," s "]}," Ruby26Parser _reduce_222":{"type":"method","name":"_reduce_222","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby26Parser _reduce_221":{"type":"method","name":"_reduce_221","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby26Parser _reduce_220":{"type":"method","name":"_reduce_220","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby26Parser _reduce_219":{"type":"method","name":"_reduce_219","children":[],"call":[" new_call "," argl ","val [] "," s "," s line ","v1 line "]}," Ruby26Parser _reduce_218":{"type":"method","name":"_reduce_218","children":[],"call":[" s ","val [] "," s line ","v1 line "," new_call "," argl "]}," Ruby26Parser _reduce_217":{"type":"method","name":"_reduce_217","children":[],"call":[" s ","val [] ","v2 last ","v1 last ","Integer  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type "," s line ","v1 line "," new_call "," argl "]}," Ruby26Parser _reduce_216":{"type":"method","name":"_reduce_216","children":[],"call":[" s ","v2 last ","v1 last ","Integer  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type ","val [] "," s line ","v1 line "]}," Ruby26Parser _reduce_215":{"type":"method","name":"_reduce_215","children":[],"call":[" s ","v2 last ","v1 last ","Integer  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type ","val [] "," backref_assign_error "," new_op_asgn "," s line ","v1 line "," new_op_ new_op_asgn  "]}," Ruby26Parser _reduce_214":{"type":"method","name":"_reduce_214","children":[],"call":[" backref_assign_error "," new_op_asgn "," new_const_op_asgn "," s line "," s ","lhs to_sym ","v1 line ","v2 last ","v1 last ","Integer  === ","v2 sexp_type == ","v2 sexp_type ","v1 sexp_type == ","v1 sexp_type ","val [] "," new_op_ new_op_asgn  "," new_const_op_ new_op_asgn  "," s line  to_sym "]}," Ruby26Parser _reduce_213":{"type":"method","name":"_reduce_213","children":[],"call":[" raise ","not yet: %p % "," lexer lineno "," lexer "," s line ","v1 line "," s ","v2 last ","v1 last ","Integer  === ","v2 sexp_type == ","v2 sexp_type ","v1 sexp_type == ","v1 sexp_type ","val [] "]}," Ruby26Parser _reduce_212":{"type":"method","name":"_reduce_212","children":[],"call":[" raise ","not yet: %p % "," new_const_op_asgn "," s line ","lhs1 line "," s ","lhs2 to_sym "," backref_assign_error "," new_op_asgn "," new_const_op_ new_op_asgn  "," s line 1 line "," s line 2 to_sym "," new_op_ new_op_asgn  "]}," Ruby26Parser _reduce_211":{"type":"method","name":"_reduce_211","children":[],"call":[" s ","val [] to_sym ","val [] "," s line ","lhs line ","op to_sym ","id to_sym "," new_const_op_asgn ","lhs to_sym "," wrap "," s line  line "," wrap  line "," s line  to_sym "," wrap  to_sym "]}," Ruby26Parser _reduce_210":{"type":"method","name":"_reduce_210","children":[],"call":[" new_op_asgn2 "," new_const_op_asgn "," s line ","lhs1 line "," s ","lhs2 to_sym "," s line 1 line "," s line 2 to_sym "]}," Ruby26Parser _reduce_209":{"type":"method","name":"_reduce_209","children":[],"call":[" new_op_asgn2 "," s line ","lhs line "," s ","op to_sym ","id to_sym "]}," Ruby26Parser _reduce_208":{"type":"method","name":"_reduce_208","children":[],"call":[" s ","val [] ","val [] to_sym ","val [] sexp_type= "," new_op_asgn1 "," new_op_asgn2 "]}," Ruby26Parser _reduce_207":{"type":"method","name":"_reduce_207","children":[],"call":[" new_op_asgn "," new_op_asgn2 "]}," Ruby26Parser _reduce_206":{"type":"method","name":"_reduce_206","children":[],"call":[" new_assign ","val [] "," new_op_asgn1 "]}," Ruby26Parser _reduce_133":{"type":"method","name":"_reduce_133","children":[],"call":[" new_undef ","val [] "]}," Ruby26Parser _reduce_132":{"type":"method","name":"_reduce_132","children":[],"call":[" lexer lex_state= "," lexer "," new_undef ","val [] "]}," Ruby26Parser _reduce_131":{"type":"method","name":"_reduce_131","children":[],"call":[" new_undef ","val [] "," lexer lex_state= "," lexer "]}," Ruby26Parser _reduce_129":{"type":"method","name":"_reduce_129","children":[],"call":[" s ","val [] to_sym ","val [] "," s line "," lexer lineno "," lexer ","id to_sym "]}," Ruby26Parser _reduce_126":{"type":"method","name":"_reduce_126","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby26Parser _reduce_125":{"type":"method","name":"_reduce_125","children":[],"call":["val [] "," lexer lex_state= "," lexer "]}," Ruby26Parser _reduce_121":{"type":"method","name":"_reduce_121","children":[],"call":[" s ","val [] to_sym ","val [] ","result line ","pval line ","name to_sym ","id to_sym "," s  line "]}," Ruby26Parser _reduce_120":{"type":"method","name":"_reduce_120","children":[],"call":["val [] to_sym ","val [] "," s line "," s ","name to_sym "," wrap "]}," Ruby26Parser _reduce_119":{"type":"method","name":"_reduce_119","children":[],"call":[" s ","val [] to_sym ","val [] "," s line "," lexer lineno "," lexer ","name to_sym "]}," Ruby26Parser _reduce_117":{"type":"method","name":"_reduce_117","children":[],"call":[" yyerror "," backref_assign_error ","val [] "]}," Ruby26Parser _reduce_116":{"type":"method","name":"_reduce_116","children":[],"call":[" backref_assign_error ","val [] "," s line "," s ","id to_sym "," yyerror "," debug "," in_single > "," in_single "," in_def "]}," Ruby26Parser _reduce_115":{"type":"method","name":"_reduce_115","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," s line ","id to_sym "," lexer lineno "," lexer ","expr line "," debug ","va lexer lineno  [] to_sym ","vaexpr line  [] to_sym ","va lexer lineno  [] ","vaexpr line  [] "," in_sing lexer lineno e > "," in_singexpr line e > "," in_sing lexer lineno e "," in_singexpr line e "," s  lexer lineno ine "," s expr line ine ","  lexer lineno exer  lexer lineno ineno "," expr line exer expr line ineno ","  lexer lineno exer "," expr line exer ","expr  lexer lineno ine ","expr expr line ine "]}," Ruby26Parser _reduce_114":{"type":"method","name":"_reduce_114","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," s line ","id to_sym ","expr line "," new_attrasgn ","vaexpr line  [] to_sym ","vaexpr line  [] "," in_singexpr line e > "," in_singexpr line e "," s expr line ine ","expr expr line ine "]}," Ruby26Parser _reduce_113":{"type":"method","name":"_reduce_113","children":[],"call":[" new_attrasgn ","val [] "]}," Ruby26Parser _reduce_112":{"type":"method","name":"_reduce_112","children":[],"call":[" s ","val [] "," new_attrasgn "]}," Ruby26Parser _reduce_111":{"type":"method","name":"_reduce_111","children":[],"call":[" new_attrasgn ","val [] "," aryset "]}," Ruby26Parser _reduce_110":{"type":"method","name":"_reduce_110","children":[],"call":[" aryset ","val [] "," debug "," assignable "]}," Ruby26Parser _reduce_109":{"type":"method","name":"_reduce_109","children":[],"call":[" debug20 "," assignable ","val [] ","result line= "," lexer lineno "," lexer "," assignable  line= ","result  lexer lineno = "," lexer  lexer lineno no "]}," Ruby26Parser _reduce_108":{"type":"method","name":"_reduce_108","children":[],"call":[" assignable ","val [] ","result line= "," lexer lineno "," lexer "," backref_assign_error "," assignable  line= ","result  lexer lineno = "," lexer  lexer lineno no "]}," Ruby26Parser _reduce_107":{"type":"method","name":"_reduce_107","children":[],"call":[" backref_assign_error ","val [] "," s line "," s ","id to_sym "," yyerror "," debug "," in_single > "," in_single "," in_def "]}," Ruby26Parser _reduce_106":{"type":"method","name":"_reduce_106","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," s line ","id to_sym "," lexer lineno "," lexer ","expr line "," debug ","va lexer lineno  [] to_sym ","vaexpr line  [] to_sym ","va lexer lineno  [] ","vaexpr line  [] "," in_sing lexer lineno e > "," in_singexpr line e > "," in_sing lexer lineno e "," in_singexpr line e "," s  lexer lineno ine "," s expr line ine ","  lexer lineno exer  lexer lineno ineno "," expr line exer expr line ineno ","  lexer lineno exer "," expr line exer ","expr  lexer lineno ine ","expr expr line ine "]}," Ruby26Parser _reduce_105":{"type":"method","name":"_reduce_105","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," s line ","id to_sym ","expr line "," new_attrasgn ","vaexpr line  [] to_sym ","vaexpr line  [] "," in_singexpr line e > "," in_singexpr line e "," s expr line ine ","expr expr line ine "]}," Ruby26Parser _reduce_104":{"type":"method","name":"_reduce_104","children":[],"call":[" new_attrasgn ","val [] "]}," Ruby26Parser _reduce_103":{"type":"method","name":"_reduce_103","children":[],"call":[" s ","val [] "," new_attrasgn "]}," Ruby26Parser _reduce_102":{"type":"method","name":"_reduce_102","children":[],"call":[" new_attrasgn ","val [] "," aryset "]}," Ruby26Parser _reduce_101":{"type":"method","name":"_reduce_101","children":[],"call":[" aryset ","val [] "," assignable "]}," Ruby26Parser _reduce_100":{"type":"method","name":"_reduce_100","children":[],"call":[" assignable ","val [] "]}," Ruby26Parser _reduce_99":{"type":"method","name":"_reduce_99","children":[],"call":[" assignable ","val [] "," list_append "]}," Ruby26Parser _reduce_98":{"type":"method","name":"_reduce_98","children":[],"call":[" list_append ","val [] "," s line ","item line "," s "]}," Ruby26Parser _reduce_97":{"type":"method","name":"_reduce_97","children":[],"call":[" s ","val [] "," s line ","item line ","val [] << ","val [] compact "]}," Ruby26Parser _reduce_96":{"type":"method","name":"_reduce_96","children":[],"call":["val [] << ","val [] compact ","val [] "," s line ","lhs line "," s "]}," Ruby26Parser _reduce_95":{"type":"method","name":"_reduce_95","children":[],"call":[" s ","val [] "," s line ","lhs line "]}," Ruby26Parser _reduce_94":{"type":"method","name":"_reduce_94","children":[],"call":["val [] "]}," Ruby26Parser _reduce_92":{"type":"method","name":"_reduce_92","children":[],"call":[" s ","val [] sexp_body ","val [] "," s line ","post sexp_body ","post line "," lexer lineno "," lexer ","vapost line  [] sexp_body ","va lexer lineno  [] sexp_body ","vapost line  [] ","va lexer lineno  [] "," s post line ine "," s  lexer lineno ine ","post post line ine ","post  lexer lineno ine "," post line exer post line ineno ","  lexer lineno exer  lexer lineno ineno "," post line exer ","  lexer lineno exer "]}," Ruby26Parser _reduce_91":{"type":"method","name":"_reduce_91","children":[],"call":[" s "," s line "," lexer lineno "," lexer ","ary line ","ary concat ","post sexp_body ","splat line ","node line "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer ","ary  lexer lineno ine "," s line  line "," s line  concat ","sp lexer lineno at  lexer lineno ine ","node  lexer lineno ine "]}," Ruby26Parser _reduce_90":{"type":"method","name":"_reduce_90","children":[],"call":[" s ","ary concat ","val [] sexp_body ","val [] "," s line ","ary line ","post sexp_body ","splat line ","node line "," s  concat "," s line  concat ","vanode line  [] sexp_body ","vanode line  [] "," s node line ine "," s  line "," s line  line ","ary node line ine ","spnode line at node line ine ","node node line ine "]}," Ruby26Parser _reduce_89":{"type":"method","name":"_reduce_89","children":[],"call":[" s ","val [] "," s line ","node line ","ary line ","ary concat ","post sexp_body "," list_append ","head line ","vanode line  [] "," s node line ine ","node node line ine "," s line  line "," list_append  line ","ary node line ine "," s line  concat "," list_append  concat "," node line ist_append ","head node line ine "]}," Ruby26Parser _reduce_88":{"type":"method","name":"_reduce_88","children":[],"call":[" s ","ary concat ","val [] sexp_body ","val [] "," list_append "," s line ","ary line ","post sexp_body ","head line ","head << "," list_append  concat ","vahead line  [] sexp_body ","vahead line  [] "," head line ist_append "," s head line ine "," list_append  line ","ary head line ine ","head head line ine "]}," Ruby26Parser _reduce_87":{"type":"method","name":"_reduce_87","children":[],"call":[" s ","val [] << ","val [] "," s line ","head << ","head line ","result line ","result concat ","ary2 sexp_body "," list_append ","splat line ","vahead line  [] << ","vahead line  [] "," s head line ine ","head head line ine "," s  line "," s line  line "," list_append  line ","resuhead line t head line ine "," s  concat "," s line  concat "," list_append  concat ","resuhead line t concat "," head line ist_append ","sphead line at head line ine "]}," Ruby26Parser _reduce_86":{"type":"method","name":"_reduce_86","children":[],"call":[" s ","result concat ","ary2 sexp_body "," list_append "," s line ","result line ","splat line ","head line ","head << ","tail line "," s  concat "," list_append  concat "," s line  concat "," s  line "," list_append  line "," s line  line "]}," Ruby26Parser _reduce_85":{"type":"method","name":"_reduce_85","children":[],"call":[" s ","val [] << ","val [] "," s line ","head line ","head << ","tail line ","lhs line ","lhs << ","rhs compact "]}," Ruby26Parser _reduce_84":{"type":"method","name":"_reduce_84","children":[],"call":[" s ","val [] << ","val [] compact ","val [] "," s line ","lhs line ","lhs << ","rhs compact ","head line "]}," Ruby26Parser _reduce_83":{"type":"method","name":"_reduce_83","children":[],"call":[" s ","val [] "," s line ","head line ","arg line ","vaarg line  [] "," s arg line ine ","head arg line ine ","arg arg line ine "]}," Ruby26Parser _reduce_82":{"type":"method","name":"_reduce_82","children":[],"call":[" s ","val [] "," s line ","arg line ","vaarg line  [] "," s arg line ine ","arg arg line ine "]}," Ruby26Parser _reduce_80":{"type":"method","name":"_reduce_80","children":[],"call":["val [] "]}," Ruby26Parser _reduce_78":{"type":"method","name":"_reduce_78","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last "," s val [] last  "]}," Ruby26Parser _reduce_77":{"type":"method","name":"_reduce_77","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last "," s val [] last  "]}," Ruby26Parser _reduce_76":{"type":"method","name":"_reduce_76","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last ","result line "," new_yield "," s val [] last  "," s line  line "," new_yield  line ","result val [] last  "]}," Ruby26Parser _reduce_75":{"type":"method","name":"_reduce_75","children":[],"call":[" new_yield ","val [] ","result line "," new_super "," new_yield  line "," new_super  line "]}," Ruby26Parser _reduce_74":{"type":"method","name":"_reduce_74","children":[],"call":[" new_super ","val [] ","block insert "," block_dup_check "," new_call ","msg to_sym "," new_ new_call  "]}," Ruby26Parser _reduce_73":{"type":"method","name":"_reduce_73","children":[],"call":["block insert "," block_dup_check "," new_call ","msg to_sym ","result line ","id to_sym "," new_ new_call  "," new_call  line "]}," Ruby26Parser _reduce_72":{"type":"method","name":"_reduce_72","children":[],"call":[" new_call ","val [] ","val [] to_sym ","block insert "," block_dup_check ","msg to_sym "," new_ new_call  "]}," Ruby26Parser _reduce_71":{"type":"method","name":"_reduce_71","children":[],"call":["block insert "," block_dup_check "," new_call ","val [] ","msg to_sym ","result line ","lhs line ","op to_sym "," new_ new_call  "," new_call  line "]}," Ruby26Parser _reduce_70":{"type":"method","name":"_reduce_70","children":[],"call":[" new_call ","val [] ","val [] to_sym ","op to_sym ","result insert "," block_dup_check ","call concat ","args sexp_body "," new_call  insert ","call concat  insert "]}," Ruby26Parser _reduce_69":{"type":"method","name":"_reduce_69","children":[],"call":["result insert ","val [] "," block_dup_check ","val [] concat ","val [] sexp_body ","call concat ","args sexp_body ","val [] concat  insert ","call concat  insert "]}," Ruby26Parser _reduce_68":{"type":"method","name":"_reduce_68","children":[],"call":["val [] concat ","val [] sexp_body ","val [] ","call concat ","args sexp_body "," new_call line "," new_call ","msg to_sym "]}," Ruby26Parser _reduce_67":{"type":"method","name":"_reduce_67","children":[],"call":[" new_call ","val [] to_sym ","val [] "," new_call line "," lexer lineno "," lexer ","msg to_sym ","result line "," new_call  line "," new_call line  line "]}," Ruby26Parser _reduce_66":{"type":"method","name":"_reduce_66","children":[],"call":["result line= "," lexer lineno "," lexer "," lexer lineno  line= "]}," Ruby26Parser _reduce_65":{"type":"method","name":"_reduce_65","children":[],"call":[" lexer lineno "," lexer "," new_call line ","blk line "," new_call ","msg to_sym "]}," Ruby26Parser _reduce_64":{"type":"method","name":"_reduce_64","children":[],"call":[" new_call ","val [] ","val [] to_sym "," new_call line ","blk line ","msg to_sym "]}," Ruby26Parser _reduce_60":{"type":"method","name":"_reduce_60","children":[],"call":[" lexer cond pop "," lexer cond "," lexer "]}," Ruby26Parser _reduce_59":{"type":"method","name":"_reduce_59","children":[],"call":[" lexer cond pop "," lexer cond "," lexer "," lexer cond push "]}," Ruby26Parser _reduce_58":{"type":"method","name":"_reduce_58","children":[],"call":[" lexer cond push "," lexer cond "," lexer "," value_expr ","val [] "]}," Ruby26Parser _reduce_57":{"type":"method","name":"_reduce_57","children":[],"call":[" value_expr ","val [] "]}," Ruby26Parser _reduce_55":{"type":"method","name":"_reduce_55","children":[],"call":[" s ","val [] "," new_call line ","cmd line "," new_call "]}," Ruby26Parser _reduce_54":{"type":"method","name":"_reduce_54","children":[],"call":[" s ","val [] "," new_call line "," new_call "," logical_op "]}," Ruby26Parser _reduce_53":{"type":"method","name":"_reduce_53","children":[],"call":[" logical_op ","val [] "]}," Ruby26Parser _reduce_52":{"type":"method","name":"_reduce_52","children":[],"call":[" logical_op ","val [] "]}," Ruby26Parser _reduce_49":{"type":"method","name":"_reduce_49","children":[],"call":[" new_rescue "," new_resbody "," s "," value_expr "," s line "," value_ value_expr  "]}," Ruby26Parser _reduce_48":{"type":"method","name":"_reduce_48","children":[],"call":[" value_expr "," backref_assign_error ","val [] "]}," Ruby26Parser _reduce_47":{"type":"method","name":"_reduce_47","children":[],"call":[" backref_assign_error ","val [] "," s line "," s ","id to_sym ","lhs2 to_sym "]}," Ruby26Parser _reduce_46":{"type":"method","name":"_reduce_46","children":[],"call":[" debug20 "," s ","val [] ","op to_sym ","lhs2 to_sym "," s line ","id to_sym "]}," Ruby26Parser _reduce_45":{"type":"method","name":"_reduce_45","children":[],"call":[" debug20 "," s ","val [] ","op to_sym ","lhs2 to_sym ","result line ","prim line ","result sexp_type= ","call_op == ","op_asgn to_sym ","id to_sym "," s  line "," s  sexp_type= "]}," Ruby26Parser _reduce_44":{"type":"method","name":"_reduce_44","children":[],"call":["result line= ","val [] line ","val [] ","result sexp_type= ","val [] == "," s ","val [] to_sym ","result line ","prim line ","call_op == ","op_asgn to_sym ","id to_sym "," s  line= "," s  sexp_type= "," s  line "]}," Ruby26Parser _reduce_43":{"type":"method","name":"_reduce_43","children":[],"call":["result line= ","val [] line ","val [] ","result sexp_type= ","val [] == "," s ","val [] to_sym ","opasgn to_sym ","id to_sym "," new_op_asgn1 "," s  line= "," new_op_asgn1  line= "," s  sexp_type= "," new_op_asgn1  sexp_type= "]}," Ruby26Parser _reduce_42":{"type":"method","name":"_reduce_42","children":[],"call":[" s ","val [] ","val [] to_sym "," new_op_asgn1 "," new_op_asgn "]}," Ruby26Parser _reduce_41":{"type":"method","name":"_reduce_41","children":[],"call":[" new_op_asgn "," new_assign ","val [] "]}," Ruby26Parser _reduce_40":{"type":"method","name":"_reduce_40","children":[],"call":[" new_assign ","val [] "]}," Ruby26Parser _reduce_38":{"type":"method","name":"_reduce_38","children":[],"call":[" new_masgn ","val [] "," new_assign "," s line ","rhs line "," s "]}," Ruby26Parser _reduce_37":{"type":"method","name":"_reduce_37","children":[],"call":[" new_assign "," s ","val [] "," s line ","rhs line "," new_masgn "]}," Ruby26Parser _reduce_36":{"type":"method","name":"_reduce_36","children":[],"call":[" new_masgn ","val [] "]}," Ruby26Parser _reduce_34":{"type":"method","name":"_reduce_34","children":[],"call":[" new_iter ","val [] "," s "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," s line "," new_rescue "," new_resbody ","resbody line "," new_ new_resbody  "," new_resbody  line "]}," Ruby26Parser _reduce_33":{"type":"method","name":"_reduce_33","children":[],"call":[" new_rescue "," new_resbody "," s "," s line ","resbody line "," new_until "," new_ new_resbody  "," new_resbody  line "]}," Ruby26Parser _reduce_32":{"type":"method","name":"_reduce_32","children":[],"call":[" new_until ","val [] "," new_while "]}," Ruby26Parser _reduce_31":{"type":"method","name":"_reduce_31","children":[],"call":[" new_while ","val [] "," new_if "]}," Ruby26Parser _reduce_30":{"type":"method","name":"_reduce_30","children":[],"call":[" new_if ","val [] "]}," Ruby26Parser _reduce_29":{"type":"method","name":"_reduce_29","children":[],"call":[" new_if ","val [] "]}," Ruby26Parser _reduce_28":{"type":"method","name":"_reduce_28","children":[],"call":["val [] "," yyerror "]}," Ruby26Parser _reduce_27":{"type":"method","name":"_reduce_27","children":[],"call":[" yyerror "," s line "," s ","lhs to_sym "]}," Ruby26Parser _reduce_26":{"type":"method","name":"_reduce_26","children":[],"call":[" s ","val [] ","val [] to_sym "," s line ","lhs to_sym ","rhs to_sym "]}," Ruby26Parser _reduce_25":{"type":"method","name":"_reduce_25","children":[],"call":[" s ","val [] to_sym ","val [] "," s line ","rhs to_sym ","lhs to_sym "," s line line "]}," Ruby26Parser _reduce_24":{"type":"method","name":"_reduce_24","children":[],"call":[" s line ","val [] "," s "," s line line "," lexer lex_state= "," lexer "]}," Ruby26Parser _reduce_23":{"type":"method","name":"_reduce_23","children":[],"call":[" lexer lineno "," lexer "," lexer lex_state= ","val [] "]}," Ruby26Parser _reduce_22":{"type":"method","name":"_reduce_22","children":[],"call":[" yyerror "]}," Ruby26Parser _reduce_21":{"type":"method","name":"_reduce_21","children":[],"call":[" env extend "," env "," yyerror "," debug20 "," in_single > "," in_single "," in_def "]}," Ruby26Parser _reduce_19":{"type":"method","name":"_reduce_19","children":[],"call":[" debug20 ","val [] "," block_append "]}," Ruby26Parser _reduce_18":{"type":"method","name":"_reduce_18","children":[],"call":[" block_append ","val [] "]}," Ruby26Parser _reduce_15":{"type":"method","name":"_reduce_15","children":[],"call":[" new_compstmt "," new_body "]}," Ruby26Parser _reduce_14":{"type":"method","name":"_reduce_14","children":[],"call":[" new_body "]}," Ruby26Parser _reduce_13":{"type":"method","name":"_reduce_13","children":[],"call":[" new_body "," yyerror ","_values [] "]}," Ruby26Parser _reduce_12":{"type":"method","name":"_reduce_12","children":[],"call":[" yyerror ","_values [] "," new_iter "," s line "," s "]}," Ruby26Parser _reduce_11":{"type":"method","name":"_reduce_11","children":[],"call":[" new_iter "," s "," lexer lineno "," lexer "]}," Ruby26Parser _reduce_10":{"type":"method","name":"_reduce_10","children":[],"call":["preexe line ","iter line "]}," Ruby26Parser _reduce_9":{"type":"method","name":"_reduce_9","children":[],"call":[" env extend "," env "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," debug "]}," Ruby26Parser _reduce_8":{"type":"method","name":"_reduce_8","children":[],"call":["val [] "]}," Ruby26Parser _reduce_6":{"type":"method","name":"_reduce_6","children":[],"call":[" block_append ","val [] "]}," Ruby26Parser _reduce_3":{"type":"method","name":"_reduce_3","children":[],"call":["val [] "]}," Ruby26Parser _reduce_2":{"type":"method","name":"_reduce_2","children":[],"call":[" new_compstmt "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer cond pop "," lexer cond "]}," Ruby26Parser _reduce_1":{"type":"method","name":"_reduce_1","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby25Parser _reduce_647":{"type":"method","name":"_reduce_647","children":[],"call":[" yyerrok "]}," Ruby25Parser _reduce_646":{"type":"method","name":"_reduce_646","children":[],"call":[" yyerrok "]}," Ruby25Parser _reduce_643":{"type":"method","name":"_reduce_643","children":[],"call":[" yyerrok "]}," Ruby25Parser _reduce_617":{"type":"method","name":"_reduce_617","children":[],"call":[" s ","val [] ","sym sexp_type= ","result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] dup "," s line "," s  sexp_type= "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "]}," Ruby25Parser _reduce_616":{"type":"method","name":"_reduce_616","children":[],"call":[" s ","sym sexp_type= ","label to_sym "," s line "," lexer lineno "," lexer ","lit line "," wrap "," s line  line "," wrap  line "]}," Ruby25Parser _reduce_615":{"type":"method","name":"_reduce_615","children":[],"call":[" s ","label to_sym ","val [] "," yyerror ","result sexp_type == ","result sexp_type "," s line ","v1 line ","arg line "," s  sexp_type == ","val []  sexp_type == "," s line  sexp_type == "," s  sexp_type ","val []  sexp_type "," s line  sexp_type "," s arg line  ","v1 arg line  ","arg arg line  "]}," Ruby25Parser _reduce_614":{"type":"method","name":"_reduce_614","children":[],"call":[" s ","val [] ","result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] dup "," lexer lex_state= "," lexer "," s line "," lexer lineno ","sym sexp_type= "," s  sexp_type= "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "]}," Ruby25Parser _reduce_613":{"type":"method","name":"_reduce_613","children":[],"call":["result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] ","val [] dup "," yyerror ","result sexp_type == ","result sexp_type "," s line ","lit line "," s "," wrap ","val []  sexp_type= "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? ","val []  sexp_type == "," s line  sexp_type == ","val []  sexp_type "," s line  sexp_type "," wrap  line "]}," Ruby25Parser _reduce_611":{"type":"method","name":"_reduce_611","children":[],"call":["val [] "," s "," s line "," lexer lineno "," lexer ","result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] dup ","val []  sexp_type= "," s  sexp_type= "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "]}," Ruby25Parser _reduce_610":{"type":"method","name":"_reduce_610","children":[],"call":[" s "," yyerror ","result sexp_type == ","result sexp_type ","val [] ","(str \"&\") to_sym "," env []= "," env ","val [] to_sym "," s  sexp_type == ","val []  sexp_type == ","(str \"&\") to_sym  sexp_type == "," s  sexp_type ","val []  sexp_type ","(str \"&\") to_sym  sexp_type "]}," Ruby25Parser _reduce_609":{"type":"method","name":"_reduce_609","children":[],"call":[" yyerror ","result sexp_type == ","result sexp_type ","val [] "," lexer lex_state= "," lexer ","val []  sexp_type == ","val []  sexp_type "]}," Ruby25Parser _reduce_608":{"type":"method","name":"_reduce_608","children":[],"call":[" lexer lex_state= "," lexer ","(str \"&\") to_sym "," env []= "," env ","val [] to_sym ","val [] "," s line "," lexer lineno "," s "]}," Ruby25Parser _reduce_606":{"type":"method","name":"_reduce_606","children":[],"call":["val [] "," assignable ","val [] to_sym "," lexer lex_state= "," lexer "]}," Ruby25Parser _reduce_605":{"type":"method","name":"_reduce_605","children":[],"call":["val [] ","(str \"&\") to_sym "," env []= "," env ","val [] to_sym ","id to_sym "]}," Ruby25Parser _reduce_604":{"type":"method","name":"_reduce_604","children":[],"call":["(str \"&\") to_sym "," env []= "," env ","val [] to_sym ","val [] "," assignable "]}," Ruby25Parser _reduce_601":{"type":"method","name":"_reduce_601","children":[],"call":[" env []= "," env "," assignable ","val [] to_sym ","val [] ","result << "," block_append ","id to_sym "," block_append  << "]}," Ruby25Parser _reduce_600":{"type":"method","name":"_reduce_600","children":[],"call":[" assignable ","val [] to_sym ","val [] "," s line ","optblk line "," s ","opt line "]}," Ruby25Parser _reduce_593":{"type":"method","name":"_reduce_593","children":[],"call":[" assignable ","val [] "," args ","result << "," assignable  << "," args  << "]}," Ruby25Parser _reduce_583":{"type":"method","name":"_reduce_583","children":[],"call":[" s "," env []= "," env ","label to_sym ","val [] "," raise ","val inspect "," debug20 "," s line "," lexer lineno "," lexer ","list << ","item last "]}," Ruby25Parser _reduce_580":{"type":"method","name":"_reduce_580","children":[],"call":[" s ","val [] "," env []= "," env ","label to_sym "," s line "]}," Ruby25Parser _reduce_570":{"type":"method","name":"_reduce_570","children":[],"call":[" yyerror "," args "]}," Ruby25Parser _reduce_569":{"type":"method","name":"_reduce_569","children":[],"call":[" yyerror "," args "]}," Ruby25Parser _reduce_567":{"type":"method","name":"_reduce_567","children":[],"call":[" args "," yyerror "]}," Ruby25Parser _reduce_565":{"type":"method","name":"_reduce_565","children":[],"call":[" args "]}," Ruby25Parser _reduce_560":{"type":"method","name":"_reduce_560","children":[],"call":[" args "]}," Ruby25Parser _reduce_556":{"type":"method","name":"_reduce_556","children":[],"call":[" args "]}," Ruby25Parser _reduce_555":{"type":"method","name":"_reduce_555","children":[],"call":[" args ","val [] "]}," Ruby25Parser _reduce_553":{"type":"method","name":"_reduce_553","children":[],"call":[" args "]}," Ruby25Parser _reduce_531":{"type":"method","name":"_reduce_531","children":[],"call":[" s "," s line "," lexer lineno "," lexer "]}," Ruby25Parser _reduce_508":{"type":"method","name":"_reduce_508","children":[],"call":[" s ","val [] to_sym ","val [] "," lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm "," lexer string_nest= "," lexer brace_nest= "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," lexer lineno "," lexer lex_state "," lexer string_nest "," lexer brace_nest "," wrap "]}," Ruby25Parser _reduce_507":{"type":"method","name":"_reduce_507","children":[],"call":[" s ","val [] to_sym ","val [] "," new_string "," s line ","str line "," lexer lex_strterm= "," lexer ","id to_sym "," wrap "]}," Ruby25Parser _reduce_506":{"type":"method","name":"_reduce_506","children":[],"call":[" s ","val [] to_sym ","val [] "," raise ","stmt inspect "," debug20 ","stmt sexp_type "," lexer lex_state= "," lexer "," lexer cmdarg restore "," lexer cmdarg "," lexer cond restore "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," literal_concat "," lexer lex_strterm "," s line ","id to_sym "," wrap "]}," Ruby25Parser _reduce_505":{"type":"method","name":"_reduce_505","children":[],"call":[" raise ","stmt inspect "," debug20 "," s ","stmt sexp_type "," lexer lex_state= "," lexer "," lexer cmdarg restore "," lexer cmdarg "," lexer cond restore "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer lex_state "," lexer cmdarg store "," lexer cond store "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "," new_string "," s line ","id to_sym "," wrap ","val [] "]}," Ruby25Parser _reduce_504":{"type":"method","name":"_reduce_504","children":[],"call":[" lexer lex_state= "," lexer "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer lex_state "," lexer cmdarg store "," lexer cmdarg "," lexer cond store "," lexer cond "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "," s ","val [] "," literal_concat "," raise ","stmt inspect "," debug "," s line ","stmt sexp_type "," lexer cmdarg pop "," lexer cond pop "," wrap "]}," Ruby25Parser _reduce_503":{"type":"method","name":"_reduce_503","children":[],"call":[" s ","val [] "," lexer lex_strterm= "," lexer "," lexer lex_state= "," lexer lex_strterm "," lexer string_nest= "," lexer brace_nest= "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," lexer lineno "," lexer lex_state "," lexer string_nest "," lexer brace_nest "," wrap "]}," Ruby25Parser _reduce_502":{"type":"method","name":"_reduce_502","children":[],"call":[" lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm "," new_string "," literal_concat "," s line ","str line "," s "," wrap ","val [] "]}," Ruby25Parser _reduce_501":{"type":"method","name":"_reduce_501","children":[],"call":[" new_string "," literal_concat ","val [] "," s line "," lexer lineno "," lexer "," s "," lexer lex_state= "," lexer lex_strterm= "," lexer lex_strterm "," raise ","stmt inspect "," debug ","stmt sexp_type "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," lexer string_nest= "," lexer brace_nest= "]}," Ruby25Parser _reduce_500":{"type":"method","name":"_reduce_500","children":[],"call":[" literal_concat ","val [] ","val [] dup << "," new_qsym_list_entry ","val [] dup "," new_string "," lexer lex_state= "," lexer "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," lexer lineno "," lexer lex_state "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "]}," Ruby25Parser _reduce_498":{"type":"method","name":"_reduce_498","children":[],"call":[" literal_concat ","val [] ","val [] dup << "," new_qword_list_entry ","val [] dup "," new_qsym_list_entry "," lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm "]}," Ruby25Parser _reduce_496":{"type":"method","name":"_reduce_496","children":[],"call":[" literal_concat ","val [] "," s ","val [] dup << "," new_qword_list_entry ","val [] dup "]}," Ruby25Parser _reduce_495":{"type":"method","name":"_reduce_495","children":[],"call":[" s ","val [] dup << "," new_qsym_list_entry ","val [] dup ","val [] "," s line "," lexer lineno "," lexer "," new_qword_list "," literal_concat "]}," Ruby25Parser _reduce_494":{"type":"method","name":"_reduce_494","children":[],"call":["val [] dup << "," new_qsym_list_entry ","val [] dup ","val [] "," new_qsym_list "," s line "," s "," +@ "," prev_value_to_lineno ","_values last "," literal_concat "," s  prev_value_to_lineno  "," prev_value_to_ prev_value_to_lineno no "]}," Ruby25Parser _reduce_493":{"type":"method","name":"_reduce_493","children":[],"call":[" new_qsym_list ","val [] dup << "," new_qword_list_entry ","val [] dup ","val [] "," s line "," lexer lineno "," lexer "," s "," new_qsym_list_entry "]}," Ruby25Parser _reduce_490":{"type":"method","name":"_reduce_490","children":[],"call":["val [] "," s ","list line= ","list dup << "," new_symbol_list_entry ","list dup "," new_qword_list ","val [] dup << "," new_qsym_list_entry ","val [] dup "]}," Ruby25Parser _reduce_462":{"type":"method","name":"_reduce_462","children":[],"call":["val [] ","result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s line ","var line "," s ","arg line ","val []  << "," new_resbody  << "," s line  << "]}," Ruby25Parser _reduce_452":{"type":"method","name":"_reduce_452","children":[],"call":[" lexer cmdarg restore "," lexer cmdarg "," lexer "," env unextend "," env "," new_do_body "," lexer cmdarg store "," lexer lineno "," env extend "," lexer cmdarg pop "," new_brace_body "," list_append "," s line ","id line "," s "]}," Ruby25Parser _reduce_449":{"type":"method","name":"_reduce_449","children":[],"call":[" lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," env unextend "," env "," new_brace_body "," lexer cmdarg store ","result line= "," s line ","arg line "," s "," list_append ","id line "," new_brace_body  line= "," lexer cmdarg store  line= "," s line  line= "," list_append  line= "]}," Ruby25Parser _reduce_446":{"type":"method","name":"_reduce_446","children":[],"call":[" env unextend "," env ","result line= "," lexer lineno "," lexer "," env extend "," s line "," s ","arg line "," lexer lineno  line= "," s line  line= "]}," Ruby25Parser _reduce_444":{"type":"method","name":"_reduce_444","children":[],"call":[" env unextend "," env ","result line= "," lexer lineno "," lexer "," env extend "," new_call ","val [] "," s line "," s "," lexer cmdarg store "," lexer cmdarg "," lexer cmdarg push "," lexer lineno  line= "," new_call  line= "," s line  line= "," lexer cmdarg store  line= "]}," Ruby25Parser _reduce_442":{"type":"method","name":"_reduce_442","children":[],"call":[" new_aref "," s "," new_call ","val [] to_sym ","val [] "," env unextend "," env ","result line "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," new_brace_body "," new_aref  line "," s  line "," new_call  line "," new_brace_body  line "]}," Ruby25Parser _reduce_441":{"type":"method","name":"_reduce_441","children":[],"call":[" s "," new_super ","val [] "," new_call ","val [] to_sym "," lexer lineno "," lexer "," env extend "," env "," lexer cmdarg store "," lexer cmdarg "]}," Ruby25Parser _reduce_437":{"type":"method","name":"_reduce_437","children":[],"call":[" new_call ","val [] to_sym ","val [] ","iter2 insert ","name to_sym ","result line ","call concat ","args sexp_body "," s line "," lexer lineno "," lexer "," s "," env unextend "," env "," new_ new_call  "," new_call  line ","call concat  line "," s line  line "," new_call  concat "]}," Ruby25Parser _reduce_436":{"type":"method","name":"_reduce_436","children":[],"call":[" new_call ","val [] ","val [] to_sym ","iter2 insert ","name to_sym "," lexer lineno "," lexer "," new_super "," env extend "," env "," new_ new_call  "]}," Ruby25Parser _reduce_404":{"type":"method","name":"_reduce_404","children":[],"call":[" args "]}," Ruby25Parser _reduce_399":{"type":"method","name":"_reduce_399","children":[],"call":[" args "]}," Ruby25Parser _reduce_395":{"type":"method","name":"_reduce_395","children":[],"call":[" args "," call_args ","result line "," lexer lineno "," lexer "," args  line "," call_args  line ","result  lexer lineno  "," lexer  lexer lineno no "]}," Ruby25Parser _reduce_378":{"type":"method","name":"_reduce_378","children":[],"call":[" s ","val [] ","val [] delete_at ","val [] [] nil? ","val [] [] "," list_append "," block_var "]}," Ruby25Parser _reduce_345":{"type":"method","name":"_reduce_345","children":[],"call":[" value_expr ","val [] "," s "," lexer comments "," lexer "," in_single "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," new_defs "," s line "]}," Ruby25Parser _reduce_344":{"type":"method","name":"_reduce_344","children":[],"call":[" s "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," lexer cmdarg stack dup "," lexer lineno "," lexer lex_state= "," env extend "," env "," in_single "," s line "," value_expr ","val [] "]}," Ruby25Parser _reduce_343":{"type":"method","name":"_reduce_343","children":[],"call":[" s "," lexer lex_state= "," lexer "," comments push "," lexer comments "," comments "," in_single "," in_def= "," env unextend "," env "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," new_defs "," s line "]}," Ruby25Parser _reduce_342":{"type":"method","name":"_reduce_342","children":[],"call":[" s "," lexer comments "," lexer "," in_def= "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," new_defn ","val [] "," comments push "," comments "," lexer lex_state= ","EXPR_ENDFN  | "," lexer cond push "," lexer cond "," lexer cmdarg push "," env extend "," in_single "," lexer lineno "," in_def "," s line "]}," Ruby25Parser _reduce_341":{"type":"method","name":"_reduce_341","children":[],"call":[" s "," lexer comments "," lexer "," in_single "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg ","result [] line ","result [] "," new_defs ","val [] "," lexer lineno "," lexer lex_state= "," s line "," value_expr "," s  [] line "," new_defs  [] line "," lexer lineno  [] line "," s line  [] line "," value_expr  [] line "," s  [] "," new_defs  [] "," lexer lineno  [] "," s line  [] "," value_expr  [] "]}," Ruby25Parser _reduce_340":{"type":"method","name":"_reduce_340","children":[],"call":[" lexer comments "," lexer "," in_single "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg ","result [] line ","result [] "," new_defs ","val [] "," lexer cmdarg stack dup "," lexer lineno "," lexer lex_state= "," env extend "," in_def= "," comments push "," comments "," in_def "," lexer cmdarg pop "," lexer cond pop "," lexer cond "," new_defn "," s line "," s "," new_defs  [] line "," new_defn  [] line "," s line  [] line "," new_defs  [] "," new_defn  [] "," s line  [] "," val [] = "," val []  "]}," Ruby25Parser _reduce_339":{"type":"method","name":"_reduce_339","children":[],"call":[" lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," lexer cmdarg stack dup "," lexer lineno "," lexer lex_state= "," env extend "," env "," in_single "," comments push "," lexer comments "," comments "," env unextend "," new_module "," lexer ignore_body_comments "," in_def= "," lexer cmdarg pop "," lexer cond pop "," lexer cond "," new_defs ","val delete_at "," s line "," s "]}," Ruby25Parser _reduce_338":{"type":"method","name":"_reduce_338","children":[],"call":[" lexer lex_state= "," lexer "," comments push "," lexer comments "," comments "," in_def= "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," new_defn ","val [] "," env extend "," yyerror "," in_single > "," in_single "," in_def "," lexer cond push "," lexer cond "," lexer cmdarg push ","EXPR_ENDFN  | "," s line "," s "]}," Ruby25Parser _reduce_302":{"type":"method","name":"_reduce_302","children":[],"call":["result paren= "," s ","val [] "," lexer cmdarg restore "," lexer cmdarg "," lexer "," warning "," lexer cmdarg store "," s line ","id to_sym "," wrap "," lexer cmdarg store  paren= "," s line  paren= "," wrap  paren= "]}," Ruby25Parser _reduce_280":{"type":"method","name":"_reduce_280","children":[],"call":[" new_masgn_arg ","val [] "," list_append "," s "," lexer lineno "," lexer "," s line ","val [] << "," lexer  lexer lineno no "," s  lexer lineno  "]}," Ruby25Parser _reduce_279":{"type":"method","name":"_reduce_279","children":[],"call":[" list_append "," s ","val [] "," new_masgn_arg "]}," Ruby25Parser _reduce_278":{"type":"method","name":"_reduce_278","children":[],"call":[" list_append ","val [] "," s "," s line ","arg line "," new_masgn_arg "]}," Ruby25Parser _reduce_277":{"type":"method","name":"_reduce_277","children":[],"call":[" s ","val [] "," s line ","arg line "," lexer lineno "," lexer "," list_append "," s  lexer lineno  ","arg  lexer lineno  "," lexer  lexer lineno no "]}," Ruby25Parser _reduce_276":{"type":"method","name":"_reduce_276","children":[],"call":[" s ","val [] "," list_append "]}," Ruby25Parser _reduce_274":{"type":"method","name":"_reduce_274","children":[],"call":["val [] "," s "," s line ","arg line "," lexer lineno "," lexer "]}," Ruby25Parser _reduce_273":{"type":"method","name":"_reduce_273","children":[],"call":[" s ","val [] "," lexer cmdarg restore "," lexer cmdarg "," lexer "," lexer cmdarg push "," lexer cmdarg pop ","(sym :tLBRACE_ARG) include? "]}," Ruby25Parser _reduce_272":{"type":"method","name":"_reduce_272","children":[],"call":["val [] "," lexer cmdarg restore "," lexer cmdarg "," lexer "," lexer cmdarg store "," lexer cmdarg push "," lexer cmdarg pop ","(sym :tLPAREN) include? "," last_token_type first "," last_token_type "]}," Ruby25Parser _reduce_271":{"type":"method","name":"_reduce_271","children":[],"call":[" lexer cmdarg store "," lexer cmdarg "," lexer "," call_args "," s line ","arg line "," s "]}," Ruby25Parser _reduce_261":{"type":"method","name":"_reduce_261","children":[],"call":["val [] "," args "]}," Ruby25Parser _reduce_240":{"type":"method","name":"_reduce_240","children":[],"call":[" logical_op ","val [] "," new_call "," argl ","val []= "," value_expr "," s line "," s "]}," Ruby25Parser _reduce_238":{"type":"method","name":"_reduce_238","children":[],"call":[" new_call "," argl ","val [] ","val []= "," value_expr "," logical_op "]}," Ruby25Parser _reduce_133":{"type":"method","name":"_reduce_133","children":[],"call":[" new_undef ","val [] "]}," Ruby25Parser _reduce_132":{"type":"method","name":"_reduce_132","children":[],"call":[" lexer lex_state= "," lexer "," new_undef ","val [] "]}," Ruby25Parser _reduce_131":{"type":"method","name":"_reduce_131","children":[],"call":[" new_undef ","val [] "," lexer lex_state= "," lexer "]}," Ruby25Parser _reduce_129":{"type":"method","name":"_reduce_129","children":[],"call":[" s ","val [] to_sym ","val [] "," s line "," lexer lineno "," lexer ","id to_sym "]}," Ruby25Parser _reduce_126":{"type":"method","name":"_reduce_126","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby25Parser _reduce_125":{"type":"method","name":"_reduce_125","children":[],"call":["val [] "," lexer lex_state= "," lexer "]}," Ruby25Parser _reduce_120":{"type":"method","name":"_reduce_120","children":[],"call":["val [] to_sym ","val [] "," s line "," s ","name to_sym "," wrap "]}," Ruby25Parser _reduce_117":{"type":"method","name":"_reduce_117","children":[],"call":[" yyerror "," backref_assign_error ","val [] "]}," Ruby25Parser _reduce_114":{"type":"method","name":"_reduce_114","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," s line ","id to_sym ","expr line "," new_attrasgn ","vaexpr line  [] to_sym ","vaexpr line  [] "," in_singexpr line e > "," in_singexpr line e "," s expr line ine ","expr expr line ine "]}," Ruby25Parser _reduce_113":{"type":"method","name":"_reduce_113","children":[],"call":[" new_attrasgn ","val [] "]}," Ruby25Parser _reduce_112":{"type":"method","name":"_reduce_112","children":[],"call":[" s ","val [] "," new_attrasgn "]}," Ruby25Parser _reduce_108":{"type":"method","name":"_reduce_108","children":[],"call":[" assignable ","val [] ","result line= "," lexer lineno "," lexer "," backref_assign_error "," assignable  line= ","result  lexer lineno = "," lexer  lexer lineno no "]}," Ruby25Parser _reduce_83":{"type":"method","name":"_reduce_83","children":[],"call":[" s ","val [] "," s line ","head line ","arg line ","vaarg line  [] "," s arg line ine ","head arg line ine ","arg arg line ine "]}," Ruby25Parser _reduce_71":{"type":"method","name":"_reduce_71","children":[],"call":["block insert "," block_dup_check "," new_call ","val [] ","msg to_sym ","result line ","lhs line ","op to_sym "," new_ new_call  "," new_call  line "]}," Ruby25Parser _reduce_69":{"type":"method","name":"_reduce_69","children":[],"call":["result insert ","val [] "," block_dup_check ","val [] concat ","val [] sexp_body ","call concat ","args sexp_body ","val [] concat  insert ","call concat  insert "]}," Ruby25Parser _reduce_52":{"type":"method","name":"_reduce_52","children":[],"call":[" logical_op ","val [] "]}," Ruby25Parser _reduce_48":{"type":"method","name":"_reduce_48","children":[],"call":[" value_expr "," backref_assign_error ","val [] "]}," Ruby25Parser _reduce_43":{"type":"method","name":"_reduce_43","children":[],"call":["result line= ","val [] line ","val [] ","result sexp_type= ","val [] == "," s ","val [] to_sym ","opasgn to_sym ","id to_sym "," new_op_asgn1 "," s  line= "," new_op_asgn1  line= "," s  sexp_type= "," new_op_asgn1  sexp_type= "]}," Ruby25Parser _reduce_40":{"type":"method","name":"_reduce_40","children":[],"call":[" new_assign ","val [] "]}," Ruby25Parser _reduce_29":{"type":"method","name":"_reduce_29","children":[],"call":[" new_if ","val [] "]}," Ruby25Parser _reduce_14":{"type":"method","name":"_reduce_14","children":[],"call":[" new_body "]}," Ruby25Parser _reduce_13":{"type":"method","name":"_reduce_13","children":[],"call":[" new_body "," yyerror ","_values [] "," warn "]}," Ruby24Parser _reduce_647":{"type":"method","name":"_reduce_647","children":[],"call":[" yyerrok "]}," Ruby24Parser _reduce_646":{"type":"method","name":"_reduce_646","children":[],"call":[" yyerrok "]}," Ruby24Parser _reduce_643":{"type":"method","name":"_reduce_643","children":[],"call":[" yyerrok "]}," Ruby24Parser _reduce_617":{"type":"method","name":"_reduce_617","children":[],"call":[" s ","val [] ","sym sexp_type= ","result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] dup "," s line "," s  sexp_type= "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "]}," Ruby24Parser _reduce_616":{"type":"method","name":"_reduce_616","children":[],"call":[" s ","sym sexp_type= ","label to_sym "," s line "," lexer lineno "," lexer ","lit line "," wrap "," s line  line "," wrap  line "]}," Ruby24Parser _reduce_615":{"type":"method","name":"_reduce_615","children":[],"call":[" s ","label to_sym ","val [] "," yyerror ","result sexp_type == ","result sexp_type "," s line ","v1 line ","arg line "," s  sexp_type == ","val []  sexp_type == "," s line  sexp_type == "," s  sexp_type ","val []  sexp_type "," s line  sexp_type "," s arg line  ","v1 arg line  ","arg arg line  "]}," Ruby24Parser _reduce_614":{"type":"method","name":"_reduce_614","children":[],"call":[" s ","val [] ","result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] dup "," lexer lex_state= "," lexer "," s line "," lexer lineno ","sym sexp_type= "," s  sexp_type= "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "]}," Ruby24Parser _reduce_613":{"type":"method","name":"_reduce_613","children":[],"call":["result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] ","val [] dup "," yyerror ","result sexp_type == ","result sexp_type "," s line ","lit line "," s "," wrap ","val []  sexp_type= "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? ","val []  sexp_type == "," s line  sexp_type == ","val []  sexp_type "," s line  sexp_type "," wrap  line "]}," Ruby24Parser _reduce_611":{"type":"method","name":"_reduce_611","children":[],"call":["val [] "," s "," s line "," lexer lineno "," lexer ","result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] dup ","val []  sexp_type= "," s  sexp_type= "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "]}," Ruby24Parser _reduce_610":{"type":"method","name":"_reduce_610","children":[],"call":[" s "," yyerror ","result sexp_type == ","result sexp_type ","val [] ","(str \"&\") to_sym "," env []= "," env ","val [] to_sym "," s  sexp_type == ","val []  sexp_type == ","(str \"&\") to_sym  sexp_type == "," s  sexp_type ","val []  sexp_type ","(str \"&\") to_sym  sexp_type "]}," Ruby24Parser _reduce_609":{"type":"method","name":"_reduce_609","children":[],"call":[" yyerror ","result sexp_type == ","result sexp_type ","val [] "," lexer lex_state= "," lexer ","val []  sexp_type == ","val []  sexp_type "]}," Ruby24Parser _reduce_608":{"type":"method","name":"_reduce_608","children":[],"call":[" lexer lex_state= "," lexer ","(str \"&\") to_sym "," env []= "," env ","val [] to_sym ","val [] "," s line "," lexer lineno "," s "]}," Ruby24Parser _reduce_606":{"type":"method","name":"_reduce_606","children":[],"call":["val [] "," assignable ","val [] to_sym "," lexer lex_state= "," lexer "]}," Ruby24Parser _reduce_605":{"type":"method","name":"_reduce_605","children":[],"call":["val [] ","(str \"&\") to_sym "," env []= "," env ","val [] to_sym ","id to_sym "]}," Ruby24Parser _reduce_604":{"type":"method","name":"_reduce_604","children":[],"call":["(str \"&\") to_sym "," env []= "," env ","val [] to_sym ","val [] "," assignable "]}," Ruby24Parser _reduce_601":{"type":"method","name":"_reduce_601","children":[],"call":[" env []= "," env "," assignable ","val [] to_sym ","val [] ","result << "," block_append ","id to_sym "," block_append  << "]}," Ruby24Parser _reduce_600":{"type":"method","name":"_reduce_600","children":[],"call":[" assignable ","val [] to_sym ","val [] "," s line ","optblk line "," s ","opt line "]}," Ruby24Parser _reduce_593":{"type":"method","name":"_reduce_593","children":[],"call":[" assignable ","val [] "," args ","result << ","result []= ","list push ","more empty? ","val [] [] ","val [] dup "," assignable  << "," args  << "," assignable  []= "," args  []= ","val [] dup  push ","val [] []  empty? "]}," Ruby24Parser _reduce_583":{"type":"method","name":"_reduce_583","children":[],"call":[" s "," env []= "," env ","label to_sym ","val [] "," raise ","val inspect "," debug20 "," s line "," lexer lineno "," lexer ","list << ","item last "]}," Ruby24Parser _reduce_580":{"type":"method","name":"_reduce_580","children":[],"call":[" s ","val [] "," env []= "," env ","label to_sym "," s line "," assignable ","val [] to_sym "]}," Ruby24Parser _reduce_570":{"type":"method","name":"_reduce_570","children":[],"call":[" yyerror "," args ","val [] "]}," Ruby24Parser _reduce_569":{"type":"method","name":"_reduce_569","children":[],"call":[" yyerror "," args "]}," Ruby24Parser _reduce_567":{"type":"method","name":"_reduce_567","children":[],"call":[" args "," yyerror "]}," Ruby24Parser _reduce_565":{"type":"method","name":"_reduce_565","children":[],"call":[" args ","list << ","item last "]}," Ruby24Parser _reduce_560":{"type":"method","name":"_reduce_560","children":[],"call":[" args "," s ","val [] "," env []= "," env ","label to_sym "]}," Ruby24Parser _reduce_556":{"type":"method","name":"_reduce_556","children":[],"call":[" args ","val [] "]}," Ruby24Parser _reduce_555":{"type":"method","name":"_reduce_555","children":[],"call":[" args ","val [] "]}," Ruby24Parser _reduce_553":{"type":"method","name":"_reduce_553","children":[],"call":[" args "," env []= "," env ","val [] to_sym ","val [] "]}," Ruby24Parser _reduce_531":{"type":"method","name":"_reduce_531","children":[],"call":[" s "," s line "," lexer lineno "," lexer ","val [] "]}," Ruby24Parser _reduce_508":{"type":"method","name":"_reduce_508","children":[],"call":[" s ","val [] to_sym ","val [] "," lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm "," lexer string_nest= "," lexer brace_nest= "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," lexer lineno "," lexer lex_state "," lexer string_nest "," lexer brace_nest "," wrap "]}," Ruby24Parser _reduce_507":{"type":"method","name":"_reduce_507","children":[],"call":[" s ","val [] to_sym ","val [] "," new_string "," s line ","str line "," lexer lex_strterm= "," lexer ","id to_sym "," wrap "]}," Ruby24Parser _reduce_506":{"type":"method","name":"_reduce_506","children":[],"call":[" s ","val [] to_sym ","val [] "," raise ","stmt inspect "," debug20 ","stmt sexp_type "," lexer lex_state= "," lexer "," lexer cmdarg restore "," lexer cmdarg "," lexer cond restore "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," literal_concat "," lexer lex_strterm "," s line ","id to_sym "," wrap "]}," Ruby24Parser _reduce_505":{"type":"method","name":"_reduce_505","children":[],"call":[" raise ","stmt inspect "," debug20 "," s ","stmt sexp_type "," lexer lex_state= "," lexer "," lexer cmdarg restore "," lexer cmdarg "," lexer cond restore "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer lex_state "," lexer cmdarg store "," lexer cond store "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "," new_string "," s line ","id to_sym "," wrap ","val [] "]}," Ruby24Parser _reduce_504":{"type":"method","name":"_reduce_504","children":[],"call":[" lexer lex_state= "," lexer "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer lex_state "," lexer cmdarg store "," lexer cmdarg "," lexer cond store "," lexer cond "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "," s ","val [] "," literal_concat "," raise ","stmt inspect "," debug "," s line ","stmt sexp_type "," lexer cmdarg pop "," lexer cond pop "," wrap "]}," Ruby24Parser _reduce_503":{"type":"method","name":"_reduce_503","children":[],"call":[" s ","val [] "," lexer lex_strterm= "," lexer "," lexer lex_state= "," lexer lex_strterm "," lexer string_nest= "," lexer brace_nest= "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," lexer lineno "," lexer lex_state "," lexer string_nest "," lexer brace_nest "," wrap "]}," Ruby24Parser _reduce_502":{"type":"method","name":"_reduce_502","children":[],"call":[" lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm "," new_string "," literal_concat "," s line ","str line "," s "," wrap ","val [] "]}," Ruby24Parser _reduce_501":{"type":"method","name":"_reduce_501","children":[],"call":[" new_string "," literal_concat ","val [] "," s line "," lexer lineno "," lexer "," s "," lexer lex_state= "," lexer lex_strterm= "," lexer lex_strterm "," raise ","stmt inspect "," debug ","stmt sexp_type "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," lexer string_nest= "," lexer brace_nest= "]}," Ruby24Parser _reduce_500":{"type":"method","name":"_reduce_500","children":[],"call":[" literal_concat ","val [] ","val [] dup << "," new_qsym_list_entry ","val [] dup "," new_string "," lexer lex_state= "," lexer "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," lexer lineno "," lexer lex_state "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "]}," Ruby24Parser _reduce_498":{"type":"method","name":"_reduce_498","children":[],"call":[" literal_concat ","val [] ","val [] dup << "," new_qword_list_entry ","val [] dup "," new_qsym_list_entry "," lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm ","val [] -@ "]}," Ruby24Parser _reduce_496":{"type":"method","name":"_reduce_496","children":[],"call":[" literal_concat ","val [] "," s ","val [] dup << "," new_qword_list_entry ","val [] dup "," debug20 ","result last to_sym ","result last ","result []= ","result [] "," lexer lex_state= "," lexer "," literal_concat  last to_sym "," s  last to_sym ","val []  last to_sym ","val [] dup <<  last to_sym "," literal_concat  last "," s  last ","val []  last ","val [] dup <<  last "," literal_concat  []= "," s  []= ","val []  []= ","val [] dup <<  []= "," literal_concat  [] "," s  [] ","val []  [] ","val [] dup <<  [] "]}," Ruby24Parser _reduce_495":{"type":"method","name":"_reduce_495","children":[],"call":[" s ","val [] dup << "," new_qsym_list_entry ","val [] dup ","val [] "," s line "," lexer lineno "," lexer "," new_qword_list "," literal_concat "]}," Ruby24Parser _reduce_494":{"type":"method","name":"_reduce_494","children":[],"call":["val [] dup << "," new_qsym_list_entry ","val [] dup ","val [] "," new_qsym_list "," s line "," s "," +@ "," prev_value_to_lineno ","_values last "," literal_concat "," s  prev_value_to_lineno  "," prev_value_to_ prev_value_to_lineno no "]}," Ruby24Parser _reduce_493":{"type":"method","name":"_reduce_493","children":[],"call":[" new_qsym_list ","val [] dup << "," new_qword_list_entry ","val [] dup ","val [] "," s line "," lexer lineno "," lexer "," s "," new_qsym_list_entry "]}," Ruby24Parser _reduce_490":{"type":"method","name":"_reduce_490","children":[],"call":["val [] "," s ","list line= ","list dup << "," new_symbol_list_entry ","list dup "," new_qword_list ","val [] dup << "," new_qsym_list_entry ","val [] dup ","val [] to_sym "," lexer lex_state= "," lexer "]}," Ruby24Parser _reduce_462":{"type":"method","name":"_reduce_462","children":[],"call":["val [] ","result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s line ","var line "," s ","arg line "," literal_concat ","val []  << "," new_resbody  << "," s line  << "," literal_concat  << "]}," Ruby24Parser _reduce_452":{"type":"method","name":"_reduce_452","children":[],"call":[" lexer cmdarg restore "," lexer cmdarg "," lexer "," env unextend "," env "," new_do_body "," lexer cmdarg store "," lexer lineno "," env extend "," lexer cmdarg pop "," new_brace_body "," list_append "," s line ","id line "," s "," literal_concat ","val [] "]}," Ruby24Parser _reduce_449":{"type":"method","name":"_reduce_449","children":[],"call":[" lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," env unextend "," env "," new_brace_body "," lexer cmdarg store ","result line= "," s line ","arg line "," s "," list_append ","id line ","val [] ","val []= ","val [] value ","val [] [] == ","val [] [] "," new_brace_body  line= "," lexer cmdarg store  line= "," s line  line= "," list_append  line= ","val []  line= "]}," Ruby24Parser _reduce_446":{"type":"method","name":"_reduce_446","children":[],"call":[" env unextend "," env ","result line= "," lexer lineno "," lexer "," env extend "," s line "," s ","arg line ","val [] "," lexer lineno  line= "," s line  line= "," s  line= "]}," Ruby24Parser _reduce_444":{"type":"method","name":"_reduce_444","children":[],"call":[" env unextend "," env ","result line= "," lexer lineno "," lexer "," env extend "," new_call ","val [] "," s line "," s "," lexer cmdarg store "," lexer cmdarg "," lexer cmdarg push "," lexer lineno  line= "," new_call  line= "," s line  line= "," lexer cmdarg store  line= "]}," Ruby24Parser _reduce_442":{"type":"method","name":"_reduce_442","children":[],"call":[" new_aref "," s "," new_call ","val [] to_sym ","val [] "," env unextend "," env ","result line "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," new_brace_body "," new_aref  line "," s  line "," new_call  line "," new_brace_body  line ","val []  line "]}," Ruby24Parser _reduce_441":{"type":"method","name":"_reduce_441","children":[],"call":[" s "," new_super ","val [] "," new_call ","val [] to_sym "," lexer lineno "," lexer "," env extend "," env "," lexer cmdarg store "," lexer cmdarg "]}," Ruby24Parser _reduce_437":{"type":"method","name":"_reduce_437","children":[],"call":[" new_call ","val [] to_sym ","val [] ","iter2 insert ","name to_sym ","result line ","call concat ","args sexp_body "," s line "," lexer lineno "," lexer "," s "," env unextend "," env ","result << "," new_resbody ","klasses << "," new_assign "," new_ new_call  "," new_call  line ","call concat  line "," s line  line "," new_resbody  line "," new_call  concat "," new_call  << ","call concat  << "," s line  << "," new_resbody  << "]}," Ruby24Parser _reduce_436":{"type":"method","name":"_reduce_436","children":[],"call":[" new_call ","val [] ","val [] to_sym ","iter2 insert ","name to_sym "," lexer lineno "," lexer "," new_super "," env extend "," env "," new_ new_call  "]}," Ruby24Parser _reduce_404":{"type":"method","name":"_reduce_404","children":[],"call":[" args "," lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," lexer lineno "," env extend "," env "]}," Ruby24Parser _reduce_399":{"type":"method","name":"_reduce_399","children":[],"call":[" args "]}," Ruby24Parser _reduce_395":{"type":"method","name":"_reduce_395","children":[],"call":[" args "," call_args ","result line "," lexer lineno "," lexer "," args  line "," call_args  line ","result  lexer lineno  "," lexer  lexer lineno no "]}," Ruby24Parser _reduce_378":{"type":"method","name":"_reduce_378","children":[],"call":[" s ","val [] ","val [] delete_at ","val [] [] nil? ","val [] [] "," list_append "," block_var "," args "]}," Ruby24Parser _reduce_345":{"type":"method","name":"_reduce_345","children":[],"call":[" value_expr ","val [] "," s "," lexer comments "," lexer "," in_single "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," new_defs "," s line "]}," Ruby24Parser _reduce_344":{"type":"method","name":"_reduce_344","children":[],"call":[" s "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," lexer cmdarg stack dup "," lexer lineno "," lexer lex_state= "," env extend "," env "," in_single "," s line "," value_expr ","val [] "]}," Ruby24Parser _reduce_343":{"type":"method","name":"_reduce_343","children":[],"call":[" s "," lexer lex_state= "," lexer "," comments push "," lexer comments "," comments "," in_single "," in_def= "," env unextend "," env "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," new_defs "," s line "]}," Ruby24Parser _reduce_342":{"type":"method","name":"_reduce_342","children":[],"call":[" s "," lexer comments "," lexer "," in_def= "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," new_defn ","val [] "," comments push "," comments "," lexer lex_state= ","EXPR_ENDFN  | "," lexer cond push "," lexer cond "," lexer cmdarg push "," env extend "," in_single "," lexer lineno "," in_def "," s line "]}," Ruby24Parser _reduce_341":{"type":"method","name":"_reduce_341","children":[],"call":[" s "," lexer comments "," lexer "," in_single "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg ","result [] line ","result [] "," new_defs ","val [] "," lexer lineno "," lexer lex_state= "," s line "," value_expr "," s  [] line "," new_defs  [] line "," lexer lineno  [] line "," s line  [] line "," value_expr  [] line "," s  [] "," new_defs  [] "," lexer lineno  [] "," s line  [] "," value_expr  [] "]}," Ruby24Parser _reduce_340":{"type":"method","name":"_reduce_340","children":[],"call":[" lexer comments "," lexer "," in_single "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg ","result [] line ","result [] "," new_defs ","val [] "," lexer cmdarg stack dup "," lexer lineno "," lexer lex_state= "," env extend "," in_def= "," comments push "," comments "," in_def "," lexer cmdarg pop "," lexer cond pop "," lexer cond "," new_defn "," s line "," s "," new_defs  [] line "," new_defn  [] line "," s line  [] line "," new_defs  [] "," new_defn  [] "," s line  [] "," val [] = "," val []  "]}," Ruby24Parser _reduce_339":{"type":"method","name":"_reduce_339","children":[],"call":[" lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," lexer cmdarg stack dup "," lexer lineno "," lexer lex_state= "," env extend "," env "," in_single "," comments push "," lexer comments "," comments "," env unextend "," new_module "," lexer ignore_body_comments "," in_def= "," lexer cmdarg pop "," lexer cond pop "," lexer cond "," new_defs ","val delete_at "," s line "," s "]}," Ruby24Parser _reduce_338":{"type":"method","name":"_reduce_338","children":[],"call":[" lexer lex_state= "," lexer "," comments push "," lexer comments "," comments "," in_def= "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," new_defn ","val [] "," env extend "," yyerror "," in_single > "," in_single "," in_def "," lexer cond push "," lexer cond "," lexer cmdarg push ","EXPR_ENDFN  | "," s line "," s "]}," Ruby24Parser _reduce_302":{"type":"method","name":"_reduce_302","children":[],"call":["result paren= "," s ","val [] "," lexer cmdarg restore "," lexer cmdarg "," lexer "," warning "," lexer cmdarg store "," s line ","id to_sym "," wrap ","iter insert "," block_dup_check "," lexer cmdarg store  paren= "," s line  paren= "," wrap  paren= "]}," Ruby24Parser _reduce_280":{"type":"method","name":"_reduce_280","children":[],"call":[" new_masgn_arg ","val [] "," list_append "," s "," lexer lineno "," lexer "," s line ","val [] << "," lexer  lexer lineno no "," s  lexer lineno  "]}," Ruby24Parser _reduce_279":{"type":"method","name":"_reduce_279","children":[],"call":[" list_append "," s ","val [] "," new_masgn_arg "]}," Ruby24Parser _reduce_278":{"type":"method","name":"_reduce_278","children":[],"call":[" list_append ","val [] "," s "," s line ","arg line "," new_masgn_arg "]}," Ruby24Parser _reduce_277":{"type":"method","name":"_reduce_277","children":[],"call":[" s ","val [] "," s line ","arg line "," lexer lineno "," lexer "," list_append "," s  lexer lineno  ","arg  lexer lineno  "," lexer  lexer lineno no "]}," Ruby24Parser _reduce_276":{"type":"method","name":"_reduce_276","children":[],"call":[" s ","val [] "," list_append "]}," Ruby24Parser _reduce_274":{"type":"method","name":"_reduce_274","children":[],"call":["val [] "," s "," s line ","arg line "," lexer lineno "," lexer "]}," Ruby24Parser _reduce_273":{"type":"method","name":"_reduce_273","children":[],"call":[" s ","val [] "," lexer cmdarg restore "," lexer cmdarg "," lexer "," lexer cmdarg push "," lexer cmdarg pop ","(sym :tLBRACE_ARG) include? "]}," Ruby24Parser _reduce_272":{"type":"method","name":"_reduce_272","children":[],"call":["val [] "," lexer cmdarg restore "," lexer cmdarg "," lexer "," lexer cmdarg store "," lexer cmdarg push "," lexer cmdarg pop ","(sym :tLPAREN) include? "," last_token_type first "," last_token_type "]}," Ruby24Parser _reduce_271":{"type":"method","name":"_reduce_271","children":[],"call":[" lexer cmdarg store "," lexer cmdarg "," lexer "," call_args "," s line ","arg line "," s "]}," Ruby24Parser _reduce_261":{"type":"method","name":"_reduce_261","children":[],"call":["val [] "," args "]}," Ruby24Parser _reduce_240":{"type":"method","name":"_reduce_240","children":[],"call":[" logical_op ","val [] "," new_call "," argl ","val []= "," value_expr "," s line "," s "]}," Ruby24Parser _reduce_238":{"type":"method","name":"_reduce_238","children":[],"call":[" new_call "," argl ","val [] ","val []= "," value_expr "," logical_op "]}," Ruby24Parser _reduce_133":{"type":"method","name":"_reduce_133","children":[],"call":[" new_undef ","val [] "]}," Ruby24Parser _reduce_132":{"type":"method","name":"_reduce_132","children":[],"call":[" lexer lex_state= "," lexer "," new_undef ","val [] "]}," Ruby24Parser _reduce_131":{"type":"method","name":"_reduce_131","children":[],"call":[" new_undef ","val [] "," lexer lex_state= "," lexer "]}," Ruby24Parser _reduce_129":{"type":"method","name":"_reduce_129","children":[],"call":[" s ","val [] to_sym ","val [] "," s line "," lexer lineno "," lexer ","id to_sym "]}," Ruby24Parser _reduce_126":{"type":"method","name":"_reduce_126","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby24Parser _reduce_125":{"type":"method","name":"_reduce_125","children":[],"call":["val [] "," lexer lex_state= "," lexer "]}," Ruby24Parser _reduce_120":{"type":"method","name":"_reduce_120","children":[],"call":["val [] to_sym ","val [] "," s line "," s ","name to_sym "," wrap "]}," Ruby24Parser _reduce_117":{"type":"method","name":"_reduce_117","children":[],"call":[" yyerror "," backref_assign_error ","val [] "]}," Ruby24Parser _reduce_114":{"type":"method","name":"_reduce_114","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," s line ","id to_sym ","expr line "," new_attrasgn ","vaexpr line  [] to_sym ","vaexpr line  [] "," in_singexpr line e > "," in_singexpr line e "," s expr line ine ","expr expr line ine "]}," Ruby24Parser _reduce_113":{"type":"method","name":"_reduce_113","children":[],"call":[" new_attrasgn ","val [] "]}," Ruby24Parser _reduce_112":{"type":"method","name":"_reduce_112","children":[],"call":[" s ","val [] "," new_attrasgn "]}," Ruby24Parser _reduce_108":{"type":"method","name":"_reduce_108","children":[],"call":[" assignable ","val [] ","result line= "," lexer lineno "," lexer "," backref_assign_error "," assignable  line= ","result  lexer lineno = "," lexer  lexer lineno no "]}," Ruby24Parser _reduce_83":{"type":"method","name":"_reduce_83","children":[],"call":[" s ","val [] "," s line ","head line ","arg line ","vaarg line  [] "," s arg line ine ","head arg line ine ","arg arg line ine "]}," Ruby24Parser _reduce_71":{"type":"method","name":"_reduce_71","children":[],"call":["block insert "," block_dup_check "," new_call ","val [] ","msg to_sym ","result line ","lhs line ","op to_sym "," new_ new_call  "," new_call  line "]}," Ruby24Parser _reduce_69":{"type":"method","name":"_reduce_69","children":[],"call":["result insert ","val [] "," block_dup_check ","val [] concat ","val [] sexp_body ","call concat ","args sexp_body ","val [] concat  insert ","call concat  insert "]}," Ruby24Parser _reduce_52":{"type":"method","name":"_reduce_52","children":[],"call":[" logical_op ","val [] "]}," Ruby24Parser _reduce_48":{"type":"method","name":"_reduce_48","children":[],"call":[" value_expr "," backref_assign_error ","val [] "]}," Ruby24Parser _reduce_43":{"type":"method","name":"_reduce_43","children":[],"call":["result line= ","val [] line ","val [] ","result sexp_type= ","val [] == "," s ","val [] to_sym ","opasgn to_sym ","id to_sym "," new_op_asgn1 "," s  line= "," new_op_asgn1  line= "," s  sexp_type= "," new_op_asgn1  sexp_type= "]}," Ruby24Parser _reduce_40":{"type":"method","name":"_reduce_40","children":[],"call":[" new_assign ","val [] "]}," Ruby24Parser _reduce_29":{"type":"method","name":"_reduce_29","children":[],"call":[" new_if ","val [] "]}," Ruby24Parser _reduce_14":{"type":"method","name":"_reduce_14","children":[],"call":[" new_body "]}," Ruby24Parser _reduce_13":{"type":"method","name":"_reduce_13","children":[],"call":[" new_body "," yyerror ","_values [] "," warn "]}," Ruby23Parser _reduce_647":{"type":"method","name":"_reduce_647","children":[],"call":[]}," Ruby23Parser _reduce_646":{"type":"method","name":"_reduce_646","children":[],"call":[" yyerrok "]}," Ruby23Parser _reduce_643":{"type":"method","name":"_reduce_643","children":[],"call":[" yyerrok "]}," Ruby23Parser _reduce_617":{"type":"method","name":"_reduce_617","children":[],"call":[" s ","val [] "," s line ","v1 line ","arg line "," s arg line  ","v1 arg line  ","arg arg line  "]}," Ruby23Parser _reduce_616":{"type":"method","name":"_reduce_616","children":[],"call":[" s ","sym sexp_type= ","result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] ","val [] dup "," s line "," s  sexp_type= "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "]}," Ruby23Parser _reduce_615":{"type":"method","name":"_reduce_615","children":[],"call":[" s ","label to_sym "," s line "," lexer lineno "," lexer ","lit line "," wrap "," s line  line "," wrap  line "]}," Ruby23Parser _reduce_614":{"type":"method","name":"_reduce_614","children":[],"call":[" s ","val [] "," yyerror ","result sexp_type == ","result sexp_type "," s line ","v1 line ","arg line "," s  sexp_type == ","val []  sexp_type == "," s line  sexp_type == "," s  sexp_type ","val []  sexp_type "," s line  sexp_type "," s arg line  ","v1 arg line  ","arg arg line  "]}," Ruby23Parser _reduce_613":{"type":"method","name":"_reduce_613","children":[],"call":["result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] ","val [] dup "," lexer lex_state= "," lexer "," s line "," lexer lineno "," s ","sym sexp_type= "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "]}," Ruby23Parser _reduce_611":{"type":"method","name":"_reduce_611","children":[],"call":["val [] "," lexer lex_state= "," lexer "," s line ","v1 line "," s "]}," Ruby23Parser _reduce_610":{"type":"method","name":"_reduce_610","children":[],"call":[" s ","val [] "," s line "," lexer lineno "," lexer ","result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] dup "," s  sexp_type= ","val []  sexp_type= "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "]}," Ruby23Parser _reduce_609":{"type":"method","name":"_reduce_609","children":[],"call":[" yyerror ","result sexp_type == ","result sexp_type ","val [] ","(str \"&\") to_sym "," env []= "," env ","val [] to_sym ","val []  sexp_type == ","(str \"&\") to_sym  sexp_type == ","val []  sexp_type ","(str \"&\") to_sym  sexp_type "]}," Ruby23Parser _reduce_608":{"type":"method","name":"_reduce_608","children":[],"call":[" lexer lex_state= "," lexer ","val [] "]}," Ruby23Parser _reduce_606":{"type":"method","name":"_reduce_606","children":[],"call":[" env []= "," env "," yyerror ","result sexp_type == ","result sexp_type ","val [] "," s ","val []  sexp_type == "," s  sexp_type == ","val []  sexp_type "," s  sexp_type "]}," Ruby23Parser _reduce_605":{"type":"method","name":"_reduce_605","children":[],"call":["val [] "," assignable ","val [] to_sym "," lexer lex_state= "," lexer "," raise ","val inspect "]}," Ruby23Parser _reduce_604":{"type":"method","name":"_reduce_604","children":[],"call":["(str \"&\") to_sym "," env []= "," env ","val [] to_sym ","val [] ","id to_sym "," s ","sym []= "]}," Ruby23Parser _reduce_601":{"type":"method","name":"_reduce_601","children":[],"call":[" env []= "," env "," s line ","opt line "," s "," lexer lineno "," lexer ","(str \"&\") to_sym ","id to_sym ","val [] ","val [] [] to_sym ","val [] [] ","result []= ","list push ","more empty? ","val [] dup "," s line  []= "," s  []= ","val [] dup  push ","val [] []  empty? "]}," Ruby23Parser _reduce_600":{"type":"method","name":"_reduce_600","children":[],"call":[" assignable ","val [] to_sym ","val [] ","result << "," block_append ","id to_sym "," s "," block_append  << "," s  << "]}," Ruby23Parser _reduce_593":{"type":"method","name":"_reduce_593","children":[],"call":[" assignable ","val [] ","val [] to_sym "," s line ","opt line "," s ","result []= ","list push ","more empty? ","val [] [] ","val [] dup "," assignable  []= "," s line  []= ","val []  []= "," s  []= ","val [] dup  push ","val [] []  empty? "]}," Ruby23Parser _reduce_583":{"type":"method","name":"_reduce_583","children":[],"call":[" s "," env []= "," env ","label to_sym ","val [] ","result << "," s line ","list line ","list sexp_type == ","list sexp_type "," block_append ","(str \"&\") to_sym ","val [] to_sym "," s  << "," s line  << "," block_append  << ","val []  << ","(str \"&\") to_sym  << "]}," Ruby23Parser _reduce_580":{"type":"method","name":"_reduce_580","children":[],"call":[" s ","val [] "," env []= "," env ","label to_sym "," raise ","val inspect "," debug20 "," s line "," lexer lineno "," lexer "," assignable ","val [] to_sym "]}," Ruby23Parser _reduce_570":{"type":"method","name":"_reduce_570","children":[],"call":[" yyerror "," args "," env []= "," env ","id to_sym "," s ","val [] ","label to_sym "," debug20 "]}," Ruby23Parser _reduce_569":{"type":"method","name":"_reduce_569","children":[],"call":[" yyerror "," args "," s "," env []= "," env ","label to_sym ","val [] "]}," Ruby23Parser _reduce_567":{"type":"method","name":"_reduce_567","children":[],"call":[" args "," yyerror "," s "," env []= "," env ","label to_sym ","val [] "]}," Ruby23Parser _reduce_565":{"type":"method","name":"_reduce_565","children":[],"call":[" args "," yyerror "," raise ","val inspect "," debug20 ","val [] ","result << "," s ","list << ","item last "," args  << ","val []  << "," s  << ","list <<  << "]}," Ruby23Parser _reduce_560":{"type":"method","name":"_reduce_560","children":[],"call":[" args ","val [] "," s "," env []= "," env ","label to_sym "]}," Ruby23Parser _reduce_556":{"type":"method","name":"_reduce_556","children":[],"call":[" args ","val [] "," yyerror "," raise ","val inspect "," debug20 ","result << "," s "," args  << ","val []  << "," s  << "]}," Ruby23Parser _reduce_555":{"type":"method","name":"_reduce_555","children":[],"call":[" args "," yyerror ","val [] "]}," Ruby23Parser _reduce_553":{"type":"method","name":"_reduce_553","children":[],"call":[" args "," yyerror "," env []= "," env ","val [] to_sym ","val [] "]}," Ruby23Parser _reduce_531":{"type":"method","name":"_reduce_531","children":[],"call":[" s "," s line "," lexer lineno "," lexer "," args "," lexer command_start= "," lexer lex_state= ","val [] "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer ","  lexer lineno exer command_start= ","  lexer lineno exer  lexer lineno ex_state= ","va lexer lineno  [] "]}," Ruby23Parser _reduce_508":{"type":"method","name":"_reduce_508","children":[],"call":[" s ","val [] to_sym ","val [] "," s line ","str line "," lexer lex_strterm= "," lexer "," raise ","stmt inspect "," debug20 ","stmt sexp_type "," lexer lex_state= "," lexer cond pop "," lexer cond "," lexer cmdarg pop "," lexer cmdarg "," lexer string_nest= "," lexer brace_nest= "," wrap "]}," Ruby23Parser _reduce_507":{"type":"method","name":"_reduce_507","children":[],"call":[" s ","val [] to_sym ","val [] "," lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm "," lexer string_nest= "," lexer brace_nest= "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," lexer lineno "," lexer lex_state "," lexer string_nest "," lexer brace_nest "," wrap "]}," Ruby23Parser _reduce_506":{"type":"method","name":"_reduce_506","children":[],"call":[" s ","val [] to_sym ","val [] "," new_string "," s line ","str line "," lexer lex_strterm= "," lexer ","id to_sym "," wrap "]}," Ruby23Parser _reduce_505":{"type":"method","name":"_reduce_505","children":[],"call":[" raise ","stmt inspect "," debug20 "," s ","stmt sexp_type "," lexer lex_state= "," lexer "," lexer cmdarg restore "," lexer cmdarg "," lexer cond restore "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," literal_concat "," lexer lex_strterm "," s line ","id to_sym "," wrap ","val [] "]}," Ruby23Parser _reduce_504":{"type":"method","name":"_reduce_504","children":[],"call":[" lexer lex_state= "," lexer "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer lex_state "," lexer cmdarg store "," lexer cmdarg "," lexer cond store "," lexer cond "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "," new_string "," s line "," s ","id to_sym "," wrap ","val [] ","val [] -@ "]}," Ruby23Parser _reduce_503":{"type":"method","name":"_reduce_503","children":[],"call":[" s ","val [] "," lexer lex_strterm= "," lexer "," literal_concat "," raise ","stmt inspect "," debug "," s line ","stmt sexp_type "," lexer lex_state= "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," wrap "]}," Ruby23Parser _reduce_502":{"type":"method","name":"_reduce_502","children":[],"call":[" lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm "," lexer string_nest= "," lexer brace_nest= "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," lexer lineno "," lexer lex_state "," lexer string_nest "," lexer brace_nest "," wrap ","val [] ","val [] -@ "," debug20 "," s ","result last to_sym ","result last ","result []= ","result [] "," lexer lex_strterm  last to_sym "," wrap  last to_sym ","val [] -@  last to_sym "," s  last to_sym ","val []  last to_sym "," lexer lex_strterm  last "," wrap  last ","val [] -@  last "," s  last ","val []  last "," lexer lex_strterm  []= "," wrap  []= ","val [] -@  []= "," s  []= ","val []  []= "," lexer lex_strterm  [] "," wrap  [] ","val [] -@  [] "," s  [] ","val []  [] "]}," Ruby23Parser _reduce_501":{"type":"method","name":"_reduce_501","children":[],"call":[" new_string "," literal_concat "," s line ","str line "," s "," lexer lex_strterm= "," lexer "," wrap ","val [] "]}," Ruby23Parser _reduce_500":{"type":"method","name":"_reduce_500","children":[],"call":[" literal_concat ","val [] "," s line "," lexer lineno "," lexer "," s "," lexer lex_state= "," lexer lex_strterm= "," lexer lex_strterm "," raise ","stmt inspect "," debug ","stmt sexp_type "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," debug20 ","result last to_sym ","result last ","result []= ","result [] "," literal_concat  last to_sym "," s line  last to_sym "," lexer lex_strterm  last to_sym "," s  last to_sym ","val []  last to_sym "," literal_concat  last "," s line  last "," lexer lex_strterm  last "," s  last ","val []  last "," literal_concat  []= "," s line  []= "," lexer lex_strterm  []= "," s  []= ","val []  []= "," literal_concat  [] "," s line  [] "," lexer lex_strterm  [] "," s  [] ","val []  [] "]}," Ruby23Parser _reduce_498":{"type":"method","name":"_reduce_498","children":[],"call":[" literal_concat ","val [] "," new_qsym_list "," s line "," lexer lineno "," lexer "," s ","str line "," lexer lex_strterm= ","val [] -@ "]}," Ruby23Parser _reduce_496":{"type":"method","name":"_reduce_496","children":[],"call":[" literal_concat ","val [] "," new_qword_list "," new_qsym_list "," new_string ","val [] to_sym "," lexer lex_state= "," lexer "," debug20 "," s ","result last to_sym ","result last ","result []= ","result [] "," literal_concat  last to_sym "," new_qword_list  last to_sym "," new_qsym_list  last to_sym "," new_string  last to_sym ","val [] to_sym  last to_sym "," s  last to_sym ","val []  last to_sym "," literal_concat  last "," new_qword_list  last "," new_qsym_list  last "," new_string  last ","val [] to_sym  last "," s  last ","val []  last "," literal_concat  []= "," new_qword_list  []= "," new_qsym_list  []= "," new_string  []= ","val [] to_sym  []= "," s  []= ","val []  []= "," literal_concat  [] "," new_qword_list  [] "," new_qsym_list  [] "," new_string  [] ","val [] to_sym  [] "," s  [] ","val []  [] "]}," Ruby23Parser _reduce_495":{"type":"method","name":"_reduce_495","children":[],"call":[" s ","val [] ","val [] dup << "," new_qword_list_entry ","val [] dup "," literal_concat ","val [] to_sym "," debug20 ","result last to_sym ","result last ","result []= ","result [] "," lexer lex_state= "," lexer "," s  last to_sym ","val []  last to_sym ","val [] dup <<  last to_sym "," literal_concat  last to_sym ","val [] to_sym  last to_sym "," s  last ","val []  last ","val [] dup <<  last "," literal_concat  last ","val [] to_sym  last "," s  []= ","val []  []= ","val [] dup <<  []= "," literal_concat  []= ","val [] to_sym  []= "," s  [] ","val []  [] ","val [] dup <<  [] "," literal_concat  [] ","val [] to_sym  [] "]}," Ruby23Parser _reduce_494":{"type":"method","name":"_reduce_494","children":[],"call":["val [] dup << "," new_qsym_list_entry ","val [] dup ","val [] "," s line "," lexer lineno "," lexer "," s "," new_qword_list "," literal_concat ","val [] to_sym "," lexer lex_state= "]}," Ruby23Parser _reduce_493":{"type":"method","name":"_reduce_493","children":[],"call":[" new_qsym_list ","val [] "," s line "," s "," +@ "," prev_value_to_lineno ","_values last "," literal_concat ","val [] to_sym "," s  prev_value_to_lineno  "," prev_value_to_ prev_value_to_lineno no "]}," Ruby23Parser _reduce_490":{"type":"method","name":"_reduce_490","children":[],"call":["val [] "," new_symbol_list line "," lexer lineno "," lexer "," new_symbol_list "," s line "," s ","val [] dup << "," new_qword_list_entry ","val [] dup "," +@ "," prev_value_to_lineno ","_values last ","val [] to_sym "," lexer lex_state= "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer lex_state "," lexer cmdarg store "," lexer cmdarg "," lexer cond store "," lexer cond "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "," new_symbol_list  prev_value_to_lineno  "," lexer  prev_value_to_lineno no "," s  prev_value_to_lineno  "," prev_value_to_ prev_value_to_lineno no "]}," Ruby23Parser _reduce_462":{"type":"method","name":"_reduce_462","children":[],"call":["val [] "," s line "," s "," new_regexp "," literal_concat "]}," Ruby23Parser _reduce_452":{"type":"method","name":"_reduce_452","children":[],"call":[" lexer cmdarg restore "," lexer cmdarg "," lexer "," env unextend "," env "," new_do_body "," lexer cmdarg store "," lexer lineno "," env extend "," s ","val [] "," literal_concat "]}," Ruby23Parser _reduce_449":{"type":"method","name":"_reduce_449","children":[],"call":[" lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," env unextend "," env "," new_brace_body "," lexer lineno "," env extend "," s line ","arg line "," s "," debug20 ","val [] ","val []= ","val [] value ","val [] [] == ","val [] [] "]}," Ruby23Parser _reduce_446":{"type":"method","name":"_reduce_446","children":[],"call":[" env unextend "," env ","result line= "," new_aref "," lexer cmdarg push "," lexer cmdarg "," lexer "," s line ","arg line "," s ","val [] "," new_aref  line= "," s line  line= ","val []  line= "," s  line= "]}," Ruby23Parser _reduce_444":{"type":"method","name":"_reduce_444","children":[],"call":[" env unextend "," env ","result line= "," new_super ","val [] "," new_aref "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," new_brace_body "," new_do_body "," s "," new_super  line= "," new_aref  line= "," new_brace_body  line= "," new_do_body  line= "]}," Ruby23Parser _reduce_442":{"type":"method","name":"_reduce_442","children":[],"call":[" new_aref "," new_call ","val [] "," new_super "," lexer lineno "," lexer "," env extend "," env "]}," Ruby23Parser _reduce_441":{"type":"method","name":"_reduce_441","children":[],"call":[" s "," new_call ","val [] to_sym ","val [] "," env unextend "," env ","result line "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," new_brace_body ","result << "," new_resbody ","klasses << "," node_assign "," s  line "," new_call  line "," new_brace_body  line "," new_resbody  line ","val []  line "," s  << "," new_call  << "," new_brace_body  << "," new_resbody  << ","val []  << "]}," Ruby23Parser _reduce_437":{"type":"method","name":"_reduce_437","children":[],"call":[" new_call ","val [] to_sym ","val [] "," lexer lineno "," lexer "," new_aref "," env extend "," env ","result << "," new_resbody ","klasses << "," new_assign "," s "," new_call  << "," lexer lineno  << "," new_aref  << "," new_resbody  << "]}," Ruby23Parser _reduce_436":{"type":"method","name":"_reduce_436","children":[],"call":[" new_call ","val [] ","val [] to_sym ","iter2 insert ","name to_sym ","result line ","call concat ","args sexp_body "," s line "," lexer lineno "," lexer "," s "," env unextend "," env ","result line= "," new_iter "," env extend ","result << "," new_resbody ","klasses << "," node_assign "," new_ new_call  "," new_call  line ","call concat  line "," s line  line "," new_iter  line "," lexer lineno  line "," new_resbody  line "," new_call  concat "," new_call  line= ","call concat  line= "," s line  line= "," new_iter  line= "," lexer lineno  line= "," new_resbody  line= "," new_call  << ","call concat  << "," s line  << "," new_iter  << "," lexer lineno  << "," new_resbody  << "]}," Ruby23Parser _reduce_404":{"type":"method","name":"_reduce_404","children":[],"call":[" args "," args << "," lexer command_start= "," lexer "," s ","val [] to_sym ","val [] "," env unextend "," env "," new_iter "," new_call "," lexer lpar_beg= "," lexer paren_nest "," lexer lpar_beg "," lexer lineno "," env extend "," new_ new_call  "]}," Ruby23Parser _reduce_399":{"type":"method","name":"_reduce_399","children":[],"call":[" args "]}," Ruby23Parser _reduce_395":{"type":"method","name":"_reduce_395","children":[],"call":[" args "," call_args "," s "," lexer command_start= "," lexer "]}," Ruby23Parser _reduce_378":{"type":"method","name":"_reduce_378","children":[],"call":[" s ","val [] "," block_var "," args "," call_args "]}," Ruby23Parser _reduce_345":{"type":"method","name":"_reduce_345","children":[],"call":[" value_expr ","val [] "," s line "," s "]}," Ruby23Parser _reduce_344":{"type":"method","name":"_reduce_344","children":[],"call":[" s "," lexer comments "," lexer "," in_single "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," new_defs ","val [] "," s line "]}," Ruby23Parser _reduce_343":{"type":"method","name":"_reduce_343","children":[],"call":[" s "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," lexer cmdarg stack dup "," lexer lineno "," lexer lex_state= "," env extend "," env "," in_single "," s line "," value_expr ","val [] "]}," Ruby23Parser _reduce_342":{"type":"method","name":"_reduce_342","children":[],"call":[" s "," lexer lex_state= "," lexer "," comments push "," lexer comments "," comments "," in_single "," in_def= "," env unextend "," env "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," new_defs "," s line "]}," Ruby23Parser _reduce_341":{"type":"method","name":"_reduce_341","children":[],"call":[" s "," lexer comments "," lexer "," in_def= "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," new_defn ","val [] "," comments push "," comments "," lexer lex_state= ","EXPR_ENDFN  | "," lexer cond push "," lexer cond "," lexer cmdarg push "," env extend "," in_single "," lexer lineno "," in_def "," s line "]}," Ruby23Parser _reduce_340":{"type":"method","name":"_reduce_340","children":[],"call":[" lexer comments "," lexer "," in_single "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg ","result [] line ","result [] "," new_defs ","val [] "," lexer lineno "," lexer lex_state= "," s line "," s "," value_expr "," new_defs  [] line "," lexer lineno  [] line "," s line  [] line "," value_expr  [] line "," new_defs  [] "," lexer lineno  [] "," s line  [] "," value_expr  [] "]}," Ruby23Parser _reduce_339":{"type":"method","name":"_reduce_339","children":[],"call":[" lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," lexer cmdarg stack dup "," lexer lineno "," lexer lex_state= "," env extend "," env "," in_single "," in_def= "," comments push "," lexer comments "," comments "," in_def "," env unextend "," lexer cmdarg pop "," lexer cond pop "," lexer cond "," new_defn ","val [] "," s line "," s "," val [] = "," val []  "]}," Ruby23Parser _reduce_338":{"type":"method","name":"_reduce_338","children":[],"call":[" lexer lex_state= "," lexer "," comments push "," lexer comments "," comments "," env unextend "," env "," new_module "," lexer lineno "," lexer ignore_body_comments "," in_single "," in_def= "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," new_defs ","val delete_at "," s line "," s "," value_expr ","val [] "]}," Ruby23Parser _reduce_302":{"type":"method","name":"_reduce_302","children":[],"call":["result paren= "," s ","val [] "," lexer lex_state= "," lexer "," s line "," lexer lineno ","call line= ","iter line ","iter insert "," block_dup_check "," lexer lineno  paren= "," s  paren= ","val []  paren= "]}," Ruby23Parser _reduce_280":{"type":"method","name":"_reduce_280","children":[],"call":[" new_masgn_arg ","val [] "," list_append "," s line "," s "," arg_concat "]}," Ruby23Parser _reduce_279":{"type":"method","name":"_reduce_279","children":[],"call":[" list_append "," s ","val [] "," lexer lineno "," lexer "," s line ","val [] << "," lexer  lexer lineno no "," s  lexer lineno  "]}," Ruby23Parser _reduce_278":{"type":"method","name":"_reduce_278","children":[],"call":[" list_append ","val [] "," new_masgn_arg "]}," Ruby23Parser _reduce_277":{"type":"method","name":"_reduce_277","children":[],"call":[" s ","val [] "," s line ","arg line "," new_masgn_arg "]}," Ruby23Parser _reduce_276":{"type":"method","name":"_reduce_276","children":[],"call":[" s ","val [] "," s line ","arg line "," lexer lineno "," lexer "," list_append "," s  lexer lineno  ","arg  lexer lineno  "," lexer  lexer lineno no "]}," Ruby23Parser _reduce_274":{"type":"method","name":"_reduce_274","children":[],"call":["val [] "," s line ","arg line "," s "," arg_concat "]}," Ruby23Parser _reduce_273":{"type":"method","name":"_reduce_273","children":[],"call":[" s ","val [] "," s line ","arg line "," lexer lineno "," lexer ","val [] << "]}," Ruby23Parser _reduce_272":{"type":"method","name":"_reduce_272","children":[],"call":["val [] "," lexer cmdarg restore "," lexer cmdarg "," lexer "," lexer cmdarg push "," lexer cmdarg pop ","(sym :tLBRACE_ARG) include? "," arg_concat "," new_masgn_arg "]}," Ruby23Parser _reduce_271":{"type":"method","name":"_reduce_271","children":[],"call":[" lexer cmdarg store "," lexer cmdarg "," lexer "," lexer cmdarg push "," lexer cmdarg pop ","(sym :tLPAREN) include? "," last_token_type first "," last_token_type ","val [] ","val [] << "," new_masgn_arg "]}," Ruby23Parser _reduce_261":{"type":"method","name":"_reduce_261","children":[],"call":["val [] "," args "," array_to_hash "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," call_args "]}," Ruby23Parser _reduce_240":{"type":"method","name":"_reduce_240","children":[],"call":[" logical_op ","val [] "," s line ","c line "," s "," logop "]}," Ruby23Parser _reduce_238":{"type":"method","name":"_reduce_238","children":[],"call":[" new_call "," argl ","val [] ","val []= "," value_expr "," logical_op "," logop "]}," Ruby23Parser _reduce_133":{"type":"method","name":"_reduce_133","children":[],"call":[" new_undef ","val [] "]}," Ruby23Parser _reduce_132":{"type":"method","name":"_reduce_132","children":[],"call":[" lexer lex_state= "," lexer "," new_undef ","val [] "]}," Ruby23Parser _reduce_131":{"type":"method","name":"_reduce_131","children":[],"call":[" new_undef ","val [] "," lexer lex_state= "," lexer "]}," Ruby23Parser _reduce_129":{"type":"method","name":"_reduce_129","children":[],"call":[" s ","val [] to_sym ","val [] "," new_undef "]}," Ruby23Parser _reduce_126":{"type":"method","name":"_reduce_126","children":[],"call":[" lexer lex_state= "," lexer "," new_undef ","val [] "]}," Ruby23Parser _reduce_125":{"type":"method","name":"_reduce_125","children":[],"call":["val [] "," lexer lex_state= "," lexer "]}," Ruby23Parser _reduce_120":{"type":"method","name":"_reduce_120","children":[],"call":["val [] to_sym ","val [] "," s ","result line ","pval line ","name to_sym ","id to_sym "," lexer lex_state= "," lexer ","val [] to_sym  line "," s  line ","val []  line "]}," Ruby23Parser _reduce_117":{"type":"method","name":"_reduce_117","children":[],"call":[" yyerror "]}," Ruby23Parser _reduce_114":{"type":"method","name":"_reduce_114","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," s line ","id to_sym "," lexer lineno "," lexer ","expr line "," debug ","va lexer lineno  [] to_sym ","vaexpr line  [] to_sym ","va lexer lineno  [] ","vaexpr line  [] "," in_sing lexer lineno e > "," in_singexpr line e > "," in_sing lexer lineno e "," in_singexpr line e "," s  lexer lineno ine "," s expr line ine ","  lexer lineno exer  lexer lineno ineno "," expr line exer expr line ineno ","  lexer lineno exer "," expr line exer ","expr  lexer lineno ine ","expr expr line ine "]}," Ruby23Parser _reduce_113":{"type":"method","name":"_reduce_113","children":[],"call":[" new_attrasgn ","val [] "," s ","val [] to_sym "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," s line ","id to_sym ","expr line ","vaexpr line  [] ","vaexpr line  [] to_sym "," in_singexpr line e > "," in_singexpr line e "," s expr line ine ","expr expr line ine "]}," Ruby23Parser _reduce_112":{"type":"method","name":"_reduce_112","children":[],"call":[" s ","val [] "," new_attrasgn ","val [] to_sym "," yyerror "]}," Ruby23Parser _reduce_108":{"type":"method","name":"_reduce_108","children":[],"call":[" assignable ","val [] "," debug20 ","result line= "," lexer lineno "," lexer "," s ","val [] to_sym "," yyerror "," in_single > "," in_single "," in_def "," assignable  line= "," s  line= ","result  lexer lineno = "," lexer  lexer lineno no "]}," Ruby23Parser _reduce_83":{"type":"method","name":"_reduce_83","children":[],"call":[" s ","val [] ","val [] << ","val [] compact "," s line ","lhs line ","lhs << ","rhs compact ","head line ","val [] [] "]}," Ruby23Parser _reduce_71":{"type":"method","name":"_reduce_71","children":[],"call":["block insert "," block_dup_check "," new_call ","val [] ","msg to_sym ","val [] to_sym "," new_ new_call  "]}," Ruby23Parser _reduce_69":{"type":"method","name":"_reduce_69","children":[],"call":["result insert ","val [] "," block_dup_check ","val [] concat ","val [] sexp_body "," new_call ","val [] to_sym ","op to_sym ","call concat ","args sexp_body "," s line "," s "," ret_args ","val [] last ","val [] concat  insert "," new_call  insert ","call concat  insert "," s line  insert "," s val [] last  "]}," Ruby23Parser _reduce_52":{"type":"method","name":"_reduce_52","children":[],"call":[" logical_op ","val [] "]}," Ruby23Parser _reduce_48":{"type":"method","name":"_reduce_48","children":[],"call":[" value_expr "," backref_assign_error ","val [] "]}," Ruby23Parser _reduce_43":{"type":"method","name":"_reduce_43","children":[],"call":["result line= ","val [] line ","val [] ","result sexp_type= ","val [] == "," s ","val [] to_sym ","opasgn to_sym ","id to_sym "," new_op_asgn1 "," s  line= "," new_op_asgn1  line= "," s  sexp_type= "," new_op_asgn1  sexp_type= "]}," Ruby23Parser _reduce_40":{"type":"method","name":"_reduce_40","children":[],"call":[" new_assign ","val [] "]}," Ruby23Parser _reduce_29":{"type":"method","name":"_reduce_29","children":[],"call":[" new_if ","val [] "]}," Ruby23Parser _reduce_14":{"type":"method","name":"_reduce_14","children":[],"call":[" new_body "]}," Ruby23Parser _reduce_13":{"type":"method","name":"_reduce_13","children":[],"call":[" new_body "," yyerror ","_values [] "," warn "]}," Ruby22Parser _reduce_646":{"type":"method","name":"_reduce_646","children":[],"call":[]}," Ruby22Parser _reduce_645":{"type":"method","name":"_reduce_645","children":[],"call":[" yyerrok "]}," Ruby22Parser _reduce_642":{"type":"method","name":"_reduce_642","children":[],"call":[" yyerrok "]}," Ruby22Parser _reduce_617":{"type":"method","name":"_reduce_617","children":[],"call":[" s ","val [] "," s line ","v1 line ","arg line "," s arg line  ","v1 arg line  ","arg arg line  "]}," Ruby22Parser _reduce_616":{"type":"method","name":"_reduce_616","children":[],"call":[" s ","sym sexp_type= ","result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] ","val [] dup "," s line "," s  sexp_type= "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "]}," Ruby22Parser _reduce_615":{"type":"method","name":"_reduce_615","children":[],"call":[" s ","label to_sym "," s line "," lexer lineno "," lexer ","lit line "," wrap "," s line  line "," wrap  line "]}," Ruby22Parser _reduce_614":{"type":"method","name":"_reduce_614","children":[],"call":[" s ","val [] "," yyerror ","result sexp_type == ","result sexp_type "," s line ","v1 line ","arg line "," s  sexp_type == ","val []  sexp_type == "," s line  sexp_type == "," s  sexp_type ","val []  sexp_type "," s line  sexp_type "," s arg line  ","v1 arg line  ","arg arg line  "]}," Ruby22Parser _reduce_613":{"type":"method","name":"_reduce_613","children":[],"call":["result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] ","val [] dup "," lexer lex_state= "," lexer "," s line "," lexer lineno "," s ","sym sexp_type= "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "]}," Ruby22Parser _reduce_611":{"type":"method","name":"_reduce_611","children":[],"call":["val [] "," lexer lex_state= "," lexer "," s line ","v1 line "," s "]}," Ruby22Parser _reduce_610":{"type":"method","name":"_reduce_610","children":[],"call":[" s ","val [] "," s line "," lexer lineno "," lexer ","result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] dup "," s  sexp_type= ","val []  sexp_type= "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "]}," Ruby22Parser _reduce_609":{"type":"method","name":"_reduce_609","children":[],"call":[" yyerror ","result sexp_type == ","result sexp_type ","val [] ","(str \"&\") to_sym "," env []= "," env ","val [] to_sym ","val []  sexp_type == ","(str \"&\") to_sym  sexp_type == ","val []  sexp_type ","(str \"&\") to_sym  sexp_type "]}," Ruby22Parser _reduce_608":{"type":"method","name":"_reduce_608","children":[],"call":[" lexer lex_state= "," lexer ","val [] "]}," Ruby22Parser _reduce_606":{"type":"method","name":"_reduce_606","children":[],"call":[" env []= "," env "," yyerror ","result sexp_type == ","result sexp_type ","val [] ","val []  sexp_type == ","val []  sexp_type "]}," Ruby22Parser _reduce_605":{"type":"method","name":"_reduce_605","children":[],"call":["val [] "," assignable ","val [] to_sym "," lexer lex_state= "," lexer "]}," Ruby22Parser _reduce_604":{"type":"method","name":"_reduce_604","children":[],"call":["(str \"&\") to_sym "," env []= "," env ","val [] to_sym ","val [] ","id to_sym "]}," Ruby22Parser _reduce_601":{"type":"method","name":"_reduce_601","children":[],"call":[" env []= "," env "," s line ","opt line "," s "," lexer lineno "," lexer ","(str \"&\") to_sym ","id to_sym "]}," Ruby22Parser _reduce_600":{"type":"method","name":"_reduce_600","children":[],"call":[" assignable ","val [] to_sym ","val [] ","result << "," block_append ","id to_sym "," block_append  << "]}," Ruby22Parser _reduce_593":{"type":"method","name":"_reduce_593","children":[],"call":[" assignable ","val [] ","val [] to_sym "," s line ","opt line "," s ","result []= ","list push ","more empty? ","val [] [] ","val [] dup "," assignable  []= "," s line  []= "," s  []= ","val [] dup  push ","val [] []  empty? "]}," Ruby22Parser _reduce_583":{"type":"method","name":"_reduce_583","children":[],"call":[" s "," env []= "," env ","label to_sym ","val [] ","result << "," s line ","list line ","list sexp_type == ","list sexp_type ","(str \"&\") to_sym ","val [] to_sym "," s  << "," s line  << ","(str \"&\") to_sym  << "]}," Ruby22Parser _reduce_580":{"type":"method","name":"_reduce_580","children":[],"call":[" s ","val [] "," env []= "," env ","label to_sym "," raise ","val inspect "," debug20 "," s line "," lexer lineno "," lexer "," assignable ","val [] to_sym "]}," Ruby22Parser _reduce_570":{"type":"method","name":"_reduce_570","children":[],"call":[" yyerror "," args "," env []= "," env ","id to_sym "," debug20 ","val [] "]}," Ruby22Parser _reduce_569":{"type":"method","name":"_reduce_569","children":[],"call":[" yyerror "," args ","val [] "]}," Ruby22Parser _reduce_567":{"type":"method","name":"_reduce_567","children":[],"call":[" args "," yyerror "]}," Ruby22Parser _reduce_565":{"type":"method","name":"_reduce_565","children":[],"call":[" args "," yyerror ","list << ","item last "]}," Ruby22Parser _reduce_560":{"type":"method","name":"_reduce_560","children":[],"call":[" args "," s "," env []= "," env ","label to_sym ","val [] "]}," Ruby22Parser _reduce_556":{"type":"method","name":"_reduce_556","children":[],"call":[" args ","val [] "," raise ","val inspect "," debug20 ","result << "," s "," args  << ","val []  << "," s  << "]}," Ruby22Parser _reduce_555":{"type":"method","name":"_reduce_555","children":[],"call":[" args ","val [] "]}," Ruby22Parser _reduce_553":{"type":"method","name":"_reduce_553","children":[],"call":[" args "," env []= "," env ","val [] to_sym ","val [] "]}," Ruby22Parser _reduce_531":{"type":"method","name":"_reduce_531","children":[],"call":[" s "," s line "," lexer lineno "," lexer ","val [] "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer ","va lexer lineno  [] "]}," Ruby22Parser _reduce_508":{"type":"method","name":"_reduce_508","children":[],"call":[" s ","val [] to_sym ","val [] "," s line ","str line "," lexer lex_strterm= "," lexer "," raise ","stmt inspect "," debug20 ","stmt sexp_type "," lexer lex_state= "," lexer cond pop "," lexer cond "," lexer cmdarg pop "," lexer cmdarg "," lexer string_nest= "," lexer brace_nest= "," wrap "]}," Ruby22Parser _reduce_507":{"type":"method","name":"_reduce_507","children":[],"call":[" s ","val [] to_sym ","val [] "," lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm "," lexer string_nest= "," lexer brace_nest= "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," lexer lineno "," lexer lex_state "," lexer string_nest "," lexer brace_nest "," wrap "]}," Ruby22Parser _reduce_506":{"type":"method","name":"_reduce_506","children":[],"call":[" s ","val [] to_sym ","val [] "," new_string "," s line ","str line "," lexer lex_strterm= "," lexer ","id to_sym "," wrap "]}," Ruby22Parser _reduce_505":{"type":"method","name":"_reduce_505","children":[],"call":[" raise ","stmt inspect "," debug20 "," s ","stmt sexp_type "," lexer lex_state= "," lexer "," lexer cmdarg restore "," lexer cmdarg "," lexer cond restore "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," literal_concat "," lexer lex_strterm "," s line ","id to_sym "," wrap ","val [] "]}," Ruby22Parser _reduce_504":{"type":"method","name":"_reduce_504","children":[],"call":[" lexer lex_state= "," lexer "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer lex_state "," lexer cmdarg store "," lexer cmdarg "," lexer cond store "," lexer cond "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "," new_string "," s line "," s ","id to_sym "," wrap ","val [] "]}," Ruby22Parser _reduce_503":{"type":"method","name":"_reduce_503","children":[],"call":[" s ","val [] "," lexer lex_strterm= "," lexer "," literal_concat "," raise ","stmt inspect "," debug "," s line ","stmt sexp_type "," lexer lex_state= "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," wrap "]}," Ruby22Parser _reduce_502":{"type":"method","name":"_reduce_502","children":[],"call":[" lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm "," lexer string_nest= "," lexer brace_nest= "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," lexer lineno "," lexer lex_state "," lexer string_nest "," lexer brace_nest "," wrap ","val [] "]}," Ruby22Parser _reduce_501":{"type":"method","name":"_reduce_501","children":[],"call":[" new_string "," literal_concat "," s line ","str line "," s "," lexer lex_strterm= "," lexer "," wrap ","val [] "]}," Ruby22Parser _reduce_500":{"type":"method","name":"_reduce_500","children":[],"call":[" literal_concat ","val [] "," s line "," lexer lineno "," lexer "," s "," lexer lex_state= "," lexer lex_strterm= "," lexer lex_strterm "," raise ","stmt inspect "," debug ","stmt sexp_type "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," lexer string_nest= "," lexer brace_nest= "]}," Ruby22Parser _reduce_498":{"type":"method","name":"_reduce_498","children":[],"call":[" literal_concat ","val [] "," new_qsym_list "," s line "," lexer lineno "," lexer "," s ","str line "," lexer lex_strterm= ","val [] -@ "]}," Ruby22Parser _reduce_496":{"type":"method","name":"_reduce_496","children":[],"call":[" literal_concat ","val [] "," new_qword_list "," new_qsym_list "," new_string "," debug20 "," s ","result last to_sym ","result last ","result []= ","result [] "," lexer lex_state= "," lexer "," literal_concat  last to_sym "," new_qword_list  last to_sym "," new_qsym_list  last to_sym "," new_string  last to_sym "," s  last to_sym ","val []  last to_sym "," literal_concat  last "," new_qword_list  last "," new_qsym_list  last "," new_string  last "," s  last ","val []  last "," literal_concat  []= "," new_qword_list  []= "," new_qsym_list  []= "," new_string  []= "," s  []= ","val []  []= "," literal_concat  [] "," new_qword_list  [] "," new_qsym_list  [] "," new_string  [] "," s  [] ","val []  [] "]}," Ruby22Parser _reduce_495":{"type":"method","name":"_reduce_495","children":[],"call":[" s ","val [] ","val [] dup << "," new_qword_list_entry ","val [] dup "," literal_concat "," debug20 ","result last to_sym ","result last ","result []= ","result [] "," lexer lex_state= "," lexer "," s  last to_sym ","val []  last to_sym ","val [] dup <<  last to_sym "," literal_concat  last to_sym "," s  last ","val []  last ","val [] dup <<  last "," literal_concat  last "," s  []= ","val []  []= ","val [] dup <<  []= "," literal_concat  []= "," s  [] ","val []  [] ","val [] dup <<  [] "," literal_concat  [] "]}," Ruby22Parser _reduce_494":{"type":"method","name":"_reduce_494","children":[],"call":["val [] dup << "," new_qsym_list_entry ","val [] dup ","val [] "," s line "," lexer lineno "," lexer "," s "," new_qword_list "," literal_concat "]}," Ruby22Parser _reduce_493":{"type":"method","name":"_reduce_493","children":[],"call":[" new_qsym_list ","val [] "," s line "," s "," +@ "," prev_value_to_lineno ","_values last "," literal_concat "," s  prev_value_to_lineno  "," prev_value_to_ prev_value_to_lineno no "]}," Ruby22Parser _reduce_490":{"type":"method","name":"_reduce_490","children":[],"call":["val [] "," new_symbol_list line "," lexer lineno "," lexer "," new_symbol_list "," s line "," s ","val [] dup << "," new_qword_list_entry ","val [] dup "," +@ "," prev_value_to_lineno ","_values last ","val [] to_sym "," lexer lex_state= "," new_symbol_list  prev_value_to_lineno  "," lexer  prev_value_to_lineno no "," s  prev_value_to_lineno  "," prev_value_to_ prev_value_to_lineno no "]}," Ruby22Parser _reduce_462":{"type":"method","name":"_reduce_462","children":[],"call":["val [] "," s line "," s "," literal_concat "]}," Ruby22Parser _reduce_452":{"type":"method","name":"_reduce_452","children":[],"call":[" lexer cmdarg restore "," lexer cmdarg "," lexer "," env unextend "," env "," new_do_body "," lexer cmdarg store "," lexer lineno "," env extend ","val [] "," literal_concat "]}," Ruby22Parser _reduce_449":{"type":"method","name":"_reduce_449","children":[],"call":[" lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," env unextend "," env "," new_brace_body "," lexer lineno "," env extend "," s line ","arg line "," s "," debug20 ","val [] ","val []= ","val [] value ","val [] [] == ","val [] [] "]}," Ruby22Parser _reduce_446":{"type":"method","name":"_reduce_446","children":[],"call":[" env unextend "," env ","result line= "," new_aref "," lexer cmdarg push "," lexer cmdarg "," lexer "," s line ","arg line "," s ","val [] "," new_aref  line= "," s line  line= "," s  line= "]}," Ruby22Parser _reduce_444":{"type":"method","name":"_reduce_444","children":[],"call":[" env unextend "," env ","result line= "," new_super ","val [] "," new_aref "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," new_brace_body "," new_do_body "," s "," new_super  line= "," new_aref  line= "," new_brace_body  line= "," new_do_body  line= "]}," Ruby22Parser _reduce_442":{"type":"method","name":"_reduce_442","children":[],"call":[" new_aref "," new_call ","val [] "," new_super "," lexer lineno "," lexer "," env extend "," env "]}," Ruby22Parser _reduce_441":{"type":"method","name":"_reduce_441","children":[],"call":[" s "," new_call ","val [] to_sym ","val [] "," env unextend "," env ","result line "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," new_brace_body "," s  line "," new_call  line "," new_brace_body  line ","val []  line "]}," Ruby22Parser _reduce_437":{"type":"method","name":"_reduce_437","children":[],"call":[" new_call ","val [] to_sym ","val [] "," lexer lineno "," lexer "," new_aref "," env extend "," env ","result << "," new_resbody ","klasses << "," new_assign "," s "," new_call  << "," lexer lineno  << "," new_aref  << "," new_resbody  << "]}," Ruby22Parser _reduce_436":{"type":"method","name":"_reduce_436","children":[],"call":[" new_call ","val [] ","val [] to_sym ","iter2 insert ","name to_sym ","result line ","call concat ","args sexp_body "," s line "," lexer lineno "," lexer "," s "," env unextend "," env ","result << "," new_resbody ","klasses << "," node_assign "," new_ new_call  "," new_call  line ","call concat  line "," s line  line "," new_resbody  line "," new_call  concat "," new_call  << ","call concat  << "," s line  << "," new_resbody  << "]}," Ruby22Parser _reduce_404":{"type":"method","name":"_reduce_404","children":[],"call":[" args "," args << "," lexer command_start= "," lexer "," env unextend "," env "," new_iter "," new_call "," lexer lpar_beg= "," lexer paren_nest "," lexer lpar_beg "," lexer lineno "," env extend "," new_ new_call  "]}," Ruby22Parser _reduce_399":{"type":"method","name":"_reduce_399","children":[],"call":[" args "]}," Ruby22Parser _reduce_395":{"type":"method","name":"_reduce_395","children":[],"call":[" args "," call_args "," s "," lexer command_start= "," lexer "]}," Ruby22Parser _reduce_378":{"type":"method","name":"_reduce_378","children":[],"call":[" s ","val [] "," block_var "," args "]}," Ruby22Parser _reduce_345":{"type":"method","name":"_reduce_345","children":[],"call":[" value_expr ","val [] "," s line "," s "]}," Ruby22Parser _reduce_344":{"type":"method","name":"_reduce_344","children":[],"call":[" s "," lexer comments "," lexer "," in_single "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," new_defs ","val [] "," s line "]}," Ruby22Parser _reduce_343":{"type":"method","name":"_reduce_343","children":[],"call":[" s "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," lexer cmdarg stack dup "," lexer lineno "," lexer lex_state= "," env extend "," env "," in_single "," s line "," value_expr ","val [] "]}," Ruby22Parser _reduce_342":{"type":"method","name":"_reduce_342","children":[],"call":[" s "," lexer lex_state= "," lexer "," comments push "," lexer comments "," comments "," in_single "," in_def= "," env unextend "," env "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," new_defs "," s line "]}," Ruby22Parser _reduce_341":{"type":"method","name":"_reduce_341","children":[],"call":[" s "," lexer comments "," lexer "," in_def= "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," new_defn ","val [] "," comments push "," comments "," lexer lex_state= ","EXPR_ENDFN  | "," lexer cond push "," lexer cond "," lexer cmdarg push "," env extend "," in_single "," lexer lineno "," in_def "," s line "]}," Ruby22Parser _reduce_340":{"type":"method","name":"_reduce_340","children":[],"call":[" lexer comments "," lexer "," in_single "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg ","result [] line ","result [] "," new_defs ","val [] "," lexer lineno "," lexer lex_state= "," s line "," s "," value_expr "," new_defs  [] line "," lexer lineno  [] line "," s line  [] line "," value_expr  [] line "," new_defs  [] "," lexer lineno  [] "," s line  [] "," value_expr  [] "]}," Ruby22Parser _reduce_339":{"type":"method","name":"_reduce_339","children":[],"call":[" lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," lexer cmdarg stack dup "," lexer lineno "," lexer lex_state= "," env extend "," env "," in_single "," in_def= "," comments push "," lexer comments "," comments "," in_def "," env unextend "," lexer cmdarg pop "," lexer cond pop "," lexer cond "," new_defn ","val [] "," s line "," s "," val [] = "," val []  "]}," Ruby22Parser _reduce_338":{"type":"method","name":"_reduce_338","children":[],"call":[" lexer lex_state= "," lexer "," comments push "," lexer comments "," comments "," env unextend "," env "," new_module "," lexer lineno "," lexer ignore_body_comments "," in_single "," in_def= "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," new_defs ","val delete_at "," s line "," s "]}," Ruby22Parser _reduce_302":{"type":"method","name":"_reduce_302","children":[],"call":["result paren= "," s ","val [] "," lexer lex_state= "," lexer "," s line "," lexer lineno ","iter insert "," block_dup_check "," lexer lineno  paren= ","val []  paren= "]}," Ruby22Parser _reduce_280":{"type":"method","name":"_reduce_280","children":[],"call":[" new_masgn_arg ","val [] "," list_append "," s line "," s "," arg_concat "]}," Ruby22Parser _reduce_279":{"type":"method","name":"_reduce_279","children":[],"call":[" list_append "," s ","val [] "," lexer lineno "," lexer "," s line ","val [] << "," lexer  lexer lineno no "," s  lexer lineno  "]}," Ruby22Parser _reduce_278":{"type":"method","name":"_reduce_278","children":[],"call":[" list_append ","val [] "," new_masgn_arg "]}," Ruby22Parser _reduce_277":{"type":"method","name":"_reduce_277","children":[],"call":[" s ","val [] "," s line ","arg line "," new_masgn_arg "]}," Ruby22Parser _reduce_276":{"type":"method","name":"_reduce_276","children":[],"call":[" s ","val [] "," s line ","arg line "," lexer lineno "," lexer "," list_append "," s  lexer lineno  ","arg  lexer lineno  "," lexer  lexer lineno no "]}," Ruby22Parser _reduce_274":{"type":"method","name":"_reduce_274","children":[],"call":["val [] "," s line ","arg line "," s "]}," Ruby22Parser _reduce_273":{"type":"method","name":"_reduce_273","children":[],"call":[" s ","val [] "," s line ","arg line "," lexer lineno "," lexer "]}," Ruby22Parser _reduce_272":{"type":"method","name":"_reduce_272","children":[],"call":["val [] "," lexer cmdarg restore "," lexer cmdarg "," lexer "," lexer cmdarg push "," lexer cmdarg pop ","(sym :tLBRACE_ARG) include? "]}," Ruby22Parser _reduce_271":{"type":"method","name":"_reduce_271","children":[],"call":[" lexer cmdarg store "," lexer cmdarg "," lexer "," lexer cmdarg push "," lexer cmdarg pop ","(sym :tLPAREN) include? "," last_token_type first "," last_token_type ","val [] "]}," Ruby22Parser _reduce_261":{"type":"method","name":"_reduce_261","children":[],"call":["val [] "," args "," array_to_hash "]}," Ruby22Parser _reduce_240":{"type":"method","name":"_reduce_240","children":[],"call":[" logical_op ","val [] "," s line ","c line "," s "]}," Ruby22Parser _reduce_238":{"type":"method","name":"_reduce_238","children":[],"call":[" new_call "," argl ","val [] ","val []= "," value_expr "," logical_op "]}," Ruby22Parser _reduce_133":{"type":"method","name":"_reduce_133","children":[],"call":[" new_undef ","val [] "]}," Ruby22Parser _reduce_132":{"type":"method","name":"_reduce_132","children":[],"call":[" lexer lex_state= "," lexer "," new_undef ","val [] "]}," Ruby22Parser _reduce_131":{"type":"method","name":"_reduce_131","children":[],"call":[" new_undef ","val [] "," lexer lex_state= "," lexer "]}," Ruby22Parser _reduce_129":{"type":"method","name":"_reduce_129","children":[],"call":[" s ","val [] to_sym ","val [] "," new_undef "]}," Ruby22Parser _reduce_126":{"type":"method","name":"_reduce_126","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby22Parser _reduce_125":{"type":"method","name":"_reduce_125","children":[],"call":["val [] "," lexer lex_state= "," lexer "]}," Ruby22Parser _reduce_120":{"type":"method","name":"_reduce_120","children":[],"call":["val [] to_sym ","val [] "," s ","result line ","pval line ","name to_sym ","id to_sym ","val [] to_sym  line "," s  line "]}," Ruby22Parser _reduce_117":{"type":"method","name":"_reduce_117","children":[],"call":[" yyerror "]}," Ruby22Parser _reduce_114":{"type":"method","name":"_reduce_114","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," s line ","id to_sym "," lexer lineno "," lexer ","expr line "," debug ","va lexer lineno  [] to_sym ","vaexpr line  [] to_sym ","va lexer lineno  [] ","vaexpr line  [] "," in_sing lexer lineno e > "," in_singexpr line e > "," in_sing lexer lineno e "," in_singexpr line e "," s  lexer lineno ine "," s expr line ine ","  lexer lineno exer  lexer lineno ineno "," expr line exer expr line ineno ","  lexer lineno exer "," expr line exer ","expr  lexer lineno ine ","expr expr line ine "]}," Ruby22Parser _reduce_113":{"type":"method","name":"_reduce_113","children":[],"call":[" new_attrasgn ","val [] "," s ","val [] to_sym "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," s line ","id to_sym ","expr line ","vaexpr line  [] ","vaexpr line  [] to_sym "," in_singexpr line e > "," in_singexpr line e "," s expr line ine ","expr expr line ine "]}," Ruby22Parser _reduce_112":{"type":"method","name":"_reduce_112","children":[],"call":[" s ","val [] "," new_attrasgn "]}," Ruby22Parser _reduce_108":{"type":"method","name":"_reduce_108","children":[],"call":[" assignable ","val [] "," debug20 ","result line= "," lexer lineno "," lexer "," assignable  line= ","result  lexer lineno = "," lexer  lexer lineno no "]}," Ruby22Parser _reduce_83":{"type":"method","name":"_reduce_83","children":[],"call":[" s ","val [] ","val [] << ","val [] compact "," s line ","lhs line ","lhs << ","rhs compact ","head line "]}," Ruby22Parser _reduce_71":{"type":"method","name":"_reduce_71","children":[],"call":["block insert "," block_dup_check "," new_call ","val [] ","msg to_sym ","val [] to_sym "," new_ new_call  "]}," Ruby22Parser _reduce_69":{"type":"method","name":"_reduce_69","children":[],"call":["result insert ","val [] "," block_dup_check ","val [] concat ","val [] sexp_body "," new_call ","val [] to_sym ","op to_sym ","call concat ","args sexp_body ","val [] concat  insert "," new_call  insert ","call concat  insert "]}," Ruby22Parser _reduce_52":{"type":"method","name":"_reduce_52","children":[],"call":[" logical_op ","val [] "]}," Ruby22Parser _reduce_48":{"type":"method","name":"_reduce_48","children":[],"call":[" value_expr "," backref_assign_error ","val [] "]}," Ruby22Parser _reduce_43":{"type":"method","name":"_reduce_43","children":[],"call":["result line= ","val [] line ","val [] ","result sexp_type= ","val [] == "," s ","val [] to_sym ","opasgn to_sym ","id to_sym "," new_op_asgn1 "," s  line= "," new_op_asgn1  line= "," s  sexp_type= "," new_op_asgn1  sexp_type= "]}," Ruby22Parser _reduce_40":{"type":"method","name":"_reduce_40","children":[],"call":[" new_assign ","val [] "]}," Ruby22Parser _reduce_29":{"type":"method","name":"_reduce_29","children":[],"call":[" new_if ","val [] "]}," Ruby22Parser _reduce_14":{"type":"method","name":"_reduce_14","children":[],"call":[" new_body "]}," Ruby22Parser _reduce_13":{"type":"method","name":"_reduce_13","children":[],"call":[" new_body "," yyerror ","_values [] "," warn "]}," Ruby21Parser _reduce_644":{"type":"method","name":"_reduce_644","children":[],"call":[]}," Ruby21Parser _reduce_643":{"type":"method","name":"_reduce_643","children":[],"call":[" yyerrok "]}," Ruby21Parser _reduce_640":{"type":"method","name":"_reduce_640","children":[],"call":[" yyerrok "]}," Ruby21Parser _reduce_615":{"type":"method","name":"_reduce_615","children":[],"call":[" s ","val [] ","result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] dup "," s line ","arg line "," s  sexp_type= "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "," s arg line  ","arg arg line  "]}," Ruby21Parser _reduce_614":{"type":"method","name":"_reduce_614","children":[],"call":[" s ","label to_sym "," s line "," lexer lineno "," lexer ","lit line "," wrap "," s line  line "," wrap  line "]}," Ruby21Parser _reduce_613":{"type":"method","name":"_reduce_613","children":[],"call":[" s ","val [] "," yyerror ","result sexp_type == ","result sexp_type "," s line ","v1 line "," s  sexp_type == ","val []  sexp_type == "," s line  sexp_type == "," s  sexp_type ","val []  sexp_type "," s line  sexp_type "]}," Ruby21Parser _reduce_612":{"type":"method","name":"_reduce_612","children":[],"call":["result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] ","val [] dup "," lexer lex_state= "," lexer "," s line "," lexer lineno "," s ","arg line "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "," s arg line  "," lexer arg line no ","arg arg line  "]}," Ruby21Parser _reduce_610":{"type":"method","name":"_reduce_610","children":[],"call":["val [] "," lexer lex_state= "," lexer "," s line ","v1 line "," s "]}," Ruby21Parser _reduce_609":{"type":"method","name":"_reduce_609","children":[],"call":[" s ","val [] "," s line "," lexer lineno "," lexer ","result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] dup "," s  sexp_type= ","val []  sexp_type= "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "]}," Ruby21Parser _reduce_608":{"type":"method","name":"_reduce_608","children":[],"call":[" yyerror ","result sexp_type == ","result sexp_type ","val [] ","(str \"&\") to_sym "," env []= "," env ","val [] to_sym ","val []  sexp_type == ","(str \"&\") to_sym  sexp_type == ","val []  sexp_type ","(str \"&\") to_sym  sexp_type "]}," Ruby21Parser _reduce_607":{"type":"method","name":"_reduce_607","children":[],"call":[" lexer lex_state= "," lexer ","val [] "]}," Ruby21Parser _reduce_605":{"type":"method","name":"_reduce_605","children":[],"call":[" env []= "," env "," yyerror ","result sexp_type == ","result sexp_type ","val [] ","val []  sexp_type == ","val []  sexp_type "]}," Ruby21Parser _reduce_604":{"type":"method","name":"_reduce_604","children":[],"call":["val [] "," assignable ","val [] to_sym "," lexer lex_state= "," lexer "]}," Ruby21Parser _reduce_603":{"type":"method","name":"_reduce_603","children":[],"call":["(str \"&\") to_sym "," env []= "," env ","val [] to_sym ","val [] ","id to_sym "]}," Ruby21Parser _reduce_600":{"type":"method","name":"_reduce_600","children":[],"call":[" env []= "," env "," s line ","opt line "," s "," lexer lineno "," lexer ","(str \"&\") to_sym ","id to_sym "]}," Ruby21Parser _reduce_599":{"type":"method","name":"_reduce_599","children":[],"call":[" assignable ","val [] to_sym ","val [] ","result << "," block_append ","id to_sym "," block_append  << "]}," Ruby21Parser _reduce_592":{"type":"method","name":"_reduce_592","children":[],"call":[" assignable ","val [] ","val [] to_sym "," s line ","opt line "," s ","result []= ","list push ","more empty? ","val [] [] ","val [] dup "," assignable  []= "," s line  []= "," s  []= ","val []  []= ","val [] dup  push ","val [] []  empty? "]}," Ruby21Parser _reduce_582":{"type":"method","name":"_reduce_582","children":[],"call":[" s "," env []= "," env ","label to_sym ","val [] ","result << "," s line ","list line ","list sexp_type == ","list sexp_type ","(str \"&\") to_sym ","val [] to_sym "," s  << "," s line  << ","(str \"&\") to_sym  << "]}," Ruby21Parser _reduce_579":{"type":"method","name":"_reduce_579","children":[],"call":[" s ","val [] "," env []= "," env ","label to_sym "," raise ","val inspect "," debug20 "," s line "," lexer lineno "," lexer "," assignable ","val [] to_sym "]}," Ruby21Parser _reduce_569":{"type":"method","name":"_reduce_569","children":[],"call":[" yyerror "," args "," debug20 ","val [] "]}," Ruby21Parser _reduce_568":{"type":"method","name":"_reduce_568","children":[],"call":[" yyerror "," args ","val [] "]}," Ruby21Parser _reduce_566":{"type":"method","name":"_reduce_566","children":[],"call":[" args "," yyerror ","list << ","item last "]}," Ruby21Parser _reduce_564":{"type":"method","name":"_reduce_564","children":[],"call":[" args "," s "," env []= "," env ","label to_sym ","val [] ","list << ","item last "]}," Ruby21Parser _reduce_559":{"type":"method","name":"_reduce_559","children":[],"call":[" args "," s "," env []= "," env ","label to_sym ","val [] ","result << ","list sexp_type == ","list sexp_type "," args  << "," s  << "]}," Ruby21Parser _reduce_555":{"type":"method","name":"_reduce_555","children":[],"call":[" args "," raise ","val inspect "," debug20 ","val [] ","result << "," s "," args  << ","val []  << "," s  << "]}," Ruby21Parser _reduce_553":{"type":"method","name":"_reduce_553","children":[],"call":[" args "," env []= "," env ","val [] to_sym ","val [] "]}," Ruby21Parser _reduce_531":{"type":"method","name":"_reduce_531","children":[],"call":[" s "," s line "," lexer lineno "," lexer ","val [] "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer ","va lexer lineno  [] "]}," Ruby21Parser _reduce_508":{"type":"method","name":"_reduce_508","children":[],"call":[" s ","val [] to_sym ","val [] "," s line ","str line "," lexer lex_strterm= "," lexer "," raise ","stmt inspect "," debug20 ","stmt sexp_type "," lexer lex_state= "," lexer cond pop "," lexer cond "," lexer cmdarg pop "," lexer cmdarg "," lexer string_nest= "," lexer brace_nest= "," wrap "]}," Ruby21Parser _reduce_507":{"type":"method","name":"_reduce_507","children":[],"call":[" s ","val [] to_sym ","val [] "," lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm "," lexer string_nest= "," lexer brace_nest= "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," lexer lineno "," lexer lex_state "," lexer string_nest "," lexer brace_nest "," wrap "]}," Ruby21Parser _reduce_506":{"type":"method","name":"_reduce_506","children":[],"call":[" s ","val [] to_sym ","val [] "," new_string "," s line ","str line "," lexer lex_strterm= "," lexer ","id to_sym "," wrap "]}," Ruby21Parser _reduce_505":{"type":"method","name":"_reduce_505","children":[],"call":[" raise ","stmt inspect "," debug20 "," s ","stmt sexp_type "," lexer lex_state= "," lexer "," lexer cmdarg restore "," lexer cmdarg "," lexer cond restore "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," literal_concat "," lexer lex_strterm "," s line ","id to_sym "," wrap ","val [] "]}," Ruby21Parser _reduce_504":{"type":"method","name":"_reduce_504","children":[],"call":[" lexer lex_state= "," lexer "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer lex_state "," lexer cmdarg store "," lexer cmdarg "," lexer cond store "," lexer cond "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "," new_string "," s line "," s ","id to_sym "," wrap ","val [] "]}," Ruby21Parser _reduce_503":{"type":"method","name":"_reduce_503","children":[],"call":[" s ","val [] "," lexer lex_strterm= "," lexer "," literal_concat "," raise ","stmt inspect "," debug "," s line ","stmt sexp_type "," lexer lex_state= "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," wrap "]}," Ruby21Parser _reduce_502":{"type":"method","name":"_reduce_502","children":[],"call":[" lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm "," lexer string_nest= "," lexer brace_nest= "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," lexer lineno "," lexer lex_state "," lexer string_nest "," lexer brace_nest "," wrap ","val [] "]}," Ruby21Parser _reduce_501":{"type":"method","name":"_reduce_501","children":[],"call":[" new_string "," literal_concat "," s line ","str line "," s "," lexer lex_strterm= "," lexer "," wrap ","val [] "]}," Ruby21Parser _reduce_500":{"type":"method","name":"_reduce_500","children":[],"call":[" literal_concat ","val [] "," s line "," lexer lineno "," lexer "," s "," lexer lex_state= "," lexer lex_strterm= "," lexer lex_strterm "," raise ","stmt inspect "," debug ","stmt sexp_type "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," lexer string_nest= "," lexer brace_nest= "]}," Ruby21Parser _reduce_498":{"type":"method","name":"_reduce_498","children":[],"call":[" literal_concat ","val [] "," new_qsym_list "," s line "," lexer lineno "," lexer "," s ","str line "," lexer lex_strterm= ","val [] -@ "]}," Ruby21Parser _reduce_496":{"type":"method","name":"_reduce_496","children":[],"call":[" literal_concat ","val [] "," new_qword_list "," new_qsym_list "," new_string "," debug20 "," s ","result last to_sym ","result last ","result []= ","result [] "," lexer lex_state= "," lexer "," literal_concat  last to_sym "," new_qword_list  last to_sym "," new_qsym_list  last to_sym "," new_string  last to_sym "," s  last to_sym ","val []  last to_sym "," literal_concat  last "," new_qword_list  last "," new_qsym_list  last "," new_string  last "," s  last ","val []  last "," literal_concat  []= "," new_qword_list  []= "," new_qsym_list  []= "," new_string  []= "," s  []= ","val []  []= "," literal_concat  [] "," new_qword_list  [] "," new_qsym_list  [] "," new_string  [] "," s  [] ","val []  [] "]}," Ruby21Parser _reduce_495":{"type":"method","name":"_reduce_495","children":[],"call":[" s ","val [] ","val [] dup << "," new_qword_list_entry ","val [] dup "," literal_concat "," debug20 ","result last to_sym ","result last ","result []= ","result [] "," lexer lex_state= "," lexer "," s  last to_sym ","val []  last to_sym ","val [] dup <<  last to_sym "," literal_concat  last to_sym "," s  last ","val []  last ","val [] dup <<  last "," literal_concat  last "," s  []= ","val []  []= ","val [] dup <<  []= "," literal_concat  []= "," s  [] ","val []  [] ","val [] dup <<  [] "," literal_concat  [] "]}," Ruby21Parser _reduce_494":{"type":"method","name":"_reduce_494","children":[],"call":["val [] dup << "," new_qsym_list_entry ","val [] dup ","val [] "," s line "," lexer lineno "," lexer "," s "," new_qword_list "," literal_concat "]}," Ruby21Parser _reduce_493":{"type":"method","name":"_reduce_493","children":[],"call":[" new_qsym_list ","val [] "," s line "," s "," +@ "," prev_value_to_lineno ","_values last "," literal_concat "," s  prev_value_to_lineno  "," prev_value_to_ prev_value_to_lineno no "]}," Ruby21Parser _reduce_490":{"type":"method","name":"_reduce_490","children":[],"call":["val [] "," new_symbol_list line "," lexer lineno "," lexer "," new_symbol_list "," s line "," s ","val [] dup << "," new_qword_list_entry ","val [] dup "," +@ "," prev_value_to_lineno ","_values last ","val [] to_sym "," lexer lex_state= "," new_symbol_list  prev_value_to_lineno  "," lexer  prev_value_to_lineno no "," s  prev_value_to_lineno  "," prev_value_to_ prev_value_to_lineno no "]}," Ruby21Parser _reduce_462":{"type":"method","name":"_reduce_462","children":[],"call":["val [] "," s line "," s "," literal_concat "]}," Ruby21Parser _reduce_452":{"type":"method","name":"_reduce_452","children":[],"call":[" lexer cmdarg restore "," lexer cmdarg "," lexer "," env unextend "," env "," new_do_body "," lexer cmdarg store "," lexer lineno "," env extend ","val [] "," literal_concat "]}," Ruby21Parser _reduce_449":{"type":"method","name":"_reduce_449","children":[],"call":[" lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," env unextend "," env "," new_brace_body "," lexer lineno "," env extend "," s line ","arg line "," s "," debug20 ","val [] ","val []= ","val [] value ","val [] [] == ","val [] [] "]}," Ruby21Parser _reduce_446":{"type":"method","name":"_reduce_446","children":[],"call":[" env unextend "," env ","result line= "," new_aref "," lexer cmdarg push "," lexer cmdarg "," lexer "," s line ","arg line "," s ","val [] "," new_aref  line= "," s line  line= "," s  line= "]}," Ruby21Parser _reduce_444":{"type":"method","name":"_reduce_444","children":[],"call":[" env unextend "," env ","result line= "," new_super ","val [] "," new_aref "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," new_brace_body "," new_do_body "," s "," new_super  line= "," new_aref  line= "," new_brace_body  line= "," new_do_body  line= "]}," Ruby21Parser _reduce_442":{"type":"method","name":"_reduce_442","children":[],"call":[" new_aref "," new_call ","val [] "," new_super "," lexer lineno "," lexer "," env extend "," env "]}," Ruby21Parser _reduce_441":{"type":"method","name":"_reduce_441","children":[],"call":[" s "," new_call ","val [] to_sym ","val [] "," env unextend "," env ","result line "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," new_brace_body "," s  line "," new_call  line "," new_brace_body  line ","val []  line "]}," Ruby21Parser _reduce_437":{"type":"method","name":"_reduce_437","children":[],"call":[" new_call ","val [] to_sym ","val [] "," lexer lineno "," lexer "," new_aref "," env extend "," env ","result << "," new_resbody ","klasses << "," new_assign "," s "," new_call  << "," lexer lineno  << "," new_aref  << "," new_resbody  << "]}," Ruby21Parser _reduce_436":{"type":"method","name":"_reduce_436","children":[],"call":[" new_call ","val [] ","val [] to_sym ","iter2 insert ","name to_sym ","result line ","call concat ","args sexp_body "," s line "," lexer lineno "," lexer "," s "," env unextend "," env ","result << "," new_resbody ","klasses << "," node_assign "," new_ new_call  "," new_call  line ","call concat  line "," s line  line "," new_resbody  line "," new_call  concat "," new_call  << ","call concat  << "," s line  << "," new_resbody  << "]}," Ruby21Parser _reduce_404":{"type":"method","name":"_reduce_404","children":[],"call":[" args "," args << "," lexer command_start= "," lexer "," env unextend "," env "," new_iter "," new_call ","args == "," s "," lexer lpar_beg= "," lexer paren_nest "," lexer lpar_beg "," lexer lineno "," env extend "," new_ new_call  "]}," Ruby21Parser _reduce_399":{"type":"method","name":"_reduce_399","children":[],"call":[" args "]}," Ruby21Parser _reduce_395":{"type":"method","name":"_reduce_395","children":[],"call":[" args "," call_args "," lexer command_start= "," lexer "," s "]}," Ruby21Parser _reduce_378":{"type":"method","name":"_reduce_378","children":[],"call":[" s ","val [] "," block_var "," args "]}," Ruby21Parser _reduce_345":{"type":"method","name":"_reduce_345","children":[],"call":[" value_expr ","val [] "," s line "," s "]}," Ruby21Parser _reduce_344":{"type":"method","name":"_reduce_344","children":[],"call":[" s "," lexer comments "," lexer "," in_single "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," new_defs ","val [] "," s line "]}," Ruby21Parser _reduce_343":{"type":"method","name":"_reduce_343","children":[],"call":[" s "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," lexer cmdarg stack dup "," lexer lineno "," lexer lex_state= "," env extend "," env "," in_single "," s line "," value_expr ","val [] "]}," Ruby21Parser _reduce_342":{"type":"method","name":"_reduce_342","children":[],"call":[" s "," lexer lex_state= "," lexer "," comments push "," lexer comments "," comments "," in_single "," in_def= "," env unextend "," env "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," new_defs "," s line "]}," Ruby21Parser _reduce_341":{"type":"method","name":"_reduce_341","children":[],"call":[" s "," lexer comments "," lexer "," in_def= "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," new_defn ","val [] "," comments push "," comments "," lexer lex_state= ","EXPR_ENDFN  | "," lexer cond push "," lexer cond "," lexer cmdarg push "," env extend "," in_single "," lexer lineno "," in_def "," s line "]}," Ruby21Parser _reduce_340":{"type":"method","name":"_reduce_340","children":[],"call":[" lexer comments "," lexer "," in_single "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg ","result [] line ","result [] "," new_defs ","val [] "," lexer lineno "," lexer lex_state= "," s line "," s "," value_expr "," new_defs  [] line "," lexer lineno  [] line "," s line  [] line "," value_expr  [] line "," new_defs  [] "," lexer lineno  [] "," s line  [] "," value_expr  [] "]}," Ruby21Parser _reduce_339":{"type":"method","name":"_reduce_339","children":[],"call":[" lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," lexer cmdarg stack dup "," lexer lineno "," lexer lex_state= "," env extend "," env "," in_single "," in_def= "," comments push "," lexer comments "," comments "," in_def "," env unextend "," lexer cmdarg pop "," lexer cond pop "," lexer cond "," new_defn ","val [] "," s line "," s "," val [] = "," val []  "]}," Ruby21Parser _reduce_338":{"type":"method","name":"_reduce_338","children":[],"call":[" lexer lex_state= "," lexer "," comments push "," lexer comments "," comments "," env unextend "," env "," new_module "," lexer lineno "," lexer ignore_body_comments "," in_single "," in_def= "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," new_defs ","val delete_at "," s line "," s "]}," Ruby21Parser _reduce_302":{"type":"method","name":"_reduce_302","children":[],"call":["result paren= "," s ","val [] "," lexer lex_state= "," lexer "," s line "," lexer lineno ","iter insert "," block_dup_check "," lexer lineno  paren= ","val []  paren= "]}," Ruby21Parser _reduce_280":{"type":"method","name":"_reduce_280","children":[],"call":[" new_masgn_arg ","val [] "," list_append "," s line "," s "," arg_concat "]}," Ruby21Parser _reduce_279":{"type":"method","name":"_reduce_279","children":[],"call":[" list_append "," s ","val [] "," lexer lineno "," lexer "," s line ","val [] << "," lexer  lexer lineno no "," s  lexer lineno  "]}," Ruby21Parser _reduce_278":{"type":"method","name":"_reduce_278","children":[],"call":[" list_append ","val [] "," new_masgn_arg "]}," Ruby21Parser _reduce_277":{"type":"method","name":"_reduce_277","children":[],"call":[" s ","val [] "," s line ","arg line "," new_masgn_arg "]}," Ruby21Parser _reduce_276":{"type":"method","name":"_reduce_276","children":[],"call":[" s ","val [] "," s line ","arg line "," lexer lineno "," lexer "," list_append "," s  lexer lineno  ","arg  lexer lineno  "," lexer  lexer lineno no "]}," Ruby21Parser _reduce_274":{"type":"method","name":"_reduce_274","children":[],"call":["val [] "," s line ","arg line "," s "]}," Ruby21Parser _reduce_273":{"type":"method","name":"_reduce_273","children":[],"call":[" s ","val [] "," s line ","arg line "," lexer lineno "," lexer "]}," Ruby21Parser _reduce_272":{"type":"method","name":"_reduce_272","children":[],"call":["val [] "," lexer cmdarg restore "," lexer cmdarg "," lexer "," lexer cmdarg push "," lexer cmdarg pop ","(sym :tLBRACE_ARG) include? "]}," Ruby21Parser _reduce_271":{"type":"method","name":"_reduce_271","children":[],"call":[" lexer cmdarg store "," lexer cmdarg "," lexer "," lexer cmdarg push "," lexer cmdarg pop ","(sym :tLPAREN) include? "," last_token_type first "," last_token_type ","val [] "]}," Ruby21Parser _reduce_261":{"type":"method","name":"_reduce_261","children":[],"call":["val [] "," args "," array_to_hash "]}," Ruby21Parser _reduce_240":{"type":"method","name":"_reduce_240","children":[],"call":[" logical_op ","val [] "," s line ","c line "," s "]}," Ruby21Parser _reduce_238":{"type":"method","name":"_reduce_238","children":[],"call":[" new_call "," argl ","val [] ","val []= "," value_expr "," logical_op "]}," Ruby21Parser _reduce_133":{"type":"method","name":"_reduce_133","children":[],"call":[" new_undef ","val [] "]}," Ruby21Parser _reduce_132":{"type":"method","name":"_reduce_132","children":[],"call":[" lexer lex_state= "," lexer "," new_undef ","val [] "]}," Ruby21Parser _reduce_131":{"type":"method","name":"_reduce_131","children":[],"call":[" new_undef ","val [] "," lexer lex_state= "," lexer "]}," Ruby21Parser _reduce_129":{"type":"method","name":"_reduce_129","children":[],"call":[" s ","val [] to_sym ","val [] "," new_undef "]}," Ruby21Parser _reduce_126":{"type":"method","name":"_reduce_126","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby21Parser _reduce_125":{"type":"method","name":"_reduce_125","children":[],"call":["val [] "," lexer lex_state= "," lexer "]}," Ruby21Parser _reduce_120":{"type":"method","name":"_reduce_120","children":[],"call":["val [] to_sym ","val [] "," s ","result line ","pval line ","name to_sym ","id to_sym ","val [] to_sym  line "," s  line "]}," Ruby21Parser _reduce_117":{"type":"method","name":"_reduce_117","children":[],"call":[" yyerror "]}," Ruby21Parser _reduce_114":{"type":"method","name":"_reduce_114","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," s line ","id to_sym "," lexer lineno "," lexer ","expr line "," debug ","va lexer lineno  [] to_sym ","vaexpr line  [] to_sym ","va lexer lineno  [] ","vaexpr line  [] "," in_sing lexer lineno e > "," in_singexpr line e > "," in_sing lexer lineno e "," in_singexpr line e "," s  lexer lineno ine "," s expr line ine ","  lexer lineno exer  lexer lineno ineno "," expr line exer expr line ineno ","  lexer lineno exer "," expr line exer ","expr  lexer lineno ine ","expr expr line ine "]}," Ruby21Parser _reduce_113":{"type":"method","name":"_reduce_113","children":[],"call":[" new_attrasgn ","val [] "," s ","val [] to_sym "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," s line ","id to_sym ","expr line ","vaexpr line  [] ","vaexpr line  [] to_sym "," in_singexpr line e > "," in_singexpr line e "," s expr line ine ","expr expr line ine "]}," Ruby21Parser _reduce_112":{"type":"method","name":"_reduce_112","children":[],"call":[" s ","val [] "," new_attrasgn "]}," Ruby21Parser _reduce_108":{"type":"method","name":"_reduce_108","children":[],"call":[" assignable ","val [] "," debug20 ","result line= "," lexer lineno "," lexer "," assignable  line= ","result  lexer lineno = "," lexer  lexer lineno no "]}," Ruby21Parser _reduce_83":{"type":"method","name":"_reduce_83","children":[],"call":[" s ","val [] ","val [] << ","val [] compact "," s line ","lhs line ","lhs << ","rhs compact ","head line "]}," Ruby21Parser _reduce_71":{"type":"method","name":"_reduce_71","children":[],"call":["block insert "," block_dup_check "," new_call ","val [] ","msg to_sym ","val [] to_sym "," new_ new_call  "]}," Ruby21Parser _reduce_69":{"type":"method","name":"_reduce_69","children":[],"call":["result insert ","val [] "," block_dup_check ","val [] concat ","val [] sexp_body "," new_call ","val [] to_sym ","op to_sym ","call concat ","args sexp_body ","val [] concat  insert "," new_call  insert ","call concat  insert "]}," Ruby21Parser _reduce_52":{"type":"method","name":"_reduce_52","children":[],"call":[" logical_op ","val [] "]}," Ruby21Parser _reduce_48":{"type":"method","name":"_reduce_48","children":[],"call":[" value_expr "," backref_assign_error ","val [] "]}," Ruby21Parser _reduce_43":{"type":"method","name":"_reduce_43","children":[],"call":["result line= ","val [] line ","val [] ","result sexp_type= ","val [] == "," s ","val [] to_sym ","opasgn to_sym ","id to_sym "," new_op_asgn1 "," s  line= "," new_op_asgn1  line= "," s  sexp_type= "," new_op_asgn1  sexp_type= "]}," Ruby21Parser _reduce_40":{"type":"method","name":"_reduce_40","children":[],"call":[" new_assign ","val [] "]}," Ruby21Parser _reduce_29":{"type":"method","name":"_reduce_29","children":[],"call":[" new_if ","val [] "]}," Ruby21Parser _reduce_14":{"type":"method","name":"_reduce_14","children":[],"call":[" new_body "]}," Ruby21Parser _reduce_13":{"type":"method","name":"_reduce_13","children":[],"call":[" new_body "," yyerror ","_values [] "," warn "]}," Ruby20Parser _reduce_639":{"type":"method","name":"_reduce_639","children":[],"call":[]}," Ruby20Parser _reduce_638":{"type":"method","name":"_reduce_638","children":[],"call":[" yyerrok "]}," Ruby20Parser _reduce_635":{"type":"method","name":"_reduce_635","children":[],"call":[" yyerrok "]}," Ruby20Parser _reduce_610":{"type":"method","name":"_reduce_610","children":[],"call":[" s ","val [] ","result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] dup "," s line ","arg line "," s  sexp_type= "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "," s arg line  ","arg arg line  "]}," Ruby20Parser _reduce_609":{"type":"method","name":"_reduce_609","children":[],"call":[" s ","label to_sym "," s line "," lexer lineno "," lexer ","lit line "," wrap "," s line  line "," wrap  line "]}," Ruby20Parser _reduce_608":{"type":"method","name":"_reduce_608","children":[],"call":[" s ","val [] "," yyerror ","result sexp_type == ","result sexp_type "," s line ","v1 line "," s  sexp_type == ","val []  sexp_type == "," s line  sexp_type == "," s  sexp_type ","val []  sexp_type "," s line  sexp_type "]}," Ruby20Parser _reduce_607":{"type":"method","name":"_reduce_607","children":[],"call":["result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] ","val [] dup "," lexer lex_state= "," lexer "," s line "," lexer lineno "," s ","arg line "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "," s arg line  "," lexer arg line no ","arg arg line  "]}," Ruby20Parser _reduce_605":{"type":"method","name":"_reduce_605","children":[],"call":["val [] "," lexer lex_state= "," lexer "," s line ","v1 line "," s "]}," Ruby20Parser _reduce_604":{"type":"method","name":"_reduce_604","children":[],"call":[" s ","val [] "," s line "," lexer lineno "," lexer ","result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] dup "," s  sexp_type= ","val []  sexp_type= "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "]}," Ruby20Parser _reduce_603":{"type":"method","name":"_reduce_603","children":[],"call":[" yyerror ","result sexp_type == ","result sexp_type ","val [] ","(str \"&\") to_sym "," env []= "," env ","val [] to_sym ","val []  sexp_type == ","(str \"&\") to_sym  sexp_type == ","val []  sexp_type ","(str \"&\") to_sym  sexp_type "]}," Ruby20Parser _reduce_602":{"type":"method","name":"_reduce_602","children":[],"call":[" lexer lex_state= "," lexer ","val [] "]}," Ruby20Parser _reduce_600":{"type":"method","name":"_reduce_600","children":[],"call":[" env []= "," env "," yyerror ","result sexp_type == ","result sexp_type ","val [] ","val []  sexp_type == ","val []  sexp_type "]}," Ruby20Parser _reduce_599":{"type":"method","name":"_reduce_599","children":[],"call":["val [] "," assignable ","val [] to_sym "," lexer lex_state= "," lexer "," s "]}," Ruby20Parser _reduce_598":{"type":"method","name":"_reduce_598","children":[],"call":["(str \"&\") to_sym "," env []= "," env ","val [] to_sym ","val [] ","id to_sym "," s ","val [] [] to_sym ","val [] [] "]}," Ruby20Parser _reduce_595":{"type":"method","name":"_reduce_595","children":[],"call":[" env []= "," env "," s line ","opt line "," s "," lexer lineno "," lexer ","(str \"&\") to_sym ","id to_sym "]}," Ruby20Parser _reduce_594":{"type":"method","name":"_reduce_594","children":[],"call":[" assignable ","val [] to_sym ","val [] ","result << "," block_append ","id to_sym "," block_append  << ","val []  << "]}," Ruby20Parser _reduce_588":{"type":"method","name":"_reduce_588","children":[],"call":[" s ","val [] "," env []= "," env "," s line ","optblk line "," block_append ","result []= ","list push ","more empty? ","val [] [] ","val [] dup "," s  []= "," s line  []= "," block_append  []= ","val []  []= ","val [] dup  push ","val [] []  empty? "]}," Ruby20Parser _reduce_579":{"type":"method","name":"_reduce_579","children":[],"call":["list << ","item last "," raise ","val inspect "," debug20 "," s line "," lexer lineno "," lexer "," s "," env []= "," env ","label to_sym ","val [] ","(str \"&\") to_sym ","val [] to_sym "]}," Ruby20Parser _reduce_575":{"type":"method","name":"_reduce_575","children":[],"call":["result << "," s ","list sexp_type == ","list sexp_type ","item first ","Sexp  === "," s line ","list line "," env []= "," env ","result line_max= ","item line_max "," assignable ","val [] ","val [] to_sym "," s  << "," s line  << "," assignable  << "," s  line_max= "," s line  line_max= "," assignable  line_max= ","result item line_max = ","item item line_max  "]}," Ruby20Parser _reduce_574":{"type":"method","name":"_reduce_574","children":[],"call":[" raise ","val inspect "," debug20 ","val [] ","result << "," s "," yyerror "," env []= "," env ","val [] to_sym "," new_arg "," assignable "," s line ","label to_sym ","val []  << "," s  << "," new_arg  << "," s line  << "]}," Ruby20Parser _reduce_565":{"type":"method","name":"_reduce_565","children":[],"call":[" args "," debug20 "," yyerror "," s ","val [] "," env []= "," env ","label to_sym "]}," Ruby20Parser _reduce_564":{"type":"method","name":"_reduce_564","children":[],"call":[" args ","val [] "," yyerror ","result << "," s ","list sexp_type == ","list sexp_type "," args  << "," s  << "]}," Ruby20Parser _reduce_562":{"type":"method","name":"_reduce_562","children":[],"call":[" args ","val [] "]}," Ruby20Parser _reduce_560":{"type":"method","name":"_reduce_560","children":[],"call":[" args ","val [] ","list << ","item last "]}," Ruby20Parser _reduce_554":{"type":"method","name":"_reduce_554","children":[],"call":[" args ","val [] "," raise ","val inspect "," debug20 ","result << "," s "," yyerror "," args  << ","val []  << "," s  << "]}," Ruby20Parser _reduce_552":{"type":"method","name":"_reduce_552","children":[],"call":[" args ","val [] "," yyerror "," env []= "," env ","val [] to_sym "]}," Ruby20Parser _reduce_530":{"type":"method","name":"_reduce_530","children":[],"call":[" s "," file "," s line "," lexer lineno "," lexer ","result line "," gettable ","Sexp  === "," raise ","val inspect ","val first "," lexer command_start= "," lexer lex_state= ","val [] "," s  line "," s line  line "," gettable  line ","val []  line "]}," Ruby20Parser _reduce_507":{"type":"method","name":"_reduce_507","children":[],"call":[" s ","val [] to_sym ","val [] "," lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm "," lexer string_nest= "," lexer brace_nest= "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," lexer lineno "," lexer lex_state "," lexer string_nest "," lexer brace_nest "," wrap "]}," Ruby20Parser _reduce_506":{"type":"method","name":"_reduce_506","children":[],"call":[" s ","val [] to_sym ","val [] "," new_string "," s line ","str line "," lexer lex_strterm= "," lexer ","id to_sym "," wrap "]}," Ruby20Parser _reduce_505":{"type":"method","name":"_reduce_505","children":[],"call":[" raise ","stmt inspect "," debug20 "," s ","stmt sexp_type "," lexer lex_state= "," lexer "," lexer cmdarg restore "," lexer cmdarg "," lexer cond restore "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," literal_concat "," lexer lex_strterm "," s line ","id to_sym "," wrap ","val [] "]}," Ruby20Parser _reduce_504":{"type":"method","name":"_reduce_504","children":[],"call":[" lexer lex_state= "," lexer "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer lex_state "," lexer cmdarg store "," lexer cmdarg "," lexer cond store "," lexer cond "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "," new_string "," s line "," s ","id to_sym "," wrap ","val [] "]}," Ruby20Parser _reduce_503":{"type":"method","name":"_reduce_503","children":[],"call":[" s ","val [] "," lexer lex_strterm= "," lexer "," literal_concat "," raise ","stmt inspect "," debug "," s line ","stmt sexp_type "," lexer lex_state= "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," wrap "]}," Ruby20Parser _reduce_500":{"type":"method","name":"_reduce_500","children":[],"call":[" literal_concat ","val [] "," s line "," lexer lineno "," lexer "," s "," lexer lex_state= "," lexer lex_strterm= "," lexer lex_strterm ","val [] -@ "," raise ","stmt inspect "," debug ","stmt sexp_type "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," lexer string_nest= "," lexer brace_nest= "]}," Ruby20Parser _reduce_499":{"type":"method","name":"_reduce_499","children":[],"call":["val [] dup << "," new_qsym_list_entry ","val [] dup ","val [] "," literal_concat "," new_string ","val [] -@ "," lexer lex_state= "," lexer "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," lexer lineno "," lexer lex_state "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "]}," Ruby20Parser _reduce_497":{"type":"method","name":"_reduce_497","children":[],"call":["val [] dup << "," new_qword_list_entry ","val [] dup ","val [] "," new_qsym_list_entry "," lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm "," debug20 "," s ","result last to_sym ","result last ","result []= ","result [] ","val [] dup <<  last to_sym "," lexer lex_strterm  last to_sym "," s  last to_sym ","val []  last to_sym ","val [] dup <<  last "," lexer lex_strterm  last "," s  last ","val []  last ","val [] dup <<  []= "," lexer lex_strterm  []= "," s  []= ","val []  []= ","val [] dup <<  [] "," lexer lex_strterm  [] "," s  [] ","val []  [] "]}," Ruby20Parser _reduce_496":{"type":"method","name":"_reduce_496","children":[],"call":[" literal_concat ","val [] "," new_qword_list "," new_qsym_list "," debug20 "," s ","result last to_sym ","result last ","result []= ","result [] "," lexer lex_state= "," lexer "," new_string "," literal_concat  last to_sym "," new_qword_list  last to_sym "," new_qsym_list  last to_sym "," s  last to_sym ","val []  last to_sym "," new_string  last to_sym "," literal_concat  last "," new_qword_list  last "," new_qsym_list  last "," s  last ","val []  last "," new_string  last "," literal_concat  []= "," new_qword_list  []= "," new_qsym_list  []= "," s  []= ","val []  []= "," new_string  []= "," literal_concat  [] "," new_qword_list  [] "," new_qsym_list  [] "," s  [] ","val []  [] "," new_string  [] "]}," Ruby20Parser _reduce_495":{"type":"method","name":"_reduce_495","children":[],"call":[" s ","val [] ","val [] dup << "," new_qword_list_entry ","val [] dup "," literal_concat "]}," Ruby20Parser _reduce_494":{"type":"method","name":"_reduce_494","children":[],"call":["val [] dup << "," new_qsym_list_entry ","val [] dup ","val [] "," s line "," lexer lineno "," lexer "," s "," new_qword_list "," literal_concat "]}," Ruby20Parser _reduce_491":{"type":"method","name":"_reduce_491","children":[],"call":[" new_qword_list ","list dup << "," new_symbol_list_entry ","list dup ","val [] "," new_qsym_list ","val [] to_sym "," literal_concat "," lexer lex_state= "," lexer "]}," Ruby20Parser _reduce_453":{"type":"method","name":"_reduce_453","children":[],"call":[" lexer lineno "," lexer "," lexer cmdarg pop "," lexer cmdarg "," lexer cmdarg restore "," env unextend "," env "," new_brace_body "," lexer cmdarg push ","result << ","val [] ","result line "," new_when "," new_resbody ","klasses line ","klasses << "," new_assign "," s line ","var line "," s "," literal_concat "," lexer lineno  << "," new_brace_body  << "," new_when  << ","val []  << "," new_resbody  << "," literal_concat  << "," lexer lineno  line "," new_brace_body  line "," new_when  line ","val []  line "," new_resbody  line "," literal_concat  line "]}," Ruby20Parser _reduce_450":{"type":"method","name":"_reduce_450","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," env unextend ","result line= "," lexer cmdarg store "," lexer cmdarg "," list_append "," debug20 ","result << ","val [] ","result line "," new_when ","val []= "," s ","val [] value ","val [] [] == ","val [] [] "," lexer lineno  line= "," lexer cmdarg store  line= "," list_append  line= "," new_when  line= ","val []  line= "," lexer lineno  << "," lexer cmdarg store  << "," list_append  << "," new_when  << ","val []  << "," lexer lineno  line "," lexer cmdarg store  line "," list_append  line "," new_when  line ","val []  line "]}," Ruby20Parser _reduce_447":{"type":"method","name":"_reduce_447","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," env unextend "," lexer cmdarg pop "," lexer cmdarg "," new_do_body "," s ","val [] "," list_append "]}," Ruby20Parser _reduce_445":{"type":"method","name":"_reduce_445","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," s line "," s ","arg line "]}," Ruby20Parser _reduce_443":{"type":"method","name":"_reduce_443","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," new_call ","val [] "," s line "," s "," lexer cmdarg store "," lexer cmdarg "," lexer cmdarg push "]}," Ruby20Parser _reduce_442":{"type":"method","name":"_reduce_442","children":[],"call":[" new_aref "," new_call ","val [] "," new_super "," lexer lineno "," lexer "," env extend "," env "]}," Ruby20Parser _reduce_438":{"type":"method","name":"_reduce_438","children":[],"call":[" new_call ","val [] ","result line ","call concat ","args sexp_body ","val [] to_sym "," lexer lineno "," lexer "," env extend "," env "," env unextend ","result << "," new_resbody ","klasses << "," new_assign "," s "," new_call  line ","call concat  line "," lexer lineno  line "," new_resbody  line "," new_call  << ","call concat  << "," lexer lineno  << "," new_resbody  << "]}," Ruby20Parser _reduce_437":{"type":"method","name":"_reduce_437","children":[],"call":[" new_call ","val [] to_sym ","val [] "," lexer lineno "," lexer "," new_aref ","result << "," new_resbody ","klasses << "," node_assign "," s "," env extend "," env "," new_call  << "," lexer lineno  << "," new_aref  << "," new_resbody  << "]}," Ruby20Parser _reduce_405":{"type":"method","name":"_reduce_405","children":[],"call":[" args "," new_iter "," new_call ","args == "," s "," lexer lpar_beg= "," lexer "," env unextend "," env "," lexer paren_nest "," lexer lpar_beg "," lexer lineno "," env extend "," new_ new_call  "]}," Ruby20Parser _reduce_400":{"type":"method","name":"_reduce_400","children":[],"call":[" args "]}," Ruby20Parser _reduce_396":{"type":"method","name":"_reduce_396","children":[],"call":[" args ","result line "," call_args "," lexer lineno "," lexer "," args << "," lexer command_start= "," s "," args  line "," call_args  line "," args <<  line "," s  line ","result  lexer lineno  "," lexer  lexer lineno no "]}," Ruby20Parser _reduce_379":{"type":"method","name":"_reduce_379","children":[],"call":[" list_append ","val [] ","val [] delete_at ","val [] [] nil? ","val [] [] "," block_var "," args "]}," Ruby20Parser _reduce_345":{"type":"method","name":"_reduce_345","children":[],"call":[" value_expr ","val [] "," s line "," s "]}," Ruby20Parser _reduce_344":{"type":"method","name":"_reduce_344","children":[],"call":[" s "," lexer comments "," lexer "," in_single "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," new_defs ","val [] "," s line "]}," Ruby20Parser _reduce_343":{"type":"method","name":"_reduce_343","children":[],"call":[" s "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," lexer cmdarg stack dup "," lexer lineno "," lexer lex_state= "," env extend "," env "," in_single "," s line "," value_expr ","val [] "]}," Ruby20Parser _reduce_342":{"type":"method","name":"_reduce_342","children":[],"call":[" s "," lexer lex_state= "," lexer "," comments push "," lexer comments "," comments "," in_single "," in_def= "," env unextend "," env "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," new_defs "," s line "]}," Ruby20Parser _reduce_341":{"type":"method","name":"_reduce_341","children":[],"call":[" s "," lexer comments "," lexer "," in_def= "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," new_defn ","val [] "," comments push "," comments "," lexer lex_state= ","EXPR_ENDFN  | "," lexer cond push "," lexer cond "," lexer cmdarg push "," env extend "," in_single "," lexer lineno "," in_def "," s line "]}," Ruby20Parser _reduce_340":{"type":"method","name":"_reduce_340","children":[],"call":[" lexer comments "," lexer "," in_single "," env unextend "," env "," lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg ","result [] line ","result [] "," new_defs ","val [] "," lexer lineno "," lexer lex_state= "," s line "," s "," value_expr "," new_defs  [] line "," lexer lineno  [] line "," s line  [] line "," value_expr  [] line "," new_defs  [] "," lexer lineno  [] "," s line  [] "," value_expr  [] "]}," Ruby20Parser _reduce_339":{"type":"method","name":"_reduce_339","children":[],"call":[" lexer cmdarg stack replace "," lexer cmdarg stack "," lexer cmdarg "," lexer "," lexer cmdarg stack dup "," lexer lineno "," lexer lex_state= "," env extend "," env "," in_single "," in_def= "," comments push "," lexer comments "," comments "," in_def "," env unextend "," lexer cmdarg pop "," lexer cond pop "," lexer cond "," new_defn ","val [] "," s line "," s "," val [] = "," val []  "]}," Ruby20Parser _reduce_303":{"type":"method","name":"_reduce_303","children":[],"call":[" s ","val [] to_sym ","val [] "," lexer cmdarg restore "," lexer cmdarg "," lexer "," warning "," s line ","expr line ","id to_sym ","result line ","result sexp_type= ","result line_max= ","iter insert "," block_dup_check "," s  line "," s line  line ","val []  line "," s  sexp_type= "," s line  sexp_type= ","val []  sexp_type= "," s  line_max= "," s line  line_max= ","val []  line_max= "]}," Ruby20Parser _reduce_281":{"type":"method","name":"_reduce_281","children":[],"call":[" list_append "," s ","val [] "," lexer lineno "," lexer "," s line ","arg line "," lexer  lexer lineno no "," s  lexer lineno  ","arg  lexer lineno  "]}," Ruby20Parser _reduce_280":{"type":"method","name":"_reduce_280","children":[],"call":[" list_append ","val [] "," arg_concat "]}," Ruby20Parser _reduce_279":{"type":"method","name":"_reduce_279","children":[],"call":[" s ","val [] "," s line ","arg line ","val [] << "]}," Ruby20Parser _reduce_278":{"type":"method","name":"_reduce_278","children":[],"call":[" s ","val [] "," s line ","arg line "," lexer lineno "," lexer "," list_append "," s  lexer lineno  ","arg  lexer lineno  "," lexer  lexer lineno no "]}," Ruby20Parser _reduce_276":{"type":"method","name":"_reduce_276","children":[],"call":["val [] "," s line ","arg line "," s "]}," Ruby20Parser _reduce_275":{"type":"method","name":"_reduce_275","children":[],"call":[" s ","val [] "," s line ","arg line "," lexer lineno "," lexer "]}," Ruby20Parser _reduce_274":{"type":"method","name":"_reduce_274","children":[],"call":["val [] "," lexer cmdarg restore "," lexer cmdarg "," lexer "," lexer cmdarg push "," lexer cmdarg pop ","(sym :tLBRACE_ARG) include? "]}," Ruby20Parser _reduce_273":{"type":"method","name":"_reduce_273","children":[],"call":[" lexer cmdarg store "," lexer cmdarg "," lexer "," lexer cmdarg push "," lexer cmdarg pop ","(sym :tLPAREN) include? "," last_token_type first "," last_token_type ","val [] "," s "]}," Ruby20Parser _reduce_272":{"type":"method","name":"_reduce_272","children":[],"call":[" call_args "," s line ","arg line "," s "," arg_concat ","val [] "]}," Ruby20Parser _reduce_264":{"type":"method","name":"_reduce_264","children":[],"call":["val [] "," args "," array_to_hash "]}," Ruby20Parser _reduce_243":{"type":"method","name":"_reduce_243","children":[],"call":[" logical_op ","val [] "]}," Ruby20Parser _reduce_241":{"type":"method","name":"_reduce_241","children":[],"call":[" new_call "," argl ","val [] ","val []= "," value_expr "," s line "," s "]}," Ruby20Parser _reduce_134":{"type":"method","name":"_reduce_134","children":[],"call":[" new_undef ","val [] "]}," Ruby20Parser _reduce_133":{"type":"method","name":"_reduce_133","children":[],"call":[" lexer lex_state= "," lexer "," new_undef ","val [] "]}," Ruby20Parser _reduce_132":{"type":"method","name":"_reduce_132","children":[],"call":[" new_undef ","val [] "," lexer lex_state= "," lexer "]}," Ruby20Parser _reduce_130":{"type":"method","name":"_reduce_130","children":[],"call":[" s ","val [] to_sym ","val [] "," new_undef "]}," Ruby20Parser _reduce_127":{"type":"method","name":"_reduce_127","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby20Parser _reduce_126":{"type":"method","name":"_reduce_126","children":[],"call":["val [] "," lexer lex_state= "," lexer "]}," Ruby20Parser _reduce_121":{"type":"method","name":"_reduce_121","children":[],"call":["val [] to_sym ","val [] "," s ","result line ","pval line ","name to_sym ","id to_sym ","val [] to_sym  line "," s  line "]}," Ruby20Parser _reduce_118":{"type":"method","name":"_reduce_118","children":[],"call":[" yyerror "]}," Ruby20Parser _reduce_115":{"type":"method","name":"_reduce_115","children":[],"call":[" s ","val [] to_sym ","val [] "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," s line ","id to_sym "," lexer lineno "," lexer ","expr line "," debug ","va lexer lineno  [] to_sym ","vaexpr line  [] to_sym ","va lexer lineno  [] ","vaexpr line  [] "," in_sing lexer lineno e > "," in_singexpr line e > "," in_sing lexer lineno e "," in_singexpr line e "," s  lexer lineno ine "," s expr line ine ","  lexer lineno exer  lexer lineno ineno "," expr line exer expr line ineno ","  lexer lineno exer "," expr line exer ","expr  lexer lineno ine ","expr expr line ine "]}," Ruby20Parser _reduce_114":{"type":"method","name":"_reduce_114","children":[],"call":[" new_attrasgn ","val [] "," s ","val [] to_sym "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," s line ","id to_sym ","expr line ","vaexpr line  [] ","vaexpr line  [] to_sym "," in_singexpr line e > "," in_singexpr line e "," s expr line ine ","expr expr line ine "]}," Ruby20Parser _reduce_113":{"type":"method","name":"_reduce_113","children":[],"call":[" s ","val [] "," new_attrasgn "]}," Ruby20Parser _reduce_109":{"type":"method","name":"_reduce_109","children":[],"call":[" assignable ","val [] "," debug20 ","result line= "," lexer lineno "," lexer "," assignable  line= ","result  lexer lineno = "," lexer  lexer lineno no "]}," Ruby20Parser _reduce_84":{"type":"method","name":"_reduce_84","children":[],"call":[" s ","val [] ","val [] << ","val [] compact "," s line ","lhs line ","lhs << ","rhs compact ","head line "]}," Ruby20Parser _reduce_72":{"type":"method","name":"_reduce_72","children":[],"call":["block insert "," block_dup_check "," new_call ","val [] ","msg to_sym ","val [] to_sym "," new_ new_call  "]}," Ruby20Parser _reduce_70":{"type":"method","name":"_reduce_70","children":[],"call":["result insert ","val [] "," block_dup_check ","val [] concat ","val [] sexp_body "," new_call ","val [] to_sym ","op to_sym ","call concat ","args sexp_body ","val [] concat  insert "," new_call  insert ","call concat  insert "]}," Ruby20Parser _reduce_53":{"type":"method","name":"_reduce_53","children":[],"call":[" logical_op ","val [] "]}," Ruby20Parser _reduce_49":{"type":"method","name":"_reduce_49","children":[],"call":[" value_expr "," backref_assign_error ","val [] "]}," Ruby20Parser _reduce_44":{"type":"method","name":"_reduce_44","children":[],"call":["result line= ","val [] line ","val [] ","result sexp_type= ","val [] == "," s ","val [] to_sym ","opasgn to_sym ","id to_sym "," new_op_asgn1 "," s  line= "," new_op_asgn1  line= "," s  sexp_type= "," new_op_asgn1  sexp_type= "]}," Ruby20Parser _reduce_41":{"type":"method","name":"_reduce_41","children":[],"call":[" new_assign ","val [] "]}," Ruby20Parser _reduce_29":{"type":"method","name":"_reduce_29","children":[],"call":[" new_if ","val [] "]}," Ruby20Parser _reduce_14":{"type":"method","name":"_reduce_14","children":[],"call":[" new_body "]}," Ruby20Parser _reduce_13":{"type":"method","name":"_reduce_13","children":[],"call":[" new_body "," yyerror ","_values [] "," warn "]}," RubyParserStuff new_const_op_asgn":{"type":"method","name":"new_const_op_asgn","children":[],"call":["result line= ","lhs line "," s ","val [] ","val [] to_sym ","asgn_op to_sym ","asgn_op to_sym  to_sym "]}," RubyLexer is_after_operator?":{"type":"method","name":"is_after_operator?","children":[],"call":[" lex_state =~ ","EXPR_FNAME  | "," lex_state "]}," RubyLexer State inspect":{"type":"method","name":"inspect","children":[],"call":["(send\n  (const nil :NAMES) :map) compact join ","(send\n  (const nil :NAMES) :map) compact "," =~ ","NAMES  map "," n zero? "," n ","(send\n  (send nil :names) :map) compact join gsub ","(send\n  (send nil :names) :map) compact join ","(send\n  (send nil :names) :map) compact "," names map "," names "]}," RubyLexer State |":{"type":"method","name":"|","children":[],"call":[" class new "," n | ","v n "," n "," class "," names "," raise ","Incompatible State: %p vs %p % "," names == ","v names "]}," RubyLexer State =~":{"type":"method","name":"=~","children":[],"call":["(send\n  (send\n    (self) :n) :&\n  (send\n    (lvar :v) :n)) != "," n & ","v n "," n "]}," RubyLexer State ==":{"type":"method","name":"==","children":[],"call":["o n == "," n ","o n ","o class == "," class ","o class "," equal? "]}," RubyLexer State initialize":{"type":"method","name":"initialize","children":[],"call":[" n= "," raise ","bad state: %p % ","Integer  === "," names= "]}," Ruby26Parser _reduce_650":{"type":"method","name":"_reduce_650","children":[],"call":[]}," Ruby26Parser _reduce_646":{"type":"method","name":"_reduce_646","children":[],"call":[" yyerrok "]}," Ruby26Parser _reduce_620":{"type":"method","name":"_reduce_620","children":[],"call":[" s ","val [] "," s line ","v1 line ","arg line "," s arg line  ","v1 arg line  ","arg arg line  "]}," Ruby26Parser _reduce_614":{"type":"method","name":"_reduce_614","children":[],"call":["val [] "," lexer lex_state= "," lexer "," s line ","v1 line "," s "]}," Ruby26Parser _reduce_609":{"type":"method","name":"_reduce_609","children":[],"call":[" env []= "," env "," yyerror ","result sexp_type == ","result sexp_type ","val [] ","val []  sexp_type == ","val []  sexp_type "]}," Ruby26Parser _reduce_604":{"type":"method","name":"_reduce_604","children":[],"call":[" env []= "," env "," s line ","opt line "," s "," lexer lineno "," lexer ","(str \"&\") to_sym ","id to_sym "]}," Ruby26Parser _reduce_600":{"type":"method","name":"_reduce_600","children":[],"call":[" block_append ","val [] "," assignable "," s line ","optblk line "," s ","id to_sym "]}," Ruby26Parser _reduce_590":{"type":"method","name":"_reduce_590","children":[],"call":[" args "," s line "," s "," env []= "," env ","label to_sym "," assignable ","id to_sym ","label to_sym  to_sym "]}," Ruby26Parser _reduce_588":{"type":"method","name":"_reduce_588","children":[],"call":["list << ","item last "," s line "," s "," env []= "," env ","label to_sym "]}," Ruby26Parser _reduce_586":{"type":"method","name":"_reduce_586","children":[],"call":[" s "," env []= "," env ","label to_sym ","val [] ","result << "," s line ","list line ","list sexp_type == ","list sexp_type "," s  << "," s line  << "]}," Ruby26Parser _reduce_581":{"type":"method","name":"_reduce_581","children":[],"call":["result << "," s ","list sexp_type == ","list sexp_type "," env []= "," env ","val [] to_sym ","val [] ","item first ","Sexp  === "," s line ","list line ","result line_max= ","item line_max ","label to_sym "," s  << "," s line  << "," s  line_max= "," s line  line_max= ","result item line_max = ","item item line_max  "]}," Ruby26Parser _reduce_576":{"type":"method","name":"_reduce_576","children":[],"call":[" env []= "," env ","val [] to_sym ","val [] "," yyerror ","id to_sym "]}," Ruby26Parser _reduce_574":{"type":"method","name":"_reduce_574","children":[],"call":[" yyerror "," args "]}," Ruby26Parser _reduce_552":{"type":"method","name":"_reduce_552","children":[],"call":[" args "," lexer command_start= "," lexer "," lexer lex_state= ","val [] "," in_kwarg= "]}," Ruby26Parser _reduce_521":{"type":"method","name":"_reduce_521","children":[],"call":["val [] -@ ","val [] ","num -@ "]}," Ruby26Parser _reduce_519":{"type":"method","name":"_reduce_519","children":[],"call":[" debug20 "," s ","result last to_sym ","result last ","result sexp_type= ","result sexp_type ","val [] "," lexer lex_state= "," lexer ","val [] to_sym "," debug "," s line ","result line "," lexer lineno "," s  last to_sym ","val []  last to_sym ","val [] to_sym  last to_sym "," s line  last to_sym "," s  last ","val []  last ","val [] to_sym  last "," s line  last "," s  sexp_type= ","val []  sexp_type= ","val [] to_sym  sexp_type= "," s line  sexp_type= "," s  sexp_type ","val []  sexp_type ","val [] to_sym  sexp_type "," s line  sexp_type "," s  line ","val []  line ","val [] to_sym  line "," s line  line "]}," Ruby26Parser _reduce_514":{"type":"method","name":"_reduce_514","children":[],"call":["val [] to_sym ","val [] "," s line "," lexer lineno "," lexer "," s ","id to_sym "," lexer lex_state= "," wrap "]}," Ruby26Parser _reduce_511":{"type":"method","name":"_reduce_511","children":[],"call":[" s ","val [] to_sym ","val [] "," s line ","str line "," lexer lex_strterm= "," lexer "," raise ","stmt inspect "," debug20 ","stmt sexp_type "," lexer lex_state= "," lexer cond pop "," lexer cond "," lexer cmdarg pop "," lexer cmdarg "," lexer string_nest= "," lexer brace_nest= "," wrap "]}," Ruby26Parser _reduce_483":{"type":"method","name":"_reduce_483","children":[],"call":["val [] dup << "," new_word_list_entry ","val [] dup ","val [] "," new_regexp "," literal_concat "," new_symbol_list "]}," Ruby26Parser _reduce_473":{"type":"method","name":"_reduce_473","children":[],"call":[" debug20 ","result line= "," s ","val [] "," lexer lineno "," lexer "," literal_concat "," new_xstring "," s  line= "," literal_concat  line= "," new_xstring  line= ","result  lexer lineno = "," lexer  lexer lineno no "]}," Ruby26Parser _reduce_470":{"type":"method","name":"_reduce_470","children":[],"call":[" s ","val [] ","str value ","str sexp_type == ","str sexp_type "," literal_concat "," s  value "," s  sexp_type == "," s  sexp_type "]}," Ruby26Parser _reduce_467":{"type":"method","name":"_reduce_467","children":[],"call":[" s ","val [] ","str value ","str sexp_type == ","str sexp_type "," s  value "," s  sexp_type == "," s  sexp_type "]}," Ruby26Parser _reduce_465":{"type":"method","name":"_reduce_465","children":[],"call":["val [] "," s line "," s "]}," Ruby26Parser _reduce_462":{"type":"method","name":"_reduce_462","children":[],"call":[" s ","val [] ","result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s line ","var line "," s  << "," new_resbody  << "]}," Ruby26Parser _reduce_457":{"type":"method","name":"_reduce_457","children":[],"call":["result << ","val [] ","result line= "," new_when "," lexer lineno "," lexer "," env extend "," env "," env unextend "," lexer cmdarg pop "," lexer cmdarg "," new_do_body "," new_when  << "," lexer lineno  << "," new_do_body  << "," new_when  line= "," lexer lineno  line= "," new_do_body  line= "]}," Ruby26Parser _reduce_422":{"type":"method","name":"_reduce_422","children":[],"call":[" s ","val [] to_sym ","val [] "," args "," env unextend "," env ","result line "," new_iter "," s line "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer lpar_beg= "," s  line "," args  line "," new_iter  line ","val []  line "]}," Ruby26Parser _reduce_417":{"type":"method","name":"_reduce_417","children":[],"call":[" args "," lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," lexer lineno "," env extend "," env "]}," Ruby26Parser _reduce_396":{"type":"method","name":"_reduce_396","children":[],"call":[" args "," call_args "," args << "]}," Ruby26Parser _reduce_378":{"type":"method","name":"_reduce_378","children":[],"call":["val [] delete_at ","val [] ","val [] [] nil? ","val [] [] "," s line "," s "," block_var "]}," Ruby26Parser _reduce_376":{"type":"method","name":"_reduce_376","children":[],"call":["val [] "," s line "," s ","val [] delete_at ","val [] [] nil? ","val [] [] "," lexer lineno "," lexer "]}," Ruby26Parser _reduce_374":{"type":"method","name":"_reduce_374","children":[],"call":[" s ","val [] "]}," Ruby26Parser _reduce_348":{"type":"method","name":"_reduce_348","children":[],"call":[" value_expr ","val [] "," s line "," s "]}," Ruby26Parser _reduce_318":{"type":"method","name":"_reduce_318","children":[],"call":["call line= ","iter line ","iter insert ","val [] "," s line "," s "," debug20 "," block_dup_check "]}," Ruby26Parser _reduce_287":{"type":"method","name":"_reduce_287","children":[],"call":[" s ","val [] "," arg_concat "," s line ","arg line "]}," Ruby26Parser _reduce_277":{"type":"method","name":"_reduce_277","children":[],"call":["val [] "," s line ","arg line "," s "]}," Ruby26Parser _reduce_261":{"type":"method","name":"_reduce_261","children":[],"call":["val [] "]}," Ruby26Parser _reduce_258":{"type":"method","name":"_reduce_258","children":[],"call":[" args "," array_to_hash ","val [] ","result line_max= "," args  line_max= "]}," Ruby26Parser _reduce_254":{"type":"method","name":"_reduce_254","children":[],"call":[" value_expr ","val [] "," args "," array_to_hash "]}," Ruby26Parser _reduce_246":{"type":"method","name":"_reduce_246","children":[],"call":[" s ","val [] "," s line ","c line "]}," Ruby26Parser _reduce_232":{"type":"method","name":"_reduce_232","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby25Parser _reduce_648":{"type":"method","name":"_reduce_648","children":[],"call":[]}," Ruby25Parser _reduce_644":{"type":"method","name":"_reduce_644","children":[],"call":[" yyerrok "]}," Ruby25Parser _reduce_618":{"type":"method","name":"_reduce_618","children":[],"call":[" s ","val [] "," s line ","v1 line ","arg line "," s arg line  ","v1 arg line  ","arg arg line  "]}," Ruby25Parser _reduce_612":{"type":"method","name":"_reduce_612","children":[],"call":["val [] "," lexer lex_state= "," lexer "," s line ","v1 line "," s "]}," Ruby25Parser _reduce_607":{"type":"method","name":"_reduce_607","children":[],"call":[" env []= "," env "," yyerror ","result sexp_type == ","result sexp_type ","val [] ","val []  sexp_type == ","val []  sexp_type "]}," Ruby25Parser _reduce_602":{"type":"method","name":"_reduce_602","children":[],"call":[" env []= "," env "," s line ","opt line "," s "," lexer lineno "," lexer ","(str \"&\") to_sym ","id to_sym "]}," Ruby25Parser _reduce_588":{"type":"method","name":"_reduce_588","children":[],"call":[" args "," s line "," s "," env []= "," env ","label to_sym "," assignable ","id to_sym ","label to_sym  to_sym "]}," Ruby25Parser _reduce_584":{"type":"method","name":"_reduce_584","children":[],"call":[" s "," env []= "," env ","label to_sym ","val [] ","result << "," s line ","list line ","list sexp_type == ","list sexp_type "," s  << "," s line  << "]}," Ruby25Parser _reduce_579":{"type":"method","name":"_reduce_579","children":[],"call":["result << "," s ","list sexp_type == ","list sexp_type "," env []= "," env ","val [] to_sym ","val [] ","item first ","Sexp  === "," s line ","list line ","result line_max= ","item line_max ","label to_sym "," s  << "," s line  << "," s  line_max= "," s line  line_max= ","result item line_max = ","item item line_max  "]}," Ruby25Parser _reduce_346":{"type":"method","name":"_reduce_346","children":[],"call":[" value_expr ","val [] "," s line "," s "]}," Ruby25Parser _reduce_275":{"type":"method","name":"_reduce_275","children":[],"call":["val [] "," s line ","arg line "," s "]}," Ruby24Parser _reduce_648":{"type":"method","name":"_reduce_648","children":[],"call":[]}," Ruby24Parser _reduce_644":{"type":"method","name":"_reduce_644","children":[],"call":[" yyerrok "]}," Ruby24Parser _reduce_618":{"type":"method","name":"_reduce_618","children":[],"call":[" s ","val [] "," s line ","v1 line ","arg line "," s arg line  ","v1 arg line  ","arg arg line  "]}," Ruby24Parser _reduce_612":{"type":"method","name":"_reduce_612","children":[],"call":["val [] "," lexer lex_state= "," lexer "," s line ","v1 line "," s "]}," Ruby24Parser _reduce_607":{"type":"method","name":"_reduce_607","children":[],"call":[" env []= "," env "," yyerror ","result sexp_type == ","result sexp_type ","val [] ","val []  sexp_type == ","val []  sexp_type "]}," Ruby24Parser _reduce_602":{"type":"method","name":"_reduce_602","children":[],"call":[" env []= "," env "," s line ","opt line "," s "," lexer lineno "," lexer ","(str \"&\") to_sym ","id to_sym "]}," Ruby24Parser _reduce_588":{"type":"method","name":"_reduce_588","children":[],"call":[" args "," s line "," s "," env []= "," env ","label to_sym "," assignable ","id to_sym "," lexer lex_state= "," lexer ","label to_sym  to_sym "]}," Ruby24Parser _reduce_584":{"type":"method","name":"_reduce_584","children":[],"call":[" s "," env []= "," env ","label to_sym ","val [] ","result << "," s line ","list line ","list sexp_type == ","list sexp_type ","(str \"&\") to_sym ","val [] to_sym "," s  << "," s line  << ","(str \"&\") to_sym  << "]}," Ruby24Parser _reduce_579":{"type":"method","name":"_reduce_579","children":[],"call":["result << "," s ","list sexp_type == ","list sexp_type "," env []= "," env ","val [] to_sym ","val [] ","item first ","Sexp  === "," s line ","list line ","result line_max= ","item line_max ","label to_sym "," s  << "," s line  << "," s  line_max= "," s line  line_max= ","result item line_max = ","item item line_max  "]}," Ruby24Parser _reduce_346":{"type":"method","name":"_reduce_346","children":[],"call":[" value_expr ","val [] "," s line "," s "]}," Ruby24Parser _reduce_275":{"type":"method","name":"_reduce_275","children":[],"call":["val [] "," s line ","arg line "," s "]}," Ruby23Parser _reduce_130":{"type":"method","name":"_reduce_130","children":[],"call":[" new_undef ","val [] "," lexer lex_state= "," lexer "]}," Ruby23Parser _reduce_128":{"type":"method","name":"_reduce_128","children":[],"call":[" s ","val [] to_sym ","val [] "," s line "," lexer lineno "," lexer ","id to_sym "," new_undef "]}," Ruby23Parser _reduce_124":{"type":"method","name":"_reduce_124","children":[],"call":["val [] "," lexer lex_state= "," lexer "," new_undef "," s ","val [] to_sym "]}," Ruby23Parser _reduce_118":{"type":"method","name":"_reduce_118","children":[],"call":[" s ","val [] to_sym ","val [] "," s line "," lexer lineno "," lexer ","name to_sym "," lexer lex_state= "]}," Ruby23Parser _reduce_51":{"type":"method","name":"_reduce_51","children":[],"call":[" logical_op ","val [] "]}," Ruby22Parser _reduce_130":{"type":"method","name":"_reduce_130","children":[],"call":[" new_undef ","val [] "," lexer lex_state= "," lexer "]}," Ruby22Parser _reduce_128":{"type":"method","name":"_reduce_128","children":[],"call":[" s ","val [] to_sym ","val [] "," s line "," lexer lineno "," lexer ","id to_sym "]}," Ruby22Parser _reduce_124":{"type":"method","name":"_reduce_124","children":[],"call":["val [] "," lexer lex_state= "," lexer "]}," Ruby22Parser _reduce_118":{"type":"method","name":"_reduce_118","children":[],"call":[" s ","val [] to_sym ","val [] "," s line "," lexer lineno "," lexer ","name to_sym "]}," Ruby22Parser _reduce_51":{"type":"method","name":"_reduce_51","children":[],"call":[" logical_op ","val [] "]}," Ruby21Parser _reduce_130":{"type":"method","name":"_reduce_130","children":[],"call":[" new_undef ","val [] "," lexer lex_state= "," lexer "]}," Ruby21Parser _reduce_128":{"type":"method","name":"_reduce_128","children":[],"call":[" s ","val [] to_sym ","val [] "," s line "," lexer lineno "," lexer ","id to_sym "]}," Ruby21Parser _reduce_124":{"type":"method","name":"_reduce_124","children":[],"call":["val [] "," lexer lex_state= "," lexer "]}," Ruby21Parser _reduce_118":{"type":"method","name":"_reduce_118","children":[],"call":[" s ","val [] to_sym ","val [] "," s line "," lexer lineno "," lexer ","name to_sym "]}," Ruby21Parser _reduce_51":{"type":"method","name":"_reduce_51","children":[],"call":[" logical_op ","val [] "]}," Ruby20Parser _reduce_131":{"type":"method","name":"_reduce_131","children":[],"call":[" new_undef ","val [] "," lexer lex_state= "," lexer "]}," Ruby20Parser _reduce_129":{"type":"method","name":"_reduce_129","children":[],"call":[" s ","val [] to_sym ","val [] "," s line "," lexer lineno "," lexer ","id to_sym "]}," Ruby20Parser _reduce_125":{"type":"method","name":"_reduce_125","children":[],"call":["val [] "," lexer lex_state= "," lexer "]}," Ruby20Parser _reduce_119":{"type":"method","name":"_reduce_119","children":[],"call":[" s ","val [] to_sym ","val [] "," s line "," lexer lineno "," lexer ","name to_sym "]}," Ruby20Parser _reduce_52":{"type":"method","name":"_reduce_52","children":[],"call":[" logical_op ","val [] "]}," RubyParserStuff whitespace_width":{"type":"method","name":"whitespace_width","children":[],"call":["line [] ","n > ","TAB_WIDTH  * ","col / + ","col / ","col >= ","line chars each ","line chars ","line [] nil? ","line [] == ","liTAB_WIDTH  * e [] ","TAB_WIDTH  *  > ","liTAB_WIDTH  * e chars each ","liTAB_WIDTH  * e chars ","liTAB_WIDTH  * e [] TAB_WIDTH  * il? ","liTAB_WIDTH  * e [] == "]}," RubyParserStuff new_op_asgn1":{"type":"method","name":"new_op_asgn1","children":[],"call":["result line ","lhs line "," s ","op to_sym ","args sexp_type= "," s  line "]}," RubyParserStuff dedent_string":{"type":"method","name":"dedent_string","children":[],"call":["string [] ","proposed > ","TAB_WIDTH  * ","indentation_skipped / + ","indentation_skipped / ","char == ","indentation_skipped >= ","string chars each ","string chars ","TAB_WIDTH  *  > "]}," RubyParserStuff dedent_size":{"type":"method","name":"dedent_size","children":[],"call":["(send\n  (lvar :sexp) :flat_map) compact min ","(send\n  (lvar :sexp) :flat_map) compact "," whitespace_width ","l [] ","(lvar :s) map "," warn ","unprocessed: %p % ","unprocessed sexp %p % ","lines shift ","str lines ","s sexp_type ","s lines ","sexp flat_map ","l chomp ","str lines  shift ","str str lines  ","s str lines  "]}," RubyParserStuff dedent":{"type":"method","name":"dedent","children":[],"call":[" warn ","unprocessed: %p % ","unprocessed sexp %p % "," s line ","obj line "," s ","(send\n  (send\n    (lvar :str) :lines) :map) join "," remove_whitespace_width ","str lines map ","str lines ","s1 + ","(send\n  (lvar :rest) :map) join ","rest map ","obj sexp_type ","(send\n  (send\n    (lvar :obj) :lines) :map) join ","obj lines map ","obj lines ","sexp map "," dedent_size ","(send\n  (send\n    (lvar :(send\n  (send\n    (lvar :str) :lines) :map) join ) :lines) :map) join ","(send\n  (send\n    (lvar :str) :lines) :map) join  lines map ","(send\n  (send\n    (lvar :str) :lines) :map) join  lines "]}," RubyParserStuff _racc_do_reduce":{"type":"method","name":"_racc_do_reduce","children":[],"call":["sexp check_line_numbers ","@racc_vstack grep each ","@racc_vstack grep "]}," Sexp nil_line?":{"type":"method","name":"nil_line?","children":[],"call":[" deep_each map any? "," deep_each map "," deep_each "]}," Sexp line_min":{"type":"method","name":"line_min","children":[],"call":["(send\n  (send\n    (send\n      (self) :deep_each) :map\n    (block-pass\n      (sym :line))) :min) compact min ","(send\n  (send\n    (send\n      (self) :deep_each) :map\n    (block-pass\n      (sym :line))) :min) compact "," line "," deep_each map min "," deep_each map "," deep_each "]}," Sexp check_line_numbers":{"type":"method","name":"check_line_numbers","children":[],"call":[" raise ","bad line number for:\n%s % "," pretty_inspect "," line <= "," line_min "," line "," line >= ","Integer  === ","bad nil line for:\n%s % "," nil_line? "]}," RubyLexer ruby24minus?":{"type":"method","name":"ruby24minus?","children":[],"call":[" parser class version <= "," parser class version "," parser class "," parser "]}," Ruby26Parser _reduce_655":{"type":"method","name":"_reduce_655","children":[],"call":[]}," Ruby26Parser _reduce_654":{"type":"method","name":"_reduce_654","children":[],"call":[" yyerrok "]}," Ruby26Parser _reduce_651":{"type":"method","name":"_reduce_651","children":[],"call":[" yyerrok "]}," Ruby26Parser _reduce_625":{"type":"method","name":"_reduce_625","children":[],"call":[" s line "," s ","arg line "," s arg line  ","arg arg line  "]}," Ruby26Parser _reduce_624":{"type":"method","name":"_reduce_624","children":[],"call":[" s line ","sym line "," s ","sym sexp_type= "]}," Ruby26Parser _reduce_623":{"type":"method","name":"_reduce_623","children":[],"call":[" s line "," s ","label to_sym ","arg line "," s arg line  ","arg arg line  "]}," Ruby26Parser _reduce_622":{"type":"method","name":"_reduce_622","children":[],"call":[" s line ","v1 line "," s ","sym line ","sym sexp_type= "]}," Ruby26Parser _reduce_621":{"type":"method","name":"_reduce_621","children":[],"call":["result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] ","val [] dup "," s line "," s ","label to_sym "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "]}," Ruby26Parser _reduce_605":{"type":"method","name":"_reduce_605","children":[],"call":[" block_append ","val [] "]}," Ruby26Parser _reduce_601":{"type":"method","name":"_reduce_601","children":[],"call":[" assignable ","val [] ","result << "," lexer lineno "," lexer "," env []= "," env "," assignable  << "]}," Ruby26Parser _reduce_591":{"type":"method","name":"_reduce_591","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym ","list << ","item last "," lexer lineno "," lexer "]}," Ruby26Parser _reduce_577":{"type":"method","name":"_reduce_577","children":[],"call":[" yyerror "," new_arg "]}," Ruby26Parser _reduce_526":{"type":"method","name":"_reduce_526","children":[],"call":["val [] -@ ","val [] "]}," Ruby26Parser _reduce_524":{"type":"method","name":"_reduce_524","children":[],"call":[" debug20 "," s line ","result line "," s ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," lexer lineno "," lexer "," lexer lex_state= ","val [] -@ ","val [] "," s line  line ","val [] -@  line "," s line  last to_sym ","val [] -@  last to_sym "," s line  last ","val [] -@  last "," s line  sexp_type= ","val [] -@  sexp_type= "," s line  sexp_type ","val [] -@  sexp_type "]}," Ruby26Parser _reduce_516":{"type":"method","name":"_reduce_516","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","val [] to_sym ","val [] "," lexer lex_state= "," debug ","result line ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," s line  line ","val [] to_sym  line "," s line  last to_sym ","val [] to_sym  last to_sym "," s line  last ","val [] to_sym  last "," s line  sexp_type= ","val [] to_sym  sexp_type= "," s line  sexp_type ","val [] to_sym  sexp_type "]}," Ruby26Parser _reduce_515":{"type":"method","name":"_reduce_515","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","val [] to_sym ","val [] "]}," Ruby26Parser _reduce_458":{"type":"method","name":"_reduce_458","children":[],"call":[" lexer cmdarg store "," lexer cmdarg "," lexer "," lexer lineno "," s line ","arg line "," s "]}," Ruby26Parser _reduce_352":{"type":"method","name":"_reduce_352","children":[],"call":[" value_expr ","val [] "," comments push "," lexer comments "," lexer "," comments "]}," Ruby26Parser _reduce_351":{"type":"method","name":"_reduce_351","children":[],"call":[" s line "," s "," comments push "," lexer comments "," lexer "," comments "]}," Ruby26Parser _reduce_350":{"type":"method","name":"_reduce_350","children":[],"call":[" s line "," s "," value_expr ","val [] "]}," Ruby26Parser _reduce_349":{"type":"method","name":"_reduce_349","children":[],"call":[" s line "," s "]}," Ruby26Parser _reduce_288":{"type":"method","name":"_reduce_288","children":[],"call":[" s line ","arg line "," s "]}," Ruby26Parser _reduce_20":{"type":"method","name":"_reduce_20","children":[],"call":[" debug20 ","val [] "," debug "]}," Ruby26Parser _reduce_16":{"type":"method","name":"_reduce_16","children":[],"call":[" new_compstmt "]}," Ruby25Parser _reduce_653":{"type":"method","name":"_reduce_653","children":[],"call":[]}," Ruby25Parser _reduce_652":{"type":"method","name":"_reduce_652","children":[],"call":[" yyerrok "]}," Ruby25Parser _reduce_649":{"type":"method","name":"_reduce_649","children":[],"call":[" yyerrok "]}," Ruby25Parser _reduce_622":{"type":"method","name":"_reduce_622","children":[],"call":[" s line ","sym line "," s ","sym sexp_type= "]}," Ruby25Parser _reduce_621":{"type":"method","name":"_reduce_621","children":[],"call":[" s line "," s ","label to_sym ","arg line "," s arg line  ","arg arg line  "]}," Ruby25Parser _reduce_620":{"type":"method","name":"_reduce_620","children":[],"call":[" s line ","v1 line "," s ","sym line ","sym sexp_type= "]}," Ruby25Parser _reduce_619":{"type":"method","name":"_reduce_619","children":[],"call":["result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] ","val [] dup "," s line "," s ","label to_sym "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "]}," Ruby25Parser _reduce_603":{"type":"method","name":"_reduce_603","children":[],"call":[" block_append ","val [] "]}," Ruby25Parser _reduce_350":{"type":"method","name":"_reduce_350","children":[],"call":[" value_expr ","val [] "," comments push "," lexer comments "," lexer "," comments "]}," Ruby25Parser _reduce_349":{"type":"method","name":"_reduce_349","children":[],"call":[" s line "," s "," comments push "," lexer comments "," lexer "," comments "]}," Ruby25Parser _reduce_348":{"type":"method","name":"_reduce_348","children":[],"call":[" s line "," s "," value_expr ","val [] "]}," Ruby25Parser _reduce_347":{"type":"method","name":"_reduce_347","children":[],"call":[" s line "," s "]}," Ruby24Parser _reduce_653":{"type":"method","name":"_reduce_653","children":[],"call":[]}," Ruby24Parser _reduce_652":{"type":"method","name":"_reduce_652","children":[],"call":[" yyerrok "]}," Ruby24Parser _reduce_649":{"type":"method","name":"_reduce_649","children":[],"call":[" yyerrok "]}," Ruby24Parser _reduce_622":{"type":"method","name":"_reduce_622","children":[],"call":[" s line ","sym line "," s ","sym sexp_type= "," yyerrok "]}," Ruby24Parser _reduce_621":{"type":"method","name":"_reduce_621","children":[],"call":[" s line "," s ","label to_sym ","arg line "," s arg line  ","arg arg line  "]}," Ruby24Parser _reduce_620":{"type":"method","name":"_reduce_620","children":[],"call":[" s line ","v1 line "," s ","sym line ","sym sexp_type= "]}," Ruby24Parser _reduce_619":{"type":"method","name":"_reduce_619","children":[],"call":["result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] ","val [] dup "," s line "," s ","label to_sym "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "]}," Ruby24Parser _reduce_603":{"type":"method","name":"_reduce_603","children":[],"call":[" block_append ","val [] "]}," Ruby24Parser _reduce_350":{"type":"method","name":"_reduce_350","children":[],"call":[" value_expr ","val [] "," comments push "," lexer comments "," lexer "," comments "]}," Ruby24Parser _reduce_349":{"type":"method","name":"_reduce_349","children":[],"call":[" s line "," s "," comments push "," lexer comments "," lexer "," comments "]}," Ruby24Parser _reduce_348":{"type":"method","name":"_reduce_348","children":[],"call":[" s line "," s "," value_expr ","val [] "]}," Ruby24Parser _reduce_347":{"type":"method","name":"_reduce_347","children":[],"call":[" s line "," s "]}," Ruby23Parser _reduce_652":{"type":"method","name":"_reduce_652","children":[],"call":[]}," Ruby23Parser _reduce_651":{"type":"method","name":"_reduce_651","children":[],"call":[" yyerrok "]}," Ruby23Parser _reduce_648":{"type":"method","name":"_reduce_648","children":[],"call":[" yyerrok "]}," Ruby23Parser _reduce_622":{"type":"method","name":"_reduce_622","children":[],"call":[" s line "," s ","arg line "," yyerrok "," s arg line  ","arg arg line  "]}," Ruby23Parser _reduce_621":{"type":"method","name":"_reduce_621","children":[],"call":[" s line ","sym line "," s ","sym sexp_type= "," yyerrok "]}," Ruby23Parser _reduce_620":{"type":"method","name":"_reduce_620","children":[],"call":[" s line "," s ","label to_sym ","arg line "," s arg line  ","arg arg line  "]}," Ruby23Parser _reduce_619":{"type":"method","name":"_reduce_619","children":[],"call":[" s line ","v1 line "," s ","sym line ","sym sexp_type= "]}," Ruby23Parser _reduce_618":{"type":"method","name":"_reduce_618","children":[],"call":["result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] ","val [] dup "," s line "," s ","label to_sym "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "]}," Ruby23Parser _reduce_602":{"type":"method","name":"_reduce_602","children":[],"call":[" block_append ","val [] "," s ","sym []= "]}," Ruby23Parser _reduce_588":{"type":"method","name":"_reduce_588","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym ","list << ","item last "," lexer lineno "," lexer "," assignable ","val [] to_sym ","val [] "," yyerror ","result [] == ","result [] "," lexer lex_state= "," s line  [] == ","list <<  [] == ","val []  [] == "," s line  [] ","list <<  [] ","val []  [] "]}," Ruby23Parser _reduce_349":{"type":"method","name":"_reduce_349","children":[],"call":[" value_expr ","val [] "," comments push "," lexer comments "," lexer "," comments "]}," Ruby23Parser _reduce_348":{"type":"method","name":"_reduce_348","children":[],"call":[" s line "," s "," comments push "," lexer comments "," lexer "," comments "]}," Ruby23Parser _reduce_347":{"type":"method","name":"_reduce_347","children":[],"call":[" s line "," s "," value_expr ","val [] "]}," Ruby23Parser _reduce_346":{"type":"method","name":"_reduce_346","children":[],"call":[" s line "," s "]}," Ruby22Parser _reduce_651":{"type":"method","name":"_reduce_651","children":[],"call":[]}," Ruby22Parser _reduce_650":{"type":"method","name":"_reduce_650","children":[],"call":[" yyerrok "]}," Ruby22Parser _reduce_647":{"type":"method","name":"_reduce_647","children":[],"call":[" yyerrok "]}," Ruby22Parser _reduce_621":{"type":"method","name":"_reduce_621","children":[],"call":[" s line ","sym line "," s ","sym sexp_type= "," yyerrok "]}," Ruby22Parser _reduce_620":{"type":"method","name":"_reduce_620","children":[],"call":[" s line "," s ","label to_sym ","arg line "," yyerrok "," s arg line  ","arg arg line  "]}," Ruby22Parser _reduce_619":{"type":"method","name":"_reduce_619","children":[],"call":[" s line ","v1 line "," s ","sym line ","sym sexp_type= "," yyerrok "]}," Ruby22Parser _reduce_618":{"type":"method","name":"_reduce_618","children":[],"call":["result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] ","val [] dup "," s line "," s ","label to_sym "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "]}," Ruby22Parser _reduce_602":{"type":"method","name":"_reduce_602","children":[],"call":[" block_append ","val [] "]}," Ruby22Parser _reduce_588":{"type":"method","name":"_reduce_588","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym ","list << ","item last "," lexer lineno "," lexer "," yyerror ","result [] == ","result [] ","val [] "," lexer lex_state= "," s line  [] == ","list <<  [] == ","val []  [] == "," s line  [] ","list <<  [] ","val []  [] "]}," Ruby22Parser _reduce_349":{"type":"method","name":"_reduce_349","children":[],"call":[" value_expr ","val [] "," comments push "," lexer comments "," lexer "," comments "]}," Ruby22Parser _reduce_348":{"type":"method","name":"_reduce_348","children":[],"call":[" s line "," s "," comments push "," lexer comments "," lexer "," comments "]}," Ruby22Parser _reduce_347":{"type":"method","name":"_reduce_347","children":[],"call":[" s line "," s "," value_expr ","val [] "]}," Ruby22Parser _reduce_346":{"type":"method","name":"_reduce_346","children":[],"call":[" s line "," s "]}," Ruby21Parser _reduce_649":{"type":"method","name":"_reduce_649","children":[],"call":[]}," Ruby21Parser _reduce_648":{"type":"method","name":"_reduce_648","children":[],"call":[" yyerrok "]}," Ruby21Parser _reduce_645":{"type":"method","name":"_reduce_645","children":[],"call":[" yyerrok "]}," Ruby21Parser _reduce_620":{"type":"method","name":"_reduce_620","children":[],"call":[" s line "," s ","arg line "," yyerrok "," s arg line  ","arg arg line  "]}," Ruby21Parser _reduce_618":{"type":"method","name":"_reduce_618","children":[],"call":[" s line ","v1 line "," s ","arg line "," yyerrok "," s arg line  ","v1 arg line  ","arg arg line  "]}," Ruby21Parser _reduce_617":{"type":"method","name":"_reduce_617","children":[],"call":["result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] ","val [] dup "," s line "," s ","label to_sym "," yyerrok "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "]}," Ruby21Parser _reduce_601":{"type":"method","name":"_reduce_601","children":[],"call":[" block_append ","val [] "]}," Ruby21Parser _reduce_598":{"type":"method","name":"_reduce_598","children":[],"call":[" s line ","optblk line "," s ","opt line "]}," Ruby21Parser _reduce_597":{"type":"method","name":"_reduce_597","children":[],"call":[" assignable ","val [] ","result << "," lexer lineno "," lexer "," env []= "," env "," s "," assignable  << "," s  << "]}," Ruby21Parser _reduce_587":{"type":"method","name":"_reduce_587","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym ","list << ","item last "," lexer lineno "," lexer "," yyerror ","result [] == ","result [] ","val [] "," lexer lex_state= "," s line  [] == ","list <<  [] == ","val []  [] == "," s line  [] ","list <<  [] ","val []  [] "]}," Ruby21Parser _reduce_578":{"type":"method","name":"_reduce_578","children":[],"call":[" env []= "," env ","val [] to_sym ","val [] "," s line "," s ","label to_sym "," assignable "," block_append "]}," Ruby21Parser _reduce_349":{"type":"method","name":"_reduce_349","children":[],"call":[" value_expr ","val [] "," comments push "," lexer comments "," lexer "," comments "]}," Ruby21Parser _reduce_348":{"type":"method","name":"_reduce_348","children":[],"call":[" s line "," s "," comments push "," lexer comments "," lexer "," comments "]}," Ruby21Parser _reduce_347":{"type":"method","name":"_reduce_347","children":[],"call":[" s line "," s "," value_expr ","val [] "]}," Ruby21Parser _reduce_346":{"type":"method","name":"_reduce_346","children":[],"call":[" s line "," s "]}," Ruby20Parser _reduce_644":{"type":"method","name":"_reduce_644","children":[],"call":[]}," Ruby20Parser _reduce_643":{"type":"method","name":"_reduce_643","children":[],"call":[" yyerrok "]}," Ruby20Parser _reduce_640":{"type":"method","name":"_reduce_640","children":[],"call":[" yyerrok "]}," Ruby20Parser _reduce_614":{"type":"method","name":"_reduce_614","children":[],"call":[" s line "," s ","label to_sym "," yyerrok "]}," Ruby20Parser _reduce_613":{"type":"method","name":"_reduce_613","children":[],"call":[" s line ","v1 line "," s ","arg line "," s arg line  ","v1 arg line  ","arg arg line  "]}," Ruby20Parser _reduce_612":{"type":"method","name":"_reduce_612","children":[],"call":["result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] ","val [] dup "," s line "," s ","label to_sym "," yyerrok "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "]}," Ruby20Parser _reduce_596":{"type":"method","name":"_reduce_596","children":[],"call":[" block_append ","val [] ","result []= ","list push ","more empty? ","val [] [] ","val [] dup "," block_append  []= ","val [] dup  push ","val [] []  empty? "]}," Ruby20Parser _reduce_593":{"type":"method","name":"_reduce_593","children":[],"call":[" s line ","optblk line "," s ","opt line "]}," Ruby20Parser _reduce_578":{"type":"method","name":"_reduce_578","children":[],"call":["val [] ","result << "," s line ","list line "," s ","list sexp_type == ","list sexp_type ","(str \"&\") to_sym "," env []= "," env ","val [] to_sym "," args ","val []  << "," s line  << ","(str \"&\") to_sym  << "," args  << "]}," Ruby20Parser _reduce_463":{"type":"method","name":"_reduce_463","children":[],"call":[" s line ","arg line "," s "," literal_concat ","val [] "]}," Ruby20Parser _reduce_349":{"type":"method","name":"_reduce_349","children":[],"call":[" value_expr ","val [] "," comments push "," lexer comments "," lexer "," comments "]}," Ruby20Parser _reduce_348":{"type":"method","name":"_reduce_348","children":[],"call":[" s line "," s "," comments push "," lexer comments "," lexer "," comments "]}," Ruby20Parser _reduce_347":{"type":"method","name":"_reduce_347","children":[],"call":[" s line "," s "," value_expr ","val [] "]}," Ruby20Parser _reduce_346":{"type":"method","name":"_reduce_346","children":[],"call":[" s line "," s "]}," RubyParserStuff new_begin":{"type":"method","name":"new_begin","children":[],"call":["result line "," s "," s  line "]}," RubyLexer getch":{"type":"method","name":"getch","children":[],"call":[" ss getch "," ss "," ss peek == "," ss peek ","c == "," ss get ss getch h "," ss getch  == "]}," RubyLexer process_simple_string":{"type":"method","name":"process_simple_string","children":[],"call":[" result ","replacement b ","replacement valid_encoding? "," unescape b force_encoding "," unescape b "," unescape ","text [] gsub ","text [] ","str b ","str valid_encoding? ","text count "," lineno "," unescape_string ","replacement b  b ","replacement b  valid_encoding? ","str b  b "," unescape_string  b ","str b  valid_encoding? "," unescape_string  valid_encoding? "," unescape_str b ing "," unescape_ unescape_string ing "]}," RubyLexer is_local_id":{"type":"method","name":"is_local_id","children":[],"call":[" parser env [] == "," parser env [] ","id to_sym "," parser env "," parser "]}," Ruby27Parser _reduce_none":{"type":"method","name":"_reduce_none","children":[],"call":["val [] "]}," Ruby27Parser _reduce_653":{"type":"method","name":"_reduce_653","children":[],"call":[" args "]}," Ruby27Parser _reduce_652":{"type":"method","name":"_reduce_652","children":[],"call":[" yyerrok "," args "]}," Ruby27Parser _reduce_649":{"type":"method","name":"_reduce_649","children":[],"call":[" yyerrok "," end_args "," args "]}," Ruby27Parser _reduce_623":{"type":"method","name":"_reduce_623","children":[],"call":[" s line "," s ","arg line ","label to_sym "," lexer lineno "," lexer "," s arg line  ","arg arg line  "," lexer arg line no "]}," Ruby27Parser _reduce_622":{"type":"method","name":"_reduce_622","children":[],"call":[" s line ","sym line "," s ","sym sexp_type= ","v1 line "," yyerror ","result sexp_type == ","result sexp_type ","val [] "," s line  sexp_type == ","val []  sexp_type == "," s line  sexp_type ","val []  sexp_type "]}," Ruby27Parser _reduce_621":{"type":"method","name":"_reduce_621","children":[],"call":[" s line "," s ","label to_sym ","result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] ","val [] dup "," lexer lex_state= "," lexer ","num -@ "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "]}," Ruby27Parser _reduce_620":{"type":"method","name":"_reduce_620","children":[],"call":[" s line ","v1 line "," s "]}," Ruby27Parser _reduce_619":{"type":"method","name":"_reduce_619","children":[],"call":["result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] ","val [] dup "," debug "," s line ","result line "," s ","result last to_sym ","result last ","result sexp_type "," lexer lineno "," lexer "," lexer lex_state= "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "," s line  line "," s line  last to_sym "," s line  last "," s line  sexp_type "]}," Ruby27Parser _reduce_616":{"type":"method","name":"_reduce_616","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," lexer lex_state= "," debug ","result line ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," s line  line "," s line  last to_sym "," s line  last "," s line  sexp_type= "," s line  sexp_type "]}," Ruby27Parser _reduce_615":{"type":"method","name":"_reduce_615","children":[],"call":[" yyerror ","result sexp_type == ","result sexp_type ","val [] ","val []  sexp_type == ","val []  sexp_type "]}," Ruby27Parser _reduce_614":{"type":"method","name":"_reduce_614","children":[],"call":[" lexer lex_state= "," lexer "," env []= "," env "," s line "," s ","id to_sym "," wrap ","val [] "]}," Ruby27Parser _reduce_612":{"type":"method","name":"_reduce_612","children":[],"call":["(str \"&\") to_sym "," env []= "," env ","val [] to_sym ","val [] "]}," Ruby27Parser _reduce_611":{"type":"method","name":"_reduce_611","children":[],"call":["val [] "," wrap "," lexer lex_state= "," lexer "]}," Ruby27Parser _reduce_610":{"type":"method","name":"_reduce_610","children":[],"call":["(str \"&\") to_sym "," env []= "," env ","val [] to_sym ","val [] "," block_append "," wrap "," lexer lex_state= "," lexer "]}," Ruby27Parser _reduce_607":{"type":"method","name":"_reduce_607","children":[],"call":[" env []= "," env "," s line ","optblk line "," s ","id to_sym "," wrap ","val [] "]}," Ruby27Parser _reduce_606":{"type":"method","name":"_reduce_606","children":[],"call":[" assignable ","val [] to_sym ","val [] "," raise ","stmt inspect "," debug "," s line "," s ","stmt sexp_type "," lexer lex_state= "," lexer "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," wrap "]}," Ruby27Parser _reduce_603":{"type":"method","name":"_reduce_603","children":[],"call":[" block_append ","val [] ","result << "," assignable ","val [] to_sym "," lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm "," raise ","stmt inspect "," debug "," s line "," s ","stmt sexp_type "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," block_append  << "," lexer lex_strterm  << "," s line  << "]}," Ruby27Parser _reduce_602":{"type":"method","name":"_reduce_602","children":[],"call":[" s line ","opt line "," s ","optblk line "," new_string "," lexer lex_state= "," lexer "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," lexer lineno "," lexer lex_state "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "]}," Ruby27Parser _reduce_601":{"type":"method","name":"_reduce_601","children":[],"call":["result << "," assignable ","val [] "," literal_concat "," s line ","str line "," s "," lexer lex_strterm= "," lexer "," assignable  << "," literal_concat  << "," s line  << "]}," Ruby27Parser _reduce_600":{"type":"method","name":"_reduce_600","children":[],"call":[" s line ","optblk line "," s "," assignable ","val [] "," args "," lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm "]}," Ruby27Parser _reduce_599":{"type":"method","name":"_reduce_599","children":[],"call":[" assignable ","val [] "," literal_concat "," new_string "]}," Ruby27Parser _reduce_598":{"type":"method","name":"_reduce_598","children":[],"call":[" assignable ","val [] ","val [] to_sym ","list << ","item last "," literal_concat "]}," Ruby27Parser _reduce_597":{"type":"method","name":"_reduce_597","children":[],"call":[" literal_concat "]}," Ruby27Parser _reduce_596":{"type":"method","name":"_reduce_596","children":[],"call":[" assignable ","val [] to_sym ","val [] "," s line "," s "," env []= "," env ","label to_sym "," +@ "," prev_value_to_lineno ","_values last "," literal_concat "," s  prev_value_to_lineno  "," prev_value_to_ prev_value_to_lineno no "]}," Ruby27Parser _reduce_593":{"type":"method","name":"_reduce_593","children":[],"call":[" args ","list << ","item last "," s line "," s "," env []= "," env ","label to_sym ","val [] dup << "," new_qword_list_entry ","val [] dup ","val [] "," +@ "," prev_value_to_lineno ","_values last "," s  prev_value_to_lineno  "," prev_value_to_ prev_value_to_lineno no "]}," Ruby27Parser _reduce_591":{"type":"method","name":"_reduce_591","children":[],"call":["list << ","item last "," s line "," s "," env []= "," env ","label to_sym ","result << ","list line ","list sexp_type == ","list sexp_type ","result line_max= "," new_qsym_list ","list <<  << "," s line  << ","list line  << "," new_qsym_list  << ","list <<  line_max= "," s line  line_max= ","list line  line_max= "," new_qsym_list  line_max= "]}," Ruby27Parser _reduce_589":{"type":"method","name":"_reduce_589","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym ","val [] ","list line ","result line_max= "," new_qword_list "," s line  line_max= ","val []  line_max= ","list line  line_max= "," new_qword_list  line_max= "]}," Ruby27Parser _reduce_588":{"type":"method","name":"_reduce_588","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym ","result line_max= ","list line "," s line  line_max= ","list line  line_max= "]}," Ruby27Parser _reduce_587":{"type":"method","name":"_reduce_587","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym ","list dup << "," new_symbol_list_entry ","list dup ","result line_max= "," s line  line_max= ","list dup <<  line_max= "]}," Ruby27Parser _reduce_586":{"type":"method","name":"_reduce_586","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym ","result << ","list line ","list sexp_type == ","list sexp_type ","val [] to_sym ","val [] "," new_symbol_list ","result line_max= "," s line  << "," new_symbol_list  << ","list line  << "," s line  line_max= "," new_symbol_list  line_max= ","list line  line_max= "]}," Ruby27Parser _reduce_584":{"type":"method","name":"_reduce_584","children":[],"call":["result << "," s line ","list line "," s ","list sexp_type == ","list sexp_type ","val [] "," yyerror ","result line_max= ","list dup << "," new_symbol_list_entry ","list dup "," s line  << ","val []  << ","list dup <<  << "," s line  line_max= ","val []  line_max= ","list dup <<  line_max= "]}," Ruby27Parser _reduce_583":{"type":"method","name":"_reduce_583","children":[],"call":[" raise ","val inspect "," debug20 "," s line "," lexer lineno "," lexer "," s "," yyerror "," literal_concat ","val [] "," new_symbol_list "]}," Ruby27Parser _reduce_582":{"type":"method","name":"_reduce_582","children":[],"call":["val [] "," yyerror ","result line_max= ","list line ","val []  line_max= ","list line  line_max= "]}," Ruby27Parser _reduce_579":{"type":"method","name":"_reduce_579","children":[],"call":[" env []= "," env ","val [] to_sym ","val [] "," yyerror "," args ","list line ","result line_max= "," args  line_max= ","list line  line_max= "]}," Ruby27Parser _reduce_577":{"type":"method","name":"_reduce_577","children":[],"call":[" yyerror "," args "," new_regexp "," new_word_list "]}," Ruby27Parser _reduce_576":{"type":"method","name":"_reduce_576","children":[],"call":[" yyerror "," args "," new_xstring ","result line_max= ","list line "," args  line_max= "," new_xstring  line_max= ","list line  line_max= "]}," Ruby27Parser _reduce_575":{"type":"method","name":"_reduce_575","children":[],"call":[" yyerror "," args "," new_string ","result line_max= "," s line "," s "," args  line_max= "," new_string  line_max= "," s line  line_max= "]}," Ruby27Parser _reduce_574":{"type":"method","name":"_reduce_574","children":[],"call":[" yyerror "," args ","str line "," dedent ","func =~ "," new_regexp "," dedent  line "]}," Ruby27Parser _reduce_573":{"type":"method","name":"_reduce_573","children":[],"call":[" args "," literal_concat ","val [] "," new_xstring "]}," Ruby27Parser _reduce_572":{"type":"method","name":"_reduce_572","children":[],"call":[" args "," new_string "]}," Ruby27Parser _reduce_571":{"type":"method","name":"_reduce_571","children":[],"call":[" args "," debug ","str line "," dedent ","func =~ "," dedent  line "]}," Ruby27Parser _reduce_570":{"type":"method","name":"_reduce_570","children":[],"call":[" args "," s ","str value ","str sexp_type == ","str sexp_type "," literal_concat ","val [] "," s  value "," s  sexp_type == "," s  sexp_type "]}," Ruby27Parser _reduce_569":{"type":"method","name":"_reduce_569","children":[],"call":[" args "]}," Ruby27Parser _reduce_568":{"type":"method","name":"_reduce_568","children":[],"call":[" args "," s line "," s "," debug "]}," Ruby27Parser _reduce_567":{"type":"method","name":"_reduce_567","children":[],"call":[" args "," s ","str value ","str sexp_type == ","str sexp_type "," s  value "," s  sexp_type == "," s  sexp_type "]}," Ruby27Parser _reduce_566":{"type":"method","name":"_reduce_566","children":[],"call":[" args "," s line "," s "]}," Ruby27Parser _reduce_565":{"type":"method","name":"_reduce_565","children":[],"call":[" args "," s line "," s "]}," Ruby27Parser _reduce_564":{"type":"method","name":"_reduce_564","children":[],"call":[" args ","val [] "]}," Ruby27Parser _reduce_563":{"type":"method","name":"_reduce_563","children":[],"call":[" args ","val [] "," s line "," s "]}," Ruby27Parser _reduce_562":{"type":"method","name":"_reduce_562","children":[],"call":[" args "]}," Ruby27Parser _reduce_561":{"type":"method","name":"_reduce_561","children":[],"call":[" args "," s line ","arg line "," s ","val [] "]}," Ruby27Parser _reduce_560":{"type":"method","name":"_reduce_560","children":[],"call":[" args "]}," Ruby27Parser _reduce_559":{"type":"method","name":"_reduce_559","children":[],"call":[" args ","val [] ","result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s line ","var line "," s "," args  << ","val []  << "," new_resbody  << "]}," Ruby27Parser _reduce_558":{"type":"method","name":"_reduce_558","children":[],"call":[" lexer command_start= "," lexer "," lexer lex_state= "," in_kwarg= "," s line "," s ","id to_sym "," wrap ","val [] ","arg line "]}," Ruby27Parser _reduce_557":{"type":"method","name":"_reduce_557","children":[],"call":["val [] "," args "," lexer lex_state "," lexer "," in_kwarg= "," in_kwarg "," s line "," s ","id to_sym ","lhs line ","valhs line  [] "," lhs line exer lhs line ex_state "," lhs line exer "," s lhs line ine ","lhs line hs lhs line ine "]}," Ruby27Parser _reduce_555":{"type":"method","name":"_reduce_555","children":[],"call":[" args "," lexer command_start= "," lexer "," lexer lex_state= "," s line "," s ","id to_sym "," wrap ","val [] "]}," Ruby27Parser _reduce_554":{"type":"method","name":"_reduce_554","children":[],"call":[" args "," lexer command_start= "," lexer "," lexer lex_state= "," in_kwarg= ","val [] "," s line "," s ","id to_sym "," wrap ","lhs line "," lhs line exer command_start= "," lhs line exer "," lhs line exer lhs line ex_state= ","valhs line  [] "," s lhs line ine ","lhs line hs lhs line ine "]}," Ruby27Parser _reduce_553":{"type":"method","name":"_reduce_553","children":[],"call":[" args "," lexer lex_state "," lexer "," in_kwarg= "," in_kwarg "," wrap ","val [] "]}," Ruby27Parser _reduce_552":{"type":"method","name":"_reduce_552","children":[],"call":[" lexer command_start= "," lexer "," lexer lex_state= "," in_kwarg= ","val [] "," wrap "]}," Ruby27Parser _reduce_551":{"type":"method","name":"_reduce_551","children":[],"call":[" lexer lex_state "," lexer "," in_kwarg= "," in_kwarg "," lexer command_start= "," lexer lex_state= "," ary_to_pat ","val [] "," wrap "]}," Ruby27Parser _reduce_550":{"type":"method","name":"_reduce_550","children":[],"call":[" lexer command_start= "," lexer "," lexer lex_state= ","val [] "," s line "," lexer lineno "," s "," ary_to_pat "]}," Ruby27Parser _reduce_549":{"type":"method","name":"_reduce_549","children":[],"call":[" lexer command_start= "," lexer "," lexer lex_state= "," s line "," lexer lineno "," s ","val [] "," ary_to_pat "]}," Ruby27Parser _reduce_548":{"type":"method","name":"_reduce_548","children":[],"call":["val [] "," s line "," lexer lineno "," lexer "," s "," debug20 "," assignable "," ary_to_pat "]}," Ruby27Parser _reduce_547":{"type":"method","name":"_reduce_547","children":[],"call":[" lexer command_start= "," lexer "," lexer lex_state= "," s line "," lexer lineno "," s ","val [] "," assignable "," ary_to_pat "]}," Ruby27Parser _reduce_546":{"type":"method","name":"_reduce_546","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","val [] "," debug20 "," assignable "," gettable ","Sexp  === "," ary_to_pat "]}," Ruby27Parser _reduce_545":{"type":"method","name":"_reduce_545","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","val [] "," assignable "," gettable ","Sexp  === "," ary_to_pat "]}," Ruby27Parser _reduce_544":{"type":"method","name":"_reduce_544","children":[],"call":[" debug20 "," assignable ","val [] "," gettable ","Sexp  === "," s line "," s "," lexer lineno "," lexer "," assignab lexer lineno e ","va lexer lineno  [] "," gettab lexer lineno e "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "]}," Ruby27Parser _reduce_543":{"type":"method","name":"_reduce_543","children":[],"call":[" assignable ","val [] "," gettable ","Sexp  === "," s line "," lexer lineno "," lexer "," s ","v1 line "]}," Ruby27Parser _reduce_542":{"type":"method","name":"_reduce_542","children":[],"call":[" gettable ","Sexp  === ","val [] "," s line "," s "," lexer lineno "," lexer "," file ","v1 line "," gettab lexer lineno e ","va lexer lineno  [] "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "," fi lexer lineno e ","v1  lexer lineno ine "]}," Ruby27Parser _reduce_541":{"type":"method","name":"_reduce_541","children":[],"call":[" gettable ","Sexp  === ","val [] "," s line "," lexer lineno "," lexer "," s "]}," Ruby27Parser _reduce_540":{"type":"method","name":"_reduce_540","children":[],"call":[" s line "," s "," lexer lineno "," lexer "," file ","v1 line "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "," fi lexer lineno e ","v1  lexer lineno ine "]}," Ruby27Parser _reduce_539":{"type":"method","name":"_reduce_539","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","v1 line "]}," Ruby27Parser _reduce_538":{"type":"method","name":"_reduce_538","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," file ","v1 line "]}," Ruby27Parser _reduce_537":{"type":"method","name":"_reduce_537","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","v1 line "]}," Ruby27Parser _reduce_536":{"type":"method","name":"_reduce_536","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","lhs line "," value_expr "," value_expr  line "]}," Ruby27Parser _reduce_535":{"type":"method","name":"_reduce_535","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","lhs line "," value_expr ","v1 line "," value_expr  line "]}," Ruby27Parser _reduce_534":{"type":"method","name":"_reduce_534","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","v1 line "]}," Ruby27Parser _reduce_524":{"type":"method","name":"_reduce_524","children":[],"call":["val [] -@ ","val [] "," debug20 "," s line ","result line "," s ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," lexer lineno "," lexer "," lexer lex_state= "," new_hash_pattern_tail ","kwarg line ","kwarg concat ","kw sexp_body ","val [] -@  line "," s line  line "," new_hash_pattern_tail  line ","val [] -@  last to_sym "," s line  last to_sym "," new_hash_pattern_tail  last to_sym ","val [] -@  last "," s line  last "," new_hash_pattern_tail  last ","val [] -@  sexp_type= "," s line  sexp_type= "," new_hash_pattern_tail  sexp_type= ","val [] -@  sexp_type "," s line  sexp_type "," new_hash_pattern_tail  sexp_type "]}," Ruby27Parser _reduce_522":{"type":"method","name":"_reduce_522","children":[],"call":[" debug20 "," s line ","result line "," s ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," lexer lineno "," lexer "," lexer lex_state= "," new_hash_pattern_tail ","kwarg line ","norest line "," s line  line "," new_hash_pattern_tail  line "," s line  last to_sym "," new_hash_pattern_tail  last to_sym "," s line  last "," new_hash_pattern_tail  last "," s line  sexp_type= "," new_hash_pattern_tail  sexp_type= "," s line  sexp_type "," new_hash_pattern_tail  sexp_type "]}," Ruby27Parser _reduce_517":{"type":"method","name":"_reduce_517","children":[],"call":["val [] to_sym ","val [] "," s line "," lexer lineno "," lexer "," s "," new_hash_pattern_tail ","kw_arg line "]}," Ruby27Parser _reduce_516":{"type":"method","name":"_reduce_516","children":[],"call":["val [] to_sym ","val [] "," lexer lex_state= "," lexer "," s line "," lexer lineno "," s ","result line "," new_array_pattern_tail ","expr line ","expr sexp_type == ","expr sexp_type ","val [] to_sym  line "," s line  line "," new_array_pattern_tail  line "," s line  sexp_type == "," s line  sexp_type "]}," Ruby27Parser _reduce_514":{"type":"method","name":"_reduce_514","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","val [] to_sym ","val [] "," lexer lex_state= "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," lexer lex_state "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm ","result line "," new_array_pattern_tail ","id to_sym "," s line  line "," new_array_pattern_tail  line "]}," Ruby27Parser _reduce_513":{"type":"method","name":"_reduce_513","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","val [] to_sym ","val [] "," raise ","stmt inspect "," debug20 ","stmt sexp_type "," lexer lex_state= "," lexer cond pop "," lexer cond "," lexer cmdarg pop "," lexer cmdarg "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= ","str line ","result line "," new_array_pattern_tail ","id to_sym "," s line  line "," new_array_pattern_tail  line "]}," Ruby27Parser _reduce_512":{"type":"method","name":"_reduce_512","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","val [] to_sym ","val [] "," lexer lex_state= "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," lexer lex_state "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm ","result line ","head line ","tail sexp_body ","head sexp_body "," new_array_pattern_tail "," s line  line "," lexer lex_strterm  line "," s  line "," new_array_pattern_tail  line "]}," Ruby27Parser _reduce_511":{"type":"method","name":"_reduce_511","children":[],"call":[" raise ","stmt inspect "," debug20 "," s line "," s ","stmt sexp_type "," lexer lex_state= "," lexer "," lexer cond pop "," lexer cond "," lexer cmdarg pop "," lexer cmdarg "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= ","str line "," new_string ","result line "," new_array_pattern_tail ","id to_sym "," s line  line "," new_string  line "," new_array_pattern_tail  line "]}," Ruby27Parser _reduce_510":{"type":"method","name":"_reduce_510","children":[],"call":[" lexer lex_state= "," lexer "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," lexer lineno "," lexer lex_state "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "," literal_concat ","result line "," new_array_pattern_tail ","id to_sym "," lexer lex_strterm  line "," literal_concat  line "," new_array_pattern_tail  line "]}," Ruby27Parser _reduce_509":{"type":"method","name":"_reduce_509","children":[],"call":[" s line ","str line "," s "," lexer lex_strterm= "," lexer "," new_string "," new_array_pattern_tail line ","head line "," new_array_pattern_tail ","result line ","tail sexp_body ","head sexp_body "," s line  line "," new_string  line "," new_array_pattern_tail line  line "," s  line "]}," Ruby27Parser _reduce_508":{"type":"method","name":"_reduce_508","children":[],"call":[" lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm "," literal_concat "," new_array_pattern_tail line ","expr line "," new_array_pattern_tail "]}," Ruby27Parser _reduce_507":{"type":"method","name":"_reduce_507","children":[],"call":[" new_string ","result line ","head line "," new_array_pattern_tail ","id to_sym "," new_string  line "," new_array_pattern_tail  line "]}," Ruby27Parser _reduce_506":{"type":"method","name":"_reduce_506","children":[],"call":[" literal_concat ","result line ","head line "," new_array_pattern_tail ","id to_sym "," new_array_pattern_tail line "," literal_concat  line "," new_array_pattern_tail  line "," new_array_pattern_tail line  line "]}," Ruby27Parser _reduce_505":{"type":"method","name":"_reduce_505","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","result line ","head line "," new_array_pattern_tail "," array_pat_concat "," new_array_pattern_tail line ","expr line "," s line  line "," new_array_pattern_tail  line "," new_array_pattern_tail line  line "]}," Ruby27Parser _reduce_504":{"type":"method","name":"_reduce_504","children":[],"call":[" literal_concat ","val [] dup << "," new_qsym_list_entry ","val [] dup ","val [] "," new_array_pattern_tail ","result line ","head line ","id to_sym "," literal_concat  line ","val [] dup <<  line "," new_array_pattern_tail  line "]}," Ruby27Parser _reduce_503":{"type":"method","name":"_reduce_503","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," new_qsym_list "," new_array_pattern_tail line ","expr line "," new_array_pattern_tail ","result line ","head line ","id to_sym "," s line  line "," new_qsym_list  line "," new_array_pattern_tail line  line "," new_array_pattern_tail  line "]}," Ruby27Parser _reduce_502":{"type":"method","name":"_reduce_502","children":[],"call":[" literal_concat ","val [] dup << "," new_qsym_list_entry ","val [] dup ","val [] "," new_qword_list_entry "," pop_pktbl ","result line ","head line "," new_array_pattern_tail "," array_pat_concat "," literal_concat  line ","val [] dup <<  line "," new_array_pattern_tail  line "]}," Ruby27Parser _reduce_501":{"type":"method","name":"_reduce_501","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," new_qsym_list "," new_qword_list "," push_pktbl "," new_array_pattern_tail "]}," Ruby27Parser _reduce_500":{"type":"method","name":"_reduce_500","children":[],"call":["val [] dup << "," new_qsym_list_entry ","val [] dup ","val [] "," new_qword_list_entry "," new_hash_pattern "," new_hash_pattern_tail "," new_array_pattern_tail line ","expr line "," new_array_pattern_tail "," s line "," s "," new_hash_pattern_ new_hash_pattern_tail  "," new_array_pattern_ new_hash_pattern_tail  line "," new_array_pattern_ new_hash_pattern_tail  "]}," Ruby27Parser _reduce_499":{"type":"method","name":"_reduce_499","children":[],"call":[" new_qsym_list "," new_qword_list "," s line "," lexer lineno "," lexer "," s "," new_hash_pattern ","kwargs line "," in_kwarg= "," pop_pktbl "]}," Ruby27Parser _reduce_498":{"type":"method","name":"_reduce_498","children":[],"call":["val [] dup << "," new_qword_list_entry ","val [] dup ","val [] "," in_kwarg= "," in_kwarg "," push_pktbl "]}," Ruby27Parser _reduce_497":{"type":"method","name":"_reduce_497","children":[],"call":[" new_qword_list "," s line "," lexer lineno "," lexer "," s "," new_hash_pattern "," new_hash_pattern_tail "," new_hash_pattern_ new_hash_pattern_tail  "]}," Ruby27Parser _reduce_496":{"type":"method","name":"_reduce_496","children":[],"call":["val [] ","list dup << "," new_symbol_list_entry ","list dup "," new_array_pattern ","pat line "," pop_pktbl "," new_hash_pattern ","kwargs line "," in_kwarg= "]}," Ruby27Parser _reduce_495":{"type":"method","name":"_reduce_495","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," new_symbol_list line "," new_symbol_list "," push_pktbl "," in_kwarg= "," in_kwarg "]}," Ruby27Parser _reduce_494":{"type":"method","name":"_reduce_494","children":[],"call":["val [] ","list dup << "," new_symbol_list_entry ","list dup ","list line= "," new_array_pattern ","const line "," new_array_pattern_tail "," s line "," s "," new_array_pattern_ new_array_pattern_tail  "]}," Ruby27Parser _reduce_493":{"type":"method","name":"_reduce_493","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," new_symbol_list line "," new_symbol_list "," new_hash_pattern ","const line "," new_array_pattern ","pat line "," pop_pktbl "]}," Ruby27Parser _reduce_492":{"type":"method","name":"_reduce_492","children":[],"call":["list dup << "," new_symbol_list_entry ","list dup ","list line= "," s line "," lexer lineno "," lexer "," s "," new_array_pattern ","const line "," pop_pktbl "," push_pktbl "]}," Ruby27Parser _reduce_491":{"type":"method","name":"_reduce_491","children":[],"call":[" new_symbol_list line "," lexer lineno "," lexer "," new_symbol_list "," literal_concat ","val [] "," new_array_pattern ","const line "," new_array_pattern_tail "," new_array_pattern_ new_array_pattern_tail  "]}," Ruby27Parser _reduce_490":{"type":"method","name":"_reduce_490","children":[],"call":["list line= "," s line "," lexer lineno "," lexer "," s "," new_hash_pattern ","lhs line "," pop_pktbl ","const line "]}," Ruby27Parser _reduce_489":{"type":"method","name":"_reduce_489","children":[],"call":[" lexer lineno "," lexer "," literal_concat ","val [] ","val [] dup << "," new_word_list_entry ","val [] dup "," new_array_pattern ","lhs line "," pop_pktbl ","const line "]}," Ruby27Parser _reduce_488":{"type":"method","name":"_reduce_488","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," new_word_list "," new_array_pattern ","const line "," new_array_pattern_tail "," new_array_pattern_ new_array_pattern_tail  "]}," Ruby27Parser _reduce_487":{"type":"method","name":"_reduce_487","children":[],"call":[" literal_concat ","val [] ","val [] dup << "," new_word_list_entry ","val [] dup "," push_pktbl "," new_hash_pattern ","lhs line "," pop_pktbl "]}," Ruby27Parser _reduce_485":{"type":"method","name":"_reduce_485","children":[],"call":["val [] dup << "," new_word_list_entry ","val [] dup ","val [] "," new_regexp "]}," Ruby27Parser _reduce_484":{"type":"method","name":"_reduce_484","children":[],"call":[" new_word_list "," s line "," lexer lineno "," lexer "," s "," new_xstring ","lhs line "," push_pktbl "]}," Ruby27Parser _reduce_483":{"type":"method","name":"_reduce_483","children":[],"call":["val [] "," new_regexp "," new_string "," push_pktbl "]}," Ruby27Parser _reduce_482":{"type":"method","name":"_reduce_482","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," new_xstring "," dedent ","func =~ "," new_assign ","var line "," env []= "," env ","var last "," new_x dedent ing "]}," Ruby27Parser _reduce_481":{"type":"method","name":"_reduce_481","children":[],"call":[" new_regexp "," new_string "," literal_concat ","val [] "," s line ","lhs line "," s "]}," Ruby27Parser _reduce_480":{"type":"method","name":"_reduce_480","children":[],"call":[" new_xstring "," dedent ","func =~ "," new_hash_pattern ","kwargs line "," new_x dedent ing "]}," Ruby27Parser _reduce_479":{"type":"method","name":"_reduce_479","children":[],"call":[" new_string "," literal_concat ","val [] "," debug20 "," new_array_pattern ","args line "," new_assign "," s line ","var line "," s "," env []= "," env ","var last "]}," Ruby27Parser _reduce_478":{"type":"method","name":"_reduce_478","children":[],"call":[" dedent ","func =~ "," s ","str value ","str sexp_type == ","str sexp_type "," new_array_pattern ","expr line "," dedent  value "," s  value "," dedent  sexp_type == "," s  sexp_type == "," dedent  sexp_type "," s  sexp_type "]}," Ruby27Parser _reduce_477":{"type":"method","name":"_reduce_477","children":[],"call":[" literal_concat ","val [] "," debug20 "," new_array_pattern ","expr line "," new_array_pattern_tail "," new_hash_pattern ","kwargs line "," new_array_pattern_ new_array_pattern_tail  "]}," Ruby27Parser _reduce_475":{"type":"method","name":"_reduce_475","children":[],"call":[" debug20 ","result line= "," s ","val [] "," lexer lineno "," lexer "," s line ","body line "," remove_begin "," new_array_pattern ","expr line "," s  line= "," s line  line= "," new_array_pattern  line= ","result  lexer lineno = "," lexer  lexer lineno no "," s  lexer lineno  ","body  lexer lineno  "," remove_begin  line ","expr  lexer lineno  "]}," Ruby27Parser _reduce_474":{"type":"method","name":"_reduce_474","children":[],"call":[" s ","str value ","str sexp_type == ","str sexp_type ","result line= ","val [] "," lexer lineno "," lexer "," s line ","body line "," remove_begin "," new_array_pattern ","expr line "," new_array_pattern_tail "," s  value "," s  sexp_type == "," s  sexp_type "," s  line= "," s line  line= "," new_array_pattern  line= ","result  lexer lineno = "," lexer  lexer lineno no "," s  lexer lineno  ","body  lexer lineno  "," remove_begin  line ","expr  lexer lineno  "," new_array_pattern_ new_array_pattern_tail  "]}," Ruby27Parser _reduce_472":{"type":"method","name":"_reduce_472","children":[],"call":["result line= "," s ","val [] "," lexer lineno "," lexer "," s line ","body line "," remove_begin "," s  line= "," s line  line= ","result  lexer lineno = "," lexer  lexer lineno no "," s  lexer lineno  ","body  lexer lineno  "," remove_begin  line "]}," Ruby27Parser _reduce_471":{"type":"method","name":"_reduce_471","children":[],"call":["result line= "," s ","val [] "," lexer lineno "," lexer "," s line ","body line "," remove_begin "," s  line= ","val []  line= "," s line  line= ","result  lexer lineno = "," lexer  lexer lineno no "," s  lexer lineno  ","body  lexer lineno  "," remove_begin  line "]}," Ruby27Parser _reduce_469":{"type":"method","name":"_reduce_469","children":[],"call":[" s line "," s ","val [] "," in_kwarg= ","_values [] "," pop_pvtbl "," pop_pktbl "]}," Ruby27Parser _reduce_467":{"type":"method","name":"_reduce_467","children":[],"call":["val [] "," new_in "]}," Ruby27Parser _reduce_464":{"type":"method","name":"_reduce_464","children":[],"call":[" s line ","arg line "," s ","result << "," new_resbody ","klasses line ","klasses << "," new_assign ","var line "," lexer lineno "," lexer "," s line  << "," new_resbody  << "," lexer lineno  << "]}," Ruby27Parser _reduce_463":{"type":"method","name":"_reduce_463","children":[],"call":["result << ","val [] ","result line= "," new_when "," list_append "," s line ","id line "," s "," new_when  << "," list_append  << "," new_when  line= "," list_append  line= "]}," Ruby27Parser _reduce_462":{"type":"method","name":"_reduce_462","children":[],"call":["result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s line ","var line "," s "," lexer lineno "," lexer "," list_append ","val [] ","result line "," new_when "," new_resbody  << "," lexer lineno  << "," list_append  << "," new_when  << "," new_resbody  line "," lexer lineno  line "," list_append  line "," new_when  line "]}," Ruby27Parser _reduce_459":{"type":"method","name":"_reduce_459","children":[],"call":["result << ","val [] ","result line= "," new_when "," env unextend "," env "," lexer cmdarg pop "," lexer cmdarg "," lexer "," new_do_body "," lexer lineno "," env extend "," list_append "," new_when  << "," new_do_body  << "," lexer lineno  << "," list_append  << "," new_when  line= "," new_do_body  line= "," lexer lineno  line= "," list_append  line= "]}," Ruby27Parser _reduce_458":{"type":"method","name":"_reduce_458","children":[],"call":[" lexer lineno "," lexer "," lexer cmdarg push "," lexer cmdarg "," lexer cmdarg pop "," lexer cmdarg restore "," env unextend "," env "," new_brace_body "," s line ","arg line "," s "]}," Ruby27Parser _reduce_457":{"type":"method","name":"_reduce_457","children":[],"call":[" env unextend "," env "," lexer cmdarg pop "," lexer cmdarg "," lexer "," new_do_body "," lexer lineno "," env extend "," lexer cmdarg store "," s line ","arg line "," s "]}," Ruby27Parser _reduce_456":{"type":"method","name":"_reduce_456","children":[],"call":[" lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg pop "," lexer cmdarg restore "," env unextend "," env "," new_brace_body "," lexer lineno "," env extend "," new_do_body "]}," Ruby27Parser _reduce_455":{"type":"method","name":"_reduce_455","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," lexer cmdarg store "," lexer cmdarg "," env unextend ","result line= "," lexer cmdarg push "," lexer lineno  line= "," lexer cmdarg store  line= "]}," Ruby27Parser _reduce_454":{"type":"method","name":"_reduce_454","children":[],"call":[" lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," env unextend "," env "," new_brace_body "," lexer lineno "," env extend "]}," Ruby27Parser _reduce_453":{"type":"method","name":"_reduce_453","children":[],"call":[" lexer cmdarg store "," lexer cmdarg "," lexer "," env unextend "," env ","result line= ","result line "," lexer cmdarg pop "," lexer cmdarg restore "," new_brace_body "," lexer cmdarg store  line= "," new_brace_body  line= "," lexer cmdarg store  line "," new_brace_body  line "]}," Ruby27Parser _reduce_452":{"type":"method","name":"_reduce_452","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," lexer cmdarg store "," lexer cmdarg "]}," Ruby27Parser _reduce_451":{"type":"method","name":"_reduce_451","children":[],"call":[" env unextend "," env ","result line= "," new_aref ","result line "," lexer lineno "," lexer "," env extend "," new_aref  line= "," lexer lineno  line= "," new_aref  line "," lexer lineno  line "]}," Ruby27Parser _reduce_450":{"type":"method","name":"_reduce_450","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," s line "," s "," env unextend ","result line "," lexer lineno  line "," s line  line "]}," Ruby27Parser _reduce_449":{"type":"method","name":"_reduce_449","children":[],"call":[" env unextend "," env ","result line= "," new_aref "," new_super ","val [] "," lexer lineno "," lexer "," env extend "," new_aref  line= "," new_super  line= "," lexer lineno  line= "]}," Ruby27Parser _reduce_448":{"type":"method","name":"_reduce_448","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," s line "," s "," new_call ","val [] "," env unextend ","result line "," lexer lineno  line "," s line  line "," new_call  line "]}," Ruby27Parser _reduce_447":{"type":"method","name":"_reduce_447","children":[],"call":[" new_aref "," new_super ","val [] "," new_call "," lexer lineno "," lexer "," env extend "," env "]}," Ruby27Parser _reduce_446":{"type":"method","name":"_reduce_446","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," new_call ","val [] ","val [] to_sym "," new_aref "]}," Ruby27Parser _reduce_445":{"type":"method","name":"_reduce_445","children":[],"call":[" new_super ","val [] "," new_call ","val [] to_sym "," s line "," lexer lineno "," lexer "," s "]}," Ruby27Parser _reduce_444":{"type":"method","name":"_reduce_444","children":[],"call":[" new_call ","val [] ","val [] to_sym ","id to_sym "," new_super "]}," Ruby27Parser _reduce_443":{"type":"method","name":"_reduce_443","children":[],"call":[" new_call ","val [] ","val [] to_sym ","result line ","call concat ","args sexp_body ","op to_sym "," new_call  line ","call concat  line "]}," Ruby27Parser _reduce_442":{"type":"method","name":"_reduce_442","children":[],"call":[" new_call ","val [] to_sym ","val [] "," lexer lineno "," lexer ","op to_sym ","result line_max= "," new_call  line_max= "," lexer lineno  line_max= "]}," Ruby27Parser _reduce_441":{"type":"method","name":"_reduce_441","children":[],"call":[" new_call ","val [] ","val [] to_sym ","result line ","call concat ","args sexp_body ","iter2 insert ","name to_sym ","result line_max= ","args line_max ","id to_sym "," new_ new_call  "," new_call  line ","call concat  line "," new_call  concat "," new_call  line_max= ","call concat  line_max= "]}," Ruby27Parser _reduce_440":{"type":"method","name":"_reduce_440","children":[],"call":[" new_call ","val [] ","val [] to_sym "," lexer lineno "," lexer ","iter2 insert ","name to_sym ","op to_sym "," new_ new_call  "]}," Ruby27Parser _reduce_439":{"type":"method","name":"_reduce_439","children":[],"call":["result line ","call concat ","args sexp_body ","iter2 insert "," new_call ","name to_sym ","val [] ","val [] to_sym ","result line_max= ","op to_sym ","call concat  line "," new_call  line "," new_call  concat "," new_ new_call  ","call concat  line_max= "," new_call  line_max= "]}," Ruby27Parser _reduce_438":{"type":"method","name":"_reduce_438","children":[],"call":[" lexer lineno "," lexer ","iter2 insert "," new_call ","name to_sym ","result insert "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? ","val [] ","id to_sym ","result line_max= ","args line_max ","call concat ","args sexp_body "," new_ new_call  "," lexer lineno  insert "," new_call  insert "," invert_block_ new_call  "," invert_block_call  [] block_pass? "," invert_block_call  [] "," lexer lineno  line_max= "," new_call  line_max= "," new_call  concat "]}," Ruby27Parser _reduce_437":{"type":"method","name":"_reduce_437","children":[],"call":["iter2 insert "," new_call ","name to_sym ","val [] ","val [] to_sym ","iter line ","result insert "," invert_block_call "," inverted? "," syntax_error ","cmd block_pass? "," new_ new_call  "," invert_block_call  [] "," invert_block_call  [] to_sym "," new_call  insert ","iter line  insert "," invert_block_ new_call  "]}," Ruby27Parser _reduce_436":{"type":"method","name":"_reduce_436","children":[],"call":["iter2 insert "," new_call ","name to_sym ","result insert "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? ","val [] ","iter line "," new_ new_call  ","val []  insert ","iter line  insert "," invert_block_ new_call  "," invert_block_call  [] block_pass? "," invert_block_call  [] "]}," Ruby27Parser _reduce_435":{"type":"method","name":"_reduce_435","children":[],"call":[" new_call ","val [] ","val [] to_sym ","iter line ","id to_sym "]}," Ruby27Parser _reduce_434":{"type":"method","name":"_reduce_434","children":[],"call":["result insert "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? ","val [] ","result == "," s ","cmd block_pass? ","val []  insert "," invert_block_call  [] block_pass? "," invert_block_call  [] ","val []  == "]}," Ruby27Parser _reduce_433":{"type":"method","name":"_reduce_433","children":[],"call":["iter line ","val [] "," args ","result == "," s ","iter line  == ","val []  == "," args  == "]}," Ruby27Parser _reduce_432":{"type":"method","name":"_reduce_432","children":[],"call":["val [] ","result == "," s "," env unextend "," env ","result line= "," new_iter "," s line "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer lpar_beg= "," args ","val []  == "," new_iter  == "," args  == ","val []  line= "," new_iter  line= "," args  line= "]}," Ruby27Parser _reduce_431":{"type":"method","name":"_reduce_431","children":[],"call":["val [] "," args "," lexer cmdarg push "," lexer cmdarg "," lexer "," env unextend "," env ","result line "," new_iter "," s line "," s "," lexer cmdarg pop "," lexer lpar_beg= ","val []  line "," args  line "," new_iter  line "]}," Ruby27Parser _reduce_430":{"type":"method","name":"_reduce_430","children":[],"call":["result == "," s ","val [] "," env unextend "," env ","result line= "," new_iter "," s line "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer lpar_beg= "," lexer paren_nest "," lexer lpar_beg "," lexer lineno "," env extend "," lexer cmdarg push ","val []  == "," new_iter  == ","val []  line= "," new_iter  line= "]}," Ruby27Parser _reduce_429":{"type":"method","name":"_reduce_429","children":[],"call":[" args "," lexer cmdarg push "," lexer cmdarg "," lexer "," lexer lpar_beg= "," lexer paren_nest "," lexer lpar_beg "," lexer lineno "," env extend "," env "]}," Ruby27Parser _reduce_428":{"type":"method","name":"_reduce_428","children":[],"call":[" env unextend "," env ","result line= "," new_iter "," s line "," s "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer lpar_beg= "," lexer paren_nest "," lexer lpar_beg "," lexer lineno "," env extend ","id to_sym ","result line "," new_iter  line= "," s line  line= ","result  lexer lineno = "," s  lexer lineno  "," lexer  lexer lineno no "," new_iter  line "," s line  line ","result  lexer lineno  "]}," Ruby27Parser _reduce_427":{"type":"method","name":"_reduce_427","children":[],"call":[" lexer cmdarg push "," lexer cmdarg "," lexer "," args "," s line "," s ","id to_sym "," wrap ","val [] "]}," Ruby27Parser _reduce_426":{"type":"method","name":"_reduce_426","children":[],"call":[" lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," lexer lineno "," env extend "," env "," s line "," s ","id to_sym "," args "," lexer  lexer lineno no "," s  lexer lineno  "]}," Ruby27Parser _reduce_424":{"type":"method","name":"_reduce_424","children":[],"call":[" s line "," s ","id to_sym "," lexer lineno "," lexer "," args "," wrap ","val [] "," s  lexer lineno  "," lexer  lexer lineno no "]}," Ruby27Parser _reduce_423":{"type":"method","name":"_reduce_423","children":[],"call":[" args "]}," Ruby27Parser _reduce_422":{"type":"method","name":"_reduce_422","children":[],"call":[" args "," s line "," lexer lineno "," lexer "," s "]}," Ruby27Parser _reduce_421":{"type":"method","name":"_reduce_421","children":[],"call":[" args "," s line "," lexer lineno "," lexer "," s "]}," Ruby27Parser _reduce_419":{"type":"method","name":"_reduce_419","children":[],"call":[" args "," lexer command_start= "," lexer "]}," Ruby27Parser _reduce_418":{"type":"method","name":"_reduce_418","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," lexer command_start= "," args "]}," Ruby27Parser _reduce_417":{"type":"method","name":"_reduce_417","children":[],"call":[" args "]}," Ruby27Parser _reduce_416":{"type":"method","name":"_reduce_416","children":[],"call":[" lexer command_start= "," lexer "," args "]}," Ruby27Parser _reduce_415":{"type":"method","name":"_reduce_415","children":[],"call":[" args "]}," Ruby27Parser _reduce_414":{"type":"method","name":"_reduce_414","children":[],"call":[" args "]}," Ruby27Parser _reduce_413":{"type":"method","name":"_reduce_413","children":[],"call":[" args "]}," Ruby27Parser _reduce_412":{"type":"method","name":"_reduce_412","children":[],"call":[" args "]}," Ruby27Parser _reduce_411":{"type":"method","name":"_reduce_411","children":[],"call":[" args "]}," Ruby27Parser _reduce_410":{"type":"method","name":"_reduce_410","children":[],"call":[" args "]}," Ruby27Parser _reduce_409":{"type":"method","name":"_reduce_409","children":[],"call":[" args "," args << "]}," Ruby27Parser _reduce_408":{"type":"method","name":"_reduce_408","children":[],"call":[" args "," args << "]}," Ruby27Parser _reduce_407":{"type":"method","name":"_reduce_407","children":[],"call":[" args "," args << "]}," Ruby27Parser _reduce_406":{"type":"method","name":"_reduce_406","children":[],"call":[" args "]}," Ruby27Parser _reduce_405":{"type":"method","name":"_reduce_405","children":[],"call":[" args << "," args "]}," Ruby27Parser _reduce_404":{"type":"method","name":"_reduce_404","children":[],"call":[" args "]}," Ruby27Parser _reduce_403":{"type":"method","name":"_reduce_403","children":[],"call":[" args "]}," Ruby27Parser _reduce_402":{"type":"method","name":"_reduce_402","children":[],"call":[" args "]}," Ruby27Parser _reduce_401":{"type":"method","name":"_reduce_401","children":[],"call":[" args ","result line "," call_args "," lexer lineno "," lexer "," args  line "," call_args  line ","result  lexer lineno  "," lexer  lexer lineno no "]}," Ruby27Parser _reduce_400":{"type":"method","name":"_reduce_400","children":[],"call":[" args "," call_args ","result line "," args  line "," call_args  line "]}," Ruby27Parser _reduce_398":{"type":"method","name":"_reduce_398","children":[],"call":[" args "," call_args "]}," Ruby27Parser _reduce_397":{"type":"method","name":"_reduce_397","children":[],"call":["result line "," call_args "," lexer lineno "," lexer "," block_var "," call_args  line "," block_var  line ","result  lexer lineno  "," lexer  lexer lineno no "]}," Ruby27Parser _reduce_396":{"type":"method","name":"_reduce_396","children":[],"call":[" call_args "," block_var "," args "]}," Ruby27Parser _reduce_395":{"type":"method","name":"_reduce_395","children":[],"call":[" call_args "," block_var ","result line "," lexer lineno "," lexer "," args "," call_args  line "," block_var  line "," args  line "]}," Ruby27Parser _reduce_394":{"type":"method","name":"_reduce_394","children":[],"call":[" call_args "," block_var ","result line "," args ","(str \"*\") to_sym "," call_args  line "," block_var  line "," args  line "]}," Ruby27Parser _reduce_393":{"type":"method","name":"_reduce_393","children":[],"call":[" block_var "," call_args "]}," Ruby27Parser _reduce_392":{"type":"method","name":"_reduce_392","children":[],"call":[" block_var ","result line "," lexer lineno "," lexer "," args "," block_var  line "," args  line "]}," Ruby27Parser _reduce_391":{"type":"method","name":"_reduce_391","children":[],"call":[" block_var ","(str \"*\") to_sym ","result line "," args "," block_var  line "," args  line "]}," Ruby27Parser _reduce_390":{"type":"method","name":"_reduce_390","children":[],"call":[" block_var ","(str \"*\") to_sym "]}," Ruby27Parser _reduce_389":{"type":"method","name":"_reduce_389","children":[],"call":[" block_var ","(str \"*\") to_sym "]}," Ruby27Parser _reduce_388":{"type":"method","name":"_reduce_388","children":[],"call":[" block_var ","(str \"*\") to_sym "," list_append ","val [] "]}," Ruby27Parser _reduce_387":{"type":"method","name":"_reduce_387","children":[],"call":[" block_var ","(str \"*\") to_sym "," s line "," lexer lineno "," lexer "," s "]}," Ruby27Parser _reduce_386":{"type":"method","name":"_reduce_386","children":[],"call":[" block_var ","(str \"*\") to_sym "," list_append ","val [] "]}," Ruby27Parser _reduce_385":{"type":"method","name":"_reduce_385","children":[],"call":[" block_var "," s line "," lexer lineno "," lexer "," s "," list_append ","val [] "]}," Ruby27Parser _reduce_384":{"type":"method","name":"_reduce_384","children":[],"call":[" list_append ","val [] ","val [] delete_at ","val [] [] nil? ","val [] [] "," s line "," lexer lineno "," lexer "," s "]}," Ruby27Parser _reduce_383":{"type":"method","name":"_reduce_383","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","val [] "]}," Ruby27Parser _reduce_382":{"type":"method","name":"_reduce_382","children":[],"call":["val [] ","val [] delete_at ","val [] [] nil? ","val [] [] "]}," Ruby27Parser _reduce_380":{"type":"method","name":"_reduce_380","children":[],"call":["val [] delete_at ","val [] ","val [] [] nil? ","val [] [] "," s line "," s "]}," Ruby27Parser _reduce_378":{"type":"method","name":"_reduce_378","children":[],"call":["val [] "," s line "," s "]}," Ruby27Parser _reduce_376":{"type":"method","name":"_reduce_376","children":[],"call":[" s line "," s "]}," Ruby27Parser _reduce_350":{"type":"method","name":"_reduce_350","children":[],"call":[" value_expr ","val [] "," s line "," s "]}," Ruby27Parser _reduce_349":{"type":"method","name":"_reduce_349","children":[],"call":[" s line "," s "," lexer comments "," lexer "," in_single "," in_def= "," env unextend "," env "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," new_defs "," lexer ignore_body_comments ","val delete_at "]}," Ruby27Parser _reduce_348":{"type":"method","name":"_reduce_348","children":[],"call":[" s line "," s "," comments push "," lexer comments "," lexer "," comments "," lexer lex_state= ","EXPR_ENDFN  | "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," env extend "," env "," in_def= "," in_single "," lexer lineno "," in_def "]}," Ruby27Parser _reduce_347":{"type":"method","name":"_reduce_347","children":[],"call":[" s line "," s "," lexer comments "," lexer "," in_single "," in_def= "," env unextend "," env "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," new_defs "," lexer lex_state= "]}," Ruby27Parser _reduce_346":{"type":"method","name":"_reduce_346","children":[],"call":[" s line "," s "," comments push "," lexer comments "," lexer "," comments "," lexer lex_state= ","EXPR_ENDFN  | "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," env extend "," env "," in_def= "," in_single "," lexer lineno "," in_def "," env unextend "," lexer cmdarg pop "," lexer cond pop "," new_defn ","val [] "," lexer ignore_body_comments "," new_defs ","val delete_at "," val [] = "," val []  "]}," Ruby27Parser _reduce_345":{"type":"method","name":"_reduce_345","children":[],"call":[" lexer comments "," lexer "," in_single "," in_def= "," env unextend "," env "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," new_defs "," lexer lex_state= "," lexer lineno "," lexer cond push "," lexer cmdarg push "," env extend "," in_def ","EXPR_ENDFN  | "]}," Ruby27Parser _reduce_344":{"type":"method","name":"_reduce_344","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "," lexer lex_state= ","EXPR_ENDFN  | "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," env extend "," env "," in_def= "," in_single "," lexer lineno "," in_def "," env unextend "," lexer cmdarg pop "," lexer cond pop "," new_defn ","val [] "," lexer ignore_body_comments "," new_module "," val [] = "," val []  "]}," Ruby27Parser _reduce_343":{"type":"method","name":"_reduce_343","children":[],"call":[" lexer lex_state= "," lexer "," lexer lineno "," lexer comments "," env unextend "," env "," new_module "," env extend "," yyerror "," in_single > "," in_single "," in_def "," lexer ignore_body_comments "," in_def= "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," new_defn "]}," Ruby27Parser _reduce_342":{"type":"method","name":"_reduce_342","children":[],"call":[" lexer comments "," lexer "," in_def= "," env unextend "," env "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," new_defn ","val [] "," comments push "," comments "," lexer cond push "," lexer cmdarg push "," env extend "," in_def "," yyerror "," in_single > "," in_single "," lexer lineno "," val [] = "," val []  "]}," Ruby27Parser _reduce_341":{"type":"method","name":"_reduce_341","children":[],"call":[" lexer lineno "," lexer "," lexer comments "," env unextend "," env "," new_module "," lexer ignore_body_comments "," new_sclass "]}," Ruby27Parser _reduce_340":{"type":"method","name":"_reduce_340","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," env extend "," env "," in_def= "," in_def "," yyerror "," in_single > "," in_single "," env unextend "," new_sclass "," in_single= "]}," Ruby27Parser _reduce_339":{"type":"method","name":"_reduce_339","children":[],"call":[" lexer comments "," lexer "," env unextend "," env "," new_module "," lexer lineno "," env extend "," in_single= "," in_single "," in_def= "," in_def "," lexer ignore_body_comments "," new_sclass "]}," Ruby27Parser _reduce_338":{"type":"method","name":"_reduce_338","children":[],"call":[" env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," lexer "," comments "," env unextend "," new_sclass "," in_def= "," lexer lineno "," in_single= "]}," Ruby27Parser _reduce_337":{"type":"method","name":"_reduce_337","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," in_single= "," in_single "," lexer ignore_body_comments "," env unextend "," new_class "," in_def= "," in_def "]}," Ruby27Parser _reduce_336":{"type":"method","name":"_reduce_336","children":[],"call":[" lexer comments "," lexer "," env unextend "," env "," new_sclass "," in_def= "," in_def "," new_class "," env extend "," yyerror "," in_single > "," in_single "," lexer ignore_body_comments "]}," Ruby27Parser _reduce_335":{"type":"method","name":"_reduce_335","children":[],"call":[" env extend "," env "," in_single= "," in_single "," lexer lineno "," lexer "," yyerror "," in_single > "," in_def "," comments push "," lexer comments "," comments "]}," Ruby27Parser _reduce_334":{"type":"method","name":"_reduce_334","children":[],"call":[" in_def= "," in_def "," lexer comments "," lexer "," env unextend "," env "," new_class "," lexer lineno "," new_for "]}," Ruby27Parser _reduce_333":{"type":"method","name":"_reduce_333","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," comments "," new_for "," new_case "]}," Ruby27Parser _reduce_332":{"type":"method","name":"_reduce_332","children":[],"call":[" lexer comments "," lexer "," env unextend "," env "," new_class "," lexer lineno "," new_case "]}," Ruby27Parser _reduce_331":{"type":"method","name":"_reduce_331","children":[],"call":[" env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," lexer "," comments "," new_for "," new_case "]}," Ruby27Parser _reduce_330":{"type":"method","name":"_reduce_330","children":[],"call":[" lexer lineno "," lexer "," new_case "," new_until "]}," Ruby27Parser _reduce_329":{"type":"method","name":"_reduce_329","children":[],"call":[" new_for "," new_case "," new_while "]}," Ruby27Parser _reduce_328":{"type":"method","name":"_reduce_328","children":[],"call":[" new_case "," new_until "," new_if "]}," Ruby27Parser _reduce_327":{"type":"method","name":"_reduce_327","children":[],"call":[" new_case "," new_while "," new_if "]}," Ruby27Parser _reduce_326":{"type":"method","name":"_reduce_326","children":[],"call":[" new_until "," new_if ","val [] "]}," Ruby27Parser _reduce_325":{"type":"method","name":"_reduce_325","children":[],"call":[" new_while "," new_if ","iter insert "," block_dup_check ","val [] "]}," Ruby27Parser _reduce_324":{"type":"method","name":"_reduce_324","children":[],"call":[" new_if ","val [] "]}," Ruby27Parser _reduce_323":{"type":"method","name":"_reduce_323","children":[],"call":[" new_if ","iter insert "," block_dup_check ","val [] "]}," Ruby27Parser _reduce_322":{"type":"method","name":"_reduce_322","children":[],"call":["val [] "," debug20 "," debug "]}," Ruby27Parser _reduce_321":{"type":"method","name":"_reduce_321","children":[],"call":["iter insert "," block_dup_check ","val [] "," new_call "]}," Ruby27Parser _reduce_319":{"type":"method","name":"_reduce_319","children":[],"call":["iter insert "," new_call "," new_yield "," new_yield line "]}," Ruby27Parser _reduce_318":{"type":"method","name":"_reduce_318","children":[],"call":[" debug20 "," s line "," s "," new_yield "," new_yield line "]}," Ruby27Parser _reduce_317":{"type":"method","name":"_reduce_317","children":[],"call":[" new_call "," new_yield ","val [] "," new_yield line "]}," Ruby27Parser _reduce_316":{"type":"method","name":"_reduce_316","children":[],"call":[" s line "," s "," new_yield "]}," Ruby27Parser _reduce_315":{"type":"method","name":"_reduce_315","children":[],"call":[" new_yield ","val [] "," new_hash "]}," Ruby27Parser _reduce_314":{"type":"method","name":"_reduce_314","children":[],"call":[" new_yield "," s line "," s "," lexer lineno "," lexer "]}," Ruby27Parser _reduce_313":{"type":"method","name":"_reduce_313","children":[],"call":[" new_yield ","val [] "," new_hash ","result line ","result sexp_type= "," s ","result line_max= "," new_yield  line "," new_hash  line "," new_yield  sexp_type= "," new_hash  sexp_type= "," new_yield  line_max= "," new_hash  line_max= "]}," Ruby27Parser _reduce_312":{"type":"method","name":"_reduce_312","children":[],"call":[" s line "," s "," lexer lineno "," lexer "]}," Ruby27Parser _reduce_311":{"type":"method","name":"_reduce_311","children":[],"call":[" new_hash ","result line ","result sexp_type= "," s "," s line "," lexer lineno "," lexer ","id to_sym "," wrap ","val [] "," new_hash  line "," s line  line "," wrap  line "," new_hash  sexp_type= "," s line  sexp_type= "," wrap  sexp_type= "]}," Ruby27Parser _reduce_310":{"type":"method","name":"_reduce_310","children":[],"call":[" lexer lineno "," lexer "," s line ","expr line "," s ","id to_sym "]}," Ruby27Parser _reduce_309":{"type":"method","name":"_reduce_309","children":[],"call":["result line ","result sexp_type= "," s "," s line "," lexer lineno "," lexer ","id to_sym ","result paren= "," s line  line "," s line  sexp_type= "," s line  paren= "]}," Ruby27Parser _reduce_308":{"type":"method","name":"_reduce_308","children":[],"call":[" lexer lineno "," lexer "," s line ","expr line "," s ","id to_sym "]}," Ruby27Parser _reduce_307":{"type":"method","name":"_reduce_307","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","id to_sym ","result paren= "," lexer lex_state= "," s line  paren= "]}," Ruby27Parser _reduce_306":{"type":"method","name":"_reduce_306","children":[],"call":[" s line ","expr line "," s ","id to_sym "]}," Ruby27Parser _reduce_305":{"type":"method","name":"_reduce_305","children":[],"call":["result paren= "," s line "," lexer lineno "," lexer "," s "," lexer lex_state= "," lexer lineno  paren= "]}," Ruby27Parser _reduce_304":{"type":"method","name":"_reduce_304","children":[],"call":[" s line "," s "," new_begin "," lexer cmdarg pop "," lexer cmdarg "," lexer "]}," Ruby27Parser _reduce_303":{"type":"method","name":"_reduce_303","children":[],"call":[" lexer lex_state= "," lexer "," lexer lineno "," lexer cmdarg push "," lexer cmdarg "]}," Ruby27Parser _reduce_302":{"type":"method","name":"_reduce_302","children":[],"call":[" s line "," s "," new_begin "," lexer cmdarg pop "," lexer cmdarg "," lexer "," new_call ","msg to_sym ","result line "," s line  line "," new_begin  line "," new_call  line "]}," Ruby27Parser _reduce_301":{"type":"method","name":"_reduce_301","children":[],"call":[" lexer lineno "," lexer "," lexer lex_state= "," lexer cmdarg push "," lexer cmdarg "]}," Ruby27Parser _reduce_300":{"type":"method","name":"_reduce_300","children":[],"call":[" new_begin "," lexer cmdarg pop "," lexer cmdarg "," lexer "," new_call ","msg to_sym "]}," Ruby27Parser _reduce_299":{"type":"method","name":"_reduce_299","children":[],"call":[" lexer lineno "," lexer "," lexer cmdarg push "," lexer cmdarg "]}," Ruby27Parser _reduce_298":{"type":"method","name":"_reduce_298","children":[],"call":[" new_call ","msg to_sym "]}," Ruby27Parser _reduce_287":{"type":"method","name":"_reduce_287","children":[],"call":[" s line ","arg line "," s ","val [] << ","val [] "," new_masgn_arg "]}," Ruby27Parser _reduce_286":{"type":"method","name":"_reduce_286","children":[],"call":[" arg_concat "," new_masgn_arg ","val [] "," list_append "," s line "," s "," lexer lineno "," lexer "," s  lexer lineno  "," lexer  lexer lineno no "]}," Ruby27Parser _reduce_285":{"type":"method","name":"_reduce_285","children":[],"call":["val [] << ","val [] "," new_masgn_arg "," list_append "]}," Ruby27Parser _reduce_284":{"type":"method","name":"_reduce_284","children":[],"call":[" new_masgn_arg ","val [] "," list_append "," s line "," s "," lexer lineno "," lexer ","arg line "," s  lexer lineno  "," lexer  lexer lineno no ","arg  lexer lineno  "]}," Ruby27Parser _reduce_283":{"type":"method","name":"_reduce_283","children":[],"call":[" new_masgn_arg ","val [] "," list_append "," s line "," s "," lexer lineno "," lexer ","arg line "]}," Ruby27Parser _reduce_282":{"type":"method","name":"_reduce_282","children":[],"call":[" list_append "," s line "," s "," lexer lineno "," lexer ","arg line "," s  lexer lineno  "," lexer  lexer lineno no ","arg  lexer lineno  "]}," Ruby27Parser _reduce_281":{"type":"method","name":"_reduce_281","children":[],"call":[" list_append "," s line "," s "," lexer lineno "," lexer ","arg line ","val [] "]}," Ruby27Parser _reduce_280":{"type":"method","name":"_reduce_280","children":[],"call":[" s line ","arg line "," s "]}," Ruby27Parser _reduce_279":{"type":"method","name":"_reduce_279","children":[],"call":[" s line "," s "," lexer lineno "," lexer ","arg line ","val [] "," lexer cmdarg push "," lexer cmdarg "," lexer cmdarg pop ","(sym :tLBRACE_ARG) include? "]}," Ruby27Parser _reduce_277":{"type":"method","name":"_reduce_277","children":[],"call":["val [] "," lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg pop ","(sym :tLBRACE_ARG) include? "," call_args "]}," Ruby27Parser _reduce_276":{"type":"method","name":"_reduce_276","children":[],"call":[" s line ","arg line "," s "," lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg pop ","(sym :tLPAREN) include? "," last_token_type first "," last_token_type "," call_args ","val [] "," array_to_hash "]}," Ruby27Parser _reduce_275":{"type":"method","name":"_reduce_275","children":[],"call":[" lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg pop ","(sym :tLBRACE_ARG) include? "," call_args ","val [] "," array_to_hash "]}," Ruby27Parser _reduce_274":{"type":"method","name":"_reduce_274","children":[],"call":[" lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg pop ","(sym :tLPAREN) include? "," last_token_type first "," last_token_type "," call_args ","val [] "," array_to_hash "]}," Ruby27Parser _reduce_273":{"type":"method","name":"_reduce_273","children":[],"call":[" call_args ","val [] "," array_to_hash "," warning "]}," Ruby27Parser _reduce_272":{"type":"method","name":"_reduce_272","children":[],"call":[" call_args ","val [] "," array_to_hash "," args "]}," Ruby27Parser _reduce_271":{"type":"method","name":"_reduce_271","children":[],"call":[" call_args ","val [] "," array_to_hash "," warning "," args "]}," Ruby27Parser _reduce_270":{"type":"method","name":"_reduce_270","children":[],"call":[" call_args "," args "," array_to_hash ","val [] "]}," Ruby27Parser _reduce_269":{"type":"method","name":"_reduce_269","children":[],"call":[" call_args "," warning "," args "," array_to_hash ","val [] "]}," Ruby27Parser _reduce_268":{"type":"method","name":"_reduce_268","children":[],"call":[" args "," array_to_hash ","val [] "]}," Ruby27Parser _reduce_267":{"type":"method","name":"_reduce_267","children":[],"call":[" args "," array_to_hash ","val [] "]}," Ruby27Parser _reduce_266":{"type":"method","name":"_reduce_266","children":[],"call":[" args "]}," Ruby27Parser _reduce_261":{"type":"method","name":"_reduce_261","children":[],"call":[]}," Ruby27Parser _reduce_260":{"type":"method","name":"_reduce_260","children":[],"call":[" new_rescue "," new_resbody "," s line "," s "," remove_begin "," value_expr "," args "," array_to_hash ","val [] "," new_ remove_begin  "," new_res value_expr  "]}," Ruby27Parser _reduce_258":{"type":"method","name":"_reduce_258","children":[],"call":[" args "," array_to_hash ","val [] "]}," Ruby27Parser _reduce_257":{"type":"method","name":"_reduce_257","children":[],"call":[" args "," array_to_hash ","val [] "]}," Ruby27Parser _reduce_256":{"type":"method","name":"_reduce_256","children":[],"call":[" args ","val [] "," value_expr "]}," Ruby27Parser _reduce_254":{"type":"method","name":"_reduce_254","children":[],"call":[" value_expr ","val [] "," new_call "," argl ","op to_sym "]}," Ruby27Parser _reduce_253":{"type":"method","name":"_reduce_253","children":[],"call":[" new_call "," argl ","op to_sym "," warn "]}," Ruby27Parser _reduce_252":{"type":"method","name":"_reduce_252","children":[],"call":[" new_call "," argl ","op to_sym "]}," Ruby27Parser _reduce_246":{"type":"method","name":"_reduce_246","children":[],"call":[" s line ","c line "," s "," logical_op ","val [] "]}," Ruby27Parser _reduce_245":{"type":"method","name":"_reduce_245","children":[],"call":[" s line "," s "," logical_op ","val [] "]}," Ruby27Parser _reduce_244":{"type":"method","name":"_reduce_244","children":[],"call":[" logical_op ","val [] "," new_call "," argl ","val []= "," value_expr "]}," Ruby27Parser _reduce_243":{"type":"method","name":"_reduce_243","children":[],"call":[" logical_op ","val [] "," new_call "," argl ","val []= "," value_expr "]}," Ruby27Parser _reduce_242":{"type":"method","name":"_reduce_242","children":[],"call":[" new_call "," argl ","val [] ","val []= "," value_expr "]}," Ruby27Parser _reduce_241":{"type":"method","name":"_reduce_241","children":[],"call":[" new_call "," argl ","val [] ","val []= "," value_expr ","result line ","arg line "," new_call  line "]}," Ruby27Parser _reduce_240":{"type":"method","name":"_reduce_240","children":[],"call":[" new_call "," value_expr ","val [] "," s line ","lhs line "," s "," new_match "]}," Ruby27Parser _reduce_239":{"type":"method","name":"_reduce_239","children":[],"call":["result line ","arg line "," new_call "," new_match "," new_call  line "," new_match  line "]}," Ruby27Parser _reduce_238":{"type":"method","name":"_reduce_238","children":[],"call":[" s line ","lhs line "," s "," new_match "," new_call "," argl ","val [] "]}," Ruby27Parser _reduce_237":{"type":"method","name":"_reduce_237","children":[],"call":[" new_match "," new_call "," argl ","val [] "]}," Ruby27Parser _reduce_236":{"type":"method","name":"_reduce_236","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby27Parser _reduce_235":{"type":"method","name":"_reduce_235","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby27Parser _reduce_234":{"type":"method","name":"_reduce_234","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby27Parser _reduce_232":{"type":"method","name":"_reduce_232","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby27Parser _reduce_231":{"type":"method","name":"_reduce_231","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby27Parser _reduce_230":{"type":"method","name":"_reduce_230","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby27Parser _reduce_229":{"type":"method","name":"_reduce_229","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby27Parser _reduce_228":{"type":"method","name":"_reduce_228","children":[],"call":[" new_call ","val [] "," argl "," s line "," lexer lineno "," lexer "," s "]}," Ruby27Parser _reduce_227":{"type":"method","name":"_reduce_227","children":[],"call":[" new_call ","val [] "," argl "]}," Ruby27Parser _reduce_226":{"type":"method","name":"_reduce_226","children":[],"call":[" new_call "," argl ","val [] "," s line "," lexer lineno "," lexer "," s "]}," Ruby27Parser _reduce_225":{"type":"method","name":"_reduce_225","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby27Parser _reduce_224":{"type":"method","name":"_reduce_224","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby27Parser _reduce_223":{"type":"method","name":"_reduce_223","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby27Parser _reduce_222":{"type":"method","name":"_reduce_222","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby27Parser _reduce_221":{"type":"method","name":"_reduce_221","children":[],"call":[" new_call "," argl ","val [] "," s line ","v2 line "," s "]}," Ruby27Parser _reduce_220":{"type":"method","name":"_reduce_220","children":[],"call":[" new_call "," argl ","val [] "," s line ","v2 line "," s "]}," Ruby27Parser _reduce_219":{"type":"method","name":"_reduce_219","children":[],"call":[" s line ","v1 line "," s "]}," Ruby27Parser _reduce_218":{"type":"method","name":"_reduce_218","children":[],"call":[" s line ","v1 line "," s "]}," Ruby27Parser _reduce_217":{"type":"method","name":"_reduce_217","children":[],"call":[" s line ","v1 line "," s ","v2 last ","v1 last ","Integer  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type ","val [] ","v2 sexp_type == ","v2 sexp_type ","v1 sexp_type == ","v1 sexp_type "]}," Ruby27Parser _reduce_216":{"type":"method","name":"_reduce_216","children":[],"call":[" s line ","v1 line "," s ","v2 last ","v1 last ","Integer  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type ","val [] ","v2 sexp_type == ","v2 sexp_type ","v1 sexp_type == ","v1 sexp_type "]}," Ruby27Parser _reduce_215":{"type":"method","name":"_reduce_215","children":[],"call":[" backref_assign_error "," new_op_asgn "," new_op_ new_op_asgn  "]}," Ruby27Parser _reduce_214":{"type":"method","name":"_reduce_214","children":[],"call":[" new_const_op_asgn "," s line "," s ","lhs to_sym "," wrap "," s line  to_sym "," wrap  to_sym "]}," Ruby27Parser _reduce_213":{"type":"method","name":"_reduce_213","children":[],"call":[" lexer lineno "," lexer "," new_const_op_asgn "," s line ","lhs1 line "," s ","lhs2 to_sym "," s line 1 line "," s line 2 to_sym "]}," Ruby27Parser _reduce_212":{"type":"method","name":"_reduce_212","children":[],"call":[" new_const_op_asgn "," s line ","lhs1 line "," s ","lhs2 to_sym ","lhs line ","op to_sym ","id to_sym "," s line 1 line "," s line 2 to_sym "," s line  line "]}," Ruby27Parser _reduce_211":{"type":"method","name":"_reduce_211","children":[],"call":[" s line ","lhs line "," s ","op to_sym ","id to_sym "," new_op_asgn2 "]}," Ruby27Parser _reduce_210":{"type":"method","name":"_reduce_210","children":[],"call":[" new_op_asgn2 "]}," Ruby27Parser _reduce_209":{"type":"method","name":"_reduce_209","children":[],"call":[" new_op_asgn2 "," new_op_asgn1 "]}," Ruby27Parser _reduce_208":{"type":"method","name":"_reduce_208","children":[],"call":[" new_op_asgn1 "," new_op_asgn "]}," Ruby27Parser _reduce_207":{"type":"method","name":"_reduce_207","children":[],"call":[" new_op_asgn "," new_assign ","val [] "]}," Ruby27Parser _reduce_206":{"type":"method","name":"_reduce_206","children":[],"call":[" new_assign ","val [] "]}," Ruby27Parser _reduce_133":{"type":"method","name":"_reduce_133","children":[],"call":[" new_undef ","val [] "]}," Ruby27Parser _reduce_132":{"type":"method","name":"_reduce_132","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby27Parser _reduce_131":{"type":"method","name":"_reduce_131","children":[],"call":[" new_undef ","val [] "," s line "," s ","id to_sym "," wrap "]}," Ruby27Parser _reduce_129":{"type":"method","name":"_reduce_129","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","id to_sym "," lexer lex_state= "]}," Ruby27Parser _reduce_126":{"type":"method","name":"_reduce_126","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby27Parser _reduce_125":{"type":"method","name":"_reduce_125","children":[],"call":["val [] "," lexer lex_state= "," lexer ","result line ","pval line "," s ","name to_sym ","val []  line "," s  line "]}," Ruby27Parser _reduce_121":{"type":"method","name":"_reduce_121","children":[],"call":["result line ","pval line "," s ","name to_sym "," yyerror "," s  line "]}," Ruby27Parser _reduce_120":{"type":"method","name":"_reduce_120","children":[],"call":["val [] to_sym ","val [] "," backref_assign_error "]}," Ruby27Parser _reduce_119":{"type":"method","name":"_reduce_119","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","name to_sym ","id to_sym "," yyerror "," debug "," in_single > "," in_single "," in_def "]}," Ruby27Parser _reduce_117":{"type":"method","name":"_reduce_117","children":[],"call":[" yyerror "," new_attrasgn "]}," Ruby27Parser _reduce_116":{"type":"method","name":"_reduce_116","children":[],"call":[" backref_assign_error ","val [] "," new_attrasgn "]}," Ruby27Parser _reduce_115":{"type":"method","name":"_reduce_115","children":[],"call":[" s line "," s ","id to_sym "," lexer lineno "," lexer "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," new_attrasgn "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "," in_sing lexer lineno e > "," in_sing lexer lineno e "]}," Ruby27Parser _reduce_114":{"type":"method","name":"_reduce_114","children":[],"call":[" s line "," s ","id to_sym ","expr line "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," aryset "," s expr line ine ","expr expr line ine "," in_singexpr line e > "," in_singexpr line e "]}," Ruby27Parser _reduce_113":{"type":"method","name":"_reduce_113","children":[],"call":[" new_attrasgn ","val [] "," debug "," assignable "]}," Ruby27Parser _reduce_112":{"type":"method","name":"_reduce_112","children":[],"call":[" new_attrasgn "," assignable "]}," Ruby27Parser _reduce_111":{"type":"method","name":"_reduce_111","children":[],"call":[" new_attrasgn "," backref_assign_error "]}," Ruby27Parser _reduce_110":{"type":"method","name":"_reduce_110","children":[],"call":[" aryset "," s line "," s ","id to_sym "," yyerror "," debug "," in_single > "," in_single "," in_def "]}," Ruby27Parser _reduce_109":{"type":"method","name":"_reduce_109","children":[],"call":[" debug20 ","result line= "," assignable ","val [] "," lexer lineno "," lexer "," s line "," s ","id to_sym ","expr line "," yyerror "," debug "," in_single > "," in_single "," in_def "," assignable  line= "," s line  line= ","result  lexer lineno = ","resuexpr line t expr line ine= "," assignabexpr line e ","vaexpr line  [] "," lexer  lexer lineno no "," expr line exer expr line ineno "," expr line exer "," s  lexer lineno  "," s expr line ine ","expr  lexer lineno  ","expr expr line ine "," in_singexpr line e > "," in_singexpr line e "]}," Ruby27Parser _reduce_108":{"type":"method","name":"_reduce_108","children":[],"call":["result line= "," assignable ","val [] "," lexer lineno "," lexer "," new_attrasgn "," assignable  line= "," new_attrasgn  line= ","result  lexer lineno = "," lexer  lexer lineno no "]}," Ruby27Parser _reduce_107":{"type":"method","name":"_reduce_107","children":[],"call":[" backref_assign_error ","val [] "," new_attrasgn "]}," Ruby27Parser _reduce_106":{"type":"method","name":"_reduce_106","children":[],"call":[" s line "," s ","id to_sym "," lexer lineno "," lexer "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," new_attrasgn "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "," in_sing lexer lineno e > "," in_sing lexer lineno e "]}," Ruby27Parser _reduce_105":{"type":"method","name":"_reduce_105","children":[],"call":[" s line "," s ","id to_sym ","expr line "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," aryset ","val [] "," s expr line ine ","expr expr line ine "," in_singexpr line e > "," in_singexpr line e ","vaexpr line  [] "]}," Ruby27Parser _reduce_104":{"type":"method","name":"_reduce_104","children":[],"call":[" new_attrasgn ","val [] "," assignable "]}," Ruby27Parser _reduce_103":{"type":"method","name":"_reduce_103","children":[],"call":[" new_attrasgn "," assignable ","val [] "]}," Ruby27Parser _reduce_102":{"type":"method","name":"_reduce_102","children":[],"call":[" new_attrasgn ","val [] "," list_append "]}," Ruby27Parser _reduce_101":{"type":"method","name":"_reduce_101","children":[],"call":[" aryset ","val [] "," s line ","item line "," s "]}," Ruby27Parser _reduce_100":{"type":"method","name":"_reduce_100","children":[],"call":[" assignable ","val [] ","val [] << ","val [] compact "]}," Ruby27Parser _reduce_99":{"type":"method","name":"_reduce_99","children":[],"call":[" assignable ","val [] "," s line ","lhs line "," s "]}," Ruby27Parser _reduce_98":{"type":"method","name":"_reduce_98","children":[],"call":[" list_append ","val [] "]}," Ruby27Parser _reduce_97":{"type":"method","name":"_reduce_97","children":[],"call":[" s line ","item line "," s "]}," Ruby27Parser _reduce_96":{"type":"method","name":"_reduce_96","children":[],"call":["val [] << ","val [] compact ","val [] "," s line "," s ","post sexp_body ","post line ","vapost line  [] << ","vapost line  [] compact ","vapost line  [] "," s post line ine ","post post line ine "]}," Ruby27Parser _reduce_95":{"type":"method","name":"_reduce_95","children":[],"call":[" s line ","lhs line "," s "," lexer lineno "," lexer "," s  lexer lineno ine "," lexer lineno hs  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "]}," Ruby27Parser _reduce_94":{"type":"method","name":"_reduce_94","children":[],"call":["val [] "," s line ","ary line "," s ","ary concat ","post sexp_body ","splat line ","node line "," s line  line "," s line  concat "]}," Ruby27Parser _reduce_92":{"type":"method","name":"_reduce_92","children":[],"call":[" s line "," s ","post sexp_body ","post line ","ary line ","ary concat "," list_append ","head line "," s post line ine ","post post line ine "," s line  line "," list_append  line ","ary post line ine "," s line  concat "," list_append  concat "," post line ist_append ","head post line ine "]}," Ruby27Parser _reduce_91":{"type":"method","name":"_reduce_91","children":[],"call":[" s line "," s "," lexer lineno "," lexer ","head << ","head line "," s  lexer lineno ine "," s head line ine ","  lexer lineno exer  lexer lineno ineno "," head line exer head line ineno ","  lexer lineno exer "," head line exer ","head  lexer lineno ine ","head head line ine "]}," Ruby27Parser _reduce_90":{"type":"method","name":"_reduce_90","children":[],"call":[" s line ","ary line "," s ","ary concat ","post sexp_body ","splat line ","node line ","result line ","result concat ","ary2 sexp_body "," list_append "," s line  line "," s line  concat "," list_append  line "," list_append  concat "," s line 2 sexp_body "]}," Ruby27Parser _reduce_89":{"type":"method","name":"_reduce_89","children":[],"call":[" s line "," s ","node line ","head line ","head << ","tail line "," s node line ine ","node node line ine ","head node line ine ","tainode line  node line ine "]}," Ruby27Parser _reduce_88":{"type":"method","name":"_reduce_88","children":[],"call":[" s line ","ary line "," s ","ary concat ","post sexp_body "," list_append ","head line ","lhs line ","lhs << ","rhs compact "," list_append  line "," list_append  concat "]}," Ruby27Parser _reduce_87":{"type":"method","name":"_reduce_87","children":[],"call":[" s line "," s ","head << ","head line "," s head line ine ","head head line ine "]}," Ruby27Parser _reduce_86":{"type":"method","name":"_reduce_86","children":[],"call":[" s line ","result line "," s ","result concat ","ary2 sexp_body "," list_append ","splat line ","arg line "," s arg line ine "," s line  line "," list_append  line ","resuarg line t arg line ine "," s line  concat "," list_append  concat ","resuarg line t concat "," arg line ist_append ","sparg line at arg line ine ","arg arg line ine "]}," Ruby27Parser _reduce_85":{"type":"method","name":"_reduce_85","children":[],"call":[" s line ","head line "," s ","head << ","tail line "]}," Ruby27Parser _reduce_84":{"type":"method","name":"_reduce_84","children":[],"call":[" s line ","lhs line "," s ","lhs << ","rhs compact ","val [] "]}," Ruby27Parser _reduce_83":{"type":"method","name":"_reduce_83","children":[],"call":[" s line ","head line "," s "]}," Ruby27Parser _reduce_82":{"type":"method","name":"_reduce_82","children":[],"call":[" s line "," s ","arg line "," ret_args ","val [] ","val [] last "," s arg line ine "," s val [] last  ","arg arg line ine ","arg val [] last  ","vaarg line  [] ","vaarg line  [] arg line ast "]}," Ruby27Parser _reduce_80":{"type":"method","name":"_reduce_80","children":[],"call":["val [] "," s line "," s "," ret_args ","val [] last "," s val [] last  "]}," Ruby27Parser _reduce_78":{"type":"method","name":"_reduce_78","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last "," new_super "," s val [] last  "]}," Ruby27Parser _reduce_77":{"type":"method","name":"_reduce_77","children":[],"call":[" s line "," s "," ret_args ","block insert "," block_dup_check "," new_call ","msg to_sym "," new_ new_call  "]}," Ruby27Parser _reduce_76":{"type":"method","name":"_reduce_76","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last ","result line "," new_call ","id to_sym "," s val [] last  "," s line  line "," new_call  line ","result val [] last  "]}," Ruby27Parser _reduce_75":{"type":"method","name":"_reduce_75","children":[],"call":["result line "," new_yield ","block insert "," block_dup_check "," new_call ","val [] ","msg to_sym "," new_yield  line "," new_ new_call  "]}," Ruby27Parser _reduce_74":{"type":"method","name":"_reduce_74","children":[],"call":[" new_super ","val [] ","result line ","lhs line "," new_call ","op to_sym "," new_super  line "," new_call  line "]}," Ruby27Parser _reduce_73":{"type":"method","name":"_reduce_73","children":[],"call":["block insert "," block_dup_check "," new_call ","msg to_sym ","result insert ","call concat ","args sexp_body "," new_ new_call  ","call concat  insert "," new_call  concat "]}," Ruby27Parser _reduce_72":{"type":"method","name":"_reduce_72","children":[],"call":[" new_call ","val [] ","val [] to_sym ","call concat ","args sexp_body "]}," Ruby27Parser _reduce_71":{"type":"method","name":"_reduce_71","children":[],"call":["block insert "," block_dup_check "," new_call ","val [] ","msg to_sym "," new_call line "," new_ new_call  "," new_ new_call  line "]}," Ruby27Parser _reduce_70":{"type":"method","name":"_reduce_70","children":[],"call":[" new_call ","op to_sym ","result line "," new_call  line "]}," Ruby27Parser _reduce_69":{"type":"method","name":"_reduce_69","children":[],"call":["result insert "," block_dup_check ","call concat ","args sexp_body "," lexer lineno "," lexer ","call concat  insert "," lexer lineno  insert "]}," Ruby27Parser _reduce_68":{"type":"method","name":"_reduce_68","children":[],"call":["call concat ","args sexp_body "," new_call line ","blk line "," new_call ","msg to_sym "]}," Ruby27Parser _reduce_67":{"type":"method","name":"_reduce_67","children":[],"call":[" new_call line "," lexer lineno "," lexer "," new_call ","msg to_sym "]}," Ruby27Parser _reduce_66":{"type":"method","name":"_reduce_66","children":[],"call":["result line= "]}," Ruby27Parser _reduce_65":{"type":"method","name":"_reduce_65","children":[],"call":[" lexer lineno "," lexer "]}," Ruby27Parser _reduce_64":{"type":"method","name":"_reduce_64","children":[],"call":[" new_call line ","blk line "," new_call ","msg to_sym "]}," Ruby27Parser _reduce_60":{"type":"method","name":"_reduce_60","children":[],"call":[]}," Ruby27Parser _reduce_59":{"type":"method","name":"_reduce_59","children":[],"call":[" lexer cond pop "," lexer cond "," lexer "," new_case ","expr line "," new_in "," in_kwarg= "," value_expr "," env unextend "," env "," value_expr  line "," value_ value_expr  "]}," Ruby27Parser _reduce_58":{"type":"method","name":"_reduce_58","children":[],"call":[" lexer cond push "," lexer cond "," lexer "," env extend "," env "," in_kwarg= "," in_kwarg "," lexer command_start= "," lexer lex_state= ","EXPR_BEG  | "]}," Ruby27Parser _reduce_57":{"type":"method","name":"_reduce_57","children":[],"call":[" value_expr ","val [] "," new_call line ","cmd line "," new_call "]}," Ruby27Parser _reduce_55":{"type":"method","name":"_reduce_55","children":[],"call":[" new_call line ","cmd line "," new_call "," logical_op "]}," Ruby27Parser _reduce_54":{"type":"method","name":"_reduce_54","children":[],"call":[" new_call line "," new_call "," logical_op "]}," Ruby27Parser _reduce_53":{"type":"method","name":"_reduce_53","children":[],"call":[" logical_op "]}," Ruby27Parser _reduce_52":{"type":"method","name":"_reduce_52","children":[],"call":[" logical_op "]}," Ruby27Parser _reduce_49":{"type":"method","name":"_reduce_49","children":[],"call":[" new_rescue "," new_resbody "," s line "," s "," value_expr "," backref_assign_error ","val [] "," value_ value_expr  "]}," Ruby27Parser _reduce_48":{"type":"method","name":"_reduce_48","children":[],"call":[" value_expr "," s line "," s ","id to_sym ","lhs2 to_sym "]}," Ruby27Parser _reduce_47":{"type":"method","name":"_reduce_47","children":[],"call":[" backref_assign_error ","val [] "," s line "," s ","id to_sym ","lhs2 to_sym "]}," Ruby27Parser _reduce_46":{"type":"method","name":"_reduce_46","children":[],"call":[" s ","op to_sym ","lhs2 to_sym ","result line ","prim line ","result sexp_type= ","call_op == ","op_asgn to_sym ","id to_sym "," s  line "," s  sexp_type= "]}," Ruby27Parser _reduce_45":{"type":"method","name":"_reduce_45","children":[],"call":[" s ","op to_sym ","lhs2 to_sym ","result line ","prim line ","result sexp_type= ","call_op == ","op_asgn to_sym ","id to_sym "," s  line "," s  sexp_type= "]}," Ruby27Parser _reduce_44":{"type":"method","name":"_reduce_44","children":[],"call":["result line= ","val [] line ","val [] ","result sexp_type= ","val [] == "," s ","val [] to_sym "," new_op_asgn1 "," s  line= "," new_op_asgn1  line= "," s  sexp_type= "," new_op_asgn1  sexp_type= "]}," Ruby27Parser _reduce_43":{"type":"method","name":"_reduce_43","children":[],"call":["result line= ","val [] line ","val [] ","result sexp_type= ","val [] == "," s ","opasgn to_sym ","id to_sym "," new_op_asgn "," s  line= "," new_op_asgn  line= "," s  sexp_type= "," new_op_asgn  sexp_type= "]}," Ruby27Parser _reduce_42":{"type":"method","name":"_reduce_42","children":[],"call":[" new_op_asgn1 "," new_assign ","val [] "]}," Ruby27Parser _reduce_41":{"type":"method","name":"_reduce_41","children":[],"call":[" new_op_asgn "]}," Ruby27Parser _reduce_40":{"type":"method","name":"_reduce_40","children":[],"call":[" new_assign ","val [] "," new_masgn "]}," Ruby27Parser _reduce_38":{"type":"method","name":"_reduce_38","children":[],"call":[" new_masgn ","val [] "," new_assign "," s line ","rhs line "," s "]}," Ruby27Parser _reduce_37":{"type":"method","name":"_reduce_37","children":[],"call":[" new_assign "," s line ","rhs line "," s "," new_masgn ","val [] "]}," Ruby27Parser _reduce_36":{"type":"method","name":"_reduce_36","children":[],"call":[" new_masgn ","val [] "]}," Ruby27Parser _reduce_34":{"type":"method","name":"_reduce_34","children":[],"call":[" new_iter "," s line "," s "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," new_rescue "," new_resbody ","resbody line "," new_ new_resbody  "," new_resbody  line "]}," Ruby27Parser _reduce_33":{"type":"method","name":"_reduce_33","children":[],"call":[" new_rescue "," new_resbody "," s line ","resbody line "," s "," new_until "," new_ new_resbody  "," new_resbody  line "]}," Ruby27Parser _reduce_32":{"type":"method","name":"_reduce_32","children":[],"call":[" new_until "," new_while "]}," Ruby27Parser _reduce_31":{"type":"method","name":"_reduce_31","children":[],"call":[" new_while "," new_if "]}," Ruby27Parser _reduce_30":{"type":"method","name":"_reduce_30","children":[],"call":[" new_if "]}," Ruby27Parser _reduce_29":{"type":"method","name":"_reduce_29","children":[],"call":[" new_if ","val [] "]}," Ruby27Parser _reduce_28":{"type":"method","name":"_reduce_28","children":[],"call":["val [] "," yyerror "]}," Ruby27Parser _reduce_27":{"type":"method","name":"_reduce_27","children":[],"call":[" yyerror "," s line "," s ","lhs to_sym "]}," Ruby27Parser _reduce_26":{"type":"method","name":"_reduce_26","children":[],"call":[" s line "," s ","lhs to_sym ","rhs to_sym "]}," Ruby27Parser _reduce_25":{"type":"method","name":"_reduce_25","children":[],"call":[" s line "," s ","rhs to_sym ","lhs to_sym "," s line line "]}," Ruby27Parser _reduce_24":{"type":"method","name":"_reduce_24","children":[],"call":[" s line line "," s line "," s "," lexer lex_state= "," lexer "]}," Ruby27Parser _reduce_23":{"type":"method","name":"_reduce_23","children":[],"call":[" lexer lex_state= "," lexer ","val [] "]}," Ruby27Parser _reduce_22":{"type":"method","name":"_reduce_22","children":[],"call":[" yyerror "]}," Ruby27Parser _reduce_20":{"type":"method","name":"_reduce_20","children":[],"call":[" debug20 ","val [] "," debug "]}," Ruby27Parser _reduce_19":{"type":"method","name":"_reduce_19","children":[],"call":[" block_append ","val [] "]}," Ruby27Parser _reduce_16":{"type":"method","name":"_reduce_16","children":[],"call":[" new_compstmt "]}," Ruby27Parser _reduce_15":{"type":"method","name":"_reduce_15","children":[],"call":[" new_body "]}," Ruby27Parser _reduce_14":{"type":"method","name":"_reduce_14","children":[],"call":[" new_body "]}," Ruby27Parser _reduce_13":{"type":"method","name":"_reduce_13","children":[],"call":[" yyerror ","_values [] "]}," Ruby27Parser _reduce_12":{"type":"method","name":"_reduce_12","children":[],"call":[" new_iter "," s line "," s "]}," Ruby27Parser _reduce_11":{"type":"method","name":"_reduce_11","children":[],"call":[" lexer lineno "," lexer "]}," Ruby27Parser _reduce_10":{"type":"method","name":"_reduce_10","children":[],"call":["preexe line ","iter line "]}," Ruby27Parser _reduce_9":{"type":"method","name":"_reduce_9","children":[],"call":[" env extend "," env "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," debug "]}," Ruby27Parser _reduce_6":{"type":"method","name":"_reduce_6","children":[],"call":[" block_append ","val [] "]}," Ruby27Parser _reduce_3":{"type":"method","name":"_reduce_3","children":[],"call":[]}," Ruby27Parser _reduce_2":{"type":"method","name":"_reduce_2","children":[],"call":[" new_compstmt "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer cond pop "," lexer cond "]}," Ruby27Parser _reduce_1":{"type":"method","name":"_reduce_1","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby26Parser _reduce_653":{"type":"method","name":"_reduce_653","children":[],"call":[]}," Ruby26Parser _reduce_652":{"type":"method","name":"_reduce_652","children":[],"call":[" yyerrok "]}," Ruby26Parser _reduce_522":{"type":"method","name":"_reduce_522","children":[],"call":[" debug20 "," s line ","result line "," s ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," lexer lineno "," lexer "," lexer lex_state= "," s line  line "," s line  last to_sym "," s line  last "," s line  sexp_type= "," s line  sexp_type "]}," Ruby26Parser _reduce_517":{"type":"method","name":"_reduce_517","children":[],"call":["val [] to_sym ","val [] "]}," Ruby26Parser _reduce_463":{"type":"method","name":"_reduce_463","children":[],"call":[" s line "," s "]}," Ruby25Parser _reduce_651":{"type":"method","name":"_reduce_651","children":[],"call":[]}," Ruby25Parser _reduce_650":{"type":"method","name":"_reduce_650","children":[],"call":[" yyerrok "]}," Ruby24Parser _reduce_651":{"type":"method","name":"_reduce_651","children":[],"call":[]}," Ruby24Parser _reduce_650":{"type":"method","name":"_reduce_650","children":[],"call":[" yyerrok "]}," Ruby23Parser _reduce_650":{"type":"method","name":"_reduce_650","children":[],"call":[]}," Ruby23Parser _reduce_649":{"type":"method","name":"_reduce_649","children":[],"call":[" yyerrok "]}," Ruby23Parser _reduce_612":{"type":"method","name":"_reduce_612","children":[],"call":[" yyerror ","result sexp_type == ","result sexp_type ","val [] "," s line ","lit line "," s "," wrap ","val []  sexp_type == "," s line  sexp_type == ","val []  sexp_type "," s line  sexp_type "," wrap  line "]}," Ruby23Parser _reduce_607":{"type":"method","name":"_reduce_607","children":[],"call":["(str \"&\") to_sym "," env []= "," env ","val [] to_sym ","val [] "," s line "," lexer lineno "," lexer "," s "]}," Ruby23Parser _reduce_603":{"type":"method","name":"_reduce_603","children":[],"call":[" assignable ","val [] to_sym ","val [] "," raise ","val inspect "," s ","val [] [] to_sym ","val [] [] "]}," Ruby23Parser _reduce_584":{"type":"method","name":"_reduce_584","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym "," args ","val [] ","(str \"&\") to_sym ","val [] to_sym "]}," Ruby23Parser _reduce_579":{"type":"method","name":"_reduce_579","children":[],"call":["val [] "," s line "," s "," env []= "," env ","label to_sym "," assignable "," debug20 ","val [] to_sym "]}," Ruby22Parser _reduce_649":{"type":"method","name":"_reduce_649","children":[],"call":[]}," Ruby22Parser _reduce_648":{"type":"method","name":"_reduce_648","children":[],"call":[" yyerrok "]}," Ruby22Parser _reduce_612":{"type":"method","name":"_reduce_612","children":[],"call":[" yyerror ","result sexp_type == ","result sexp_type ","val [] "," s line ","lit line "," s "," wrap ","val []  sexp_type == "," s line  sexp_type == ","val []  sexp_type "," s line  sexp_type "," wrap  line "]}," Ruby22Parser _reduce_607":{"type":"method","name":"_reduce_607","children":[],"call":["(str \"&\") to_sym "," env []= "," env ","val [] to_sym ","val [] "," s line "," lexer lineno "," lexer "," s "]}," Ruby22Parser _reduce_603":{"type":"method","name":"_reduce_603","children":[],"call":[" assignable ","val [] to_sym ","val [] "]}," Ruby22Parser _reduce_584":{"type":"method","name":"_reduce_584","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym "," args ","val [] ","(str \"&\") to_sym ","val [] to_sym "]}," Ruby22Parser _reduce_579":{"type":"method","name":"_reduce_579","children":[],"call":["val [] "," s line "," s "," env []= "," env ","label to_sym "," assignable ","val [] to_sym "]}," Ruby21Parser _reduce_647":{"type":"method","name":"_reduce_647","children":[],"call":[]}," Ruby21Parser _reduce_646":{"type":"method","name":"_reduce_646","children":[],"call":[" yyerrok "]}," Ruby21Parser _reduce_616":{"type":"method","name":"_reduce_616","children":[],"call":[" s line ","v1 line "," s "," yyerrok "]}," Ruby21Parser _reduce_611":{"type":"method","name":"_reduce_611","children":[],"call":[" yyerror ","result sexp_type == ","result sexp_type ","val [] "," s line ","lit line "," s "," wrap ","val []  sexp_type == "," s line  sexp_type == ","val []  sexp_type "," s line  sexp_type "," wrap  line "]}," Ruby21Parser _reduce_606":{"type":"method","name":"_reduce_606","children":[],"call":["(str \"&\") to_sym "," env []= "," env ","val [] to_sym ","val [] "," s line "," lexer lineno "," lexer "," s "]}," Ruby21Parser _reduce_602":{"type":"method","name":"_reduce_602","children":[],"call":[" assignable ","val [] to_sym ","val [] "]}," Ruby21Parser _reduce_583":{"type":"method","name":"_reduce_583","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym "," args ","val [] ","(str \"&\") to_sym ","val [] to_sym "]}," Ruby20Parser _reduce_642":{"type":"method","name":"_reduce_642","children":[],"call":[]}," Ruby20Parser _reduce_641":{"type":"method","name":"_reduce_641","children":[],"call":[" yyerrok "]}," Ruby20Parser _reduce_611":{"type":"method","name":"_reduce_611","children":[],"call":[" s line ","v1 line "," s "]}," Ruby20Parser _reduce_606":{"type":"method","name":"_reduce_606","children":[],"call":[" yyerror ","result sexp_type == ","result sexp_type ","val [] "," s line ","lit line "," s "," wrap ","val []  sexp_type == "," s line  sexp_type == ","val []  sexp_type "," s line  sexp_type "," wrap  line "]}," Ruby20Parser _reduce_601":{"type":"method","name":"_reduce_601","children":[],"call":["(str \"&\") to_sym "," env []= "," env ","val [] to_sym ","val [] "," s line "," lexer lineno "," lexer "," s "]}," Ruby20Parser _reduce_597":{"type":"method","name":"_reduce_597","children":[],"call":[" assignable ","val [] to_sym ","val [] "," s "]}," RubyLexer ruby27plus?":{"type":"method","name":"ruby27plus?","children":[],"call":[" parser class version >= "," parser class version "," parser class "," parser "]}," RubyLexer process_dots":{"type":"method","name":"process_dots","children":[],"call":[" result ","tokens [] "," expr_beg? "," ruby27plus? "," is_beg? ","text == "," parser in_argdef "," parser "," lex_state= ","  is_beg? ? "]}," RubyLexer expr_beg?":{"type":"method","name":"expr_beg?","children":[],"call":[" lex_state =~ "," lex_state "]}," Ruby30Parser _reduce_none":{"type":"method","name":"_reduce_none","children":[],"call":["val [] "]}," Ruby30Parser _reduce_655":{"type":"method","name":"_reduce_655","children":[],"call":[" s line "," s "," end_args "," in_argdef= "]}," Ruby30Parser _reduce_654":{"type":"method","name":"_reduce_654","children":[],"call":[" yyerrok "," debug "," assignable ","val [] "]}," Ruby30Parser _reduce_651":{"type":"method","name":"_reduce_651","children":[],"call":[" yyerrok ","result line "," gettable ","Sexp  === "," raise ","val inspect ","val first "," lexer command_start= "," lexer "," lexer lex_state= "," gettable  line "]}," Ruby30Parser _reduce_625":{"type":"method","name":"_reduce_625","children":[],"call":[" s line "," s ","arg line "," s arg line  ","arg arg line  "]}," Ruby30Parser _reduce_624":{"type":"method","name":"_reduce_624","children":[],"call":[" s line ","sym line "," s ","sym sexp_type= "]}," Ruby30Parser _reduce_623":{"type":"method","name":"_reduce_623","children":[],"call":[" s line "," s ","label to_sym "," lexer lineno "," lexer "]}," Ruby30Parser _reduce_622":{"type":"method","name":"_reduce_622","children":[],"call":[" s line ","v1 line "," s "," yyerror ","result sexp_type == ","result sexp_type ","val [] ","id to_sym "," wrap "," s line  sexp_type == ","val []  sexp_type == "," wrap  sexp_type == "," s line  sexp_type ","val []  sexp_type "," wrap  sexp_type "]}," Ruby30Parser _reduce_621":{"type":"method","name":"_reduce_621","children":[],"call":["result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] ","val [] dup "," lexer lex_state= "," lexer "," s line "," s ","id to_sym "," wrap "," s line  sexp_type= "," wrap  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "]}," Ruby30Parser _reduce_618":{"type":"method","name":"_reduce_618","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","val [] "," lexer lex_state= "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," lexer lex_state "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "]}," Ruby30Parser _reduce_617":{"type":"method","name":"_reduce_617","children":[],"call":[" yyerror ","result sexp_type == ","result sexp_type ","val [] ","(str \"&\") to_sym "," env []= "," env ","val [] to_sym "," s line ","str line "," s "," lexer lex_strterm= "," lexer ","val []  sexp_type == ","(str \"&\") to_sym  sexp_type == "," s line  sexp_type == ","val []  sexp_type ","(str \"&\") to_sym  sexp_type "," s line  sexp_type "]}," Ruby30Parser _reduce_616":{"type":"method","name":"_reduce_616","children":[],"call":[" lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm "," wrap ","val [] "]}," Ruby30Parser _reduce_614":{"type":"method","name":"_reduce_614","children":[],"call":[" env []= "," env "," literal_concat "," wrap ","val [] "]}," Ruby30Parser _reduce_613":{"type":"method","name":"_reduce_613","children":[],"call":["val [] "," assignable ","val [] to_sym "," raise ","stmt inspect "," debug "," s line "," s ","stmt sexp_type "," lexer lex_state= "," lexer "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "]}," Ruby30Parser _reduce_612":{"type":"method","name":"_reduce_612","children":[],"call":["(str \"&\") to_sym "," env []= "," env ","val [] to_sym ","val [] "," literal_concat "," lexer lex_state= "," lexer "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," lexer lex_state "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "]}," Ruby30Parser _reduce_609":{"type":"method","name":"_reduce_609","children":[],"call":[" env []= "," env "," s line ","opt line "," s "," +@ "," prev_value_to_lineno ","_values last "," new_string "," s  prev_value_to_lineno  ","opt  prev_value_to_lineno  "," prev_value_to_ prev_value_to_lineno no "]}," Ruby30Parser _reduce_608":{"type":"method","name":"_reduce_608","children":[],"call":[" assignable ","val [] to_sym ","val [] ","result << ","val [] dup << "," new_qsym_list_entry ","val [] dup "," literal_concat ","val [] dup <<  << "," literal_concat  << "]}," Ruby30Parser _reduce_605":{"type":"method","name":"_reduce_605","children":[],"call":[" block_append ","val [] "," assignable "," new_qword_list "]}," Ruby30Parser _reduce_604":{"type":"method","name":"_reduce_604","children":[],"call":[" s line ","opt line "," s "," env []= "," env ","list line ","result line_max= "," literal_concat "," s line  line_max= ","list line  line_max= "," literal_concat  line_max= "]}," Ruby30Parser _reduce_603":{"type":"method","name":"_reduce_603","children":[],"call":["result << "," assignable ","val [] to_sym ","val [] "," s line "," s ","result line_max= "," +@ "," prev_value_to_lineno ","_values last "," s line  << "," s  prev_value_to_lineno  "," s line  line_max= ","result  prev_value_to_lineno _max= "," prev_value_to_ prev_value_to_lineno no "]}," Ruby30Parser _reduce_602":{"type":"method","name":"_reduce_602","children":[],"call":[" s line ","optblk line "," s ","list line ","result line_max= ","val [] dup << "," new_qsym_list_entry ","val [] dup ","val [] "," s line  line_max= ","list line  line_max= ","val [] dup <<  line_max= "]}," Ruby30Parser _reduce_601":{"type":"method","name":"_reduce_601","children":[],"call":[" assignable ","val [] "," s line "," s ","result line_max= "," new_qsym_list "," assignable  line_max= "," s line  line_max= "," new_qsym_list  line_max= "]}," Ruby30Parser _reduce_600":{"type":"method","name":"_reduce_600","children":[],"call":[" assignable ","val [] "," args ","list dup << "," new_symbol_list_entry ","list dup ","val [] dup << "," new_qword_list_entry ","val [] dup "]}," Ruby30Parser _reduce_599":{"type":"method","name":"_reduce_599","children":[],"call":[" new_symbol_list "," new_qword_list "]}," Ruby30Parser _reduce_598":{"type":"method","name":"_reduce_598","children":[],"call":[" assignable ","val [] to_sym ","val [] ","list << ","item last ","list line ","result line_max= ","list <<  line_max= ","list line  line_max= "]}," Ruby30Parser _reduce_595":{"type":"method","name":"_reduce_595","children":[],"call":[" args "," s line "," s "," env []= "," env ","label to_sym ","result line_max= "," args  line_max= "," s line  line_max= "]}," Ruby30Parser _reduce_593":{"type":"method","name":"_reduce_593","children":[],"call":["list << ","item last "," s line "," s "," env []= "," env ","label to_sym "," new_word_list "," new_symbol_list "]}," Ruby30Parser _reduce_591":{"type":"method","name":"_reduce_591","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym ","result << ","list line ","list sexp_type == ","list sexp_type ","result line_max= "," s line  << "," s line  line_max= "]}," Ruby30Parser _reduce_590":{"type":"method","name":"_reduce_590","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym "," raise ","val inspect "," debug20 "," lexer lineno "," lexer "," new_regexp "," literal_concat ","val [] "]}," Ruby30Parser _reduce_589":{"type":"method","name":"_reduce_589","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym ","val [] "," new_xstring "]}," Ruby30Parser _reduce_588":{"type":"method","name":"_reduce_588","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym "," new_string ","val [] dup << "," new_word_list_entry ","val [] dup ","val [] "]}," Ruby30Parser _reduce_586":{"type":"method","name":"_reduce_586","children":[],"call":["result << "," s line ","list line "," s ","list sexp_type == ","list sexp_type "," env []= "," env ","val [] to_sym ","val [] "," literal_concat ","result line_max= "," s line  << "," literal_concat  << ","list line  << "," s line  line_max= "," literal_concat  line_max= ","list line  line_max= "]}," Ruby30Parser _reduce_585":{"type":"method","name":"_reduce_585","children":[],"call":[" raise ","val inspect "," debug20 "," s line "," lexer lineno "," lexer "," s ","result line_max= "," s line  line_max= "]}," Ruby30Parser _reduce_584":{"type":"method","name":"_reduce_584","children":[],"call":["val [] "," yyerror "," debug "," new_regexp "]}," Ruby30Parser _reduce_581":{"type":"method","name":"_reduce_581","children":[],"call":[" env []= "," env ","val [] to_sym ","val [] "," yyerror "," s line "," s ","str line "," dedent ","func =~ "," dedent  line "]}," Ruby30Parser _reduce_579":{"type":"method","name":"_reduce_579","children":[],"call":[" yyerror "," args "," s line "," s "]}," Ruby30Parser _reduce_578":{"type":"method","name":"_reduce_578","children":[],"call":[" yyerror "," args "," debug "]}," Ruby30Parser _reduce_577":{"type":"method","name":"_reduce_577","children":[],"call":[" yyerror "," args ","val [] "," s ","str value ","str sexp_type == ","str sexp_type "," s  value "," s  sexp_type == "," s  sexp_type "]}," Ruby30Parser _reduce_576":{"type":"method","name":"_reduce_576","children":[],"call":[" yyerror "," args "]}," Ruby30Parser _reduce_575":{"type":"method","name":"_reduce_575","children":[],"call":[" args "," s line "," s "]}," Ruby30Parser _reduce_574":{"type":"method","name":"_reduce_574","children":[],"call":[" args "," s line ","arg line "," s "]}," Ruby30Parser _reduce_573":{"type":"method","name":"_reduce_573","children":[],"call":[" args "," s line "," s "]}," Ruby30Parser _reduce_572":{"type":"method","name":"_reduce_572","children":[],"call":[" args ","result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s line ","var line "," s "," args  << "," new_resbody  << "]}," Ruby30Parser _reduce_571":{"type":"method","name":"_reduce_571","children":[],"call":[" args "," s line "," s ","id to_sym "," wrap ","val [] "]}," Ruby30Parser _reduce_570":{"type":"method","name":"_reduce_570","children":[],"call":[" args "," s line "," s ","id to_sym ","lhs line "," s lhs line ine ","lhs line hs lhs line ine "]}," Ruby30Parser _reduce_569":{"type":"method","name":"_reduce_569","children":[],"call":[" args "," s line "," s ","id to_sym "," wrap ","val [] "]}," Ruby30Parser _reduce_568":{"type":"method","name":"_reduce_568","children":[],"call":[" args "," s line "," s ","id to_sym "," wrap ","val [] ","arg line "]}," Ruby30Parser _reduce_567":{"type":"method","name":"_reduce_567","children":[],"call":[" args "," s line "," s ","id to_sym "," wrap ","val [] "]}," Ruby30Parser _reduce_566":{"type":"method","name":"_reduce_566","children":[],"call":[" args ","result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s line ","var line "," s "," args  << "," new_resbody  << "]}," Ruby30Parser _reduce_565":{"type":"method","name":"_reduce_565","children":[],"call":[" args "," wrap ","val [] "]}," Ruby30Parser _reduce_564":{"type":"method","name":"_reduce_564","children":[],"call":[" args "," ary_to_pat ","val [] "," s line "," s ","id to_sym ","lhs line ","valhs line  [] "," s lhs line ine ","lhs line hs lhs line ine "]}," Ruby30Parser _reduce_563":{"type":"method","name":"_reduce_563","children":[],"call":[" args ","val [] "," ary_to_pat "," wrap "]}," Ruby30Parser _reduce_562":{"type":"method","name":"_reduce_562","children":[],"call":[" args "," ary_to_pat ","val [] "," wrap "]}," Ruby30Parser _reduce_561":{"type":"method","name":"_reduce_561","children":[],"call":[" args "," ary_to_pat ","val [] "," wrap "]}," Ruby30Parser _reduce_560":{"type":"method","name":"_reduce_560","children":[],"call":[" args "]}," Ruby30Parser _reduce_559":{"type":"method","name":"_reduce_559","children":[],"call":["val [] "," args "]}," Ruby30Parser _reduce_557":{"type":"method","name":"_reduce_557","children":[],"call":[" args "," lexer lex_state "," lexer "," in_kwarg= "," in_kwarg "," ary_to_pat ","val [] "]}," Ruby30Parser _reduce_556":{"type":"method","name":"_reduce_556","children":[],"call":[" args "," lexer command_start= "," lexer "," lexer lex_state= "," s line ","v1 line "," s "," ary_to_pat ","val [] "]}," Ruby30Parser _reduce_555":{"type":"method","name":"_reduce_555","children":[],"call":[" args "," lexer command_start= "," lexer "," lexer lex_state= "," s line ","v1 line "," s "," ary_to_pat ","val [] "]}," Ruby30Parser _reduce_554":{"type":"method","name":"_reduce_554","children":[],"call":[" lexer command_start= "," lexer "," lexer lex_state= "," in_kwarg= ","val [] "]}," Ruby30Parser _reduce_553":{"type":"method","name":"_reduce_553","children":[],"call":[" lexer lex_state "," lexer "," in_kwarg= "," in_kwarg "]}," Ruby30Parser _reduce_552":{"type":"method","name":"_reduce_552","children":[],"call":[" lexer command_start= "," lexer "," lexer lex_state= ","val [] "]}," Ruby30Parser _reduce_551":{"type":"method","name":"_reduce_551","children":[],"call":[" lexer command_start= "," lexer "," lexer lex_state= "," s line ","v1 line "," s "]}," Ruby30Parser _reduce_550":{"type":"method","name":"_reduce_550","children":[],"call":["val [] "," s line "," lexer lineno "," lexer "," s ","v1 line "]}," Ruby30Parser _reduce_549":{"type":"method","name":"_reduce_549","children":[],"call":[" lexer command_start= "," lexer "," lexer lex_state= "," s line "," lexer lineno "," s ","val [] ","lhs line "," value_expr ","v1 line "," value_expr  line "]}," Ruby30Parser _reduce_548":{"type":"method","name":"_reduce_548","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","val [] "," debug20 "," assignable ","lhs line "," value_expr "," value_expr  line "]}," Ruby30Parser _reduce_547":{"type":"method","name":"_reduce_547","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","val [] "," assignable "]}," Ruby30Parser _reduce_546":{"type":"method","name":"_reduce_546","children":[],"call":[" debug20 "," assignable ","val [] "," gettable ","Sexp  === "]}," Ruby30Parser _reduce_545":{"type":"method","name":"_reduce_545","children":[],"call":[" assignable ","val [] "," gettable ","Sexp  === "," s line ","v1 line "," s "]}," Ruby30Parser _reduce_544":{"type":"method","name":"_reduce_544","children":[],"call":[" gettable ","Sexp  === ","val [] "," s line "," s "," lexer lineno "," lexer ","v1 line "," gettab lexer lineno e ","va lexer lineno  [] "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer ","v1  lexer lineno ine "]}," Ruby30Parser _reduce_543":{"type":"method","name":"_reduce_543","children":[],"call":[" gettable ","Sexp  === ","val [] "," s line "," lexer lineno "," lexer "," s ","lhs line "," value_expr "," value_expr  line "]}," Ruby30Parser _reduce_542":{"type":"method","name":"_reduce_542","children":[],"call":[" s line "," s "," lexer lineno "," lexer "," file "," assignable ","id to_sym ","lhs line "," value_expr "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "," fi lexer lineno e "," assignab lexer lineno e "," lexer lineno hs  lexer lineno ine "," value_expr  line "," va lexer lineno ue_expr "]}," Ruby30Parser _reduce_541":{"type":"method","name":"_reduce_541","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","id to_sym "," wrap ","val [] "]}," Ruby30Parser _reduce_540":{"type":"method","name":"_reduce_540","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," file ","lhs line "," debug "," assignable ","lhs value ","lhs sexp_type "]}," Ruby30Parser _reduce_539":{"type":"method","name":"_reduce_539","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","lhs line "]}," Ruby30Parser _reduce_538":{"type":"method","name":"_reduce_538","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","kwarg concat ","kw sexp_body "]}," Ruby30Parser _reduce_537":{"type":"method","name":"_reduce_537","children":[],"call":[" s line "," lexer lineno "," lexer "," s "]}," Ruby30Parser _reduce_536":{"type":"method","name":"_reduce_536","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," new_hash_pattern_tail ","rest line "," assignable ","id to_sym "]}," Ruby30Parser _reduce_526":{"type":"method","name":"_reduce_526","children":[],"call":["val [] -@ ","val [] "," debug20 "," s line ","result line "," s ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," lexer lineno "," lexer "," lexer lex_state= "," new_array_pattern_tail ","expr line ","expr sexp_type == ","expr sexp_type ","val [] -@  line "," s line  line "," new_array_pattern_tail  line ","val [] -@  last to_sym "," s line  last to_sym "," new_array_pattern_tail  last to_sym ","val [] -@  last "," s line  last "," new_array_pattern_tail  last ","val [] -@  sexp_type= "," s line  sexp_type= "," new_array_pattern_tail  sexp_type= ","val [] -@  sexp_type "," s line  sexp_type "," new_array_pattern_tail  sexp_type "," s line  sexp_type == "]}," Ruby30Parser _reduce_524":{"type":"method","name":"_reduce_524","children":[],"call":[" debug20 "," s line ","result line "," s ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," lexer lineno "," lexer "," lexer lex_state= ","head line ","tail sexp_body ","head sexp_body "," s line  line "," s  line "," s line  last to_sym "," s  last to_sym "," s line  last "," s  last "," s line  sexp_type= "," s  sexp_type= "," s line  sexp_type "," s  sexp_type "]}," Ruby30Parser _reduce_519":{"type":"method","name":"_reduce_519","children":[],"call":["val [] to_sym ","val [] ","result line ","head line "," new_array_pattern_tail ","id to_sym ","val [] to_sym  line "," new_array_pattern_tail  line "]}," Ruby30Parser _reduce_518":{"type":"method","name":"_reduce_518","children":[],"call":["val [] to_sym ","val [] "," lexer lex_state= "," lexer "," s line "," lexer lineno "," s ","result line ","head line "," new_array_pattern_tail ","id to_sym ","tail sexp_body ","head sexp_body ","val [] to_sym  line "," s line  line "," new_array_pattern_tail  line "," s  line "]}," Ruby30Parser _reduce_516":{"type":"method","name":"_reduce_516","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","val [] to_sym ","val [] "," new_array_pattern_tail "]}," Ruby30Parser _reduce_515":{"type":"method","name":"_reduce_515","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","val [] to_sym ","val [] "," raise ","stmt inspect "," debug20 ","stmt sexp_type "," lexer lex_state= "," lexer cond pop "," lexer cond "," lexer cmdarg pop "," lexer cmdarg "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," new_array_pattern_tail line ","expr line "," new_array_pattern_tail ","head line "]}," Ruby30Parser _reduce_514":{"type":"method","name":"_reduce_514","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","val [] to_sym ","val [] "," lexer lex_state= "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," lexer lex_state "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "," pop_pktbl "," new_array_pattern_tail line ","expr line "," new_array_pattern_tail "]}," Ruby30Parser _reduce_513":{"type":"method","name":"_reduce_513","children":[],"call":[" raise ","stmt inspect "," debug20 "," s line "," s ","stmt sexp_type "," lexer lex_state= "," lexer "," lexer cond pop "," lexer cond "," lexer cmdarg pop "," lexer cmdarg "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= ","str line "," push_pktbl ","result line ","head line "," new_array_pattern_tail ","id to_sym "," s line  line "," new_array_pattern_tail  line "]}," Ruby30Parser _reduce_512":{"type":"method","name":"_reduce_512","children":[],"call":[" lexer lex_state= "," lexer "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," lexer lineno "," lexer lex_state "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "," new_hash_pattern "," new_hash_pattern_tail ","result line ","head line "," new_array_pattern_tail ","id to_sym "," new_hash_pattern_ new_hash_pattern_tail  "," lexer lex_strterm  line "," new_hash_pattern  line "," new_array_pattern_tail  line "," new_array_pattern_ new_hash_pattern_tail  "]}," Ruby30Parser _reduce_511":{"type":"method","name":"_reduce_511","children":[],"call":[" s line ","str line "," s "," lexer lex_strterm= "," lexer "," new_string "," new_hash_pattern ","kwargs line "," in_kwarg= "," pop_pktbl ","result line ","head line "," new_array_pattern_tail "," array_pat_concat "," s line  line "," new_string  line "," new_hash_pattern  line "," new_array_pattern_tail  line "]}," Ruby30Parser _reduce_510":{"type":"method","name":"_reduce_510","children":[],"call":[" lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm "," literal_concat "," in_kwarg= "," in_kwarg "," push_pktbl "," new_array_pattern_tail "]}," Ruby30Parser _reduce_509":{"type":"method","name":"_reduce_509","children":[],"call":[" new_string "," s line "," s "," new_array_pattern_tail line ","expr line "," new_array_pattern_tail "]}," Ruby30Parser _reduce_508":{"type":"method","name":"_reduce_508","children":[],"call":[" literal_concat "," new_find_pattern "," pop_pktbl "]}," Ruby30Parser _reduce_507":{"type":"method","name":"_reduce_507","children":[],"call":[" new_array_pattern ","pat line "," push_pktbl "]}," Ruby30Parser _reduce_506":{"type":"method","name":"_reduce_506","children":[],"call":[" literal_concat "," new_array_pattern ","const line "," new_array_pattern_tail "," new_hash_pattern "," new_hash_pattern_tail "," new_array_pattern_ new_array_pattern_tail  "," new_array_pattern_ new_hash_pattern_tail  "," new_hash_pattern_ new_array_pattern_tail  "," new_hash_pattern_ new_hash_pattern_tail  "]}," Ruby30Parser _reduce_505":{"type":"method","name":"_reduce_505","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," new_hash_pattern ","const line ","kwargs line "," in_kwarg= "," pop_pktbl "]}," Ruby30Parser _reduce_504":{"type":"method","name":"_reduce_504","children":[],"call":[" literal_concat ","val [] dup << "," new_qsym_list_entry ","val [] dup ","val [] "," new_find_pattern line ","const line "," new_find_pattern "," pop_pktbl "," in_kwarg= "," in_kwarg "," push_pktbl "]}," Ruby30Parser _reduce_503":{"type":"method","name":"_reduce_503","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," new_qsym_list "," new_array_pattern ","const line "," pop_pktbl "]}," Ruby30Parser _reduce_502":{"type":"method","name":"_reduce_502","children":[],"call":["val [] dup << "," new_qsym_list_entry ","val [] dup ","val [] "," new_qword_list_entry "," new_array_pattern ","const line "," new_array_pattern_tail "," new_find_pattern "," new_array_pattern_ new_array_pattern_tail  "]}," Ruby30Parser _reduce_501":{"type":"method","name":"_reduce_501","children":[],"call":[" new_qsym_list "," new_qword_list "," new_hash_pattern ","lhs line "," pop_pktbl "," new_array_pattern ","pat line "]}," Ruby30Parser _reduce_500":{"type":"method","name":"_reduce_500","children":[],"call":["val [] dup << "," new_qword_list_entry ","val [] dup ","val [] "," new_find_pattern line ","const line "," new_find_pattern "," pop_pktbl "," new_array_pattern "," new_array_pattern_tail "," new_array_pattern_ new_array_pattern_tail  "]}," Ruby30Parser _reduce_499":{"type":"method","name":"_reduce_499","children":[],"call":[" new_qword_list "," s line "," lexer lineno "," lexer "," s "," new_array_pattern ","lhs line "," pop_pktbl "," new_hash_pattern ","const line "]}," Ruby30Parser _reduce_498":{"type":"method","name":"_reduce_498","children":[],"call":["val [] "," new_find_pattern line ","const line "," new_find_pattern "," pop_pktbl "]}," Ruby30Parser _reduce_497":{"type":"method","name":"_reduce_497","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," push_pktbl "," new_array_pattern ","const line "," pop_pktbl "]}," Ruby30Parser _reduce_496":{"type":"method","name":"_reduce_496","children":[],"call":["val [] ","list dup << "," new_symbol_list_entry ","list dup "," push_pktbl "," new_array_pattern ","const line "," new_array_pattern_tail "," new_array_pattern_ new_array_pattern_tail  "]}," Ruby30Parser _reduce_495":{"type":"method","name":"_reduce_495","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," new_symbol_list line "," new_symbol_list "," new_hash_pattern ","lhs line "," pop_pktbl "]}," Ruby30Parser _reduce_494":{"type":"method","name":"_reduce_494","children":[],"call":["list dup << "," new_symbol_list_entry ","list dup ","list line= "," s line ","lhs line "," s "," new_find_pattern line ","const line "," new_find_pattern "," pop_pktbl "]}," Ruby30Parser _reduce_493":{"type":"method","name":"_reduce_493","children":[],"call":[" new_symbol_list line "," lexer lineno "," lexer "," new_symbol_list "," new_array_pattern ","lhs line "," pop_pktbl "]}," Ruby30Parser _reduce_492":{"type":"method","name":"_reduce_492","children":[],"call":["list line= "," s line "," lexer lineno "," lexer "," s "," new_assign ","var line "," env []= "," env ","var last "]}," Ruby30Parser _reduce_491":{"type":"method","name":"_reduce_491","children":[],"call":[" lexer lineno "," lexer "," literal_concat ","val [] "," push_pktbl "]}," Ruby30Parser _reduce_490":{"type":"method","name":"_reduce_490","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," new_hash_pattern ","kwargs line "," push_pktbl "]}," Ruby30Parser _reduce_489":{"type":"method","name":"_reduce_489","children":[],"call":[" literal_concat ","val [] ","val [] dup << "," new_word_list_entry ","val [] dup "," new_array_pattern ","args line "]}," Ruby30Parser _reduce_487":{"type":"method","name":"_reduce_487","children":[],"call":["val [] dup << "," new_word_list_entry ","val [] dup ","val [] "," new_array_pattern ","expr line "]}," Ruby30Parser _reduce_486":{"type":"method","name":"_reduce_486","children":[],"call":[" new_word_list "," s line "," lexer lineno "," lexer "," s "," new_array_pattern ","expr line "," new_array_pattern_tail "," new_assign ","var line "," env []= "," env ","var last "," new_array_pattern_ new_array_pattern_tail  "]}," Ruby30Parser _reduce_485":{"type":"method","name":"_reduce_485","children":[],"call":["val [] "," new_regexp "]}," Ruby30Parser _reduce_484":{"type":"method","name":"_reduce_484","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," new_xstring ","body line "," remove_begin "," new_hash_pattern ","kwargs line "," remove_begin  line "]}," Ruby30Parser _reduce_483":{"type":"method","name":"_reduce_483","children":[],"call":[" new_regexp "," new_string "," s line ","body line "," s "," remove_begin "," new_array_pattern ","args line "," remove_begin  line "]}," Ruby30Parser _reduce_482":{"type":"method","name":"_reduce_482","children":[],"call":[" new_xstring "," dedent ","func =~ "," new_find_pattern "," new_x dedent ing "]}," Ruby30Parser _reduce_481":{"type":"method","name":"_reduce_481","children":[],"call":[" new_string "," literal_concat ","val [] "," new_array_pattern ","expr line "]}," Ruby30Parser _reduce_480":{"type":"method","name":"_reduce_480","children":[],"call":[" dedent ","func =~ "," new_array_pattern ","expr line "," new_array_pattern_tail "," new_array_pattern_ new_array_pattern_tail  "]}," Ruby30Parser _reduce_479":{"type":"method","name":"_reduce_479","children":[],"call":[" literal_concat ","val [] "," debug20 "," new_in "]}," Ruby30Parser _reduce_477":{"type":"method","name":"_reduce_477","children":[],"call":[" debug20 "," push_pktbl "," push_pvtbl "," in_kwarg= "," in_kwarg "," lexer command_start= "," lexer "," lexer lex_state= ","EXPR_BEG  | "," s line ","body line "," s "," remove_begin "," remove_begin  line "]}," Ruby30Parser _reduce_476":{"type":"method","name":"_reduce_476","children":[],"call":[" s ","str value ","str sexp_type == ","str sexp_type ","result line= ","val [] "," lexer lineno "," lexer "," s  value "," s  sexp_type == "," s  sexp_type "," s  line= ","result  lexer lineno = "," lexer  lexer lineno no "]}," Ruby30Parser _reduce_474":{"type":"method","name":"_reduce_474","children":[],"call":["result line= "," s ","val [] "," lexer lineno "," lexer ","result << ","result line "," new_when "," s  line= "," new_when  line= ","result  lexer lineno = "," lexer  lexer lineno no "," s  << "," new_when  << "," s  line "," new_when  line ","result  lexer lineno  "]}," Ruby30Parser _reduce_473":{"type":"method","name":"_reduce_473","children":[],"call":["result line= "," s ","val [] "," lexer lineno "," lexer "," s line "," new_in "," s  line= "," lexer lineno  line= "," new_in  line= ","result  lexer lineno = "," lexer  lexer lineno no "," s  lexer lineno  "]}," Ruby30Parser _reduce_471":{"type":"method","name":"_reduce_471","children":[],"call":[" s line "," s ","val [] "," list_append "," push_pktbl "," push_pvtbl "," in_kwarg= "," in_kwarg "," lexer command_start= "," lexer "," lexer lex_state= ","EXPR_BEG  | "]}," Ruby30Parser _reduce_469":{"type":"method","name":"_reduce_469","children":[],"call":["val [] "," s line ","arg line "," s "]}," Ruby30Parser _reduce_466":{"type":"method","name":"_reduce_466","children":[],"call":[" s line ","arg line "," s ","result << "," new_resbody ","klasses line ","klasses << "," new_assign ","var line "," lexer lineno "," lexer "," env extend "," env "," list_append "," s line  << "," new_resbody  << "," lexer lineno  << "," list_append  << "]}," Ruby30Parser _reduce_465":{"type":"method","name":"_reduce_465","children":[],"call":[" lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," env unextend "," env "," new_brace_body "," s line ","arg line "," s "]}," Ruby30Parser _reduce_464":{"type":"method","name":"_reduce_464","children":[],"call":["result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s line ","var line "," s "," lexer cmdarg store "," lexer cmdarg "," lexer ","arg line "," new_resbody  << "," lexer cmdarg store  << "," s line  << "]}," Ruby30Parser _reduce_461":{"type":"method","name":"_reduce_461","children":[],"call":["result << ","val [] ","result line= "," new_when "," env unextend "," env "," lexer cmdarg pop "," lexer cmdarg "," lexer "," new_do_body "," lexer lineno "," env extend "," new_when  << "," new_do_body  << "," lexer lineno  << "," new_when  line= "," new_do_body  line= "," lexer lineno  line= "]}," Ruby30Parser _reduce_460":{"type":"method","name":"_reduce_460","children":[],"call":[" lexer lineno "," lexer "," lexer cmdarg push "," lexer cmdarg "," env unextend "," env ","result line "," lexer cmdarg pop "," lexer cmdarg restore "," new_brace_body "," lexer lineno  line "," new_brace_body  line "]}," Ruby30Parser _reduce_459":{"type":"method","name":"_reduce_459","children":[],"call":[" env unextend "," env "," lexer cmdarg pop "," lexer cmdarg "," lexer "," new_do_body "," lexer lineno "," env extend "," lexer cmdarg store "]}," Ruby30Parser _reduce_458":{"type":"method","name":"_reduce_458","children":[],"call":[" lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg pop "," lexer cmdarg restore "," env unextend "," env "," new_brace_body "," new_aref "," lexer lineno "," env extend "]}," Ruby30Parser _reduce_457":{"type":"method","name":"_reduce_457","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," lexer cmdarg store "," lexer cmdarg "," s line "," s "," env unextend ","result line "," lexer lineno  line "," lexer cmdarg store  line "," s line  line "]}," Ruby30Parser _reduce_456":{"type":"method","name":"_reduce_456","children":[],"call":[" lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," env unextend "," env "," new_brace_body "," lexer lineno "," env extend "," new_super ","val [] "]}," Ruby30Parser _reduce_455":{"type":"method","name":"_reduce_455","children":[],"call":[" lexer cmdarg store "," lexer cmdarg "," lexer "," env unextend "," env ","result line= "," new_call ","val [] ","result line "," lexer cmdarg store  line= "," new_call  line= "," lexer cmdarg store  line "," new_call  line "]}," Ruby30Parser _reduce_454":{"type":"method","name":"_reduce_454","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," new_call ","val [] "]}," Ruby30Parser _reduce_453":{"type":"method","name":"_reduce_453","children":[],"call":[" env unextend "," env ","result line= "," new_call ","id to_sym "," new_aref "," new_call  line= "," new_aref  line= "]}," Ruby30Parser _reduce_452":{"type":"method","name":"_reduce_452","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," new_call ","op to_sym "," s line "," s "]}," Ruby30Parser _reduce_451":{"type":"method","name":"_reduce_451","children":[],"call":[" env unextend "," env ","result line= "," new_aref "," new_call ","op to_sym ","result line_max= "," new_super ","val [] "," new_aref  line= "," new_call  line= "," new_super  line= "," new_aref  line_max= "," new_call  line_max= "," new_super  line_max= "]}," Ruby30Parser _reduce_450":{"type":"method","name":"_reduce_450","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," s line "," s ","call concat ","args sexp_body ","result line_max= ","args line_max "," new_call ","val [] "," lexer lineno  line_max= "," s line  line_max= ","call concat  line_max= "," new_call  line_max= "]}," Ruby30Parser _reduce_449":{"type":"method","name":"_reduce_449","children":[],"call":[" new_aref "," new_super ","val [] ","iter2 insert "," new_call ","name to_sym "," new_ new_call  "]}," Ruby30Parser _reduce_448":{"type":"method","name":"_reduce_448","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," new_call ","val [] ","iter2 insert ","name to_sym ","id to_sym "," new_ new_call  "]}," Ruby30Parser _reduce_447":{"type":"method","name":"_reduce_447","children":[],"call":[" new_super ","val [] "," new_call ","id to_sym ","op to_sym "]}," Ruby30Parser _reduce_446":{"type":"method","name":"_reduce_446","children":[],"call":[" new_call ","val [] ","val [] to_sym ","result insert "," invert_block_call "," inverted? "," syntax_error ","cmd block_pass? ","result line_max= ","op to_sym "," invert_block_call  [] "," invert_block_call  [] to_sym "," new_call  insert "," new_call  line_max= "]}," Ruby30Parser _reduce_445":{"type":"method","name":"_reduce_445","children":[],"call":[" new_call ","val [] ","val [] to_sym ","iter line ","result line_max= ","args line_max ","call concat ","args sexp_body "," new_call  line_max= ","iter line  line_max= "]}," Ruby30Parser _reduce_444":{"type":"method","name":"_reduce_444","children":[],"call":[" new_call ","val [] to_sym ","val [] ","iter2 insert ","name to_sym "," new_ new_call  "]}," Ruby30Parser _reduce_443":{"type":"method","name":"_reduce_443","children":[],"call":[" new_call ","val [] ","val [] to_sym ","result line ","call concat ","args sexp_body ","iter2 insert ","name to_sym "," new_ new_call  "," new_call  line ","call concat  line ","val []  line "," new_call  concat "]}," Ruby30Parser _reduce_442":{"type":"method","name":"_reduce_442","children":[],"call":[" new_call ","val [] ","val [] to_sym "," lexer lineno "," lexer ","result == "," s ","id to_sym "," new_call  == "," lexer lineno  == ","val []  == "]}," Ruby30Parser _reduce_441":{"type":"method","name":"_reduce_441","children":[],"call":["result line ","call concat ","args sexp_body ","iter2 insert "," new_call ","name to_sym "," args ","result insert "," invert_block_call "," inverted? "," syntax_error ","cmd block_pass? ","call concat  line "," args  line "," new_call  concat "," new_ new_call  ","call concat  insert "," args  insert "," invert_block_ new_call  "]}," Ruby30Parser _reduce_440":{"type":"method","name":"_reduce_440","children":[],"call":[" lexer lineno "," lexer ","iter2 insert "," new_call ","name to_sym "," env unextend "," env ","result line "," new_iter "," s line "," s "," lexer cmdarg pop "," lexer cmdarg "," lexer lpar_beg= ","iter line "," new_ new_call  "," new_ s line  "," lexer lineno  line "," new_iter  line ","iter line  line "]}," Ruby30Parser _reduce_439":{"type":"method","name":"_reduce_439","children":[],"call":["iter2 insert "," new_call ","name to_sym ","val [] ","val [] to_sym "," lexer cmdarg push "," lexer cmdarg "," lexer "," new_ new_call  "]}," Ruby30Parser _reduce_438":{"type":"method","name":"_reduce_438","children":[],"call":["iter2 insert "," new_call ","name to_sym ","result insert "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? ","val [] "," lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," lexer lineno "," env extend "," env "," new_ new_call  ","val []  insert "," invert_block_ new_call  "," invert_block_call  [] block_pass? "," invert_block_call  [] "]}," Ruby30Parser _reduce_437":{"type":"method","name":"_reduce_437","children":[],"call":[" new_call ","val [] ","val [] to_sym ","iter line ","result == "," s "," in_argdef= "," new_call  == ","iter line  == ","val []  == "]}," Ruby30Parser _reduce_436":{"type":"method","name":"_reduce_436","children":[],"call":["result insert "," invert_block_call "," inverted? "," syntax_error ","val [] block_pass? ","val [] "," s line "," s ","id to_sym "," wrap "," args "," in_argdef= ","val []  insert "," s line  insert "," wrap  insert "," args  insert "," invert_block_call  [] block_pass? "," invert_block_call  [] "]}," Ruby30Parser _reduce_435":{"type":"method","name":"_reduce_435","children":[],"call":["iter line ","val [] "," args "," env unextend "," env ","result line "," new_iter "," s line "," s "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer lpar_beg= ","iter line  line ","val []  line "," args  line "," new_iter  line "]}," Ruby30Parser _reduce_434":{"type":"method","name":"_reduce_434","children":[],"call":["val [] ","result == "," s "," args "," lexer cmdarg push "," lexer cmdarg "," lexer ","val []  == "," args  == "]}," Ruby30Parser _reduce_433":{"type":"method","name":"_reduce_433","children":[],"call":["val [] "," args "," lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," env extend "," env "]}," Ruby30Parser _reduce_432":{"type":"method","name":"_reduce_432","children":[],"call":["result == "," s ","val [] "," env unextend "," env ","result line= "," new_iter "," s line "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer lpar_beg= ","val []  == "," new_iter  == ","val []  line= "," new_iter  line= "]}," Ruby30Parser _reduce_431":{"type":"method","name":"_reduce_431","children":[],"call":[" args "," lexer cmdarg push "," lexer cmdarg "," lexer "," wrap ","val [] "]}," Ruby30Parser _reduce_430":{"type":"method","name":"_reduce_430","children":[],"call":[" env unextend "," env ","result line= "," new_iter "," s line "," s "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer lpar_beg= "," lexer paren_nest "," lexer lpar_beg "," lexer lineno "," env extend "," args "," new_iter  line= "," s line  line= "," args  line= "]}," Ruby30Parser _reduce_429":{"type":"method","name":"_reduce_429","children":[],"call":[" lexer cmdarg push "," lexer cmdarg "," lexer "," args "]}," Ruby30Parser _reduce_428":{"type":"method","name":"_reduce_428","children":[],"call":[" lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," lexer lineno "," env extend "," env "," s line "," s ","id to_sym "," lexer command_start= "," args "," lexer  lexer lineno no "," s  lexer lineno  "]}," Ruby30Parser _reduce_426":{"type":"method","name":"_reduce_426","children":[],"call":[" s line "," s ","id to_sym "," lexer lineno "," lexer "," args "," in_argdef= "," s  lexer lineno  "," lexer  lexer lineno no "]}," Ruby30Parser _reduce_425":{"type":"method","name":"_reduce_425","children":[],"call":[" args "," s line "," s "]}," Ruby30Parser _reduce_424":{"type":"method","name":"_reduce_424","children":[],"call":[" args "," in_argdef= "]}," Ruby30Parser _reduce_423":{"type":"method","name":"_reduce_423","children":[],"call":[" args "," lexer command_start= "," lexer "]}," Ruby30Parser _reduce_421":{"type":"method","name":"_reduce_421","children":[],"call":[" args "]}," Ruby30Parser _reduce_420":{"type":"method","name":"_reduce_420","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," lexer command_start= "," args "]}," Ruby30Parser _reduce_419":{"type":"method","name":"_reduce_419","children":[],"call":[" args "]}," Ruby30Parser _reduce_418":{"type":"method","name":"_reduce_418","children":[],"call":[" lexer command_start= "," lexer "," args "]}," Ruby30Parser _reduce_417":{"type":"method","name":"_reduce_417","children":[],"call":[" args ","arg << "]}," Ruby30Parser _reduce_416":{"type":"method","name":"_reduce_416","children":[],"call":[" args "]}," Ruby30Parser _reduce_415":{"type":"method","name":"_reduce_415","children":[],"call":[" args "]}," Ruby30Parser _reduce_414":{"type":"method","name":"_reduce_414","children":[],"call":[" args "]}," Ruby30Parser _reduce_413":{"type":"method","name":"_reduce_413","children":[],"call":[" args "]}," Ruby30Parser _reduce_412":{"type":"method","name":"_reduce_412","children":[],"call":[" args ","arg << "]}," Ruby30Parser _reduce_411":{"type":"method","name":"_reduce_411","children":[],"call":[" args "," s "]}," Ruby30Parser _reduce_410":{"type":"method","name":"_reduce_410","children":[],"call":[" args "]}," Ruby30Parser _reduce_409":{"type":"method","name":"_reduce_409","children":[],"call":[" args "," args << "]}," Ruby30Parser _reduce_408":{"type":"method","name":"_reduce_408","children":[],"call":[" args ","result line "," call_args "," args  line "," call_args  line "]}," Ruby30Parser _reduce_407":{"type":"method","name":"_reduce_407","children":[],"call":[" args << "," args "," call_args "]}," Ruby30Parser _reduce_406":{"type":"method","name":"_reduce_406","children":[],"call":[" args "," call_args "," s "]}," Ruby30Parser _reduce_405":{"type":"method","name":"_reduce_405","children":[],"call":[" args "," call_args "]}," Ruby30Parser _reduce_404":{"type":"method","name":"_reduce_404","children":[],"call":[" args "]}," Ruby30Parser _reduce_403":{"type":"method","name":"_reduce_403","children":[],"call":[" args ","result line "," call_args "," args  line "," call_args  line "]}," Ruby30Parser _reduce_402":{"type":"method","name":"_reduce_402","children":[],"call":[" args ","result line "," lexer lineno "," lexer "," call_args "," args  line "," call_args  line "]}," Ruby30Parser _reduce_400":{"type":"method","name":"_reduce_400","children":[],"call":[" args "," call_args "," block_var "]}," Ruby30Parser _reduce_399":{"type":"method","name":"_reduce_399","children":[],"call":["result line "," call_args "," lexer lineno "," lexer "," block_var "," call_args  line "," block_var  line ","result  lexer lineno  "," lexer  lexer lineno no "]}," Ruby30Parser _reduce_398":{"type":"method","name":"_reduce_398","children":[],"call":[" call_args "," block_var "]}," Ruby30Parser _reduce_397":{"type":"method","name":"_reduce_397","children":[],"call":[" call_args "," block_var "," args line "," args "]}," Ruby30Parser _reduce_396":{"type":"method","name":"_reduce_396","children":[],"call":[" call_args "," block_var ","result line "," args ","(str \"*\") to_sym "," call_args  line "," block_var  line "," args  line "]}," Ruby30Parser _reduce_395":{"type":"method","name":"_reduce_395","children":[],"call":[" block_var "," list_append ","val [] "]}," Ruby30Parser _reduce_394":{"type":"method","name":"_reduce_394","children":[],"call":[" block_var "," s line "," lexer lineno "," lexer "," s "]}," Ruby30Parser _reduce_393":{"type":"method","name":"_reduce_393","children":[],"call":[" block_var ","val [] "]}," Ruby30Parser _reduce_392":{"type":"method","name":"_reduce_392","children":[],"call":[" block_var "]}," Ruby30Parser _reduce_391":{"type":"method","name":"_reduce_391","children":[],"call":[" block_var ","(str \"*\") to_sym ","val [] delete_at ","val [] ","val [] [] nil? ","val [] [] "]}," Ruby30Parser _reduce_390":{"type":"method","name":"_reduce_390","children":[],"call":[" block_var ","(str \"*\") to_sym "," list_append ","arg last ","arg sexp_type == ","arg sexp_type ","arg last  last ","arg last  sexp_type == ","arg last  sexp_type "]}," Ruby30Parser _reduce_389":{"type":"method","name":"_reduce_389","children":[],"call":[" block_var ","(str \"*\") to_sym ","val [] "," s line "," s ","arg last ","arg sexp_type == ","arg sexp_type ","arg line "," s arg line  ","arg last  last ","arg last  sexp_type == ","arg last  sexp_type ","arg last  line ","arg arg line  "]}," Ruby30Parser _reduce_388":{"type":"method","name":"_reduce_388","children":[],"call":[" block_var ","(str \"*\") to_sym "," list_append ","val [] "]}," Ruby30Parser _reduce_387":{"type":"method","name":"_reduce_387","children":[],"call":[" block_var "," s line "," lexer lineno "," lexer "," s "]}," Ruby30Parser _reduce_386":{"type":"method","name":"_reduce_386","children":[],"call":[" list_append ","val [] ","val [] delete_at ","val [] [] nil? ","val [] [] "]}," Ruby30Parser _reduce_385":{"type":"method","name":"_reduce_385","children":[],"call":[" s line "," lexer lineno "," lexer "," s "]}," Ruby30Parser _reduce_384":{"type":"method","name":"_reduce_384","children":[],"call":["val [] ","val [] delete_at ","val [] [] nil? ","val [] [] "]}," Ruby30Parser _reduce_382":{"type":"method","name":"_reduce_382","children":[],"call":["val [] delete_at ","val [] ","val [] [] nil? ","val [] [] "," s line "," s "]}," Ruby30Parser _reduce_380":{"type":"method","name":"_reduce_380","children":[],"call":["val [] "," s line "," s "]}," Ruby30Parser _reduce_378":{"type":"method","name":"_reduce_378","children":[],"call":[" s line "," s "]}," Ruby30Parser _reduce_352":{"type":"method","name":"_reduce_352","children":[],"call":[" value_expr ","val [] "," s line "," s "," lexer lineno "," lexer "]}," Ruby30Parser _reduce_351":{"type":"method","name":"_reduce_351","children":[],"call":[" s line "," s "," lexer ignore_body_comments "," lexer "," env unextend "," env "," new_sclass "," in_single "," in_def= "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," new_defs ","val insert ","val [] pop ","val [] ","val prepend ","val shift "]}," Ruby30Parser _reduce_350":{"type":"method","name":"_reduce_350","children":[],"call":[" s line "," s "," env extend "," env "," in_single= "," in_single "," lexer ignore_body_comments "," lexer "," in_def= "," env unextend "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," new_defn ","val insert ","val first pop ","val first "]}," Ruby30Parser _reduce_349":{"type":"method","name":"_reduce_349","children":[],"call":[" s line "," s "," lexer comments "," lexer "," in_single "," in_def= "," env unextend "," env "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," new_defs "," in_def "," lexer ignore_body_comments "," new_module "]}," Ruby30Parser _reduce_348":{"type":"method","name":"_reduce_348","children":[],"call":[" s line "," s "," comments push "," lexer comments "," lexer "," comments "," lexer lex_state= ","EXPR_ENDFN  | "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," env extend "," env "," in_def= "," in_single "," lexer lineno "," in_def "," yyerror "," in_single > "]}," Ruby30Parser _reduce_347":{"type":"method","name":"_reduce_347","children":[],"call":[" lexer comments "," lexer "," in_single "," in_def= "," env unextend "," env "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," new_defs "," lexer lex_state= "," lexer ignore_body_comments "," new_class "," new_sclass "]}," Ruby30Parser _reduce_346":{"type":"method","name":"_reduce_346","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "," lexer lex_state= ","EXPR_ENDFN  | "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," env extend "," env "," in_def= "," in_single "," lexer lineno "," in_def "," env unextend "," lexer cmdarg pop "," lexer cond pop "," new_defn ","val [] "," yyerror "," in_single > "," in_single= "," val [] = "," val []  "]}," Ruby30Parser _reduce_345":{"type":"method","name":"_reduce_345","children":[],"call":[" lexer lex_state= "," lexer "," lexer lineno "," in_def= "," in_def "]}," Ruby30Parser _reduce_344":{"type":"method","name":"_reduce_344","children":[],"call":[" lexer comments "," lexer "," in_def= "," env unextend "," env "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," new_defn ","val [] "," comments push "," comments "," lexer cond push "," lexer cmdarg push "," env extend "," in_def "," new_for "," lexer ignore_body_comments "," new_class "," val [] = "," val []  "]}," Ruby30Parser _reduce_343":{"type":"method","name":"_reduce_343","children":[],"call":[" lexer lineno "," lexer "," lexer comments "," env unextend "," env "," new_module "," new_case "," env extend "," yyerror "," in_single > "," in_single "," in_def "]}," Ruby30Parser _reduce_342":{"type":"method","name":"_reduce_342","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," env extend "," env "," in_def= "," in_def "," yyerror "," in_single > "," in_single "," new_case "," new_for "]}," Ruby30Parser _reduce_341":{"type":"method","name":"_reduce_341","children":[],"call":[" lexer comments "," lexer "," env unextend "," env "," new_module "," lexer lineno "," new_case "]}," Ruby30Parser _reduce_340":{"type":"method","name":"_reduce_340","children":[],"call":[" env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," lexer "," comments "," env unextend "," new_sclass "," new_until "," new_case "]}," Ruby30Parser _reduce_339":{"type":"method","name":"_reduce_339","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," in_single= "," in_single "," new_while "," new_case "]}," Ruby30Parser _reduce_338":{"type":"method","name":"_reduce_338","children":[],"call":[" lexer comments "," lexer "," env unextend "," env "," new_sclass "," in_def= "," in_def "," new_if "," new_until "]}," Ruby30Parser _reduce_337":{"type":"method","name":"_reduce_337","children":[],"call":[" env extend "," env "," in_single= "," in_single "," lexer lineno "," lexer "," new_if "," new_while "]}," Ruby30Parser _reduce_336":{"type":"method","name":"_reduce_336","children":[],"call":[" in_def= "," in_def "," lexer comments "," lexer "," env unextend "," env "," new_class "," new_if "]}," Ruby30Parser _reduce_335":{"type":"method","name":"_reduce_335","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," comments ","iter insert "," block_dup_check ","val [] "," new_if "]}," Ruby30Parser _reduce_334":{"type":"method","name":"_reduce_334","children":[],"call":[" lexer comments "," lexer "," env unextend "," env "," new_class "," lexer lineno "]}," Ruby30Parser _reduce_333":{"type":"method","name":"_reduce_333","children":[],"call":[" env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," comments push "," lexer comments "," lexer "," comments "," new_for ","iter insert "," block_dup_check ","val [] "]}," Ruby30Parser _reduce_332":{"type":"method","name":"_reduce_332","children":[],"call":[" lexer lineno "," lexer "," new_case "," debug "]}," Ruby30Parser _reduce_331":{"type":"method","name":"_reduce_331","children":[],"call":[" new_for "," new_case "," new_call ","iter insert "]}," Ruby30Parser _reduce_330":{"type":"method","name":"_reduce_330","children":[],"call":[" new_case "," new_until "," s line "," s "," debug "]}," Ruby30Parser _reduce_329":{"type":"method","name":"_reduce_329","children":[],"call":[" new_case "," new_while "," new_yield "," new_yield line "," new_call "]}," Ruby30Parser _reduce_328":{"type":"method","name":"_reduce_328","children":[],"call":[" new_until "," new_if "," new_yield "," new_yield line "," s line "," s "]}," Ruby30Parser _reduce_327":{"type":"method","name":"_reduce_327","children":[],"call":[" new_while "," new_if "," new_yield ","val [] "," new_yield line "]}," Ruby30Parser _reduce_326":{"type":"method","name":"_reduce_326","children":[],"call":[" new_if ","val [] "," s line "," s "," new_yield line "," new_yield "]}," Ruby30Parser _reduce_325":{"type":"method","name":"_reduce_325","children":[],"call":[" new_if ","iter insert "," block_dup_check ","val [] "," new_hash "," new_yield line "," new_yield "]}," Ruby30Parser _reduce_324":{"type":"method","name":"_reduce_324","children":[],"call":["val [] "," lexer lineno "," lexer "," s line "," s "]}," Ruby30Parser _reduce_323":{"type":"method","name":"_reduce_323","children":[],"call":["iter insert "," block_dup_check ","val [] ","result line ","result sexp_type= "," s ","result line_max= "," new_hash "," new_hash  line "," new_hash  sexp_type= "," new_hash  line_max= "]}," Ruby30Parser _reduce_321":{"type":"method","name":"_reduce_321","children":[],"call":["iter insert "," new_call "," s line "," s ","id to_sym "," wrap ","val [] ","result line_max= ","result line ","result sexp_type= "," new_call  line_max= "," s line  line_max= "," wrap  line_max= "," new_call  line "," s line  line "," wrap  line "," new_call  sexp_type= "," s line  sexp_type= "," wrap  sexp_type= "]}," Ruby30Parser _reduce_320":{"type":"method","name":"_reduce_320","children":[],"call":[" debug20 "," s line "," s ","expr line ","id to_sym "," wrap ","val [] "]}," Ruby30Parser _reduce_319":{"type":"method","name":"_reduce_319","children":[],"call":[" new_call "," new_yield ","result paren= "," s line "," lexer lineno "," lexer "," s ","expr line ","id to_sym "," new_call  paren= "," new_yield  paren= "," s line  paren= "]}," Ruby30Parser _reduce_318":{"type":"method","name":"_reduce_318","children":[],"call":[" s line "," s "," new_yield ","result paren= "," s line  paren= "," new_yield  paren= "]}," Ruby30Parser _reduce_317":{"type":"method","name":"_reduce_317","children":[],"call":[" new_yield ","val [] "," lexer lex_state= "," lexer "]}," Ruby30Parser _reduce_316":{"type":"method","name":"_reduce_316","children":[],"call":[" new_yield "," s line "," s "," lexer lex_state= "," lexer "]}," Ruby30Parser _reduce_315":{"type":"method","name":"_reduce_315","children":[],"call":[" new_yield ","val [] "," new_hash "," lexer lineno "," lexer "," lexer lex_state= "," s line "," s "]}," Ruby30Parser _reduce_314":{"type":"method","name":"_reduce_314","children":[],"call":[" s line "," s "," lexer lineno "," lexer "," new_begin "," lexer cmdarg pop "," lexer cmdarg "," lexer lex_state= "]}," Ruby30Parser _reduce_313":{"type":"method","name":"_reduce_313","children":[],"call":[" new_hash ","result line ","result sexp_type= "," s "," lexer lineno "," lexer "," lexer cmdarg push "," lexer cmdarg "," new_begin "," lexer cmdarg pop "," new_hash  line "," lexer lineno  line "," new_begin  line "," new_hash  sexp_type= "," lexer lineno  sexp_type= "," new_begin  sexp_type= "]}," Ruby30Parser _reduce_312":{"type":"method","name":"_reduce_312","children":[],"call":[" lexer lineno "," lexer ","result line "," new_call ","msg to_sym "," lexer cmdarg push "," lexer cmdarg "," lexer lineno  line "," new_call  line "]}," Ruby30Parser _reduce_311":{"type":"method","name":"_reduce_311","children":[],"call":["result line ","result sexp_type= "," s "," s line "," lexer lineno "," lexer ","id to_sym "," new_call ","msg to_sym "," s line  line "," new_call  line "," s line  sexp_type= "," new_call  sexp_type= "]}," Ruby30Parser _reduce_310":{"type":"method","name":"_reduce_310","children":[],"call":[" lexer lineno "," lexer "," s line ","expr line "," s ","id to_sym "]}," Ruby30Parser _reduce_309":{"type":"method","name":"_reduce_309","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","id to_sym ","result paren= "," s line  paren= "]}," Ruby30Parser _reduce_308":{"type":"method","name":"_reduce_308","children":[],"call":[" s line ","expr line "," s ","id to_sym "]}," Ruby30Parser _reduce_307":{"type":"method","name":"_reduce_307","children":[],"call":["result paren= "," s line "," lexer lineno "," lexer "," s "," lexer lex_state= "]}," Ruby30Parser _reduce_306":{"type":"method","name":"_reduce_306","children":[],"call":[" s line "," s "]}," Ruby30Parser _reduce_305":{"type":"method","name":"_reduce_305","children":[],"call":[" lexer lex_state= "," lexer "," lexer lineno "]}," Ruby30Parser _reduce_304":{"type":"method","name":"_reduce_304","children":[],"call":[" s line "," s "," new_begin "," lexer cmdarg pop "," lexer cmdarg "," lexer "]}," Ruby30Parser _reduce_303":{"type":"method","name":"_reduce_303","children":[],"call":[" lexer lineno "," lexer "," lexer lex_state= "," lexer cmdarg push "," lexer cmdarg "]}," Ruby30Parser _reduce_302":{"type":"method","name":"_reduce_302","children":[],"call":[" new_begin "," lexer cmdarg pop "," lexer cmdarg "," lexer "," new_call ","msg to_sym "]}," Ruby30Parser _reduce_301":{"type":"method","name":"_reduce_301","children":[],"call":[" lexer lineno "," lexer "," lexer cmdarg push "," lexer cmdarg "," s line ","arg line "," s "]}," Ruby30Parser _reduce_300":{"type":"method","name":"_reduce_300","children":[],"call":[" new_call ","msg to_sym "," arg_concat "," s line ","arg line "," s "]}," Ruby30Parser _reduce_289":{"type":"method","name":"_reduce_289","children":[],"call":[" s line ","arg line "," s ","val [] << ","val [] "," lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg pop ","(sym :tLBRACE_ARG) include? "]}," Ruby30Parser _reduce_288":{"type":"method","name":"_reduce_288","children":[],"call":[" arg_concat "," new_masgn_arg ","val [] "," lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg pop ","(sym :tLPAREN) include? "," last_token_type first "," last_token_type ","(sym :tLBRACE_ARG) include? "]}," Ruby30Parser _reduce_287":{"type":"method","name":"_reduce_287","children":[],"call":["val [] << ","val [] "," new_masgn_arg "," call_args "," lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg pop ","(sym :tLPAREN) include? "," last_token_type first "," last_token_type "]}," Ruby30Parser _reduce_286":{"type":"method","name":"_reduce_286","children":[],"call":[" new_masgn_arg ","val [] "," list_append "," s line "," s "," lexer lineno "," lexer "," call_args "," array_to_hash "," s  lexer lineno  "," lexer  lexer lineno no "]}," Ruby30Parser _reduce_285":{"type":"method","name":"_reduce_285","children":[],"call":[" new_masgn_arg ","val [] "," list_append "," call_args "," array_to_hash "]}," Ruby30Parser _reduce_284":{"type":"method","name":"_reduce_284","children":[],"call":[" list_append "," s line "," s "," lexer lineno "," lexer ","arg line "," call_args ","val [] "," array_to_hash "," s  lexer lineno  "," lexer  lexer lineno no ","arg  lexer lineno  "]}," Ruby30Parser _reduce_283":{"type":"method","name":"_reduce_283","children":[],"call":[" list_append "," s line "," s "," lexer lineno "," lexer ","arg line "," call_args "," warning "]}," Ruby30Parser _reduce_282":{"type":"method","name":"_reduce_282","children":[],"call":[" s line ","arg line "," s "," args "," array_to_hash ","val [] "," call_args "," warning "]}," Ruby30Parser _reduce_281":{"type":"method","name":"_reduce_281","children":[],"call":[" s line "," s "," lexer lineno "," lexer ","arg line ","val [] "," args "," array_to_hash "]}," Ruby30Parser _reduce_279":{"type":"method","name":"_reduce_279","children":[],"call":["val [] "," lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg pop ","(sym :tLBRACE_ARG) include? "," args "]}," Ruby30Parser _reduce_278":{"type":"method","name":"_reduce_278","children":[],"call":[" s line ","arg line "," s "," lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg pop ","(sym :tLPAREN) include? "," last_token_type first "," last_token_type "]}," Ruby30Parser _reduce_277":{"type":"method","name":"_reduce_277","children":[],"call":[" lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg pop ","(sym :tLBRACE_ARG) include? "," call_args "]}," Ruby30Parser _reduce_276":{"type":"method","name":"_reduce_276","children":[],"call":[" lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg pop ","(sym :tLPAREN) include? "," last_token_type first "," last_token_type "," call_args ","val [] "," array_to_hash "]}," Ruby30Parser _reduce_275":{"type":"method","name":"_reduce_275","children":[],"call":[" call_args ","val [] "," array_to_hash "," yyerror "," lexer is_local_id "," lexer "]}," Ruby30Parser _reduce_274":{"type":"method","name":"_reduce_274","children":[],"call":[" call_args ","val [] "," array_to_hash "," yyerror "," lexer is_local_id "," lexer "]}," Ruby30Parser _reduce_273":{"type":"method","name":"_reduce_273","children":[],"call":[" call_args ","val [] "," array_to_hash "," warning ","result line_max= "," yyerror "," lexer is_local_id "," lexer "," call_args  line_max= "]}," Ruby30Parser _reduce_272":{"type":"method","name":"_reduce_272","children":[],"call":[" call_args "," args "," array_to_hash ","val [] "," new_rescue "," new_resbody "," s line "," s "," remove_begin "," value_expr ","result line_max= "," new_ remove_begin  "," new_res value_expr  "," call_args  line_max= "," args  line_max= "," new_rescue  line_max= "]}," Ruby30Parser _reduce_271":{"type":"method","name":"_reduce_271","children":[],"call":[" call_args "," warning "," args "," array_to_hash ","val [] "," new_rescue "," new_resbody "," s line "," s "," remove_begin "," value_expr "," new_ remove_begin  "," new_res value_expr  "]}," Ruby30Parser _reduce_270":{"type":"method","name":"_reduce_270","children":[],"call":[" args "," array_to_hash ","val [] "]}," Ruby30Parser _reduce_269":{"type":"method","name":"_reduce_269","children":[],"call":[" args "," array_to_hash ","val [] "]}," Ruby30Parser _reduce_268":{"type":"method","name":"_reduce_268","children":[],"call":[" args ","val [] "," array_to_hash "]}," Ruby30Parser _reduce_263":{"type":"method","name":"_reduce_263","children":[],"call":[" new_call "," argl ","op to_sym "]}," Ruby30Parser _reduce_262":{"type":"method","name":"_reduce_262","children":[],"call":[" new_rescue "," new_resbody "," s line "," s "," remove_begin "," value_expr "," new_ remove_begin  "," new_res value_expr  "]}," Ruby30Parser _reduce_260":{"type":"method","name":"_reduce_260","children":[],"call":[" args "," array_to_hash ","val [] "]}," Ruby30Parser _reduce_259":{"type":"method","name":"_reduce_259","children":[],"call":[" args "," array_to_hash ","val [] "]}," Ruby30Parser _reduce_258":{"type":"method","name":"_reduce_258","children":[],"call":[" args ","val [] "," endless_method_name "," local_pop "," s line "," s "," new_rescue "," new_resbody "," new_endless_defs "]}," Ruby30Parser _reduce_256":{"type":"method","name":"_reduce_256","children":[],"call":[" value_expr ","val [] "," endless_method_name "," local_pop "," s line "," s "," new_rescue "," new_resbody "," new_endless_defn "," new_endless_defs "]}," Ruby30Parser _reduce_255":{"type":"method","name":"_reduce_255","children":[],"call":[" new_call "," argl ","op to_sym "," warn "," endless_method_name "," local_pop "," s line "," s "," new_endless_defn "]}," Ruby30Parser _reduce_254":{"type":"method","name":"_reduce_254","children":[],"call":[" new_call "," argl ","op to_sym "," s line ","c line "," s "," new_endless_defn "]}," Ruby30Parser _reduce_248":{"type":"method","name":"_reduce_248","children":[],"call":[" s line ","c line "," s "," new_call "," value_expr ","val [] "," argl ","val []= "]}," Ruby30Parser _reduce_247":{"type":"method","name":"_reduce_247","children":[],"call":[" s line "," s ","result line ","arg line "," new_call "," value_expr ","val [] "," s line  line "," new_call  line "]}," Ruby30Parser _reduce_246":{"type":"method","name":"_reduce_246","children":[],"call":[" logical_op ","val [] "," s line ","lhs line "," s "," new_match ","result line ","arg line "," new_call "," logical_op  line "," s line  line "," new_call  line "]}," Ruby30Parser _reduce_245":{"type":"method","name":"_reduce_245","children":[],"call":[" logical_op ","val [] "," new_match "," s line ","lhs line "," s "]}," Ruby30Parser _reduce_244":{"type":"method","name":"_reduce_244","children":[],"call":[" new_call "," argl ","val [] ","val []= "," value_expr "," new_match "]}," Ruby30Parser _reduce_243":{"type":"method","name":"_reduce_243","children":[],"call":[" new_call "," argl ","val [] ","val []= "," value_expr "]}," Ruby30Parser _reduce_242":{"type":"method","name":"_reduce_242","children":[],"call":[" new_call "," value_expr ","val [] "," argl "]}," Ruby30Parser _reduce_241":{"type":"method","name":"_reduce_241","children":[],"call":["result line ","arg line "," new_call "," argl ","val [] "," new_call  line "]}," Ruby30Parser _reduce_240":{"type":"method","name":"_reduce_240","children":[],"call":[" s line ","lhs line "," s "," new_match "," new_call "," argl ","val [] "]}," Ruby30Parser _reduce_239":{"type":"method","name":"_reduce_239","children":[],"call":[" new_match "," new_call "," argl ","val [] "]}," Ruby30Parser _reduce_238":{"type":"method","name":"_reduce_238","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby30Parser _reduce_237":{"type":"method","name":"_reduce_237","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby30Parser _reduce_236":{"type":"method","name":"_reduce_236","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby30Parser _reduce_234":{"type":"method","name":"_reduce_234","children":[],"call":[" new_call "," argl ","val [] "," s line "," s "," wrap "]}," Ruby30Parser _reduce_233":{"type":"method","name":"_reduce_233","children":[],"call":[" new_call "," argl ","val [] "," wrap "]}," Ruby30Parser _reduce_232":{"type":"method","name":"_reduce_232","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby30Parser _reduce_231":{"type":"method","name":"_reduce_231","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby30Parser _reduce_230":{"type":"method","name":"_reduce_230","children":[],"call":[" new_call ","val [] "," argl "]}," Ruby30Parser _reduce_229":{"type":"method","name":"_reduce_229","children":[],"call":[" new_call ","val [] "," argl "]}," Ruby30Parser _reduce_228":{"type":"method","name":"_reduce_228","children":[],"call":[" new_call "," argl ","val [] "," s line "," lexer lineno "," lexer "," s "]}," Ruby30Parser _reduce_227":{"type":"method","name":"_reduce_227","children":[],"call":[" new_call "," argl ","val [] "," s line ","v2 line "," s "]}," Ruby30Parser _reduce_226":{"type":"method","name":"_reduce_226","children":[],"call":[" new_call "," argl ","val [] "," s line ","v2 line "," s "]}," Ruby30Parser _reduce_225":{"type":"method","name":"_reduce_225","children":[],"call":[" new_call "," argl ","val [] "," s line ","v1 line "," s ","v2 line "]}," Ruby30Parser _reduce_224":{"type":"method","name":"_reduce_224","children":[],"call":[" new_call "," argl ","val [] "," s line ","v1 line "," s "]}," Ruby30Parser _reduce_223":{"type":"method","name":"_reduce_223","children":[],"call":[" new_call "," argl ","val [] "," s line ","v1 line "," s ","v2 last ","v1 last ","Integer  === ","v2 sexp_type == ","v2 sexp_type ","v1 sexp_type == ","v1 sexp_type "]}," Ruby30Parser _reduce_222":{"type":"method","name":"_reduce_222","children":[],"call":[" new_call "," argl ","val [] "," s line ","v1 line "," s ","v2 last ","v1 last ","Integer  === ","v2 sexp_type == ","v2 sexp_type ","v1 sexp_type == ","v1 sexp_type "]}," Ruby30Parser _reduce_221":{"type":"method","name":"_reduce_221","children":[],"call":[" s line ","v2 line "," s "," backref_assign_error "," new_op_asgn ","v1 line ","v2 last ","v1 last ","Integer  === ","v2 sexp_type == ","v2 sexp_type ","v1 sexp_type == ","v1 sexp_type ","val [] "," new_op_ new_op_asgn  "]}," Ruby30Parser _reduce_220":{"type":"method","name":"_reduce_220","children":[],"call":[" s line ","v2 line "," s "," new_const_op_asgn ","lhs to_sym "," wrap "," backref_assign_error "," new_op_asgn "," new_const_op_ new_op_asgn  "," s line  to_sym "," wrap  to_sym "," new_op_ new_op_asgn  "]}," Ruby30Parser _reduce_219":{"type":"method","name":"_reduce_219","children":[],"call":[" s line ","v1 line "," s "," new_const_op_asgn ","lhs1 line ","lhs2 to_sym "," wrap "," s line 1 line "," wrap 1 line "," s line 2 to_sym "," wrap 2 to_sym "]}," Ruby30Parser _reduce_218":{"type":"method","name":"_reduce_218","children":[],"call":[" s line ","v1 line "," s ","lhs line ","op to_sym ","id to_sym "," new_const_op_asgn ","lhs1 line ","lhs2 to_sym "," s line  line "," s line 1 line "," s line 2 to_sym "]}," Ruby30Parser _reduce_217":{"type":"method","name":"_reduce_217","children":[],"call":[" s line ","v1 line "," s ","v2 last ","v1 last ","Integer  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type ","val [] "," new_op_asgn2 ","lhs line ","op to_sym ","id to_sym "]}," Ruby30Parser _reduce_216":{"type":"method","name":"_reduce_216","children":[],"call":[" s line ","v1 line "," s ","v2 last ","v1 last ","Integer  === ","v2 node_type == ","v2 node_type ","v1 node_type == ","v1 node_type ","val [] "," new_op_asgn2 "]}," Ruby30Parser _reduce_215":{"type":"method","name":"_reduce_215","children":[],"call":[" backref_assign_error "," new_op_asgn "," new_op_asgn1 "," new_op_asgn2 "," new_op_ new_op_asgn  "," new_op_ new_op_asgn 1 "," new_op_ new_op_asgn 2 "]}," Ruby30Parser _reduce_214":{"type":"method","name":"_reduce_214","children":[],"call":[" new_const_op_asgn "," s line "," s ","lhs to_sym "," new_op_asgn "," new_op_asgn1 "," s line  to_sym "]}," Ruby30Parser _reduce_213":{"type":"method","name":"_reduce_213","children":[],"call":[" lexer lineno "," lexer "," new_assign ","val [] "," new_op_asgn "]}," Ruby30Parser _reduce_212":{"type":"method","name":"_reduce_212","children":[],"call":[" new_const_op_asgn "," s line ","lhs1 line "," s ","lhs2 to_sym "," new_assign ","val [] "," s line 1 line "," s line 2 to_sym "]}," Ruby30Parser _reduce_211":{"type":"method","name":"_reduce_211","children":[],"call":[" s line ","lhs line "," s ","op to_sym ","id to_sym "]}," Ruby30Parser _reduce_210":{"type":"method","name":"_reduce_210","children":[],"call":[" new_op_asgn2 "]}," Ruby30Parser _reduce_209":{"type":"method","name":"_reduce_209","children":[],"call":[" new_op_asgn2 "]}," Ruby30Parser _reduce_208":{"type":"method","name":"_reduce_208","children":[],"call":[" new_op_asgn1 "]}," Ruby30Parser _reduce_207":{"type":"method","name":"_reduce_207","children":[],"call":[" new_op_asgn "]}," Ruby30Parser _reduce_206":{"type":"method","name":"_reduce_206","children":[],"call":[" new_assign ","val [] "]}," Ruby30Parser _reduce_133":{"type":"method","name":"_reduce_133","children":[],"call":[" new_undef ","val [] "]}," Ruby30Parser _reduce_132":{"type":"method","name":"_reduce_132","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby30Parser _reduce_131":{"type":"method","name":"_reduce_131","children":[],"call":[" new_undef ","val [] ","result line ","pval line "," s ","name to_sym "," new_undef  line "," s  line "]}," Ruby30Parser _reduce_129":{"type":"method","name":"_reduce_129","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","id to_sym ","name to_sym "," wrap ","val [] "]}," Ruby30Parser _reduce_126":{"type":"method","name":"_reduce_126","children":[],"call":[" lexer lex_state= "," lexer "," backref_assign_error ","val [] "," yyerror "]}," Ruby30Parser _reduce_125":{"type":"method","name":"_reduce_125","children":[],"call":["val [] "," lexer lex_state= "," lexer "," s line "," s ","id to_sym "," yyerror "," debug "," in_single > "," in_single "," in_def "," backref_assign_error "]}," Ruby30Parser _reduce_121":{"type":"method","name":"_reduce_121","children":[],"call":["result line ","pval line "," s ","name to_sym "," new_attrasgn "," s  line "," new_attrasgn  line "]}," Ruby30Parser _reduce_120":{"type":"method","name":"_reduce_120","children":[],"call":["val [] to_sym ","val [] "," aryset "," new_attrasgn "]}," Ruby30Parser _reduce_119":{"type":"method","name":"_reduce_119","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","name to_sym "," debug "," assignable "," aryset "]}," Ruby30Parser _reduce_117":{"type":"method","name":"_reduce_117","children":[],"call":[" yyerror "," backref_assign_error "," assignable "]}," Ruby30Parser _reduce_116":{"type":"method","name":"_reduce_116","children":[],"call":[" backref_assign_error ","val [] "," s line "," s ","id to_sym "," yyerror "," debug "," in_single > "," in_single "," in_def "]}," Ruby30Parser _reduce_115":{"type":"method","name":"_reduce_115","children":[],"call":[" s line "," s ","id to_sym "," lexer lineno "," lexer "," yyerror "," debug20 "," in_single > "," in_single "," in_def ","expr line "," debug "," s  lexer lineno ine "," s expr line ine ","  lexer lineno exer  lexer lineno ineno "," expr line exer expr line ineno ","  lexer lineno exer "," expr line exer "," in_sing lexer lineno e > "," in_singexpr line e > "," in_sing lexer lineno e "," in_singexpr line e ","expr  lexer lineno ine ","expr expr line ine "]}," Ruby30Parser _reduce_114":{"type":"method","name":"_reduce_114","children":[],"call":[" s line "," s ","id to_sym ","expr line "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," new_attrasgn "," debug "," s expr line ine ","expr expr line ine "," in_singexpr line e > "," in_singexpr line e "]}," Ruby30Parser _reduce_113":{"type":"method","name":"_reduce_113","children":[],"call":[" new_attrasgn ","val [] "]}," Ruby30Parser _reduce_112":{"type":"method","name":"_reduce_112","children":[],"call":[" new_attrasgn "]}," Ruby30Parser _reduce_111":{"type":"method","name":"_reduce_111","children":[],"call":[" new_attrasgn "," aryset ","val [] "]}," Ruby30Parser _reduce_110":{"type":"method","name":"_reduce_110","children":[],"call":[" aryset "," assignable ","val [] "]}," Ruby30Parser _reduce_109":{"type":"method","name":"_reduce_109","children":[],"call":[" debug20 ","result line= "," assignable ","val [] "," lexer lineno "," lexer "," assignable  line= ","result  lexer lineno = "," lexer  lexer lineno no "]}," Ruby30Parser _reduce_108":{"type":"method","name":"_reduce_108","children":[],"call":["result line= "," assignable ","val [] "," lexer lineno "," lexer "," list_append "," assignable  line= "," list_append  line= ","result  lexer lineno = "," lexer  lexer lineno no "]}," Ruby30Parser _reduce_107":{"type":"method","name":"_reduce_107","children":[],"call":[" backref_assign_error ","val [] "," s line ","item line "," s "," list_append "]}," Ruby30Parser _reduce_106":{"type":"method","name":"_reduce_106","children":[],"call":[" s line "," s ","id to_sym "," lexer lineno "," lexer "," yyerror "," debug20 "," in_single > "," in_single "," in_def ","val [] << ","val [] compact ","val [] ","item line "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "," in_sing lexer lineno e > "," in_sing lexer lineno e ","va lexer lineno  [] << ","va lexer lineno  [] compact ","va lexer lineno  [] ","item  lexer lineno ine "]}," Ruby30Parser _reduce_105":{"type":"method","name":"_reduce_105","children":[],"call":[" s line "," s ","id to_sym ","expr line "," yyerror "," debug20 "," in_single > "," in_single "," in_def ","lhs line ","val [] << ","val [] compact ","val [] "," s expr line ine ","expr expr line ine "," in_singexpr line e > "," in_singexpr line e ","expr line hs expr line ine ","vaexpr line  [] << ","vaexpr line  [] compact ","vaexpr line  [] "]}," Ruby30Parser _reduce_104":{"type":"method","name":"_reduce_104","children":[],"call":[" new_attrasgn ","val [] "," s line ","lhs line "," s "]}," Ruby30Parser _reduce_103":{"type":"method","name":"_reduce_103","children":[],"call":[" new_attrasgn ","val [] "]}," Ruby30Parser _reduce_102":{"type":"method","name":"_reduce_102","children":[],"call":[" new_attrasgn ","val [] "," s line "," s ","post sexp_body ","post line ","vapost line  [] "," s post line ine ","post post line ine "]}," Ruby30Parser _reduce_101":{"type":"method","name":"_reduce_101","children":[],"call":[" aryset ","val [] "," s line "," s "," lexer lineno "," lexer ","post sexp_body ","post line ","  s line set ","va lexer lineno  [] ","vapost line  [] "," s  lexer lineno ine "," s post line ine ","  lexer lineno exer  lexer lineno ineno "," post line exer post line ineno ","  lexer lineno exer "," post line exer ","post  lexer lineno ine ","post post line ine "]}," Ruby30Parser _reduce_100":{"type":"method","name":"_reduce_100","children":[],"call":[" assignable ","val [] "," s line ","ary line "," s ","ary concat ","post sexp_body ","splat line ","node line "," s line  line "," s line  concat "]}," Ruby30Parser _reduce_99":{"type":"method","name":"_reduce_99","children":[],"call":[" assignable ","val [] "," s line "," s ","node line ","ary line ","ary concat ","post sexp_body ","splat line "," assignabnode line e ","vanode line  [] "," s node line ine ","node node line ine "," s line  line ","ary node line ine "," s line  concat ","spnode line at node line ine "]}," Ruby30Parser _reduce_98":{"type":"method","name":"_reduce_98","children":[],"call":[" list_append ","val [] "," s line ","ary line "," s ","ary concat ","post sexp_body ","head line ","node line "," node line ist_append ","vanode line  [] "," s node line ine "," list_append  line "," s line  line ","ary node line ine "," list_append  concat "," s line  concat ","head node line ine ","node node line ine "]}," Ruby30Parser _reduce_97":{"type":"method","name":"_reduce_97","children":[],"call":[" s line ","item line "," s ","head << ","head line ","ary line ","ary concat ","post sexp_body "," list_append "," s head line ine ","item head line ine ","head head line ine ","ary head line ine "," list_append  line "," list_append  concat "," head line ist_append "]}," Ruby30Parser _reduce_96":{"type":"method","name":"_reduce_96","children":[],"call":["val [] << ","val [] compact ","val [] "," s line ","result line "," s ","result concat ","ary2 sexp_body "," list_append ","splat line ","head << ","head line ","vahead line  [] << ","vahead line  [] compact ","vahead line  [] "," s head line ine ","val [] <<  line "," s line  line "," list_append  line ","resuhead line t head line ine ","val [] <<  concat "," s line  concat "," list_append  concat ","resuhead line t concat "," head line ist_append ","sphead line at head line ine ","head head line ine "]}," Ruby30Parser _reduce_95":{"type":"method","name":"_reduce_95","children":[],"call":[" s line ","lhs line "," s ","head line ","head << ","tail line ","result line ","result concat ","ary2 sexp_body "," list_append ","splat line "," s line  line "," list_append  line "," s line  concat "," list_append  concat "]}," Ruby30Parser _reduce_94":{"type":"method","name":"_reduce_94","children":[],"call":["val [] "," s line ","lhs line "," s ","lhs << ","rhs compact ","head line ","head << ","tail line "]}," Ruby30Parser _reduce_92":{"type":"method","name":"_reduce_92","children":[],"call":[" s line "," s ","post sexp_body ","post line ","arg line ","head line "," s post line ine "," s arg line ine ","post post line ine ","post arg line ine ","arg post line ine ","arg arg line ine ","head post line ine ","head arg line ine "]}," Ruby30Parser _reduce_91":{"type":"method","name":"_reduce_91","children":[],"call":[" s line "," s "," lexer lineno "," lexer ","arg line "," s  lexer lineno ine "," s arg line ine ","  lexer lineno exer  lexer lineno ineno "," arg line exer arg line ineno ","  lexer lineno exer "," arg line exer ","arg  lexer lineno ine ","arg arg line ine "]}," Ruby30Parser _reduce_90":{"type":"method","name":"_reduce_90","children":[],"call":[" s line ","ary line "," s ","ary concat ","post sexp_body ","splat line ","node line ","val [] "," s line  line "," s line  concat "]}," Ruby30Parser _reduce_89":{"type":"method","name":"_reduce_89","children":[],"call":[" s line "," s ","node line ","val [] "," s node line ine ","node node line ine ","vanode line  [] "]}," Ruby30Parser _reduce_88":{"type":"method","name":"_reduce_88","children":[],"call":[" s line ","ary line "," s ","ary concat ","post sexp_body "," list_append ","head line "," ret_args ","val [] ","val [] last "," s val [] last  "," list_append  line ","ary val [] last  "," list_append  concat ","head val [] last  "]}," Ruby30Parser _reduce_87":{"type":"method","name":"_reduce_87","children":[],"call":[" s line "," s ","head << ","head line "," ret_args ","val [] ","val [] last "," s head line ine "," s val [] last  ","head head line ine ","head val [] last  ","vahead line  [] ","vahead line  [] head line ast "]}," Ruby30Parser _reduce_86":{"type":"method","name":"_reduce_86","children":[],"call":[" s line ","result line "," s ","result concat ","ary2 sexp_body "," list_append ","splat line "," ret_args ","val [] ","val [] last "," s val [] last  "," s line  line "," list_append  line ","result val [] last  "," s line  concat "," list_append  concat ","splat val [] last  "]}," Ruby30Parser _reduce_85":{"type":"method","name":"_reduce_85","children":[],"call":[" s line ","head line "," s ","head << ","tail line ","result line "," new_yield "," ret_args ","val [] ","val [] last "," s val [] last  ","head val [] last  ","tail val [] last  "," s line  line "," new_yield  line ","result val [] last  "]}," Ruby30Parser _reduce_84":{"type":"method","name":"_reduce_84","children":[],"call":[" s line ","lhs line "," s ","lhs << ","rhs compact "," new_super ","val [] ","result line "," new_yield "," s line  line "," new_super  line "," new_yield  line "]}," Ruby30Parser _reduce_83":{"type":"method","name":"_reduce_83","children":[],"call":[" s line ","head line "," s ","block insert "," block_dup_check "," new_call ","msg to_sym "," new_super ","val [] "," new_ new_call  "]}," Ruby30Parser _reduce_82":{"type":"method","name":"_reduce_82","children":[],"call":[" s line "," s ","arg line ","result line "," new_call ","id to_sym ","block insert "," block_dup_check ","msg to_sym "," s arg line ine ","arg arg line ine "," s line  line "," new_call  line ","resuarg line t arg line ine "," new_caarg line arg line  "," new_ new_call  ","barg line ock insert "," barg line ock_dup_check "]}," Ruby30Parser _reduce_80":{"type":"method","name":"_reduce_80","children":[],"call":["val [] ","result line ","lhs line "," new_call ","op to_sym ","block insert "," block_dup_check ","msg to_sym ","val []  line "," new_call  line "," new_ new_call  "]}," Ruby30Parser _reduce_78":{"type":"method","name":"_reduce_78","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last ","call concat ","args sexp_body ","result insert "," block_dup_check "," s val [] last  "," s line  insert ","call concat  insert "]}," Ruby30Parser _reduce_77":{"type":"method","name":"_reduce_77","children":[],"call":[" s line "," s "," ret_args "," new_call line "," new_call ","msg to_sym ","call concat ","args sexp_body "]}," Ruby30Parser _reduce_76":{"type":"method","name":"_reduce_76","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last ","result line "," new_call line "," new_call ","msg to_sym "," s val [] last  "," s line  line "," new_call line  line ","result val [] last  "," new_call val [] last  "]}," Ruby30Parser _reduce_75":{"type":"method","name":"_reduce_75","children":[],"call":["result line "," new_yield "," lexer lineno "," lexer "," new_yield  line "," lexer lineno  line "]}," Ruby30Parser _reduce_74":{"type":"method","name":"_reduce_74","children":[],"call":[" new_super ","val [] "," new_call line ","blk line "," new_call ","msg to_sym "," lexer lineno "," lexer "]}," Ruby30Parser _reduce_73":{"type":"method","name":"_reduce_73","children":[],"call":["block insert "," block_dup_check "," new_call ","msg to_sym "," new_call line ","blk line "," new_ new_call  "," new_ new_call  line "]}," Ruby30Parser _reduce_72":{"type":"method","name":"_reduce_72","children":[],"call":[" new_call ","val [] ","val [] to_sym "]}," Ruby30Parser _reduce_71":{"type":"method","name":"_reduce_71","children":[],"call":["block insert "," block_dup_check "," new_call ","val [] ","msg to_sym "," new_ new_call  "]}," Ruby30Parser _reduce_70":{"type":"method","name":"_reduce_70","children":[],"call":[" new_call ","op to_sym "]}," Ruby30Parser _reduce_69":{"type":"method","name":"_reduce_69","children":[],"call":["result insert "," block_dup_check ","call concat ","args sexp_body "," lexer cond pop "," lexer cond "," lexer ","call concat  insert "]}," Ruby30Parser _reduce_68":{"type":"method","name":"_reduce_68","children":[],"call":["call concat ","args sexp_body "," lexer cond push "," lexer cond "," lexer "," lexer cond pop "]}," Ruby30Parser _reduce_67":{"type":"method","name":"_reduce_67","children":[],"call":[" new_call line "," lexer lineno "," lexer "," new_call ","msg to_sym "," value_expr ","val [] "," lexer cond push "," lexer cond "]}," Ruby30Parser _reduce_66":{"type":"method","name":"_reduce_66","children":[],"call":["result line= "," in_single "," lexer lex_state= ","EXPR_ENDFN  | "," lexer "," value_expr ","val [] "," value_expr  line= "]}," Ruby30Parser _reduce_65":{"type":"method","name":"_reduce_65","children":[],"call":[" lexer lineno "," lexer "," lexer lex_state= "," in_single ","EXPR_ENDFN  | "]}," Ruby30Parser _reduce_64":{"type":"method","name":"_reduce_64","children":[],"call":[" new_call line ","blk line "," new_call ","msg to_sym "," lexer lex_state= "," lexer "," in_argdef= "]}," Ruby30Parser _reduce_60":{"type":"method","name":"_reduce_60","children":[],"call":[" env extend "," env "," in_kwarg= "," in_kwarg "," lexer command_start= "," lexer "," lexer lex_state= ","EXPR_BEG  | "," new_case ","expr line "," new_in "," value_expr "," env unextend "," value_expr  line "," value_ value_expr  "]}," Ruby30Parser _reduce_59":{"type":"method","name":"_reduce_59","children":[],"call":[" lexer cond pop "," lexer cond "," lexer "," new_case ","rhs line "," new_in "," in_kwarg= "," env unextend "," env "," env extend "," in_kwarg "," lexer command_start= "," lexer lex_state= ","EXPR_BEG  | "," new_in  line "]}," Ruby30Parser _reduce_58":{"type":"method","name":"_reduce_58","children":[],"call":[" lexer cond push "," lexer cond "," lexer "," env extend "," env "," in_kwarg= "," in_kwarg "," lexer command_start= "," lexer lex_state= ","EXPR_BEG  | "," new_case ","rhs line "," new_in "," env unextend "," new_in  line "]}," Ruby30Parser _reduce_57":{"type":"method","name":"_reduce_57","children":[],"call":[" value_expr ","val [] "," new_call line ","cmd line "," new_call "," env extend "," env "," in_kwarg= "," in_kwarg "," lexer command_start= "," lexer "," lexer lex_state= ","EXPR_BEG  | "]}," Ruby30Parser _reduce_55":{"type":"method","name":"_reduce_55","children":[],"call":[" new_call line ","cmd line "," new_call "," logical_op "]}," Ruby30Parser _reduce_54":{"type":"method","name":"_reduce_54","children":[],"call":[" new_call line "," new_call "," logical_op "]}," Ruby30Parser _reduce_53":{"type":"method","name":"_reduce_53","children":[],"call":[" logical_op "]}," Ruby30Parser _reduce_52":{"type":"method","name":"_reduce_52","children":[],"call":[" logical_op "]}," Ruby30Parser _reduce_49":{"type":"method","name":"_reduce_49","children":[],"call":[" new_rescue "," new_resbody "," s line "," s "," value_expr "," backref_assign_error ","val [] "," value_ value_expr  "]}," Ruby30Parser _reduce_48":{"type":"method","name":"_reduce_48","children":[],"call":[" value_expr "," s line "," s ","id to_sym ","lhs2 to_sym "," backref_assign_error ","val [] "]}," Ruby30Parser _reduce_47":{"type":"method","name":"_reduce_47","children":[],"call":[" backref_assign_error ","val [] "," s line "," s ","id to_sym ","lhs2 to_sym "]}," Ruby30Parser _reduce_46":{"type":"method","name":"_reduce_46","children":[],"call":[" s ","op to_sym ","lhs2 to_sym ","result line ","prim line ","result sexp_type= ","call_op == ","op_asgn to_sym ","id to_sym "," s line "," s  line "," s line  line "," s  sexp_type= "," s line  sexp_type= "]}," Ruby30Parser _reduce_45":{"type":"method","name":"_reduce_45","children":[],"call":[" s ","op to_sym ","lhs2 to_sym ","result line ","prim line ","result sexp_type= ","call_op == ","op_asgn to_sym ","id to_sym "," s  line "," s  sexp_type= "]}," Ruby30Parser _reduce_44":{"type":"method","name":"_reduce_44","children":[],"call":["result line= ","val [] line ","val [] ","result sexp_type= ","val [] == "," s ","val [] to_sym "," new_op_asgn1 ","result line ","prim line ","call_op == ","op_asgn to_sym ","id to_sym "," s  line= "," new_op_asgn1  line= "," s  sexp_type= "," new_op_asgn1  sexp_type= "," s  line "," new_op_asgn1  line "]}," Ruby30Parser _reduce_43":{"type":"method","name":"_reduce_43","children":[],"call":["result line= ","val [] line ","val [] ","result sexp_type= ","val [] == "," s ","opasgn to_sym ","id to_sym "," new_op_asgn "," new_op_asgn1 "," s  line= "," new_op_asgn  line= "," new_op_asgn1  line= "," s  sexp_type= "," new_op_asgn  sexp_type= "," new_op_asgn1  sexp_type= "]}," Ruby30Parser _reduce_42":{"type":"method","name":"_reduce_42","children":[],"call":[" new_op_asgn1 "," new_assign ","val [] "," new_op_asgn "]}," Ruby30Parser _reduce_41":{"type":"method","name":"_reduce_41","children":[],"call":[" new_op_asgn "," new_assign ","val [] "]}," Ruby30Parser _reduce_40":{"type":"method","name":"_reduce_40","children":[],"call":[" new_assign ","val [] "," new_masgn "]}," Ruby30Parser _reduce_38":{"type":"method","name":"_reduce_38","children":[],"call":[" new_masgn ","val [] "," new_assign "," s line ","rhs line "," s "," new_rescue "," new_resbody ","resbody line "," new_ new_resbody  "," new_resbody  line "]}," Ruby30Parser _reduce_37":{"type":"method","name":"_reduce_37","children":[],"call":[" new_assign "," s line ","rhs line "," s "," new_masgn ","val [] "]}," Ruby30Parser _reduce_36":{"type":"method","name":"_reduce_36","children":[],"call":[" new_masgn ","val [] "]}," Ruby30Parser _reduce_34":{"type":"method","name":"_reduce_34","children":[],"call":[" new_iter "," s line "," s "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," new_rescue "," new_resbody ","resbody line "," debug "," new_ new_resbody  "," new_resbody  line "]}," Ruby30Parser _reduce_33":{"type":"method","name":"_reduce_33","children":[],"call":[" new_rescue "," new_resbody "," s line ","resbody line "," s "," new_until "," new_ new_resbody  "," new_resbody  line "]}," Ruby30Parser _reduce_32":{"type":"method","name":"_reduce_32","children":[],"call":[" new_until "," new_while "]}," Ruby30Parser _reduce_31":{"type":"method","name":"_reduce_31","children":[],"call":[" new_while "," new_if "]}," Ruby30Parser _reduce_30":{"type":"method","name":"_reduce_30","children":[],"call":[" new_if "]}," Ruby30Parser _reduce_29":{"type":"method","name":"_reduce_29","children":[],"call":[" new_if ","val [] "]}," Ruby30Parser _reduce_28":{"type":"method","name":"_reduce_28","children":[],"call":["val [] "," yyerror "]}," Ruby30Parser _reduce_27":{"type":"method","name":"_reduce_27","children":[],"call":[" yyerror "," s line "," s ","lhs to_sym "]}," Ruby30Parser _reduce_26":{"type":"method","name":"_reduce_26","children":[],"call":[" s line "," s ","lhs to_sym ","rhs to_sym "]}," Ruby30Parser _reduce_25":{"type":"method","name":"_reduce_25","children":[],"call":[" s line "," s ","rhs to_sym ","lhs to_sym "," s line line "]}," Ruby30Parser _reduce_24":{"type":"method","name":"_reduce_24","children":[],"call":[" s line line "," s line "," s "," lexer lex_state= "," lexer "]}," Ruby30Parser _reduce_23":{"type":"method","name":"_reduce_23","children":[],"call":[" lexer lex_state= "," lexer ","val [] "]}," Ruby30Parser _reduce_22":{"type":"method","name":"_reduce_22","children":[],"call":[" yyerror ","val [] "]}," Ruby30Parser _reduce_20":{"type":"method","name":"_reduce_20","children":[],"call":[" debug20 ","val [] "," debug "]}," Ruby30Parser _reduce_19":{"type":"method","name":"_reduce_19","children":[],"call":[" block_append ","val [] "," debug "]}," Ruby30Parser _reduce_16":{"type":"method","name":"_reduce_16","children":[],"call":[" new_compstmt "]}," Ruby30Parser _reduce_15":{"type":"method","name":"_reduce_15","children":[],"call":[" new_body "," new_compstmt "]}," Ruby30Parser _reduce_14":{"type":"method","name":"_reduce_14","children":[],"call":[" new_body "]}," Ruby30Parser _reduce_13":{"type":"method","name":"_reduce_13","children":[],"call":[" yyerror ","_values [] "," new_body "]}," Ruby30Parser _reduce_12":{"type":"method","name":"_reduce_12","children":[],"call":[" new_iter "," s line "," s "," yyerror ","_values [] "]}," Ruby30Parser _reduce_11":{"type":"method","name":"_reduce_11","children":[],"call":[" lexer lineno "," lexer "," new_iter "," s line "," s "]}," Ruby30Parser _reduce_10":{"type":"method","name":"_reduce_10","children":[],"call":["preexe line ","iter line "]}," Ruby30Parser _reduce_9":{"type":"method","name":"_reduce_9","children":[],"call":[" env extend "," env "," yyerror "," debug20 "," in_single > "," in_single "," in_def "," debug "]}," Ruby30Parser _reduce_6":{"type":"method","name":"_reduce_6","children":[],"call":[" block_append ","val [] "]}," Ruby30Parser _reduce_3":{"type":"method","name":"_reduce_3","children":[],"call":[]}," Ruby30Parser _reduce_2":{"type":"method","name":"_reduce_2","children":[],"call":[" lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer cond pop "," lexer cond "," new_compstmt "]}," Ruby30Parser _reduce_1":{"type":"method","name":"_reduce_1","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby27Parser _reduce_655":{"type":"method","name":"_reduce_655","children":[],"call":[" args "]}," Ruby27Parser _reduce_654":{"type":"method","name":"_reduce_654","children":[],"call":[" yyerrok "," args ","val [] "]}," Ruby27Parser _reduce_651":{"type":"method","name":"_reduce_651","children":[],"call":[" yyerrok "," end_args "," args "]}," Ruby27Parser _reduce_625":{"type":"method","name":"_reduce_625","children":[],"call":[" s line "," s ","arg line "," s arg line  ","arg arg line  "]}," Ruby27Parser _reduce_624":{"type":"method","name":"_reduce_624","children":[],"call":[" s line ","sym line "," s ","sym sexp_type= "]}," Ruby27Parser _reduce_618":{"type":"method","name":"_reduce_618","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","val [] ","num -@ "]}," Ruby27Parser _reduce_617":{"type":"method","name":"_reduce_617","children":[],"call":[" yyerror ","result sexp_type == ","result sexp_type ","val [] ","(str \"&\") to_sym "," env []= "," env ","val [] to_sym ","val []  sexp_type == ","(str \"&\") to_sym  sexp_type == ","val []  sexp_type ","(str \"&\") to_sym  sexp_type "]}," Ruby27Parser _reduce_613":{"type":"method","name":"_reduce_613","children":[],"call":["val [] "," assignable ","val [] to_sym "," s line "," s ","id to_sym "," lexer lex_state= "," lexer "," wrap "]}," Ruby27Parser _reduce_609":{"type":"method","name":"_reduce_609","children":[],"call":[" env []= "," env "," s line ","opt line "," s ","id to_sym "," wrap ","val [] "]}," Ruby27Parser _reduce_608":{"type":"method","name":"_reduce_608","children":[],"call":[" assignable ","val [] to_sym ","val [] ","result << "," s line "," s ","id to_sym "," wrap "," s line  << "," wrap  << "]}," Ruby27Parser _reduce_605":{"type":"method","name":"_reduce_605","children":[],"call":[" block_append ","val [] "," assignable "," lexer lex_state= "," lexer "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," lexer lineno "," lexer lex_state "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "," wrap "]}," Ruby27Parser _reduce_604":{"type":"method","name":"_reduce_604","children":[],"call":[" s line ","opt line "," s "," env []= "," env ","str line "," lexer lex_strterm= "," lexer "," wrap ","val [] "]}," Ruby27Parser _reduce_595":{"type":"method","name":"_reduce_595","children":[],"call":[" args "," s line "," s "," env []= "," env ","label to_sym ","val [] dup << "," new_qsym_list_entry ","val [] dup ","val [] "]}," Ruby27Parser _reduce_590":{"type":"method","name":"_reduce_590","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym "," raise ","val inspect "," debug20 "," lexer lineno "," lexer ","result line_max= ","val [] dup << "," new_qword_list_entry ","val [] dup ","val [] "," s line  line_max= ","val [] dup <<  line_max= "]}," Ruby27Parser _reduce_585":{"type":"method","name":"_reduce_585","children":[],"call":[" raise ","val inspect "," debug20 "," s line "," lexer lineno "," lexer "," s ","list line ","result line_max= "," s line  line_max= ","list line  line_max= "]}," Ruby27Parser _reduce_581":{"type":"method","name":"_reduce_581","children":[],"call":[" env []= "," env ","val [] to_sym ","val [] "," yyerror ","val [] dup << "," new_word_list_entry ","val [] dup ","result line_max= "," s line "," s ","val [] dup <<  line_max= "," s line  line_max= "]}," Ruby27Parser _reduce_578":{"type":"method","name":"_reduce_578","children":[],"call":[" yyerror "," args "," s line "," s ","result line_max= ","val [] dup << "," new_word_list_entry ","val [] dup ","val [] "," args  line_max= "," s line  line_max= ","val [] dup <<  line_max= "]}," Ruby27Parser _reduce_556":{"type":"method","name":"_reduce_556","children":[],"call":[" args "," lexer command_start= "," lexer "," lexer lex_state= "," s line "," s ","id to_sym "," wrap ","val [] ","result << "," new_resbody ","klasses line ","klasses << "," new_assign ","var line "," args  << "," s line  << "," wrap  << "," new_resbody  << "]}," Ruby27Parser _reduce_526":{"type":"method","name":"_reduce_526","children":[],"call":["val [] -@ ","val [] "," debug20 "," s line ","result line "," s ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," lexer lineno "," lexer "," lexer lex_state= ","lhs line "," debug "," assignable ","lhs value ","lhs sexp_type ","val [] -@  line "," s line  line ","val [] -@  last to_sym "," s line  last to_sym ","val [] -@  last "," s line  last ","val [] -@  sexp_type= "," s line  sexp_type= ","val [] -@  sexp_type "," s line  sexp_type "]}," Ruby27Parser _reduce_519":{"type":"method","name":"_reduce_519","children":[],"call":["val [] to_sym ","val [] "," s line ","expr line "," s ","expr sexp_type == ","expr sexp_type "," new_hash_pattern_tail ","kwarg line "," s line  line "," s line  sexp_type == "," s line  sexp_type "]}," Ruby27Parser _reduce_518":{"type":"method","name":"_reduce_518","children":[],"call":["val [] to_sym ","val [] "," lexer lex_state= "," lexer "," s line "," lexer lineno "," s "," array_pat_concat "," new_hash_pattern_tail ","kwarg line "]}," Ruby27Parser _reduce_515":{"type":"method","name":"_reduce_515","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","val [] to_sym ","val [] "," raise ","stmt inspect "," debug20 ","stmt sexp_type "," lexer lex_state= "," lexer cond pop "," lexer cond "," lexer cmdarg pop "," lexer cmdarg "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= ","result line "," new_array_pattern_tail "," array_pat_concat "," s line  line "," new_array_pattern_tail  line "," array_pat_concat  line "]}," Ruby27Parser _reduce_486":{"type":"method","name":"_reduce_486","children":[],"call":[" new_word_list "," s line "," lexer lineno "," lexer "," s "," push_pktbl "," new_array_pattern ","lhs line "," pop_pktbl "]}," Ruby27Parser _reduce_476":{"type":"method","name":"_reduce_476","children":[],"call":[" s ","str value ","str sexp_type == ","str sexp_type ","result line= ","val [] "," lexer lineno "," lexer "," new_array_pattern ","args line "," s  value "," s  sexp_type == "," s  sexp_type "," s  line= "," new_array_pattern  line= ","result  lexer lineno = "," lexer  lexer lineno no ","args  lexer lineno  "]}," Ruby27Parser _reduce_473":{"type":"method","name":"_reduce_473","children":[],"call":["result line= "," s ","val [] "," lexer lineno "," lexer "," s line "," s  line= ","result  lexer lineno = "," lexer  lexer lineno no "," s  lexer lineno  "]}," Ruby27Parser _reduce_466":{"type":"method","name":"_reduce_466","children":[],"call":[" s line ","arg line "," s ","result << "," new_resbody ","klasses line ","klasses << "," new_assign ","var line "," in_kwarg= ","_values [] "," pop_pvtbl "," pop_pktbl "," s line  << "," new_resbody  << "]}," Ruby27Parser _reduce_465":{"type":"method","name":"_reduce_465","children":[],"call":["result << ","val [] ","result line "," new_when "," push_pktbl "," push_pvtbl "," in_kwarg= "," in_kwarg "," lexer command_start= "," lexer "," lexer lex_state= ","EXPR_BEG  | "," new_when  << "," in_kwarg  << "," new_when  line "," in_kwarg  line "]}," Ruby27Parser _reduce_461":{"type":"method","name":"_reduce_461","children":[],"call":["result << ","val [] ","result line= "," new_when "," env unextend "," env "," lexer cmdarg pop "," lexer cmdarg "," lexer "," new_do_body "," s line ","arg line "," s "," lexer lineno "," new_when  << "," new_do_body  << "," s line  << "," lexer lineno  << "," new_when  line= "," new_do_body  line= "," s line  line= "," lexer lineno  line= "]}," Ruby27Parser _reduce_460":{"type":"method","name":"_reduce_460","children":[],"call":[" lexer lineno "," lexer "," lexer cmdarg push "," lexer cmdarg "," s line ","arg line "," s "," list_append ","id line "]}," Ruby27Parser _reduce_425":{"type":"method","name":"_reduce_425","children":[],"call":[" args "]}," Ruby27Parser _reduce_420":{"type":"method","name":"_reduce_420","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," lexer command_start= "," args "]}," Ruby27Parser _reduce_399":{"type":"method","name":"_reduce_399","children":[],"call":["result line "," call_args "," lexer lineno "," lexer "," args "," call_args  line "," args  line ","result  lexer lineno  "," lexer  lexer lineno no "]}," Ruby27Parser _reduce_352":{"type":"method","name":"_reduce_352","children":[],"call":[" value_expr ","val [] "," s line "," s "]}," Ruby27Parser _reduce_351":{"type":"method","name":"_reduce_351","children":[],"call":[" s line "," s "," value_expr ","val [] "]}," Ruby27Parser _reduce_320":{"type":"method","name":"_reduce_320","children":[],"call":[" debug20 "," s line "," s "]}," Ruby27Parser _reduce_289":{"type":"method","name":"_reduce_289","children":[],"call":[" s line ","arg line "," s ","val [] << ","val [] "]}," Ruby27Parser _reduce_288":{"type":"method","name":"_reduce_288","children":[],"call":[" arg_concat "," new_masgn_arg ","val [] "]}," Ruby27Parser _reduce_278":{"type":"method","name":"_reduce_278","children":[],"call":[" s line ","arg line "," s "," lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg pop ","(sym :tLPAREN) include? "," last_token_type first "," last_token_type "]}," Ruby27Parser _reduce_263":{"type":"method","name":"_reduce_263","children":[],"call":["result line_max= "]}," Ruby27Parser _reduce_262":{"type":"method","name":"_reduce_262","children":[],"call":[" new_rescue "," new_resbody "," s line "," s "," remove_begin "," value_expr "," new_ remove_begin  "," new_res value_expr  "]}," Ruby27Parser _reduce_259":{"type":"method","name":"_reduce_259","children":[],"call":[" args "," array_to_hash ","val [] "]}," Ruby27Parser _reduce_255":{"type":"method","name":"_reduce_255","children":[],"call":[" new_call "," argl ","op to_sym "," warn "]}," Ruby27Parser _reduce_248":{"type":"method","name":"_reduce_248","children":[],"call":[" s line ","c line "," s "]}," Ruby27Parser _reduce_247":{"type":"method","name":"_reduce_247","children":[],"call":[" s line "," s "]}," Ruby27Parser _reduce_233":{"type":"method","name":"_reduce_233","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby30Parser _reduce_660":{"type":"method","name":"_reduce_660","children":[],"call":[" lexer lex_state "," lexer "," in_kwarg= "," in_kwarg "," in_argdef= "]}," Ruby30Parser _reduce_659":{"type":"method","name":"_reduce_659","children":[],"call":[" yyerrok "]}," Ruby30Parser _reduce_656":{"type":"method","name":"_reduce_656","children":[],"call":[" yyerrok "," s line "," s "," end_args "," in_argdef= "]}," Ruby30Parser _reduce_630":{"type":"method","name":"_reduce_630","children":[],"call":[" s line "," s ","arg line "," s arg line  ","arg arg line  "]}," Ruby30Parser _reduce_629":{"type":"method","name":"_reduce_629","children":[],"call":[" s line ","sym line "," s ","sym sexp_type= "]}," Ruby30Parser _reduce_628":{"type":"method","name":"_reduce_628","children":[],"call":[" s line "," s ","label to_sym ","num -@ "]}," Ruby30Parser _reduce_627":{"type":"method","name":"_reduce_627","children":[],"call":[" s line ","v1 line "," s ","id to_sym "," lexer lex_state= "," lexer "," wrap ","val [] "]}," Ruby30Parser _reduce_626":{"type":"method","name":"_reduce_626","children":[],"call":["result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] ","val [] dup "," s line "," s ","id to_sym "," lexer lex_state= "," lexer "," wrap "," debug ","result line ","result last to_sym ","result last ","result sexp_type "," s line  sexp_type= "," wrap  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "," s line  line "," wrap  line "," s line  last to_sym "," wrap  last to_sym "," s line  last "," wrap  last "," s line  sexp_type "," wrap  sexp_type "]}," Ruby30Parser _reduce_619":{"type":"method","name":"_reduce_619","children":[],"call":[" raise ","stmt inspect "," debug "," s line "," s ","stmt sexp_type "," lexer lex_state= "," lexer "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "]}," Ruby30Parser _reduce_610":{"type":"method","name":"_reduce_610","children":[],"call":[" block_append ","val [] "," literal_concat "," lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm "]}," Ruby30Parser _reduce_607":{"type":"method","name":"_reduce_607","children":[],"call":[" s line ","optblk line "," s "," new_qsym_list "]}," Ruby30Parser _reduce_606":{"type":"method","name":"_reduce_606","children":[],"call":[" assignable ","val [] ","val [] dup << "," new_qword_list_entry ","val [] dup "," literal_concat "]}," Ruby30Parser _reduce_596":{"type":"method","name":"_reduce_596","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym "," literal_concat ","val [] ","result line_max= ","list line "," s line  line_max= "," literal_concat  line_max= ","list line  line_max= "]}," Ruby30Parser _reduce_594":{"type":"method","name":"_reduce_594","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym ","val [] dup << "," new_word_list_entry ","val [] dup ","val [] ","list dup << "," new_symbol_list_entry ","list dup "]}," Ruby30Parser _reduce_583":{"type":"method","name":"_reduce_583","children":[],"call":[" yyerror "," s ","str value ","str sexp_type == ","str sexp_type "," new_xstring "," s  value "," s  sexp_type == "," s  sexp_type "," new_x s ing "]}," Ruby30Parser _reduce_582":{"type":"method","name":"_reduce_582","children":[],"call":[" yyerror "," new_string "]}," Ruby30Parser _reduce_580":{"type":"method","name":"_reduce_580","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," literal_concat ","val [] "]}," Ruby30Parser _reduce_558":{"type":"method","name":"_reduce_558","children":[],"call":[" lexer command_start= "," lexer "," lexer lex_state= "," in_kwarg= "," ary_to_pat ","val [] "]}," Ruby30Parser _reduce_528":{"type":"method","name":"_reduce_528","children":[],"call":["val [] -@ ","val [] ","id to_sym "," new_hash_pattern_tail ","kwarg line "]}," Ruby30Parser _reduce_521":{"type":"method","name":"_reduce_521","children":[],"call":["val [] to_sym ","val [] "," new_array_pattern_tail line ","head line "," new_array_pattern_tail "," new_find_pattern_tail "]}," Ruby30Parser _reduce_520":{"type":"method","name":"_reduce_520","children":[],"call":["val [] to_sym ","val [] "," lexer lex_state= "," lexer "," new_array_pattern_tail line ","expr line "," new_array_pattern_tail ","result line ","val [] to_sym  line "," new_array_pattern_tail line  line "," new_array_pattern_tail  line "]}," Ruby30Parser _reduce_517":{"type":"method","name":"_reduce_517","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","val [] to_sym ","val [] ","result line ","head line "," new_array_pattern_tail "," array_pat_concat "," s line  line "," new_array_pattern_tail  line "]}," Ruby30Parser _reduce_488":{"type":"method","name":"_reduce_488","children":[],"call":[" new_word_list "," new_find_pattern "," s line ","lhs line "," s "]}," Ruby30Parser _reduce_478":{"type":"method","name":"_reduce_478","children":[],"call":[" s ","str value ","str sexp_type == ","str sexp_type "," in_kwarg= ","_values [] "," pop_pvtbl "," pop_pktbl "," s line ","body line "," remove_begin "," s  value "," s  sexp_type == "," s  sexp_type "," remove_begin  line "]}," Ruby30Parser _reduce_475":{"type":"method","name":"_reduce_475","children":[],"call":["result line= "," s ","val [] "," lexer lineno "," lexer "," s  line= ","result  lexer lineno = "," lexer  lexer lineno no "]}," Ruby30Parser _reduce_468":{"type":"method","name":"_reduce_468","children":[],"call":[" s line ","arg line "," s "," env unextend "," env "," lexer cmdarg pop "," lexer cmdarg "," lexer "," new_do_body ","result << ","result line "," new_when "," s line  << "," new_do_body  << "," new_when  << "," s line  line "," new_do_body  line "," new_when  line "]}," Ruby30Parser _reduce_467":{"type":"method","name":"_reduce_467","children":[],"call":[" lexer cmdarg push "," lexer cmdarg "," lexer "," list_append "," s line ","id line "," s "]}," Ruby30Parser _reduce_463":{"type":"method","name":"_reduce_463","children":[],"call":["result << ","val [] ","result line= "," new_when "," lexer lineno "," lexer "," env extend "," env "," env unextend "," lexer cmdarg pop "," lexer cmdarg "," new_do_body "," new_when  << "," lexer lineno  << "," new_do_body  << "," new_when  line= "," lexer lineno  line= "," new_do_body  line= "]}," Ruby30Parser _reduce_462":{"type":"method","name":"_reduce_462","children":[],"call":[" lexer lineno "," lexer "," env unextend "," env ","result line "," lexer cmdarg push "," lexer cmdarg "," lexer lineno  line "]}," Ruby30Parser _reduce_427":{"type":"method","name":"_reduce_427","children":[],"call":[" args "]}," Ruby30Parser _reduce_422":{"type":"method","name":"_reduce_422","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," args "]}," Ruby30Parser _reduce_401":{"type":"method","name":"_reduce_401","children":[],"call":["result line "," call_args "," lexer lineno "," lexer "," args ","(str \"*\") to_sym "," call_args  line "," args  line ","result  lexer lineno  "," lexer  lexer lineno no "]}," Ruby30Parser _reduce_354":{"type":"method","name":"_reduce_354","children":[],"call":[" value_expr ","val [] "," lexer ignore_body_comments "," lexer "," env unextend "," env "," new_module "," s line "," s "]}," Ruby30Parser _reduce_353":{"type":"method","name":"_reduce_353","children":[],"call":[" s line "," s "," env extend "," env "," yyerror "," in_single > "," in_single "," in_def "]}," Ruby30Parser _reduce_322":{"type":"method","name":"_reduce_322","children":[],"call":[" debug20 "," lexer lineno "," lexer "]}," Ruby30Parser _reduce_291":{"type":"method","name":"_reduce_291","children":[],"call":[" s line ","arg line "," s ","val [] "]}," Ruby30Parser _reduce_290":{"type":"method","name":"_reduce_290","children":[],"call":[" arg_concat "," s line ","arg line "," s ","val [] "]}," Ruby30Parser _reduce_280":{"type":"method","name":"_reduce_280","children":[],"call":[" s line ","arg line "," s "," args "," array_to_hash ","val [] "]}," Ruby30Parser _reduce_265":{"type":"method","name":"_reduce_265","children":[],"call":[" call_args "," yyerror "," lexer is_local_id "," lexer "," new_call "," argl ","op to_sym "," warn "," value_expr ","val [] "]}," Ruby30Parser _reduce_264":{"type":"method","name":"_reduce_264","children":[],"call":[" call_args "," yyerror "," lexer is_local_id "," lexer "," new_call "," argl ","op to_sym "," warn "]}," Ruby27Parser _reduce_660":{"type":"method","name":"_reduce_660","children":[],"call":[" args "]}," Ruby27Parser _reduce_659":{"type":"method","name":"_reduce_659","children":[],"call":[" yyerrok "," args "]}," Ruby27Parser _reduce_656":{"type":"method","name":"_reduce_656","children":[],"call":[" yyerrok "," args "]}," Ruby27Parser _reduce_630":{"type":"method","name":"_reduce_630","children":[],"call":[" s line "," s ","arg line "," lexer lineno "," lexer "," s arg line  ","arg arg line  "," lexer arg line no "]}," Ruby27Parser _reduce_629":{"type":"method","name":"_reduce_629","children":[],"call":[" s line ","sym line "," s ","sym sexp_type= "," lexer lineno "," lexer "]}," Ruby27Parser _reduce_628":{"type":"method","name":"_reduce_628","children":[],"call":[" s line "," s ","label to_sym "," lexer lineno "," lexer "]}," Ruby27Parser _reduce_627":{"type":"method","name":"_reduce_627","children":[],"call":[" s line ","v1 line "," s "]}," Ruby27Parser _reduce_626":{"type":"method","name":"_reduce_626","children":[],"call":["result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] ","val [] dup ","val [] dup  push ","val [] sexp_body  empty? "]}," Ruby27Parser _reduce_594":{"type":"method","name":"_reduce_594","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym "," new_qsym_list "," literal_concat "]}," Ruby27Parser _reduce_580":{"type":"method","name":"_reduce_580","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," new_word_list "," literal_concat ","val [] "]}," Ruby27Parser _reduce_528":{"type":"method","name":"_reduce_528","children":[],"call":["val [] -@ ","val [] "," s line ","lhs line "," s "," assignable ","id to_sym "]}," Ruby27Parser _reduce_521":{"type":"method","name":"_reduce_521","children":[],"call":["val [] to_sym ","val [] "," new_hash_pattern_tail ","kwarg line "]}," Ruby27Parser _reduce_520":{"type":"method","name":"_reduce_520","children":[],"call":["val [] to_sym ","val [] "," lexer lex_state= "," lexer "," new_hash_pattern_tail ","kw_arg line ","rest line "]}," Ruby27Parser _reduce_468":{"type":"method","name":"_reduce_468","children":[],"call":[" s line ","arg line "," s "," push_pktbl "," push_pvtbl "," in_kwarg= "," in_kwarg "," lexer command_start= "," lexer "," lexer lex_state= ","EXPR_BEG  | "]}," Ruby27Parser _reduce_354":{"type":"method","name":"_reduce_354","children":[],"call":[" value_expr ","val [] "]}," Ruby27Parser _reduce_353":{"type":"method","name":"_reduce_353","children":[],"call":[" s line "," s "]}," Ruby27Parser _reduce_291":{"type":"method","name":"_reduce_291","children":[],"call":[" s line ","arg line "," s "]}," Ruby27Parser _reduce_290":{"type":"method","name":"_reduce_290","children":[],"call":[" arg_concat "]}," Ruby27Parser _reduce_265":{"type":"method","name":"_reduce_265","children":[],"call":[" call_args "," yyerror "," lexer is_local_id "," lexer "]}," Ruby27Parser _reduce_264":{"type":"method","name":"_reduce_264","children":[],"call":[" call_args "," yyerror "," lexer is_local_id "," lexer "]}," RubyParserStuff debug":{"type":"method","name":"debug","children":[],"call":[" raise "," binding pry "," binding "," require ","ENV  [] "]}," RubyParserStuff prev_value_to_lineno":{"type":"method","name":"prev_value_to_lineno","children":[],"call":[" lexer lineno "," lexer ","String  === "]}," RubyParserStuff new_symbol":{"type":"method","name":"new_symbol","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","name to_sym ","val last ","val last  to_sym "]}," RubyParserStuff pop_pvtbl":{"type":"method","name":"pop_pvtbl","children":[],"call":[]}," RubyParserStuff push_pvtbl":{"type":"method","name":"push_pvtbl","children":[],"call":[]}," RubyParserStuff pop_pktbl":{"type":"method","name":"pop_pktbl","children":[],"call":[]}," RubyParserStuff push_pktbl":{"type":"method","name":"push_pktbl","children":[],"call":[]}," RubyParserStuff new_hash_pattern_tail":{"type":"method","name":"new_hash_pattern_tail","children":[],"call":["result << "," assignable ","kw_rest_arg line ","name != ","kw_rest_arg value "," s line "," s "," s line  << ","kw_rest_arg value  != "]}," RubyParserStuff new_hash_pattern":{"type":"method","name":"new_hash_pattern","children":[],"call":["result << ","result concat ","pat sexp_body "," s line "," s ","(or\n  (lvar :const)\n  (lvar :hash_pat)) line "," s line  << "," s line  concat "," s (or\n  (lvar :const)\n  (lvar :hash_pat)) line  ","(or\n  (lvar :const)\n  (lvar :hash_pat)) (or\n  (lvar :const)\n  (lvar :hash_pat)) line  "]}," RubyParserStuff new_find_pattern_tail":{"type":"method","name":"new_find_pattern_tail","children":[],"call":[" s line "," s ","mid sexp_type= ","(str \"*\") to_sym ","mid sexp_body "," raise ","mid sexp_type == ","mid sexp_type "]}," RubyParserStuff new_find_pattern":{"type":"method","name":"new_find_pattern","children":[],"call":["pat insert ","pat sexp_type= "]}," RubyParserStuff new_in":{"type":"method","name":"new_in","children":[],"call":[" s line "," s "]}," RubyParserStuff new_array_pattern_tail":{"type":"method","name":"new_array_pattern_tail","children":[],"call":[" array_pat_concat ","result << "," s line "," s "," s line  << "]}," RubyParserStuff array_pat_concat":{"type":"method","name":"array_pat_concat","children":[],"call":["lhs << ","lhs concat ","rhs sexp_body ","rhs sexp_type ","lhs sexp_type= ","lhs sexp_type "]}," RubyParserStuff new_array_pattern":{"type":"method","name":"new_array_pattern","children":[],"call":[" raise ","NO?: %p % ","result concat ","arypat sexp_body ","arypat sexp_type == ","arypat sexp_type ","result << "," s line "," s "," s line  concat "," s line  << "]}," RubyParserStuff new_arg":{"type":"method","name":"new_arg","children":[],"call":[" raise ","val inspect "," debug20 "," s line "," s "," line "]}," RubyParserStuff local_pop":{"type":"method","name":"local_pop","children":[],"call":[" in_def= "," env unextend "," env "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer cond pop "," lexer cond "]}," RubyParserStuff endless_method_name":{"type":"method","name":"endless_method_name","children":[],"call":[" yyerror ","name end_with? ","defn_or_defs [] ","Symbol  === "," attrset_id? ","defn_or_defs []  end_with? "]}," RubyParserStuff end_args":{"type":"method","name":"end_args","children":[],"call":[" args "," lexer command_start= "," lexer "," lexer lex_state= "]}," RubyLexer tokadd_utf8":{"type":"method","name":"tokadd_utf8","children":[],"call":[" rb_compile_error "," tokadd "," match [] split join "," match [] split "," match [] "," match ","(send\n  (send\n    (send\n      (send nil :match) :[]\n      (int 1)) :split) :map) pack ","s to_i "," match [] split map "," scan "," matched ","(send\n  (send nil :matched) :to_i\n  (int 16)) pack "," matched to_i "]}," RubyLexer string_term":{"type":"method","name":"string_term","children":[],"call":[" matched "," lex_state= "," string_buffer join "," string_buffer ","EXPR_BEG  | "," getch "," is_label_suffix? ","func =~ "," result "," regx_options "," lex_strterm= "]}," RubyLexer scan_variable_name":{"type":"method","name":"scan_variable_name","children":[],"call":[" scan "," matched "," command_start= "," lineno "]}," RubyLexer process_string_or_heredoc":{"type":"method","name":"process_string_or_heredoc","children":[],"call":[" parse_string "," lex_strterm "," heredoc "," lex_strterm [] == "," lex_strterm [] "]}," RubyLexer process_percent_quote":{"type":"method","name":"process_percent_quote","children":[],"call":[" result "," string "," rb_compile_error "," lex_state= ","STR_SQUOTE  | "," eat_whitespace ","STR_DQUOTE  | "," lineno ","term nil? ","PERCENT_END  [] ","term == ","c == "," end_of_stream? "," debug ","term =~ "," getch ","c !~ ","(send\n  (lvar :c) :=~\n  (regexp\n    (str \"[QqWwIixrs]\")\n    (regopt))) ! ! ","(send\n  (lvar :c) :=~\n  (regexp\n    (str \"[QqWwIixrs]\")\n    (regopt))) ! ","c =~ "," rb_ getch ompile_error "," eat_whitespa getch e ","PERCENT_END  []  nil? "," getch  nil? ","PERCENT_END  []  == "," getch  == ","PERCENT_END  []  =~ "," getch  =~ "," get getch h "," getch  !~ ","(send\n  (lvar : getch ) :=~\n  (regexp\n    (str \"[QqWwIixrs]\")\n    (regopt))) ! ! ","(send\n  (lvar : getch ) :=~\n  (regexp\n    (str \"[QqWwIixrs]\")\n    (regopt))) ! "]}," RubyLexer nextc":{"type":"method","name":"nextc","children":[],"call":[" ss unscan "," ss ","c == "," ss getch "," maybe_pop_stack "," ss uns ss getch an "," ss getch  == "," ss get ss getch h "," maybe_pop_sta ss getch k "]}," RubyLexer newtok":{"type":"method","name":"newtok","children":[],"call":[" string_buffer clear "," string_buffer "]}," RubyLexer heredoc_restore":{"type":"method","name":"heredoc_restore","children":[],"call":[" ss_push "," lineno_push ","new_ss pos= "," ss class new "," ss_string [] ","range max "," ss_string "," ss class "," ss "," lex_strterm "," ss class new  pos= "]}," RubyLexer column":{"type":"method","name":"column","children":[],"call":[" old_pos - "," start_of_current_line_pos "," old_pos "]}," RubyLexer lex_strterm=":{"type":"method","name":"lex_strterm=","children":[],"call":[" d ","$stderr puts "," caller first split first join "," caller first split first "," caller first split "," caller first "," caller "," old_lex_strterm= "]}," RubyLexer SSStackish ss_pop":{"type":"method","name":"ss_pop","children":[],"call":[" old_ss "]}," RubyLexer SSStackish ss_push":{"type":"method","name":"ss_push","children":[],"call":[" ss "]}," RubyLexer SSStackish ss=":{"type":"method","name":"ss=","children":[],"call":[" raise "," in_heredoc? "]}," RubyLexer SSStackish lineno_pop":{"type":"method","name":"lineno_pop","children":[],"call":[" old_lineno= "," lineno= "," old_lineno "]}," RubyLexer SSStackish lineno_push":{"type":"method","name":"lineno_push","children":[],"call":[" lineno= "," old_lineno= "," lineno "]}," RubyLexer SSWrapper unscan":{"type":"method","name":"unscan","children":[],"call":[" ss unscan "," ss "]}," RubyLexer SSWrapper ss_string=":{"type":"method","name":"ss_string=","children":[],"call":[" ss string= "," ss "," raise "]}," RubyLexer SSWrapper ss_string":{"type":"method","name":"ss_string","children":[],"call":[" ss string "," ss "]}," RubyLexer SSWrapper scanner_class":{"type":"method","name":"scanner_class","children":[],"call":[]}," RubyLexer SSWrapper scan":{"type":"method","name":"scan","children":[],"call":[" ss scan "," ss "," maybe_pop_stack "]}," RubyLexer SSWrapper rest":{"type":"method","name":"rest","children":[],"call":[" ss rest "," ss "]}," RubyLexer SSWrapper pos=":{"type":"method","name":"pos=","children":[],"call":[" ss pos= "," ss "]}," RubyLexer SSWrapper pos":{"type":"method","name":"pos","children":[],"call":[" ss pos "," ss "]}," RubyLexer SSWrapper maybe_pop_stack":{"type":"method","name":"maybe_pop_stack","children":[],"call":[" lineno_pop "," ss_pop "," in_heredoc? "," ss eos? "," ss "]}," RubyLexer SSWrapper in_heredoc?":{"type":"method","name":"in_heredoc?","children":[],"call":[" old_ss ! ! "," old_ss ! "," old_ss "]}," RubyLexer SSWrapper matched":{"type":"method","name":"matched","children":[],"call":[" ss matched "," ss "]}," RubyLexer SSWrapper match":{"type":"method","name":"match","children":[],"call":[" ss "]}," RubyLexer SSWrapper getch":{"type":"method","name":"getch","children":[],"call":[" ss getch "," ss "," ss peek == "," ss peek ","c == "," ss get ss getch h "," ss getch  == "]}," RubyLexer SSWrapper end_of_stream?":{"type":"method","name":"end_of_stream?","children":[],"call":[" ss eos? "," ss "]}," RubyLexer SSWrapper check":{"type":"method","name":"check","children":[],"call":[" ss check "," ss "," maybe_pop_stack "]}," RubyLexer SSWrapper beginning_of_line?":{"type":"method","name":"beginning_of_line?","children":[],"call":[" ss bol? "," ss "]}," RubyLexer SSWrapper string=":{"type":"method","name":"string=","children":[],"call":[" ss string= "," ss "]}," RubyLexer debug":{"type":"method","name":"debug","children":[],"call":[" raise "]}," RubyLexer ignore_body_comments":{"type":"method","name":"ignore_body_comments","children":[],"call":["@comments clear "]}," RubyLexer regexp_cache":{"type":"method","name":"regexp_cache","children":[],"call":[]}," Ruby30Parser _reduce_771":{"type":"method","name":"_reduce_771","children":[],"call":[]}," Ruby30Parser _reduce_770":{"type":"method","name":"_reduce_770","children":[],"call":[" yyerrok "]}," Ruby30Parser _reduce_767":{"type":"method","name":"_reduce_767","children":[],"call":[" yyerrok "]}," Ruby30Parser _reduce_763":{"type":"method","name":"_reduce_763","children":[],"call":[" lexer lineno "," lexer "," yyerrok "]}," Ruby30Parser _reduce_762":{"type":"method","name":"_reduce_762","children":[],"call":[" lexer lineno "," lexer "]}," Ruby30Parser _reduce_740":{"type":"method","name":"_reduce_740","children":[],"call":[" s line "," s ","arg line ","lit line "," wrap ","val [] "," s arg line  ","arg arg line  ","lit arg line  "," wrap  line "]}," Ruby30Parser _reduce_739":{"type":"method","name":"_reduce_739","children":[],"call":[" s line "," s ","sym sexp_type= ","lit line "," wrap "," wrap  line "]}," Ruby30Parser _reduce_738":{"type":"method","name":"_reduce_738","children":[],"call":[" s line "," s ","label to_sym ","v1 line "]}," Ruby30Parser _reduce_737":{"type":"method","name":"_reduce_737","children":[],"call":[" s line ","v1 line "," s ","result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] ","val [] dup "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "]}," Ruby30Parser _reduce_736":{"type":"method","name":"_reduce_736","children":[],"call":["result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] ","val [] dup "," s line "," s ","arg line "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "," s arg line  ","arg arg line  "]}," Ruby30Parser _reduce_733":{"type":"method","name":"_reduce_733","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," yyerror ","result sexp_type == ","result sexp_type ","val [] ","lit line "," wrap "," s line  sexp_type == ","val []  sexp_type == "," s line  sexp_type ","val []  sexp_type "," wrap  line "]}," Ruby30Parser _reduce_732":{"type":"method","name":"_reduce_732","children":[],"call":[" yyerror ","result sexp_type == ","result sexp_type ","val [] "," lexer lex_state= "," lexer "," s line ","v1 line "," s ","val []  sexp_type == "," s line  sexp_type == ","val []  sexp_type "," s line  sexp_type "]}," Ruby30Parser _reduce_731":{"type":"method","name":"_reduce_731","children":[],"call":[" lexer lex_state= "," lexer ","result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] ","val [] dup ","val [] dup  push ","val [] sexp_body  empty? "]}," Ruby30Parser _reduce_729":{"type":"method","name":"_reduce_729","children":[],"call":[]}," Ruby30Parser _reduce_728":{"type":"method","name":"_reduce_728","children":[],"call":[" s line "," lexer lineno "," lexer "," s "]}," Ruby30Parser _reduce_727":{"type":"method","name":"_reduce_727","children":[],"call":["(str \"&\") to_sym "," env []= "," env ","id to_sym "," yyerror ","result sexp_type == ","result sexp_type ","val [] ","val []  sexp_type == ","val []  sexp_type "]}," Ruby30Parser _reduce_724":{"type":"method","name":"_reduce_724","children":[],"call":[" lexer lineno "," lexer "," env []= "," env "]}," Ruby30Parser _reduce_723":{"type":"method","name":"_reduce_723","children":[],"call":[" assignable ","id to_sym "]}," Ruby30Parser _reduce_720":{"type":"method","name":"_reduce_720","children":[],"call":[" block_append ","val [] "]}," Ruby30Parser _reduce_719":{"type":"method","name":"_reduce_719","children":[],"call":[" s line ","opt line "," s "]}," Ruby30Parser _reduce_718":{"type":"method","name":"_reduce_718","children":[],"call":["result << "," env []= "," env "]}," Ruby30Parser _reduce_717":{"type":"method","name":"_reduce_717","children":[],"call":[" s line ","optblk line "," s "," assignable ","id to_sym "]}," Ruby30Parser _reduce_716":{"type":"method","name":"_reduce_716","children":[],"call":[" assignable "]}," Ruby30Parser _reduce_715":{"type":"method","name":"_reduce_715","children":[],"call":[" assignable "]}," Ruby30Parser _reduce_714":{"type":"method","name":"_reduce_714","children":[],"call":[" lexer lineno "," lexer "," env []= "," env "," block_append ","val [] "]}," Ruby30Parser _reduce_713":{"type":"method","name":"_reduce_713","children":[],"call":[" assignable ","id to_sym "," s line ","opt line "," s "]}," Ruby30Parser _reduce_712":{"type":"method","name":"_reduce_712","children":[],"call":["result << "]}," Ruby30Parser _reduce_709":{"type":"method","name":"_reduce_709","children":[],"call":[" args "," assignable "," in_argdef= "]}," Ruby30Parser _reduce_707":{"type":"method","name":"_reduce_707","children":[],"call":["list << ","item last "," assignable ","id to_sym "]}," Ruby30Parser _reduce_705":{"type":"method","name":"_reduce_705","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym "]}," Ruby30Parser _reduce_704":{"type":"method","name":"_reduce_704","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym "]}," Ruby30Parser _reduce_703":{"type":"method","name":"_reduce_703","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym "," args "]}," Ruby30Parser _reduce_702":{"type":"method","name":"_reduce_702","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym "]}," Ruby30Parser _reduce_700":{"type":"method","name":"_reduce_700","children":[],"call":["result << ","item first ","Sexp  === "," s line ","list line "," s ","list sexp_type == ","list sexp_type ","result line_max= ","item line_max "," s line  << "," s line  line_max= ","result item line_max = ","item item line_max  "]}," Ruby30Parser _reduce_699":{"type":"method","name":"_reduce_699","children":[],"call":[" new_arg "," s line "," s "," env []= "," env ","label to_sym "," in_argdef= "]}," Ruby30Parser _reduce_698":{"type":"method","name":"_reduce_698","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym "," in_argdef= "]}," Ruby30Parser _reduce_695":{"type":"method","name":"_reduce_695","children":[],"call":[" env []= "," env ","id to_sym "," in_argdef= "]}," Ruby30Parser _reduce_693":{"type":"method","name":"_reduce_693","children":[],"call":[" yyerror "," new_arg "]}," Ruby30Parser _reduce_692":{"type":"method","name":"_reduce_692","children":[],"call":[" yyerror "]}," Ruby30Parser _reduce_691":{"type":"method","name":"_reduce_691","children":[],"call":[" yyerror "]}," Ruby30Parser _reduce_690":{"type":"method","name":"_reduce_690","children":[],"call":[" yyerror "]}," Ruby30Parser _reduce_689":{"type":"method","name":"_reduce_689","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," env []= "," env ","id to_sym "]}," Ruby30Parser _reduce_688":{"type":"method","name":"_reduce_688","children":[],"call":[" args "]}," Ruby30Parser _reduce_687":{"type":"method","name":"_reduce_687","children":[],"call":[" args "," yyerror "]}," Ruby30Parser _reduce_686":{"type":"method","name":"_reduce_686","children":[],"call":[" args "," yyerror "]}," Ruby30Parser _reduce_685":{"type":"method","name":"_reduce_685","children":[],"call":[" args "," yyerror "]}," Ruby30Parser _reduce_684":{"type":"method","name":"_reduce_684","children":[],"call":[" args "," yyerror "]}," Ruby30Parser _reduce_683":{"type":"method","name":"_reduce_683","children":[],"call":[" args "," s line "," s "]}," Ruby30Parser _reduce_682":{"type":"method","name":"_reduce_682","children":[],"call":[" args "]}," Ruby30Parser _reduce_681":{"type":"method","name":"_reduce_681","children":[],"call":[" args "]}," Ruby30Parser _reduce_680":{"type":"method","name":"_reduce_680","children":[],"call":[" args "]}," Ruby30Parser _reduce_679":{"type":"method","name":"_reduce_679","children":[],"call":[" args "]}," Ruby30Parser _reduce_678":{"type":"method","name":"_reduce_678","children":[],"call":[" args "]}," Ruby30Parser _reduce_677":{"type":"method","name":"_reduce_677","children":[],"call":[" args "]}," Ruby30Parser _reduce_676":{"type":"method","name":"_reduce_676","children":[],"call":[" args "]}," Ruby30Parser _reduce_675":{"type":"method","name":"_reduce_675","children":[],"call":[" args "]}," Ruby30Parser _reduce_674":{"type":"method","name":"_reduce_674","children":[],"call":[" args "]}," Ruby30Parser _reduce_673":{"type":"method","name":"_reduce_673","children":[],"call":[" args "]}," Ruby30Parser _reduce_672":{"type":"method","name":"_reduce_672","children":[],"call":["val [] "," args "]}," Ruby30Parser _reduce_670":{"type":"method","name":"_reduce_670","children":[],"call":[" args "]}," Ruby30Parser _reduce_669":{"type":"method","name":"_reduce_669","children":[],"call":[" args "]}," Ruby30Parser _reduce_668":{"type":"method","name":"_reduce_668","children":[],"call":[" args "]}," Ruby30Parser _reduce_667":{"type":"method","name":"_reduce_667","children":[],"call":[" end_args "]}," Ruby30Parser _reduce_666":{"type":"method","name":"_reduce_666","children":[],"call":[" lexer lex_state "," lexer "," in_kwarg= "," in_kwarg ","val [] "]}," Ruby30Parser _reduce_664":{"type":"method","name":"_reduce_664","children":[],"call":[" end_args "," args "]}," Ruby30Parser _reduce_663":{"type":"method","name":"_reduce_663","children":[],"call":[" end_args "," args "]}," Ruby30Parser _reduce_662":{"type":"method","name":"_reduce_662","children":[],"call":[" end_args "," args "]}," Ruby30Parser _reduce_658":{"type":"method","name":"_reduce_658","children":[],"call":["val [] "," end_args "]}," Ruby30Parser _reduce_657":{"type":"method","name":"_reduce_657","children":[],"call":[" lexer command_start= "," lexer "," lexer lex_state= "," end_args "]}," Ruby30Parser _reduce_653":{"type":"method","name":"_reduce_653","children":[],"call":[" assignable ","val [] "]}," Ruby30Parser _reduce_652":{"type":"method","name":"_reduce_652","children":[],"call":[" gettable ","Sexp  === ","val [] "]}," Ruby30Parser _reduce_650":{"type":"method","name":"_reduce_650","children":[],"call":[" s line "," s "," lexer lineno "," lexer "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "]}," Ruby30Parser _reduce_649":{"type":"method","name":"_reduce_649","children":[],"call":[" s line "," lexer lineno "," lexer "," s "]}," Ruby30Parser _reduce_648":{"type":"method","name":"_reduce_648","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," file "," debug "," assignable ","val [] "]}," Ruby30Parser _reduce_647":{"type":"method","name":"_reduce_647","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," assignable ","val [] "]}," Ruby30Parser _reduce_646":{"type":"method","name":"_reduce_646","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," gettable ","Sexp  === ","val [] "]}," Ruby30Parser _reduce_645":{"type":"method","name":"_reduce_645","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","result line "," gettable ","Sexp  === "," raise ","val inspect ","val first "," s line  line "," gettable  line "]}," Ruby30Parser _reduce_644":{"type":"method","name":"_reduce_644","children":[],"call":[" s line "," lexer lineno "," lexer "," s "]}," Ruby30Parser _reduce_634":{"type":"method","name":"_reduce_634","children":[],"call":["num -@ "]}," Ruby30Parser _reduce_632":{"type":"method","name":"_reduce_632","children":[],"call":[" debug "," s line ","result line "," s ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," lexer lineno "," lexer "," lexer lex_state= "," s line  line "," s line  last to_sym "," s line  last "," s line  sexp_type= "," s line  sexp_type "]}," Ruby30Parser _reduce_620":{"type":"method","name":"_reduce_620","children":[],"call":[" s line "," s ","id to_sym "," wrap ","val [] "," lexer lex_state= "," lexer "]}," Ruby30Parser _reduce_615":{"type":"method","name":"_reduce_615","children":[],"call":[" new_string "," wrap ","val [] "]}," Ruby30Parser _reduce_611":{"type":"method","name":"_reduce_611","children":[],"call":[" s line ","str line "," s "," lexer lex_strterm= "," lexer "]}," Ruby30Parser _reduce_597":{"type":"method","name":"_reduce_597","children":[],"call":[" s line "," s ","result line_max= "," s line  line_max= "]}," Ruby30Parser _reduce_592":{"type":"method","name":"_reduce_592","children":[],"call":["list line ","result line_max= ","list line  line_max= "]}," Ruby30Parser _reduce_587":{"type":"method","name":"_reduce_587","children":[],"call":["str line "," dedent ","func =~ "," new_word_list "," dedent  line "]}," Ruby30Parser _reduce_535":{"type":"method","name":"_reduce_535","children":[],"call":[" new_hash_pattern_tail ","kwarg line "," wrap ","val [] "]}," Ruby30Parser _reduce_534":{"type":"method","name":"_reduce_534","children":[],"call":[" new_hash_pattern_tail ","kwarg line "," s line ","lhs line "," s "," debug "," assignable ","lhs value ","lhs sexp_type "]}," Ruby30Parser _reduce_533":{"type":"method","name":"_reduce_533","children":[],"call":[" new_hash_pattern_tail ","kw_arg line "," s line ","lhs line "," s "]}," Ruby30Parser _reduce_532":{"type":"method","name":"_reduce_532","children":[],"call":[" s line ","expr line "," s ","expr sexp_type == ","expr sexp_type ","kwarg concat ","kw sexp_body "," s line  line "," s line  sexp_type == "," s line  sexp_type "]}," Ruby30Parser _reduce_531":{"type":"method","name":"_reduce_531","children":[],"call":[" array_pat_concat "]}," Ruby30Parser _reduce_529":{"type":"method","name":"_reduce_529","children":[],"call":[" new_hash_pattern_tail ","kwarg line "]}," Ruby30Parser _reduce_527":{"type":"method","name":"_reduce_527","children":[],"call":[" new_find_pattern_tail "," new_hash_pattern_tail ","kw_arg line "]}," Ruby30Parser _reduce_525":{"type":"method","name":"_reduce_525","children":[],"call":["result line "," new_array_pattern_tail "," array_pat_concat "," new_array_pattern_tail  line "," array_pat_concat  line "]}," Ruby30Parser _reduce_523":{"type":"method","name":"_reduce_523","children":[],"call":[]}," Ruby30Parser _reduce_472":{"type":"method","name":"_reduce_472","children":[],"call":[" list_append "," s line ","id line "," s "," in_kwarg= ","_values [] "," pop_pvtbl "," pop_pktbl "]}," Ruby30Parser _reduce_470":{"type":"method","name":"_reduce_470","children":[],"call":[" s line ","arg line "," s "]}," Ruby30Parser _reduce_371":{"type":"method","name":"_reduce_371","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby30Parser _reduce_370":{"type":"method","name":"_reduce_370","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby30Parser _reduce_369":{"type":"method","name":"_reduce_369","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby30Parser _reduce_361":{"type":"method","name":"_reduce_361","children":[],"call":[" value_expr ","val [] "]}," Ruby30Parser _reduce_360":{"type":"method","name":"_reduce_360","children":[],"call":[" s line "," s "]}," Ruby30Parser _reduce_359":{"type":"method","name":"_reduce_359","children":[],"call":[" s line "," s "]}," Ruby30Parser _reduce_358":{"type":"method","name":"_reduce_358","children":[],"call":[" s line "," s "]}," Ruby30Parser _reduce_357":{"type":"method","name":"_reduce_357","children":[],"call":[" s line "," s "]}," Ruby30Parser _reduce_356":{"type":"method","name":"_reduce_356","children":[],"call":[" lexer ignore_body_comments "," lexer "," in_single "," in_def= "," env unextend "," env "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," new_defs ","val insert ","val [] pop ","val [] ","val prepend ","val shift "," value_expr "]}," Ruby30Parser _reduce_355":{"type":"method","name":"_reduce_355","children":[],"call":[" lexer ignore_body_comments "," lexer "," in_def= "," env unextend "," env "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," new_defn ","val insert ","val first pop ","val first "," s line "," s "]}," Ruby30Parser _reduce_299":{"type":"method","name":"_reduce_299","children":[],"call":["val [] << ","val [] "," arg_concat "]}," Ruby30Parser _reduce_298":{"type":"method","name":"_reduce_298","children":[],"call":[" new_masgn_arg ","val [] ","val [] << "]}," Ruby30Parser _reduce_297":{"type":"method","name":"_reduce_297","children":[],"call":[" new_masgn_arg ","val [] "]}," Ruby30Parser _reduce_296":{"type":"method","name":"_reduce_296","children":[],"call":[" list_append "," s line "," s "," lexer lineno "," lexer "," new_masgn_arg ","val [] "," s  lexer lineno  "," lexer  lexer lineno no "]}," Ruby30Parser _reduce_295":{"type":"method","name":"_reduce_295","children":[],"call":[" list_append "," s line "," s "]}," Ruby30Parser _reduce_294":{"type":"method","name":"_reduce_294","children":[],"call":[" s line ","arg line "," s "," list_append "]}," Ruby30Parser _reduce_293":{"type":"method","name":"_reduce_293","children":[],"call":[" s line "," s "," lexer lineno "," lexer ","arg line "]}," Ruby30Parser _reduce_266":{"type":"method","name":"_reduce_266","children":[],"call":[" value_expr ","val [] "]}," Ruby30Parser _reduce_257":{"type":"method","name":"_reduce_257","children":[],"call":[" endless_method_name "," local_pop "," in_single "," s line "," s "," new_endless_defs "]}," Ruby30Parser _reduce_253":{"type":"method","name":"_reduce_253","children":[],"call":[" s line "," s ","c line "]}," Ruby30Parser _reduce_252":{"type":"method","name":"_reduce_252","children":[],"call":[" logical_op ","val [] "," s line "," s "]}," Ruby30Parser _reduce_251":{"type":"method","name":"_reduce_251","children":[],"call":[" logical_op ","val [] "]}," Ruby30Parser _reduce_250":{"type":"method","name":"_reduce_250","children":[],"call":[" new_call "," argl ","val [] ","val []= "," value_expr "," logical_op "]}," Ruby30Parser _reduce_249":{"type":"method","name":"_reduce_249","children":[],"call":[" new_call "," argl ","val [] ","val []= "," value_expr "]}," Ruby30Parser _reduce_235":{"type":"method","name":"_reduce_235","children":[],"call":[" new_call ","val [] "]}," Ruby30Parser _reduce_141":{"type":"method","name":"_reduce_141","children":[],"call":[" new_undef ","val [] "]}," Ruby30Parser _reduce_140":{"type":"method","name":"_reduce_140","children":[],"call":[" lexer lex_state= "," lexer "," new_undef ","val [] "]}," Ruby30Parser _reduce_139":{"type":"method","name":"_reduce_139","children":[],"call":[" new_undef ","val [] "," lexer lex_state= "," lexer "]}," Ruby30Parser _reduce_137":{"type":"method","name":"_reduce_137","children":[],"call":[" s line "," s ","id to_sym "," wrap ","val [] "]}," Ruby30Parser _reduce_135":{"type":"method","name":"_reduce_135","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby30Parser _reduce_130":{"type":"method","name":"_reduce_130","children":[],"call":["id to_sym ","result line ","pval line "," s ","name to_sym "," s  line "]}," Ruby30Parser _reduce_127":{"type":"method","name":"_reduce_127","children":[],"call":[" yyerror "]}," Ruby30Parser _reduce_124":{"type":"method","name":"_reduce_124","children":[],"call":[" s line "," s ","id to_sym ","expr line "," yyerror "," debug "," in_single > "," in_single "," in_def "," s expr line ine ","expr expr line ine "," in_singexpr line e > "," in_singexpr line e "]}," Ruby30Parser _reduce_123":{"type":"method","name":"_reduce_123","children":[],"call":[" new_attrasgn "," s line "," s ","id to_sym ","expr line "," yyerror "," debug "," in_single > "," in_single "," in_def "," s expr line ine ","expr expr line ine "," in_singexpr line e > "," in_singexpr line e "]}," Ruby30Parser _reduce_122":{"type":"method","name":"_reduce_122","children":[],"call":[" new_attrasgn "]}," Ruby30Parser _reduce_118":{"type":"method","name":"_reduce_118","children":[],"call":[" assignable "," debug "]}," Ruby30Parser _reduce_93":{"type":"method","name":"_reduce_93","children":[],"call":[" s line ","head line "," s ","lhs line ","lhs << ","rhs compact "]}," Ruby30Parser _reduce_81":{"type":"method","name":"_reduce_81","children":[],"call":["block insert "," block_dup_check "," new_call ","val [] ","msg to_sym ","result line ","id to_sym "," new_ new_call  "," new_call  line "]}," Ruby30Parser _reduce_79":{"type":"method","name":"_reduce_79","children":[],"call":["result insert "," block_dup_check ","call concat ","args sexp_body ","result line ","lhs line "," new_call ","op to_sym ","call concat  insert "," new_call  insert ","call concat  line "," new_call  line "]}," Ruby30Parser _reduce_63":{"type":"method","name":"_reduce_63","children":[],"call":["id to_sym "," lexer cond push "," lexer cond "," lexer "," lexer cmdarg push "," lexer cmdarg "," env extend "," env "," in_def= "," in_def "]}," Ruby30Parser _reduce_61":{"type":"method","name":"_reduce_61","children":[],"call":[" new_case ","expr line "," new_in "," in_kwarg= "," value_expr "," env unextend "," env "," value_expr  line "," value_ value_expr  "]}," Ruby30Parser _reduce_56":{"type":"method","name":"_reduce_56","children":[],"call":[" new_call line "," new_call ","cmd line "]}," Ruby30Parser _reduce_51":{"type":"method","name":"_reduce_51","children":[],"call":[" new_rescue "," new_resbody "," s line "," s "," value_expr "," value_ value_expr  "]}," Ruby30Parser _reduce_50":{"type":"method","name":"_reduce_50","children":[],"call":[" value_expr "," new_rescue "," new_resbody "," s line "," s "," value_ value_expr  "]}," Ruby30Parser _reduce_39":{"type":"method","name":"_reduce_39","children":[],"call":[" new_masgn "," new_rescue "," new_resbody "," s line ","resbody line "," s ","val [] "," new_ new_resbody  "," new_resbody  line "]}," Ruby30Parser _reduce_35":{"type":"method","name":"_reduce_35","children":[],"call":[" new_iter "," s line "," s "," yyerror "," debug "," in_single > "," in_single "," in_def "]}," Ruby27Parser _reduce_756":{"type":"method","name":"_reduce_756","children":[],"call":[]}," Ruby27Parser _reduce_755":{"type":"method","name":"_reduce_755","children":[],"call":[" yyerrok "]}," Ruby27Parser _reduce_752":{"type":"method","name":"_reduce_752","children":[],"call":[" yyerrok "]}," Ruby27Parser _reduce_725":{"type":"method","name":"_reduce_725","children":[],"call":[" s line "," s ","arg line "," s arg line  ","arg arg line  "]}," Ruby27Parser _reduce_724":{"type":"method","name":"_reduce_724","children":[],"call":[" s line "," s ","sym sexp_type= "]}," Ruby27Parser _reduce_723":{"type":"method","name":"_reduce_723","children":[],"call":[" s line "," s ","label to_sym ","lit line "," wrap "," s line  line "," wrap  line "]}," Ruby27Parser _reduce_722":{"type":"method","name":"_reduce_722","children":[],"call":[" s line ","v1 line "," s ","arg line "," s arg line  ","v1 arg line  ","arg arg line  "]}," Ruby27Parser _reduce_721":{"type":"method","name":"_reduce_721","children":[],"call":["result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] ","val [] dup "," s line "," s ","sym sexp_type= "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "]}," Ruby27Parser _reduce_718":{"type":"method","name":"_reduce_718","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] ","val [] dup "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "]}," Ruby27Parser _reduce_717":{"type":"method","name":"_reduce_717","children":[],"call":[" yyerror ","result sexp_type == ","result sexp_type ","val [] ","val []  sexp_type == ","val []  sexp_type "]}," Ruby27Parser _reduce_716":{"type":"method","name":"_reduce_716","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby27Parser _reduce_714":{"type":"method","name":"_reduce_714","children":[],"call":[" yyerror ","result sexp_type == ","result sexp_type ","val [] ","val []  sexp_type == ","val []  sexp_type "]}," Ruby27Parser _reduce_713":{"type":"method","name":"_reduce_713","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby27Parser _reduce_712":{"type":"method","name":"_reduce_712","children":[],"call":["(str \"&\") to_sym "," env []= "," env ","id to_sym "]}," Ruby27Parser _reduce_709":{"type":"method","name":"_reduce_709","children":[],"call":[" lexer lineno "," lexer "," env []= "," env ","(str \"&\") to_sym ","id to_sym "]}," Ruby27Parser _reduce_708":{"type":"method","name":"_reduce_708","children":[],"call":[" assignable ","id to_sym "]}," Ruby27Parser _reduce_705":{"type":"method","name":"_reduce_705","children":[],"call":[" block_append ","val [] "," assignable ","id to_sym "]}," Ruby27Parser _reduce_704":{"type":"method","name":"_reduce_704","children":[],"call":[" s line ","opt line "," s "]}," Ruby27Parser _reduce_703":{"type":"method","name":"_reduce_703","children":[],"call":["result << "]}," Ruby27Parser _reduce_702":{"type":"method","name":"_reduce_702","children":[],"call":[" s line ","optblk line "," s "," block_append ","val [] "]}," Ruby27Parser _reduce_701":{"type":"method","name":"_reduce_701","children":[],"call":[" assignable "," s line ","opt line "," s "]}," Ruby27Parser _reduce_700":{"type":"method","name":"_reduce_700","children":[],"call":[" assignable ","result << "," assignable  << "]}," Ruby27Parser _reduce_699":{"type":"method","name":"_reduce_699","children":[],"call":[" lexer lineno "," lexer "," env []= "," env "," s line ","optblk line "," s "]}," Ruby27Parser _reduce_698":{"type":"method","name":"_reduce_698","children":[],"call":[" assignable ","id to_sym "]}," Ruby27Parser _reduce_697":{"type":"method","name":"_reduce_697","children":[],"call":[" assignable "]}," Ruby27Parser _reduce_694":{"type":"method","name":"_reduce_694","children":[],"call":[" args "]}," Ruby27Parser _reduce_692":{"type":"method","name":"_reduce_692","children":[],"call":["list << ","item last "]}," Ruby27Parser _reduce_690":{"type":"method","name":"_reduce_690","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym "]}," Ruby27Parser _reduce_689":{"type":"method","name":"_reduce_689","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym ","list << ","item last "]}," Ruby27Parser _reduce_688":{"type":"method","name":"_reduce_688","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym "]}," Ruby27Parser _reduce_687":{"type":"method","name":"_reduce_687","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym "]}," Ruby27Parser _reduce_685":{"type":"method","name":"_reduce_685","children":[],"call":["result << ","item first ","Sexp  === "," s line ","list line "," s ","list sexp_type == ","list sexp_type ","result line_max= ","item line_max "," env []= "," env ","label to_sym "," s line  << "," s line  line_max= ","result item line_max = ","item item line_max  "]}," Ruby27Parser _reduce_684":{"type":"method","name":"_reduce_684","children":[],"call":[" new_arg "," s line "," s "," env []= "," env ","label to_sym "]}," Ruby27Parser _reduce_683":{"type":"method","name":"_reduce_683","children":[],"call":[]}," Ruby27Parser _reduce_680":{"type":"method","name":"_reduce_680","children":[],"call":[" env []= "," env ","id to_sym "]}," Ruby27Parser _reduce_678":{"type":"method","name":"_reduce_678","children":[],"call":[" yyerror "]}," Ruby27Parser _reduce_677":{"type":"method","name":"_reduce_677","children":[],"call":[" yyerror "," env []= "," env ","id to_sym "]}," Ruby27Parser _reduce_676":{"type":"method","name":"_reduce_676","children":[],"call":[" yyerror "]}," Ruby27Parser _reduce_675":{"type":"method","name":"_reduce_675","children":[],"call":[" yyerror "]}," Ruby27Parser _reduce_674":{"type":"method","name":"_reduce_674","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," yyerror "]}," Ruby27Parser _reduce_673":{"type":"method","name":"_reduce_673","children":[],"call":[" args "," yyerror "]}," Ruby27Parser _reduce_672":{"type":"method","name":"_reduce_672","children":[],"call":[" args "," yyerror "]}," Ruby27Parser _reduce_671":{"type":"method","name":"_reduce_671","children":[],"call":[" args "," s line "," lexer lineno "," lexer "," s "]}," Ruby27Parser _reduce_670":{"type":"method","name":"_reduce_670","children":[],"call":[" args "]}," Ruby27Parser _reduce_669":{"type":"method","name":"_reduce_669","children":[],"call":[" args "]}," Ruby27Parser _reduce_668":{"type":"method","name":"_reduce_668","children":[],"call":[" args "]}," Ruby27Parser _reduce_667":{"type":"method","name":"_reduce_667","children":[],"call":[" args "]}," Ruby27Parser _reduce_666":{"type":"method","name":"_reduce_666","children":[],"call":[" args "]}," Ruby27Parser _reduce_665":{"type":"method","name":"_reduce_665","children":[],"call":[" args "]}," Ruby27Parser _reduce_664":{"type":"method","name":"_reduce_664","children":[],"call":[" args "]}," Ruby27Parser _reduce_663":{"type":"method","name":"_reduce_663","children":[],"call":[" args "]}," Ruby27Parser _reduce_662":{"type":"method","name":"_reduce_662","children":[],"call":[" args "]}," Ruby27Parser _reduce_661":{"type":"method","name":"_reduce_661","children":[],"call":[" args "]}," Ruby27Parser _reduce_658":{"type":"method","name":"_reduce_658","children":[],"call":[" args "]}," Ruby27Parser _reduce_657":{"type":"method","name":"_reduce_657","children":[],"call":["val [] "," args "]}," Ruby27Parser _reduce_650":{"type":"method","name":"_reduce_650","children":[],"call":[" lexer lex_state "," lexer "," in_kwarg= "," in_kwarg "," args "]}," Ruby27Parser _reduce_648":{"type":"method","name":"_reduce_648","children":[],"call":[" end_args "]}," Ruby27Parser _reduce_647":{"type":"method","name":"_reduce_647","children":[],"call":[" end_args "," lexer lex_state "," lexer "," in_kwarg= "," in_kwarg "]}," Ruby27Parser _reduce_646":{"type":"method","name":"_reduce_646","children":[],"call":[" end_args "]}," Ruby27Parser _reduce_645":{"type":"method","name":"_reduce_645","children":[],"call":["val [] "," end_args "]}," Ruby27Parser _reduce_644":{"type":"method","name":"_reduce_644","children":[],"call":[" lexer command_start= "," lexer "," lexer lex_state= "," end_args "]}," Ruby27Parser _reduce_643":{"type":"method","name":"_reduce_643","children":[],"call":[" s line "," s "]}," Ruby27Parser _reduce_642":{"type":"method","name":"_reduce_642","children":[],"call":[" s line "," s ","val [] "]}," Ruby27Parser _reduce_641":{"type":"method","name":"_reduce_641","children":[],"call":[" debug "," assignable ","val [] "," lexer command_start= "," lexer "," lexer lex_state= "]}," Ruby27Parser _reduce_640":{"type":"method","name":"_reduce_640","children":[],"call":[" assignable ","val [] "," s line "," s "]}," Ruby27Parser _reduce_639":{"type":"method","name":"_reduce_639","children":[],"call":[" gettable ","Sexp  === ","val [] "," s line "," s "]}," Ruby27Parser _reduce_638":{"type":"method","name":"_reduce_638","children":[],"call":["result line "," gettable ","Sexp  === "," raise ","val inspect ","val first "," debug "," assignable ","val [] "," gettable  line "," assignable  line "]}," Ruby27Parser _reduce_637":{"type":"method","name":"_reduce_637","children":[],"call":[" s line "," s "," lexer lineno "," lexer "," assignable ","val [] "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "," assignab lexer lineno e ","va lexer lineno  [] "]}," Ruby27Parser _reduce_636":{"type":"method","name":"_reduce_636","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," gettable ","Sexp  === ","val [] "]}," Ruby27Parser _reduce_635":{"type":"method","name":"_reduce_635","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," file ","result line "," gettable ","Sexp  === "," raise ","val inspect ","val first "," s line  line "," gettable  line "]}," Ruby27Parser _reduce_634":{"type":"method","name":"_reduce_634","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "]}," Ruby27Parser _reduce_633":{"type":"method","name":"_reduce_633","children":[],"call":[" s line "," lexer lineno "," lexer "," s "]}," Ruby27Parser _reduce_632":{"type":"method","name":"_reduce_632","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," file "]}," Ruby27Parser _reduce_631":{"type":"method","name":"_reduce_631","children":[],"call":[" s line "," lexer lineno "," lexer "," s "]}," Ruby27Parser _reduce_592":{"type":"method","name":"_reduce_592","children":[],"call":[" new_qword_list ","val [] dup << "," new_qsym_list_entry ","val [] dup ","val [] "]}," Ruby27Parser _reduce_533":{"type":"method","name":"_reduce_533","children":[],"call":[" s line "," s ","lhs line "," value_expr "," value_expr  line "]}," Ruby27Parser _reduce_532":{"type":"method","name":"_reduce_532","children":[],"call":[" s line "," s ","lhs line "," value_expr "," value_expr  line "]}," Ruby27Parser _reduce_531":{"type":"method","name":"_reduce_531","children":[],"call":[" s line "," s "," assignable ","id to_sym "]}," Ruby27Parser _reduce_530":{"type":"method","name":"_reduce_530","children":[],"call":[" s line "," s ","id to_sym "," wrap ","val [] "]}," Ruby27Parser _reduce_529":{"type":"method","name":"_reduce_529","children":[],"call":[" s line ","lhs line "," s "," debug "," assignable ","lhs value ","lhs sexp_type "]}," Ruby27Parser _reduce_527":{"type":"method","name":"_reduce_527","children":[],"call":["kwarg concat ","kw sexp_body "," wrap ","val [] "]}," Ruby27Parser _reduce_525":{"type":"method","name":"_reduce_525","children":[],"call":[" new_hash_pattern_tail ","norest line "," s line ","lhs line "," s "]}," Ruby27Parser _reduce_523":{"type":"method","name":"_reduce_523","children":[],"call":[" new_hash_pattern_tail ","rest line "]}," Ruby27Parser _reduce_470":{"type":"method","name":"_reduce_470","children":[],"call":[" new_in "]}," Ruby27Parser _reduce_364":{"type":"method","name":"_reduce_364","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby27Parser _reduce_363":{"type":"method","name":"_reduce_363","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby27Parser _reduce_362":{"type":"method","name":"_reduce_362","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby27Parser _reduce_135":{"type":"method","name":"_reduce_135","children":[],"call":[" new_undef ","val [] "]}," Ruby27Parser _reduce_134":{"type":"method","name":"_reduce_134","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby27Parser _reduce_124":{"type":"method","name":"_reduce_124","children":[],"call":["id to_sym "]}," Ruby27Parser _reduce_123":{"type":"method","name":"_reduce_123","children":[],"call":[" s line "," s ","name to_sym "," wrap ","val [] "]}," Ruby27Parser _reduce_118":{"type":"method","name":"_reduce_118","children":[],"call":[" s line "," s ","id to_sym ","expr line "," yyerror "," debug "," in_single > "," in_single "," in_def "," s expr line ine ","expr expr line ine "," in_singexpr line e > "," in_singexpr line e "]}," Ruby27Parser _reduce_93":{"type":"method","name":"_reduce_93","children":[],"call":[" s line "," s ","node line "," s node line ine ","node node line ine "]}," Ruby27Parser _reduce_81":{"type":"method","name":"_reduce_81","children":[],"call":[" s line "," s "," ret_args "]}," Ruby27Parser _reduce_79":{"type":"method","name":"_reduce_79","children":[],"call":["result line "," new_yield "," new_yield  line "]}," Ruby27Parser _reduce_63":{"type":"method","name":"_reduce_63","children":[],"call":[" lexer cond pop "," lexer cond "," lexer "]}," Ruby27Parser _reduce_62":{"type":"method","name":"_reduce_62","children":[],"call":[" lexer cond push "," lexer cond "," lexer "]}," Ruby27Parser _reduce_61":{"type":"method","name":"_reduce_61","children":[],"call":[" value_expr ","val [] "]}," Ruby27Parser _reduce_56":{"type":"method","name":"_reduce_56","children":[],"call":[" new_call line "," new_call "]}," Ruby27Parser _reduce_51":{"type":"method","name":"_reduce_51","children":[],"call":[" new_rescue "," new_resbody "," s line "," s "," value_expr "," value_ value_expr  "]}," Ruby27Parser _reduce_50":{"type":"method","name":"_reduce_50","children":[],"call":[" value_expr "]}," Ruby27Parser _reduce_39":{"type":"method","name":"_reduce_39","children":[],"call":[" new_masgn "," new_rescue "," new_resbody "," s line ","resbody line "," s "," new_ new_resbody  "," new_resbody  line "]}," Ruby27Parser _reduce_35":{"type":"method","name":"_reduce_35","children":[],"call":[" new_iter "," s line "," s "," yyerror "," debug "," in_single > "," in_single "," in_def "]}," Ruby26Parser _reduce_372":{"type":"method","name":"_reduce_372","children":[],"call":[" s line "," s "]}," Ruby26Parser _reduce_356":{"type":"method","name":"_reduce_356","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby26Parser _reduce_355":{"type":"method","name":"_reduce_355","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby26Parser _reduce_354":{"type":"method","name":"_reduce_354","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby26Parser _reduce_296":{"type":"method","name":"_reduce_296","children":[],"call":[" lexer lineno "," lexer "," lexer cmdarg push "," lexer cmdarg "]}," Ruby26Parser _reduce_295":{"type":"method","name":"_reduce_295","children":[],"call":["result line "," new_call ","msg to_sym "," new_call  line "]}," Ruby26Parser _reduce_250":{"type":"method","name":"_reduce_250","children":[],"call":[" new_call "," argl ","op to_sym "," warn "]}," Ruby26Parser _reduce_249":{"type":"method","name":"_reduce_249","children":[],"call":[" new_call "," argl ","op to_sym "]}," Ruby26Parser _reduce_205":{"type":"method","name":"_reduce_205","children":[],"call":[" new_op_asgn "]}," Ruby26Parser _reduce_204":{"type":"method","name":"_reduce_204","children":[],"call":[" new_assign ","val [] "]}," Ruby26Parser _reduce_130":{"type":"method","name":"_reduce_130","children":[],"call":[" new_undef ","val [] "]}," Ruby26Parser _reduce_128":{"type":"method","name":"_reduce_128","children":[],"call":[" s line "," s ","id to_sym "," wrap ","val [] "]}," Ruby26Parser _reduce_122":{"type":"method","name":"_reduce_122","children":[],"call":["result line ","pval line "," s ","name to_sym "," s  line "]}," Ruby26Parser _reduce_118":{"type":"method","name":"_reduce_118","children":[],"call":[" yyerror "]}," Ruby26Parser _reduce_93":{"type":"method","name":"_reduce_93","children":[],"call":[" s line "," s ","post sexp_body ","post line "," s post line ine ","post post line ine "]}," Ruby26Parser _reduce_81":{"type":"method","name":"_reduce_81","children":[],"call":["val [] "]}," Ruby26Parser _reduce_79":{"type":"method","name":"_reduce_79","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last "," s val [] last  "]}," Ruby26Parser _reduce_61":{"type":"method","name":"_reduce_61","children":[],"call":[]}," Ruby26Parser _reduce_56":{"type":"method","name":"_reduce_56","children":[],"call":[" new_call line ","cmd line "," new_call "]}," Ruby26Parser _reduce_50":{"type":"method","name":"_reduce_50","children":[],"call":[" new_rescue "," new_resbody "," s line "," s "," value_expr "," value_ value_expr  "]}," Ruby26Parser _reduce_39":{"type":"method","name":"_reduce_39","children":[],"call":[" new_masgn ","val [] "]}," Ruby26Parser _reduce_35":{"type":"method","name":"_reduce_35","children":[],"call":[" new_iter "," s line "," s "," yyerror "," debug "," in_single > "," in_single "," in_def "]}," Ruby25Parser _reduce_354":{"type":"method","name":"_reduce_354","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby25Parser _reduce_353":{"type":"method","name":"_reduce_353","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby25Parser _reduce_352":{"type":"method","name":"_reduce_352","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby25Parser _reduce_130":{"type":"method","name":"_reduce_130","children":[],"call":[" new_undef ","val [] "]}," Ruby25Parser _reduce_128":{"type":"method","name":"_reduce_128","children":[],"call":[" s line "," s ","id to_sym "," wrap ","val [] "]}," Ruby25Parser _reduce_118":{"type":"method","name":"_reduce_118","children":[],"call":[" yyerror "]}," Ruby25Parser _reduce_50":{"type":"method","name":"_reduce_50","children":[],"call":[" new_rescue "," new_resbody "," s line "," s "," value_expr "," value_ value_expr  "]}," Ruby24Parser _reduce_354":{"type":"method","name":"_reduce_354","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "," s ","val [] "]}," Ruby24Parser _reduce_353":{"type":"method","name":"_reduce_353","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby24Parser _reduce_352":{"type":"method","name":"_reduce_352","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby24Parser _reduce_130":{"type":"method","name":"_reduce_130","children":[],"call":[" new_undef ","val [] "]}," Ruby24Parser _reduce_128":{"type":"method","name":"_reduce_128","children":[],"call":[" s line "," s ","id to_sym "," wrap ","val [] "]}," Ruby24Parser _reduce_118":{"type":"method","name":"_reduce_118","children":[],"call":[" yyerror "]}," Ruby24Parser _reduce_50":{"type":"method","name":"_reduce_50","children":[],"call":[" new_rescue "," new_resbody "," s line "," s "," value_expr "," value_ value_expr  "]}," Ruby23Parser _reduce_353":{"type":"method","name":"_reduce_353","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "," s ","val [] "]}," Ruby23Parser _reduce_352":{"type":"method","name":"_reduce_352","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby23Parser _reduce_351":{"type":"method","name":"_reduce_351","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby23Parser _reduce_275":{"type":"method","name":"_reduce_275","children":[],"call":[" list_append "," s ","val [] "]}," Ruby23Parser _reduce_246":{"type":"method","name":"_reduce_246","children":[],"call":[" new_call "," argl ","op to_sym "," args "," array_to_hash ","val [] "]}," Ruby23Parser _reduce_127":{"type":"method","name":"_reduce_127","children":[],"call":[" s line "," s ","id to_sym "," wrap ","val [] "," lexer lex_state= "," lexer "]}," Ruby22Parser _reduce_353":{"type":"method","name":"_reduce_353","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "," s ","val [] "]}," Ruby22Parser _reduce_352":{"type":"method","name":"_reduce_352","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby22Parser _reduce_351":{"type":"method","name":"_reduce_351","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby22Parser _reduce_275":{"type":"method","name":"_reduce_275","children":[],"call":[" list_append "]}," Ruby22Parser _reduce_246":{"type":"method","name":"_reduce_246","children":[],"call":[" new_call "," argl ","op to_sym "]}," Ruby22Parser _reduce_127":{"type":"method","name":"_reduce_127","children":[],"call":[" s line "," s ","id to_sym "," wrap ","val [] "]}," Ruby21Parser _reduce_353":{"type":"method","name":"_reduce_353","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "," s ","val [] "]}," Ruby21Parser _reduce_352":{"type":"method","name":"_reduce_352","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby21Parser _reduce_351":{"type":"method","name":"_reduce_351","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby21Parser _reduce_275":{"type":"method","name":"_reduce_275","children":[],"call":[" list_append "]}," Ruby21Parser _reduce_246":{"type":"method","name":"_reduce_246","children":[],"call":[" new_call "," argl ","op to_sym "]}," Ruby21Parser _reduce_127":{"type":"method","name":"_reduce_127","children":[],"call":[" s line "," s ","id to_sym "," wrap ","val [] "]}," Ruby20Parser _reduce_353":{"type":"method","name":"_reduce_353","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby20Parser _reduce_352":{"type":"method","name":"_reduce_352","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby20Parser _reduce_351":{"type":"method","name":"_reduce_351","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby20Parser _reduce_277":{"type":"method","name":"_reduce_277","children":[],"call":[" list_append "]}," Ruby20Parser _reduce_249":{"type":"method","name":"_reduce_249","children":[],"call":[" new_call "," argl ","op to_sym "," warn "]}," Ruby20Parser _reduce_248":{"type":"method","name":"_reduce_248","children":[],"call":[" new_call "," argl ","op to_sym "]}," Ruby20Parser _reduce_128":{"type":"method","name":"_reduce_128","children":[],"call":[" s line "," s ","id to_sym "," wrap ","val [] "]}," Symbol end_with?":{"type":"method","name":"end_with?","children":[],"call":[" to_s end_with? "," to_s "]}," Array prepend":{"type":"method","name":"prepend","children":[],"call":[" []= "]}," Ruby30Parser _reduce_661":{"type":"method","name":"_reduce_661","children":[],"call":[" end_args "," in_argdef= "]}," RubyParserStuff wrap":{"type":"method","name":"wrap","children":[],"call":[" s line "," s ","value to_sym ","value respond_to? ","value to_sym  to_sym ","value to_sym  respond_to? "]}," RubyParserStuff new_endless_defs":{"type":"method","name":"new_endless_defs","children":[],"call":[" endless_method_name "," local_pop "," in_single "," s line "," s "," new_rescue "," new_resbody ","result comments= "," comments pop "," comments "," s line  comments= "]}," RubyParserStuff new_endless_defn":{"type":"method","name":"new_endless_defn","children":[],"call":[" endless_method_name "," local_pop "," s line "," s "," new_rescue "," new_resbody ","result comments= "," comments pop "," comments "," s line  comments= "]}," Ruby31Parser _reduce_none":{"type":"method","name":"_reduce_none","children":[],"call":["val [] "]}," Ruby31Parser _reduce_785":{"type":"method","name":"_reduce_785","children":[],"call":[]}," Ruby31Parser _reduce_784":{"type":"method","name":"_reduce_784","children":[],"call":[" yyerrok "]}," Ruby31Parser _reduce_781":{"type":"method","name":"_reduce_781","children":[],"call":[" yyerrok "]}," Ruby31Parser _reduce_777":{"type":"method","name":"_reduce_777","children":[],"call":[" lexer lineno "," lexer "]}," Ruby31Parser _reduce_776":{"type":"method","name":"_reduce_776","children":[],"call":[" lexer lineno "," lexer "," yyerrok "]}," Ruby31Parser _reduce_754":{"type":"method","name":"_reduce_754","children":[],"call":[" s line "," s ","arg line "," s arg line  ","arg arg line  "]}," Ruby31Parser _reduce_753":{"type":"method","name":"_reduce_753","children":[],"call":[" s line "," s ","sym sexp_type= "]}," Ruby31Parser _reduce_752":{"type":"method","name":"_reduce_752","children":[],"call":[" s line ","lit line "," s "," wrap ","val [] "," wrap  line "]}," Ruby31Parser _reduce_751":{"type":"method","name":"_reduce_751","children":[],"call":[" s line ","lit line "," s "," wrap "," wrap  line "]}," Ruby31Parser _reduce_750":{"type":"method","name":"_reduce_750","children":[],"call":[" s line ","v1 line "," s "]}," Ruby31Parser _reduce_749":{"type":"method","name":"_reduce_749","children":[],"call":["result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] ","val [] dup "," s line "," s ","arg line "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "," s arg line  ","arg arg line  "]}," Ruby31Parser _reduce_746":{"type":"method","name":"_reduce_746","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","lit line "," wrap ","val [] "," wrap  line "]}," Ruby31Parser _reduce_745":{"type":"method","name":"_reduce_745","children":[],"call":[" yyerror ","result sexp_type == ","result sexp_type ","val [] "," s line ","lit line "," s "," wrap ","v1 line ","val []  sexp_type == "," s line  sexp_type == ","val []  sexp_type "," s line  sexp_type "," wrap  line "]}," Ruby31Parser _reduce_744":{"type":"method","name":"_reduce_744","children":[],"call":[" lexer lex_state= "," lexer "," s line ","v1 line "," s ","result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] ","val [] dup "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "]}," Ruby31Parser _reduce_742":{"type":"method","name":"_reduce_742","children":[],"call":[]}," Ruby31Parser _reduce_741":{"type":"method","name":"_reduce_741","children":[],"call":[" s line "," lexer lineno "," lexer "," s "]}," Ruby31Parser _reduce_740":{"type":"method","name":"_reduce_740","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," yyerror ","result sexp_type == ","result sexp_type ","val [] "," s line  sexp_type == ","val []  sexp_type == "," s line  sexp_type ","val []  sexp_type "]}," Ruby31Parser _reduce_739":{"type":"method","name":"_reduce_739","children":[],"call":["(str \"&\") to_sym "," env []= "," env ","id to_sym "," yyerror ","result sexp_type == ","result sexp_type ","val [] "," lexer lex_state= "," lexer ","val []  sexp_type == ","val []  sexp_type "]}," Ruby31Parser _reduce_736":{"type":"method","name":"_reduce_736","children":[],"call":[" lexer lineno "," lexer "," env []= "," env "]}," Ruby31Parser _reduce_735":{"type":"method","name":"_reduce_735","children":[],"call":[" assignable ","id to_sym "]}," Ruby31Parser _reduce_732":{"type":"method","name":"_reduce_732","children":[],"call":[" block_append ","val [] "]}," Ruby31Parser _reduce_731":{"type":"method","name":"_reduce_731","children":[],"call":[" s line ","opt line "," s "," env []= "," env "]}," Ruby31Parser _reduce_730":{"type":"method","name":"_reduce_730","children":[],"call":["result << "," env []= "," env "," assignable ","id to_sym "]}," Ruby31Parser _reduce_729":{"type":"method","name":"_reduce_729","children":[],"call":[" s line ","optblk line "," s "," assignable ","id to_sym "]}," Ruby31Parser _reduce_728":{"type":"method","name":"_reduce_728","children":[],"call":[" assignable "]}," Ruby31Parser _reduce_727":{"type":"method","name":"_reduce_727","children":[],"call":[" assignable "," block_append ","val [] "]}," Ruby31Parser _reduce_726":{"type":"method","name":"_reduce_726","children":[],"call":[" lexer lineno "," lexer "," env []= "," env "," block_append ","val [] "," s line ","opt line "," s "]}," Ruby31Parser _reduce_725":{"type":"method","name":"_reduce_725","children":[],"call":[" assignable ","id to_sym "," s line ","opt line "," s ","result << "," s line  << "]}," Ruby31Parser _reduce_724":{"type":"method","name":"_reduce_724","children":[],"call":["result << "," s line ","optblk line "," s "," s line  << "]}," Ruby31Parser _reduce_721":{"type":"method","name":"_reduce_721","children":[],"call":[" args "," assignable "," env []= "," env "]}," Ruby31Parser _reduce_719":{"type":"method","name":"_reduce_719","children":[],"call":["list << ","item last "," assignable ","id to_sym "]}," Ruby31Parser _reduce_717":{"type":"method","name":"_reduce_717","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym "]}," Ruby31Parser _reduce_716":{"type":"method","name":"_reduce_716","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym "," args "]}," Ruby31Parser _reduce_715":{"type":"method","name":"_reduce_715","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym "," args "]}," Ruby31Parser _reduce_714":{"type":"method","name":"_reduce_714","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym ","list << ","item last "]}," Ruby31Parser _reduce_712":{"type":"method","name":"_reduce_712","children":[],"call":["result << ","item first ","Sexp  === "," s line ","list line "," s ","list sexp_type == ","list sexp_type ","result line_max= ","item line_max "," in_argdef= "," env []= "," env ","label to_sym "," s line  << "," s line  line_max= ","result item line_max = ","item item line_max  "]}," Ruby31Parser _reduce_711":{"type":"method","name":"_reduce_711","children":[],"call":[" new_arg "," s line "," s "," env []= "," env ","label to_sym "," in_argdef= "]}," Ruby31Parser _reduce_710":{"type":"method","name":"_reduce_710","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym "," in_argdef= "]}," Ruby31Parser _reduce_707":{"type":"method","name":"_reduce_707","children":[],"call":[" env []= "," env ","id to_sym ","result line_max= ","result << ","item line_max ","Sexp  === "," s line ","list line "," s ","list sexp_type == ","list sexp_type ","result item line_max = "," s line  line_max= "," s line  << ","item item line_max  "]}," Ruby31Parser _reduce_705":{"type":"method","name":"_reduce_705","children":[],"call":[" yyerror "," new_arg "]}," Ruby31Parser _reduce_704":{"type":"method","name":"_reduce_704","children":[],"call":[" yyerror "]}," Ruby31Parser _reduce_703":{"type":"method","name":"_reduce_703","children":[],"call":[" yyerror "]}," Ruby31Parser _reduce_702":{"type":"method","name":"_reduce_702","children":[],"call":[" yyerror "," env []= "," env ","id to_sym "]}," Ruby31Parser _reduce_701":{"type":"method","name":"_reduce_701","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," env []= "," env ","id to_sym "]}," Ruby31Parser _reduce_700":{"type":"method","name":"_reduce_700","children":[],"call":[" args "," yyerror "]}," Ruby31Parser _reduce_699":{"type":"method","name":"_reduce_699","children":[],"call":[" args "," yyerror "]}," Ruby31Parser _reduce_698":{"type":"method","name":"_reduce_698","children":[],"call":[" args "," yyerror "]}," Ruby31Parser _reduce_697":{"type":"method","name":"_reduce_697","children":[],"call":[" args "," yyerror "]}," Ruby31Parser _reduce_696":{"type":"method","name":"_reduce_696","children":[],"call":[" args "," yyerror "," s line "," s "]}," Ruby31Parser _reduce_695":{"type":"method","name":"_reduce_695","children":[],"call":[" args "," s line "," s "]}," Ruby31Parser _reduce_694":{"type":"method","name":"_reduce_694","children":[],"call":[" args "]}," Ruby31Parser _reduce_693":{"type":"method","name":"_reduce_693","children":[],"call":[" args "]}," Ruby31Parser _reduce_692":{"type":"method","name":"_reduce_692","children":[],"call":[" args "]}," Ruby31Parser _reduce_691":{"type":"method","name":"_reduce_691","children":[],"call":[" args "]}," Ruby31Parser _reduce_690":{"type":"method","name":"_reduce_690","children":[],"call":[" args "]}," Ruby31Parser _reduce_689":{"type":"method","name":"_reduce_689","children":[],"call":[" args "]}," Ruby31Parser _reduce_688":{"type":"method","name":"_reduce_688","children":[],"call":[" args "]}," Ruby31Parser _reduce_687":{"type":"method","name":"_reduce_687","children":[],"call":[" args "]}," Ruby31Parser _reduce_686":{"type":"method","name":"_reduce_686","children":[],"call":[" args "]}," Ruby31Parser _reduce_685":{"type":"method","name":"_reduce_685","children":[],"call":[" args "]}," Ruby31Parser _reduce_684":{"type":"method","name":"_reduce_684","children":[],"call":["val [] "," args "]}," Ruby31Parser _reduce_681":{"type":"method","name":"_reduce_681","children":[],"call":[" args "]}," Ruby31Parser _reduce_680":{"type":"method","name":"_reduce_680","children":[],"call":[" args "]}," Ruby31Parser _reduce_679":{"type":"method","name":"_reduce_679","children":[],"call":[" args ","val [] "]}," Ruby31Parser _reduce_678":{"type":"method","name":"_reduce_678","children":[],"call":[" end_args ","val [] "]}," Ruby31Parser _reduce_677":{"type":"method","name":"_reduce_677","children":[],"call":[" lexer lex_state "," lexer "," in_kwarg= "," in_kwarg "]}," Ruby31Parser _reduce_675":{"type":"method","name":"_reduce_675","children":[],"call":[" end_args "," args "]}," Ruby31Parser _reduce_674":{"type":"method","name":"_reduce_674","children":[],"call":[" end_args "," args "]}," Ruby31Parser _reduce_672":{"type":"method","name":"_reduce_672","children":[],"call":[" end_args "," lexer lex_state "," lexer "," in_argdef= "," in_kwarg= "," in_kwarg "]}," Ruby31Parser _reduce_671":{"type":"method","name":"_reduce_671","children":[],"call":["val [] "," lexer lex_state "," lexer "," in_kwarg= "," in_kwarg "]}," Ruby31Parser _reduce_670":{"type":"method","name":"_reduce_670","children":[],"call":[" lexer command_start= "," lexer "," lexer lex_state= "," end_args "," in_argdef= "]}," Ruby31Parser _reduce_669":{"type":"method","name":"_reduce_669","children":[],"call":[" s line "," s "," end_args "," in_argdef= "]}," Ruby31Parser _reduce_668":{"type":"method","name":"_reduce_668","children":[],"call":[" s line "," s "," end_args "]}," Ruby31Parser _reduce_667":{"type":"method","name":"_reduce_667","children":[],"call":[" debug "," assignable ","val [] "]}," Ruby31Parser _reduce_666":{"type":"method","name":"_reduce_666","children":[],"call":[" assignable ","val [] "]}," Ruby31Parser _reduce_665":{"type":"method","name":"_reduce_665","children":[],"call":[" gettable ","Sexp  === ","val [] "," lexer command_start= "," lexer "," lexer lex_state= "]}," Ruby31Parser _reduce_664":{"type":"method","name":"_reduce_664","children":[],"call":["result line "," gettable ","Sexp  === "," raise ","val inspect ","val first "," lexer command_start= "," lexer "," lexer lex_state= "," s line "," s "," gettable  line "," s line  line "]}," Ruby31Parser _reduce_663":{"type":"method","name":"_reduce_663","children":[],"call":[" s line "," s "," lexer lineno "," lexer "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "]}," Ruby31Parser _reduce_662":{"type":"method","name":"_reduce_662","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," debug "," assignable ","val [] "]}," Ruby31Parser _reduce_661":{"type":"method","name":"_reduce_661","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," file "," debug "," assignable ","val [] "]}," Ruby31Parser _reduce_660":{"type":"method","name":"_reduce_660","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," assignable ","val [] "," gettable ","Sexp  === "]}," Ruby31Parser _reduce_659":{"type":"method","name":"_reduce_659","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," gettable ","Sexp  === ","val [] ","result line "," raise ","val inspect ","val first "," s line  line "," gettable  line "]}," Ruby31Parser _reduce_658":{"type":"method","name":"_reduce_658","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","result line "," gettable ","Sexp  === "," raise ","val inspect ","val first "," s line  line "," gettable  line "]}," Ruby31Parser _reduce_657":{"type":"method","name":"_reduce_657","children":[],"call":[" s line "," lexer lineno "," lexer "," s "]}," Ruby31Parser _reduce_651":{"type":"method","name":"_reduce_651","children":[],"call":[" wrap ","val [] "," s line "," s "]}," Ruby31Parser _reduce_650":{"type":"method","name":"_reduce_650","children":[],"call":[" wrap ","val [] "]}," Ruby31Parser _reduce_649":{"type":"method","name":"_reduce_649","children":[],"call":[" wrap ","val [] "]}," Ruby31Parser _reduce_644":{"type":"method","name":"_reduce_644","children":[],"call":["num -@ "," wrap ","val [] "]}," Ruby31Parser _reduce_642":{"type":"method","name":"_reduce_642","children":[],"call":[" debug "," s line ","result line "," s ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," lexer lineno "," lexer "," lexer lex_state= "," s line  line "," s line  last to_sym "," s line  last "," s line  sexp_type= "," s line  sexp_type "]}," Ruby31Parser _reduce_637":{"type":"method","name":"_reduce_637","children":[],"call":[" wrap ","val [] "," lexer lex_state= "," lexer "," debug "," s line ","result line "," s ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," wrap  line "," s line  line "," wrap  last to_sym "," s line  last to_sym "," wrap  last "," s line  last "," wrap  sexp_type= "," s line  sexp_type= "," wrap  sexp_type "," s line  sexp_type "]}," Ruby31Parser _reduce_636":{"type":"method","name":"_reduce_636","children":[],"call":[" wrap ","val [] "," lexer lex_state= "," lexer "," debug "," s line ","result line "," s ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," wrap  line "," s line  line "," wrap  last to_sym "," s line  last to_sym "," wrap  last "," s line  last "," wrap  sexp_type= "," s line  sexp_type= "," wrap  sexp_type "," s line  sexp_type "]}," Ruby31Parser _reduce_632":{"type":"method","name":"_reduce_632","children":[],"call":[" wrap ","val [] "," lexer lex_state= "," lexer "]}," Ruby31Parser _reduce_631":{"type":"method","name":"_reduce_631","children":[],"call":[" wrap ","val [] "," lexer lex_state= "," lexer "]}," Ruby31Parser _reduce_630":{"type":"method","name":"_reduce_630","children":[],"call":[" wrap ","val [] "," lexer lex_state= "," lexer "]}," Ruby31Parser _reduce_629":{"type":"method","name":"_reduce_629","children":[],"call":[" raise ","stmt inspect "," debug "," s line "," s ","stmt sexp_type "," lexer lex_state= "," lexer "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "]}," Ruby31Parser _reduce_628":{"type":"method","name":"_reduce_628","children":[],"call":[" lexer lex_state= "," lexer "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," lexer lineno "," lexer lex_state "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "]}," Ruby31Parser _reduce_627":{"type":"method","name":"_reduce_627","children":[],"call":[" s line ","str line "," s "," lexer lex_strterm= "," lexer "," wrap ","val [] "]}," Ruby31Parser _reduce_626":{"type":"method","name":"_reduce_626","children":[],"call":[" lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm "," wrap ","val [] "]}," Ruby31Parser _reduce_625":{"type":"method","name":"_reduce_625","children":[],"call":[" new_string "," wrap ","val [] "]}," Ruby31Parser _reduce_624":{"type":"method","name":"_reduce_624","children":[],"call":[" literal_concat "," wrap ","val [] "," raise ","stmt inspect "," debug "," s line "," s ","stmt sexp_type "," lexer lex_state= "," lexer "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "]}," Ruby31Parser _reduce_623":{"type":"method","name":"_reduce_623","children":[],"call":[" raise ","stmt inspect "," debug "," s line "," s ","stmt sexp_type "," lexer lex_state= "," lexer "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer cond push "," lexer cmdarg push "," lexer lex_state "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "]}," Ruby31Parser _reduce_622":{"type":"method","name":"_reduce_622","children":[],"call":[" literal_concat "," lexer lex_state= "," lexer "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," lexer lex_state "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "," s line ","str line "," s "]}," Ruby31Parser _reduce_621":{"type":"method","name":"_reduce_621","children":[],"call":[" s line ","str line "," s "," lexer lex_strterm= "," lexer "," lexer lex_state= "," lexer lex_strterm "]}," Ruby31Parser _reduce_620":{"type":"method","name":"_reduce_620","children":[],"call":[" literal_concat "," lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm "," new_string "]}," Ruby31Parser _reduce_619":{"type":"method","name":"_reduce_619","children":[],"call":[" s line "," s "," +@ "," prev_value_to_lineno ","_values last "," new_string "," literal_concat "," s  prev_value_to_lineno  "," prev_value_to_ prev_value_to_lineno no "]}," Ruby31Parser _reduce_618":{"type":"method","name":"_reduce_618","children":[],"call":["val [] dup << "," new_qsym_list_entry ","val [] dup ","val [] "," literal_concat "]}," Ruby31Parser _reduce_617":{"type":"method","name":"_reduce_617","children":[],"call":[" new_qsym_list "," literal_concat "]}," Ruby31Parser _reduce_616":{"type":"method","name":"_reduce_616","children":[],"call":["val [] dup << "," new_qword_list_entry ","val [] dup ","val [] "," literal_concat "]}," Ruby31Parser _reduce_615":{"type":"method","name":"_reduce_615","children":[],"call":[" new_qword_list "," literal_concat "]}," Ruby31Parser _reduce_614":{"type":"method","name":"_reduce_614","children":[],"call":["list line ","result line_max= "," literal_concat "," s line "," s "," +@ "," prev_value_to_lineno ","_values last ","list  prev_value_to_lineno  ","list line  line_max= "," literal_concat  line_max= "," s line  line_max= ","result  prev_value_to_lineno _max= "," s  prev_value_to_lineno  "," prev_value_to_ prev_value_to_lineno no "]}," Ruby31Parser _reduce_613":{"type":"method","name":"_reduce_613","children":[],"call":[" s line "," s ","result line_max= "," +@ "," prev_value_to_lineno ","_values last ","val [] dup << "," new_qsym_list_entry ","val [] dup ","val [] "," s  prev_value_to_lineno  "," s line  line_max= ","val [] dup <<  line_max= ","result  prev_value_to_lineno _max= "," prev_value_to_ prev_value_to_lineno no "]}," Ruby31Parser _reduce_612":{"type":"method","name":"_reduce_612","children":[],"call":["list line ","result line_max= ","val [] dup << "," new_qsym_list_entry ","val [] dup ","val [] "," new_qsym_list ","list line  line_max= ","val [] dup <<  line_max= "," new_qsym_list  line_max= "]}," Ruby31Parser _reduce_611":{"type":"method","name":"_reduce_611","children":[],"call":[" s line "," s ","result line_max= "," new_qsym_list ","val [] dup << "," new_qword_list_entry ","val [] dup ","val [] "," s line  line_max= "," new_qsym_list  line_max= ","val [] dup <<  line_max= "]}," Ruby31Parser _reduce_610":{"type":"method","name":"_reduce_610","children":[],"call":["list dup << "," new_symbol_list_entry ","list dup ","val [] dup << "," new_qword_list_entry ","val [] dup ","val [] "," new_qword_list "]}," Ruby31Parser _reduce_609":{"type":"method","name":"_reduce_609","children":[],"call":[" new_symbol_list "," new_qword_list ","result line_max= ","list line "," new_symbol_list  line_max= "," new_qword_list  line_max= ","list line  line_max= "]}," Ruby31Parser _reduce_608":{"type":"method","name":"_reduce_608","children":[],"call":["list line ","result line_max= "," s line "," s ","list line  line_max= "," s line  line_max= "]}," Ruby31Parser _reduce_607":{"type":"method","name":"_reduce_607","children":[],"call":[" s line "," s ","result line_max= ","list line "," s line  line_max= ","list line  line_max= "]}," Ruby31Parser _reduce_606":{"type":"method","name":"_reduce_606","children":[],"call":[" literal_concat ","val [] ","result line_max= ","list line "," s line "," s "," literal_concat  line_max= ","list line  line_max= "," s line  line_max= "]}," Ruby31Parser _reduce_604":{"type":"method","name":"_reduce_604","children":[],"call":["val [] dup << "," new_word_list_entry ","val [] dup ","val [] ","list dup << "," new_symbol_list_entry ","list dup "," new_symbol_list "]}," Ruby31Parser _reduce_603":{"type":"method","name":"_reduce_603","children":[],"call":[" new_word_list "," new_symbol_list ","result line_max= ","list line "," new_word_list  line_max= "," new_symbol_list  line_max= ","list line  line_max= "]}," Ruby31Parser _reduce_602":{"type":"method","name":"_reduce_602","children":[],"call":["list line ","result line_max= "," s line "," s ","list line  line_max= "," s line  line_max= "]}," Ruby31Parser _reduce_601":{"type":"method","name":"_reduce_601","children":[],"call":[" s line "," s ","result line_max= "," literal_concat ","val [] "," s line  line_max= "," literal_concat  line_max= "]}," Ruby31Parser _reduce_600":{"type":"method","name":"_reduce_600","children":[],"call":[" new_regexp "," literal_concat ","val [] "]}," Ruby31Parser _reduce_599":{"type":"method","name":"_reduce_599","children":[],"call":[" new_xstring ","val [] dup << "," new_word_list_entry ","val [] dup ","val [] "]}," Ruby31Parser _reduce_598":{"type":"method","name":"_reduce_598","children":[],"call":[" new_string ","val [] dup << "," new_word_list_entry ","val [] dup ","val [] "," new_word_list "]}," Ruby31Parser _reduce_597":{"type":"method","name":"_reduce_597","children":[],"call":["str line "," dedent ","func =~ "," new_word_list ","result line_max= ","list line "," dedent  line ","str line  line_max= "," new_word_list  line_max= ","list line  line_max= "]}," Ruby31Parser _reduce_596":{"type":"method","name":"_reduce_596","children":[],"call":[" literal_concat ","val [] ","result line_max= ","list line "," s line "," s "," literal_concat  line_max= ","list line  line_max= "," s line  line_max= "]}," Ruby31Parser _reduce_594":{"type":"method","name":"_reduce_594","children":[],"call":[" debug "," new_regexp "," new_xstring "]}," Ruby31Parser _reduce_593":{"type":"method","name":"_reduce_593","children":[],"call":[" s ","str value ","str sexp_type == ","str sexp_type "," new_xstring "," new_string "," s  value "," s  sexp_type == "," s  sexp_type "," new_x s ing "," new_ s ing "]}," Ruby31Parser _reduce_591":{"type":"method","name":"_reduce_591","children":[],"call":[" s line "," s ","str line "," dedent ","func =~ "," literal_concat ","val [] "," dedent  line "]}," Ruby31Parser _reduce_589":{"type":"method","name":"_reduce_589","children":[],"call":[" s line "," s "," debug "]}," Ruby31Parser _reduce_587":{"type":"method","name":"_reduce_587","children":[],"call":["val [] "," s ","str value ","str sexp_type == ","str sexp_type "," s  value "," s  sexp_type == "," s  sexp_type "]}," Ruby31Parser _reduce_584":{"type":"method","name":"_reduce_584","children":[],"call":[" s line ","arg line "," s "]}," Ruby31Parser _reduce_583":{"type":"method","name":"_reduce_583","children":[],"call":[" s line "," s "]}," Ruby31Parser _reduce_582":{"type":"method","name":"_reduce_582","children":[],"call":["result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s line ","var line "," s ","val [] "," new_resbody  << ","val []  << "]}," Ruby31Parser _reduce_581":{"type":"method","name":"_reduce_581","children":[],"call":[" wrap ","val [] "]}," Ruby31Parser _reduce_580":{"type":"method","name":"_reduce_580","children":[],"call":[" s line "," s ","id to_sym ","lhs line "," s lhs line ine ","lhs line hs lhs line ine "]}," Ruby31Parser _reduce_579":{"type":"method","name":"_reduce_579","children":[],"call":[" wrap ","val [] "," s line ","arg line "," s "]}," Ruby31Parser _reduce_578":{"type":"method","name":"_reduce_578","children":[],"call":[" s line ","arg line "," s "]}," Ruby31Parser _reduce_577":{"type":"method","name":"_reduce_577","children":[],"call":["result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s line ","var line "," s "," new_resbody  << "]}," Ruby31Parser _reduce_576":{"type":"method","name":"_reduce_576","children":[],"call":[" wrap ","val [] ","result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s line ","var line "," s "," wrap  << "," new_resbody  << "]}," Ruby31Parser _reduce_575":{"type":"method","name":"_reduce_575","children":[],"call":[" wrap ","val [] "," s line "," s ","id to_sym ","lhs line ","valhs line  [] "," s lhs line ine ","lhs line hs lhs line ine "]}," Ruby31Parser _reduce_573":{"type":"method","name":"_reduce_573","children":[],"call":[" wrap ","val [] "]}," Ruby31Parser _reduce_564":{"type":"method","name":"_reduce_564","children":[],"call":[" s line ","v1 line "," s "," ary_to_pat ","val [] "]}," Ruby31Parser _reduce_563":{"type":"method","name":"_reduce_563","children":[],"call":[" s line ","v1 line "," s "," ary_to_pat ","val [] "]}," Ruby31Parser _reduce_559":{"type":"method","name":"_reduce_559","children":[],"call":[" s line ","v1 line "," s "]}," Ruby31Parser _reduce_558":{"type":"method","name":"_reduce_558","children":[],"call":[" s line ","v1 line "," s "]}," Ruby31Parser _reduce_557":{"type":"method","name":"_reduce_557","children":[],"call":[" s line ","lhs line "," s "," value_expr ","v1 line "," value_expr  line "]}," Ruby31Parser _reduce_556":{"type":"method","name":"_reduce_556","children":[],"call":[" s line ","lhs line "," s "," value_expr "," value_expr  line "]}," Ruby31Parser _reduce_552":{"type":"method","name":"_reduce_552","children":[],"call":[" s line "," s ","v1 line ","lhs line "," value_expr "," value_expr  line "]}," Ruby31Parser _reduce_551":{"type":"method","name":"_reduce_551","children":[],"call":[" s line "," s ","lhs line "," value_expr "," value_expr  line "]}," Ruby31Parser _reduce_550":{"type":"method","name":"_reduce_550","children":[],"call":[" s line "," s "," assignable ","id to_sym ","lhs line "," value_expr "," value_expr  line "]}," Ruby31Parser _reduce_549":{"type":"method","name":"_reduce_549","children":[],"call":[" debug "]}," Ruby31Parser _reduce_548":{"type":"method","name":"_reduce_548","children":[],"call":[" wrap ","val [] "]}," Ruby31Parser _reduce_547":{"type":"method","name":"_reduce_547","children":[],"call":[" s line ","lhs line "," s "," debug "," assignable ","lhs value ","lhs sexp_type "]}," Ruby31Parser _reduce_546":{"type":"method","name":"_reduce_546","children":[],"call":[" s line ","lhs line "," s "]}," Ruby31Parser _reduce_545":{"type":"method","name":"_reduce_545","children":[],"call":["kwarg concat ","kw sexp_body "," s line "," s "," assignable ","id to_sym "]}," Ruby31Parser _reduce_543":{"type":"method","name":"_reduce_543","children":[],"call":[" new_hash_pattern_tail ","rest line "," debug "," wrap ","val [] "]}," Ruby31Parser _reduce_542":{"type":"method","name":"_reduce_542","children":[],"call":[" new_hash_pattern_tail ","kwarg line "," wrap ","val [] "," s line ","lhs line "," s "," debug "," assignable ","lhs value ","lhs sexp_type "]}," Ruby31Parser _reduce_541":{"type":"method","name":"_reduce_541","children":[],"call":[" new_hash_pattern_tail ","kwarg line "," s line ","lhs line "," s "," debug "," assignable ","lhs value ","lhs sexp_type "]}," Ruby31Parser _reduce_540":{"type":"method","name":"_reduce_540","children":[],"call":[" new_hash_pattern_tail ","kw_arg line "," s line ","lhs line "," s ","kwarg concat ","kw sexp_body "]}," Ruby31Parser _reduce_539":{"type":"method","name":"_reduce_539","children":[],"call":[" s line ","expr line "," s ","expr sexp_type == ","expr sexp_type ","kwarg concat ","kw sexp_body "," s line  line "," s line  sexp_type == "," s line  sexp_type "]}," Ruby31Parser _reduce_538":{"type":"method","name":"_reduce_538","children":[],"call":[" array_pat_concat "," new_hash_pattern_tail ","rest line "]}," Ruby31Parser _reduce_536":{"type":"method","name":"_reduce_536","children":[],"call":[" new_hash_pattern_tail ","kwarg line "]}," Ruby31Parser _reduce_535":{"type":"method","name":"_reduce_535","children":[],"call":["id to_sym "," new_hash_pattern_tail ","kwarg line ","kw_arg line "]}," Ruby31Parser _reduce_534":{"type":"method","name":"_reduce_534","children":[],"call":[" new_find_pattern_tail "," new_hash_pattern_tail ","kw_arg line "," s line ","expr line "," s ","expr sexp_type == ","expr sexp_type "," s line  line "," s line  sexp_type == "," s line  sexp_type "]}," Ruby31Parser _reduce_533":{"type":"method","name":"_reduce_533","children":[],"call":["result line "," new_array_pattern_tail "," s line ","expr line "," s ","expr sexp_type == ","expr sexp_type "," array_pat_concat "," new_array_pattern_tail  line "," array_pat_concat  line "," s line  line "," s line  sexp_type == "," s line  sexp_type "]}," Ruby31Parser _reduce_532":{"type":"method","name":"_reduce_532","children":[],"call":["result line "," new_array_pattern_tail "," array_pat_concat "," new_array_pattern_tail  line "," array_pat_concat  line "]}," Ruby31Parser _reduce_531":{"type":"method","name":"_reduce_531","children":[],"call":["result line ","head line "," s ","tail sexp_body ","head sexp_body "," s  line "]}," Ruby31Parser _reduce_530":{"type":"method","name":"_reduce_530","children":[],"call":["id to_sym "]}," Ruby31Parser _reduce_528":{"type":"method","name":"_reduce_528","children":[],"call":[" new_array_pattern_tail line ","head line "," new_array_pattern_tail "," new_find_pattern_tail ","result line "," new_array_pattern_tail line  line "," new_find_pattern_tail  line "," new_array_pattern_tail  line "]}," Ruby31Parser _reduce_527":{"type":"method","name":"_reduce_527","children":[],"call":[" new_array_pattern_tail line ","expr line "," new_array_pattern_tail ","result line "," new_array_pattern_tail line  line "," new_array_pattern_tail  line "]}," Ruby31Parser _reduce_526":{"type":"method","name":"_reduce_526","children":[],"call":["result line ","head line "," new_array_pattern_tail ","id to_sym "," s ","tail sexp_body ","head sexp_body "," new_array_pattern_tail  line "," s  line "]}," Ruby31Parser _reduce_525":{"type":"method","name":"_reduce_525","children":[],"call":["result line ","head line "," new_array_pattern_tail ","id to_sym "," s ","tail sexp_body ","head sexp_body "," new_array_pattern_tail  line "," s  line "]}," Ruby31Parser _reduce_524":{"type":"method","name":"_reduce_524","children":[],"call":["result line ","head line "," new_array_pattern_tail "," array_pat_concat "," new_array_pattern_tail  line "]}," Ruby31Parser _reduce_523":{"type":"method","name":"_reduce_523","children":[],"call":[" new_array_pattern_tail "," new_array_pattern_tail line ","head line "]}," Ruby31Parser _reduce_522":{"type":"method","name":"_reduce_522","children":[],"call":[" new_array_pattern_tail line ","expr line "," new_array_pattern_tail "," s line "," s ","head line "]}," Ruby31Parser _reduce_521":{"type":"method","name":"_reduce_521","children":[],"call":[" pop_pktbl "," new_array_pattern_tail line ","expr line "," new_array_pattern_tail ","result line ","head line ","id to_sym "," new_array_pattern_tail line  line "," new_array_pattern_tail  line "]}," Ruby31Parser _reduce_520":{"type":"method","name":"_reduce_520","children":[],"call":[" push_pktbl ","result line ","head line "," new_array_pattern_tail ","id to_sym "," new_array_pattern_tail  line "]}," Ruby31Parser _reduce_519":{"type":"method","name":"_reduce_519","children":[],"call":[" new_hash_pattern "," new_hash_pattern_tail ","result line ","head line "," new_array_pattern_tail ","id to_sym "," array_pat_concat "," new_hash_pattern_ new_hash_pattern_tail  "," new_hash_pattern  line "," new_array_pattern_tail  line "," new_array_pattern_ new_hash_pattern_tail  "]}," Ruby31Parser _reduce_518":{"type":"method","name":"_reduce_518","children":[],"call":[" new_hash_pattern ","kwargs line "," in_kwarg= "," pop_pktbl ","result line ","head line "," new_array_pattern_tail "," array_pat_concat "," new_hash_pattern  line "," new_array_pattern_tail  line "]}," Ruby31Parser _reduce_517":{"type":"method","name":"_reduce_517","children":[],"call":[" in_kwarg= "," in_kwarg "," push_pktbl "," new_array_pattern_tail "," new_array_pattern_tail line ","expr line "," s line "," s "]}," Ruby31Parser _reduce_516":{"type":"method","name":"_reduce_516","children":[],"call":[" s line "," s "," new_array_pattern_tail line ","expr line "," new_array_pattern_tail "," pop_pktbl "]}," Ruby31Parser _reduce_515":{"type":"method","name":"_reduce_515","children":[],"call":[" new_find_pattern "," pop_pktbl "," push_pktbl "]}," Ruby31Parser _reduce_514":{"type":"method","name":"_reduce_514","children":[],"call":[" new_array_pattern ","pat line "," push_pktbl "," new_hash_pattern "," new_hash_pattern_tail "," new_hash_pattern_ new_hash_pattern_tail  "]}," Ruby31Parser _reduce_513":{"type":"method","name":"_reduce_513","children":[],"call":[" new_array_pattern ","const line "," new_array_pattern_tail "," new_hash_pattern "," new_hash_pattern_tail ","kwargs line "," in_kwarg= "," pop_pktbl "," new_array_pattern_ new_array_pattern_tail  "," new_array_pattern_ new_hash_pattern_tail  "," new_hash_pattern_ new_array_pattern_tail  "," new_hash_pattern_ new_hash_pattern_tail  "]}," Ruby31Parser _reduce_512":{"type":"method","name":"_reduce_512","children":[],"call":[" new_hash_pattern ","const line ","kwargs line "," in_kwarg= "," pop_pktbl "," in_kwarg "," push_pktbl "]}," Ruby31Parser _reduce_511":{"type":"method","name":"_reduce_511","children":[],"call":[" new_find_pattern line ","const line "," new_find_pattern "," pop_pktbl "," in_kwarg= "," in_kwarg "," push_pktbl "," s line "," s "]}," Ruby31Parser _reduce_510":{"type":"method","name":"_reduce_510","children":[],"call":[" new_array_pattern ","const line "," pop_pktbl "," s line "," s "," new_find_pattern "]}," Ruby31Parser _reduce_509":{"type":"method","name":"_reduce_509","children":[],"call":[" new_array_pattern ","const line "," new_array_pattern_tail "," new_find_pattern ","pat line "," new_array_pattern_ new_array_pattern_tail  "]}," Ruby31Parser _reduce_508":{"type":"method","name":"_reduce_508","children":[],"call":[" new_hash_pattern ","lhs line "," pop_pktbl "," new_array_pattern ","pat line ","const line "," new_array_pattern_tail "," new_array_pattern_ new_array_pattern_tail  "]}," Ruby31Parser _reduce_507":{"type":"method","name":"_reduce_507","children":[],"call":[" new_find_pattern line ","const line "," new_find_pattern "," pop_pktbl "," new_array_pattern "," new_array_pattern_tail "," new_hash_pattern "," new_array_pattern_ new_array_pattern_tail  "]}," Ruby31Parser _reduce_506":{"type":"method","name":"_reduce_506","children":[],"call":[" new_array_pattern ","lhs line "," pop_pktbl "," new_hash_pattern ","const line "," new_find_pattern line "," new_find_pattern "]}," Ruby31Parser _reduce_503":{"type":"method","name":"_reduce_503","children":[],"call":[" push_pktbl "," new_array_pattern ","const line "," new_array_pattern_tail "," new_hash_pattern ","lhs line "," pop_pktbl "," new_array_pattern_ new_array_pattern_tail  "]}," Ruby31Parser _reduce_502":{"type":"method","name":"_reduce_502","children":[],"call":[" push_pktbl "," new_hash_pattern ","lhs line "," pop_pktbl "," new_find_pattern line ","const line "," new_find_pattern "]}," Ruby31Parser _reduce_500":{"type":"method","name":"_reduce_500","children":[],"call":[" s line ","lhs line "," s "," new_array_pattern "," pop_pktbl "]}," Ruby31Parser _reduce_498":{"type":"method","name":"_reduce_498","children":[],"call":[" new_assign "," s line ","var line "," s "," env []= "," env ","var last "," push_pktbl "]}," Ruby31Parser _reduce_496":{"type":"method","name":"_reduce_496","children":[],"call":[" new_hash_pattern ","kwargs line "," push_pktbl "]}," Ruby31Parser _reduce_495":{"type":"method","name":"_reduce_495","children":[],"call":[" new_array_pattern ","args line "," s line ","lhs line "," s "]}," Ruby31Parser _reduce_494":{"type":"method","name":"_reduce_494","children":[],"call":[" new_find_pattern "," s line ","lhs line "," s "]}," Ruby31Parser _reduce_493":{"type":"method","name":"_reduce_493","children":[],"call":[" new_array_pattern ","expr line "," new_assign "," s line ","var line "," s "," env []= "," env ","var last "]}," Ruby31Parser _reduce_492":{"type":"method","name":"_reduce_492","children":[],"call":[" new_array_pattern ","expr line "," new_array_pattern_tail "," new_assign "," s line ","var line "," s "," env []= "," env ","var last "," new_array_pattern_ new_array_pattern_tail  "]}," Ruby31Parser _reduce_490":{"type":"method","name":"_reduce_490","children":[],"call":[" s line ","body line "," s "," remove_begin "," new_hash_pattern ","kwargs line "," new_array_pattern ","args line "," remove_begin  line "]}," Ruby31Parser _reduce_489":{"type":"method","name":"_reduce_489","children":[],"call":[" s line ","body line "," s "," remove_begin "," new_array_pattern ","args line "," new_find_pattern "," remove_begin  line "]}," Ruby31Parser _reduce_485":{"type":"method","name":"_reduce_485","children":[],"call":[" new_in "," s line ","body line "," s "," remove_begin "," remove_begin  line "]}," Ruby31Parser _reduce_484":{"type":"method","name":"_reduce_484","children":[],"call":[" in_kwarg= ","_values [] "," pop_pvtbl "," pop_pktbl "," s line ","body line "," s "," remove_begin "," remove_begin  line "]}," Ruby31Parser _reduce_483":{"type":"method","name":"_reduce_483","children":[],"call":[" push_pktbl "," push_pvtbl "," in_kwarg= "," in_kwarg "," lexer command_start= "," lexer "," lexer lex_state= ","EXPR_BEG  | "," s line ","body line "," s "," remove_begin "," remove_begin  line "]}," Ruby31Parser _reduce_480":{"type":"method","name":"_reduce_480","children":[],"call":["result << ","val [] ","result line "," new_when "," new_in "," new_when  << "," new_in  << "," new_when  line "," new_in  line "]}," Ruby31Parser _reduce_479":{"type":"method","name":"_reduce_479","children":[],"call":[" lexer lineno "," lexer "," new_in "," in_kwarg= ","_values [] "," pop_pvtbl "," pop_pktbl "]}," Ruby31Parser _reduce_478":{"type":"method","name":"_reduce_478","children":[],"call":[" list_append "," s line ","id line "," s "," in_kwarg= ","_values [] "," pop_pvtbl "," pop_pktbl "," push_pktbl "," push_pvtbl "," in_kwarg "," lexer command_start= "," lexer "," lexer lex_state= ","EXPR_BEG  | "]}," Ruby31Parser _reduce_477":{"type":"method","name":"_reduce_477","children":[],"call":[" list_append "," push_pktbl "," push_pvtbl "," in_kwarg= "," in_kwarg "," lexer command_start= "," lexer "," lexer lex_state= ","EXPR_BEG  | "]}," Ruby31Parser _reduce_476":{"type":"method","name":"_reduce_476","children":[],"call":[" s line ","arg line "," s "]}," Ruby31Parser _reduce_475":{"type":"method","name":"_reduce_475","children":[],"call":[" s line ","arg line "," s ","result << ","result line "," new_when "," s line  << "," new_when  << "," s line  line "," new_when  line "]}," Ruby31Parser _reduce_474":{"type":"method","name":"_reduce_474","children":[],"call":[" env unextend "," env "," lexer cmdarg pop "," lexer cmdarg "," lexer "," new_do_body ","result << ","result line "," new_when "," list_append "," s line ","id line "," s "," new_do_body  << "," new_when  << "," list_append  << "," new_do_body  line "," new_when  line "," list_append  line "]}," Ruby31Parser _reduce_473":{"type":"method","name":"_reduce_473","children":[],"call":[" lexer cmdarg push "," lexer cmdarg "," lexer "," list_append "," s line ","id line "," s "]}," Ruby31Parser _reduce_472":{"type":"method","name":"_reduce_472","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," list_append "," s line ","arg line "," s "]}," Ruby31Parser _reduce_471":{"type":"method","name":"_reduce_471","children":[],"call":[" lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," env unextend "," env "," new_brace_body "," s line ","arg line "," s "]}," Ruby31Parser _reduce_470":{"type":"method","name":"_reduce_470","children":[],"call":[" lexer cmdarg store "," lexer cmdarg "," lexer "," s line ","arg line "," s "," env unextend "," env "," lexer cmdarg pop "," new_do_body "]}," Ruby31Parser _reduce_469":{"type":"method","name":"_reduce_469","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," env unextend "," lexer cmdarg pop "," lexer cmdarg "," new_do_body "," lexer cmdarg push "]}," Ruby31Parser _reduce_468":{"type":"method","name":"_reduce_468","children":[],"call":[" env unextend "," env ","result line "," lexer cmdarg push "," lexer cmdarg "," lexer "," lexer lineno "," env extend "," lexer lineno  line "]}," Ruby31Parser _reduce_467":{"type":"method","name":"_reduce_467","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," lexer cmdarg pop "," lexer cmdarg "," lexer cmdarg restore "," env unextend "," new_brace_body "]}," Ruby31Parser _reduce_466":{"type":"method","name":"_reduce_466","children":[],"call":[" env unextend "," env ","result line "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," new_brace_body "," lexer cmdarg store "," new_brace_body  line "," lexer cmdarg store  line "]}," Ruby31Parser _reduce_465":{"type":"method","name":"_reduce_465","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," lexer cmdarg store "," lexer cmdarg "]}," Ruby31Parser _reduce_464":{"type":"method","name":"_reduce_464","children":[],"call":[" new_aref "," lexer lineno "," lexer "," env extend "," env "," env unextend ","result line "," new_aref  line "," lexer lineno  line "]}," Ruby31Parser _reduce_463":{"type":"method","name":"_reduce_463","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," env unextend "," env ","result line "," env extend "," s line  line "]}," Ruby31Parser _reduce_462":{"type":"method","name":"_reduce_462","children":[],"call":[" new_super ","val [] "," env extend "," env "," env unextend ","result line "," new_super  line "]}," Ruby31Parser _reduce_461":{"type":"method","name":"_reduce_461","children":[],"call":[" new_call ","val [] "," env unextend "," env ","result line "," env extend "," new_call  line "]}," Ruby31Parser _reduce_460":{"type":"method","name":"_reduce_460","children":[],"call":[" new_call ","val [] "," env extend "," env "," new_aref "]}," Ruby31Parser _reduce_459":{"type":"method","name":"_reduce_459","children":[],"call":[" new_call ","id to_sym "," new_aref "," s line "," s "]}," Ruby31Parser _reduce_458":{"type":"method","name":"_reduce_458","children":[],"call":[" new_call ","op to_sym "," s line "," s "," new_super ","val [] "]}," Ruby31Parser _reduce_457":{"type":"method","name":"_reduce_457","children":[],"call":[" new_call ","op to_sym ","result line_max= "," new_super ","val [] "," new_call  line_max= "," new_super  line_max= "]}," Ruby31Parser _reduce_456":{"type":"method","name":"_reduce_456","children":[],"call":["call concat ","args sexp_body ","result line_max= ","args line_max "," new_call ","val [] ","call concat  line_max= "," new_call  line_max= "]}," Ruby31Parser _reduce_455":{"type":"method","name":"_reduce_455","children":[],"call":["iter2 insert "," new_call ","name to_sym ","val [] ","id to_sym "," new_ new_call  "]}," Ruby31Parser _reduce_454":{"type":"method","name":"_reduce_454","children":[],"call":["iter2 insert "," new_call ","name to_sym ","id to_sym ","op to_sym "," new_ new_call  "]}," Ruby31Parser _reduce_453":{"type":"method","name":"_reduce_453","children":[],"call":[" new_call ","id to_sym ","op to_sym ","result line_max= "," new_call  line_max= "]}," Ruby31Parser _reduce_452":{"type":"method","name":"_reduce_452","children":[],"call":["result insert "," invert_block_call "," inverted? "," syntax_error ","cmd block_pass? ","result line_max= "," new_call ","op to_sym ","args line_max ","call concat ","args sexp_body "," new_call  insert "," new_call  line_max= "]}," Ruby31Parser _reduce_451":{"type":"method","name":"_reduce_451","children":[],"call":["iter line ","result line_max= ","args line_max ","call concat ","args sexp_body ","iter2 insert "," new_call ","name to_sym ","iter line  line_max= "," new_call  concat "," new_ new_call  "]}," Ruby31Parser _reduce_450":{"type":"method","name":"_reduce_450","children":[],"call":["val [] ","iter2 insert "," new_call ","name to_sym "," new_ new_call  "]}," Ruby31Parser _reduce_449":{"type":"method","name":"_reduce_449","children":[],"call":["val [] ","iter2 insert "," new_call ","name to_sym ","id to_sym "," new_ new_call  "]}," Ruby31Parser _reduce_448":{"type":"method","name":"_reduce_448","children":[],"call":["result == "," s ","val [] "," new_call ","id to_sym ","result insert "," invert_block_call "," inverted? "," syntax_error ","cmd block_pass? ","val []  == "," new_call  == "," invert_block_call  [] ","val []  insert "," new_call  insert "]}," Ruby31Parser _reduce_447":{"type":"method","name":"_reduce_447","children":[],"call":[" args ","result insert "," invert_block_call "," inverted? "," syntax_error ","cmd block_pass? ","iter line "," args  insert ","iter line  insert "]}," Ruby31Parser _reduce_446":{"type":"method","name":"_reduce_446","children":[],"call":[" env unextend "," env ","result line "," new_iter "," s line "," s "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer lpar_beg= ","iter line ","val [] "," new_iter  line ","iter line  line ","val []  line "]}," Ruby31Parser _reduce_445":{"type":"method","name":"_reduce_445","children":[],"call":[" lexer cmdarg push "," lexer cmdarg "," lexer ","val [] "]}," Ruby31Parser _reduce_444":{"type":"method","name":"_reduce_444","children":[],"call":[" lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," lexer lineno "," env extend "," env ","val [] ","result == "," s "," in_argdef= ","val []  == "]}," Ruby31Parser _reduce_442":{"type":"method","name":"_reduce_442","children":[],"call":[" wrap ","val [] "," args "," env unextend "," env ","result line "," new_iter "," s line "," s "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer lpar_beg= "," wrap  line "," args  line "," new_iter  line "]}," Ruby31Parser _reduce_441":{"type":"method","name":"_reduce_441","children":[],"call":[" args "," env unextend "," env ","result line "," new_iter "," s line "," s "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer lpar_beg= "," lexer cmdarg push "," args  line "," new_iter  line "]}," Ruby31Parser _reduce_440":{"type":"method","name":"_reduce_440","children":[],"call":[" args "," lexer cmdarg push "," lexer cmdarg "," lexer "," lexer lpar_beg= "," lexer paren_nest "," lexer lpar_beg "," env extend "," env "]}," Ruby31Parser _reduce_439":{"type":"method","name":"_reduce_439","children":[],"call":[" args "," lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," env extend "," env "]}," Ruby31Parser _reduce_437":{"type":"method","name":"_reduce_437","children":[],"call":[" args "," wrap ","val [] "]}," Ruby31Parser _reduce_436":{"type":"method","name":"_reduce_436","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," args "]}," Ruby31Parser _reduce_435":{"type":"method","name":"_reduce_435","children":[],"call":[" args "]}," Ruby31Parser _reduce_434":{"type":"method","name":"_reduce_434","children":[],"call":[" lexer command_start= "," lexer "," args "]}," Ruby31Parser _reduce_433":{"type":"method","name":"_reduce_433","children":[],"call":[" in_argdef= "," args "]}," Ruby31Parser _reduce_432":{"type":"method","name":"_reduce_432","children":[],"call":[" args "," s line "," s "]}," Ruby31Parser _reduce_431":{"type":"method","name":"_reduce_431","children":[],"call":[" args "," s line "," s "," in_argdef= "]}," Ruby31Parser _reduce_430":{"type":"method","name":"_reduce_430","children":[],"call":[" args "," lexer command_start= "," lexer "]}," Ruby31Parser _reduce_429":{"type":"method","name":"_reduce_429","children":[],"call":[" args "," lexer command_start= "," lexer "]}," Ruby31Parser _reduce_428":{"type":"method","name":"_reduce_428","children":[],"call":[" args "]}," Ruby31Parser _reduce_427":{"type":"method","name":"_reduce_427","children":[],"call":[" args "]}," Ruby31Parser _reduce_426":{"type":"method","name":"_reduce_426","children":[],"call":[" args "]}," Ruby31Parser _reduce_425":{"type":"method","name":"_reduce_425","children":[],"call":[" args "]}," Ruby31Parser _reduce_424":{"type":"method","name":"_reduce_424","children":[],"call":[" args "]}," Ruby31Parser _reduce_423":{"type":"method","name":"_reduce_423","children":[],"call":["arg << "," args "]}," Ruby31Parser _reduce_422":{"type":"method","name":"_reduce_422","children":[],"call":[" args "]}," Ruby31Parser _reduce_421":{"type":"method","name":"_reduce_421","children":[],"call":[" args "]}," Ruby31Parser _reduce_420":{"type":"method","name":"_reduce_420","children":[],"call":[" args "]}," Ruby31Parser _reduce_419":{"type":"method","name":"_reduce_419","children":[],"call":[" args ","arg << "]}," Ruby31Parser _reduce_418":{"type":"method","name":"_reduce_418","children":[],"call":[" args ","arg << "]}," Ruby31Parser _reduce_417":{"type":"method","name":"_reduce_417","children":[],"call":[" s "," args "]}," Ruby31Parser _reduce_415":{"type":"method","name":"_reduce_415","children":[],"call":[" args "]}," Ruby31Parser _reduce_414":{"type":"method","name":"_reduce_414","children":[],"call":["result line "," call_args "," args "," call_args  line "," args  line "]}," Ruby31Parser _reduce_413":{"type":"method","name":"_reduce_413","children":[],"call":[" call_args "," args "," s "]}," Ruby31Parser _reduce_412":{"type":"method","name":"_reduce_412","children":[],"call":[" call_args "," s "]}," Ruby31Parser _reduce_411":{"type":"method","name":"_reduce_411","children":[],"call":[" call_args "," args "]}," Ruby31Parser _reduce_407":{"type":"method","name":"_reduce_407","children":[],"call":["result line "," lexer lineno "," lexer "," args "," call_args "," args  line "," call_args  line "]}," Ruby31Parser _reduce_406":{"type":"method","name":"_reduce_406","children":[],"call":["result line "," args ","(str \"*\") to_sym "," call_args "," args  line "," call_args  line "]}," Ruby31Parser _reduce_405":{"type":"method","name":"_reduce_405","children":[],"call":[" block_var "," in_argdef= "]}," Ruby31Parser _reduce_404":{"type":"method","name":"_reduce_404","children":[],"call":[" block_var "]}," Ruby31Parser _reduce_403":{"type":"method","name":"_reduce_403","children":[],"call":[" block_var "]}," Ruby31Parser _reduce_402":{"type":"method","name":"_reduce_402","children":[],"call":[" block_var "," args line "," args "]}," Ruby31Parser _reduce_401":{"type":"method","name":"_reduce_401","children":[],"call":[" block_var ","result line "," args ","(str \"*\") to_sym "," block_var  line "," args  line "]}," Ruby31Parser _reduce_400":{"type":"method","name":"_reduce_400","children":[],"call":[" list_append ","val [] "," block_var "]}," Ruby31Parser _reduce_399":{"type":"method","name":"_reduce_399","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," block_var "]}," Ruby31Parser _reduce_398":{"type":"method","name":"_reduce_398","children":[],"call":["val [] "," block_var "]}," Ruby31Parser _reduce_396":{"type":"method","name":"_reduce_396","children":[],"call":["val [] delete_at ","val [] ","val [] [] nil? ","val [] [] "," block_var "]}," Ruby31Parser _reduce_394":{"type":"method","name":"_reduce_394","children":[],"call":["val [] "," s line "," s ","arg last ","arg sexp_type == ","arg sexp_type ","arg line "," s arg line  ","arg last  last ","arg last  sexp_type == ","arg last  sexp_type ","arg last  line ","arg arg line  "]}," Ruby31Parser _reduce_392":{"type":"method","name":"_reduce_392","children":[],"call":[" s line "," s "]}," Ruby31Parser _reduce_376":{"type":"method","name":"_reduce_376","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby31Parser _reduce_375":{"type":"method","name":"_reduce_375","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby31Parser _reduce_374":{"type":"method","name":"_reduce_374","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby31Parser _reduce_366":{"type":"method","name":"_reduce_366","children":[],"call":[" value_expr ","val [] "]}," Ruby31Parser _reduce_365":{"type":"method","name":"_reduce_365","children":[],"call":[" s line "," s "]}," Ruby31Parser _reduce_364":{"type":"method","name":"_reduce_364","children":[],"call":[" s line "," s "]}," Ruby31Parser _reduce_363":{"type":"method","name":"_reduce_363","children":[],"call":[" s line "," s "]}," Ruby31Parser _reduce_362":{"type":"method","name":"_reduce_362","children":[],"call":[" s line "," s "]}," Ruby31Parser _reduce_361":{"type":"method","name":"_reduce_361","children":[],"call":[" lexer ignore_body_comments "," lexer "," in_single "," in_def= "," env unextend "," env "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," new_defs ","val insert ","val [] pop ","val [] ","val prepend ","val shift "," value_expr "]}," Ruby31Parser _reduce_360":{"type":"method","name":"_reduce_360","children":[],"call":[" lexer ignore_body_comments "," lexer "," in_def= "," env unextend "," env "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," new_defn ","val insert ","val first pop ","val first "," s line "," s "]}," Ruby31Parser _reduce_359":{"type":"method","name":"_reduce_359","children":[],"call":[" lexer ignore_body_comments "," lexer "," env unextend "," env "," new_module "," s line "," s "]}," Ruby31Parser _reduce_358":{"type":"method","name":"_reduce_358","children":[],"call":[" env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," s line "," s "]}," Ruby31Parser _reduce_357":{"type":"method","name":"_reduce_357","children":[],"call":[" lexer lineno "," lexer "," s line "," s "]}," Ruby31Parser _reduce_356":{"type":"method","name":"_reduce_356","children":[],"call":[" lexer ignore_body_comments "," lexer "," env unextend "," env "," new_sclass "," in_single "," in_def= "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," new_defs ","val insert ","val [] pop ","val [] ","val prepend ","val shift "]}," Ruby31Parser _reduce_355":{"type":"method","name":"_reduce_355","children":[],"call":[" env extend "," env "," in_single= "," in_single "," lexer ignore_body_comments "," lexer "," in_def= "," env unextend "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," new_defn ","val insert ","val first pop ","val first "]}," Ruby31Parser _reduce_354":{"type":"method","name":"_reduce_354","children":[],"call":[" in_def= "," in_def "," lexer ignore_body_comments "," lexer "," env unextend "," env "," new_module "]}," Ruby31Parser _reduce_353":{"type":"method","name":"_reduce_353","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," yyerror "," in_single > "," in_single "," in_def "]}," Ruby31Parser _reduce_352":{"type":"method","name":"_reduce_352","children":[],"call":[" lexer ignore_body_comments "," lexer "," env unextend "," env "," new_class "," new_sclass "]}," Ruby31Parser _reduce_351":{"type":"method","name":"_reduce_351","children":[],"call":[" env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," in_single= "]}," Ruby31Parser _reduce_350":{"type":"method","name":"_reduce_350","children":[],"call":[" lexer lineno "," lexer "," in_def= "," in_def "]}," Ruby31Parser _reduce_349":{"type":"method","name":"_reduce_349","children":[],"call":[" new_for "," lexer ignore_body_comments "," lexer "," env unextend "," env "," new_class "]}," Ruby31Parser _reduce_348":{"type":"method","name":"_reduce_348","children":[],"call":[" new_case "," env extend "," env "," yyerror "," in_single > "," in_single "," in_def "]}," Ruby31Parser _reduce_347":{"type":"method","name":"_reduce_347","children":[],"call":[" new_case "," new_for "]}," Ruby31Parser _reduce_346":{"type":"method","name":"_reduce_346","children":[],"call":[" new_case "]}," Ruby31Parser _reduce_345":{"type":"method","name":"_reduce_345","children":[],"call":[" new_until "," new_case "]}," Ruby31Parser _reduce_344":{"type":"method","name":"_reduce_344","children":[],"call":[" new_while "," new_case "]}," Ruby31Parser _reduce_343":{"type":"method","name":"_reduce_343","children":[],"call":[" new_if "," new_until "]}," Ruby31Parser _reduce_342":{"type":"method","name":"_reduce_342","children":[],"call":[" new_if "," new_while "]}," Ruby31Parser _reduce_341":{"type":"method","name":"_reduce_341","children":[],"call":[" new_if "]}," Ruby31Parser _reduce_340":{"type":"method","name":"_reduce_340","children":[],"call":["iter insert "," block_dup_check ","val [] "," new_if "]}," Ruby31Parser _reduce_338":{"type":"method","name":"_reduce_338","children":[],"call":["iter insert "," block_dup_check ","val [] "]}," Ruby31Parser _reduce_337":{"type":"method","name":"_reduce_337","children":[],"call":[" debug "]}," Ruby31Parser _reduce_336":{"type":"method","name":"_reduce_336","children":[],"call":[" new_call ","iter insert "]}," Ruby31Parser _reduce_335":{"type":"method","name":"_reduce_335","children":[],"call":[" s line "," s "," debug "]}," Ruby31Parser _reduce_334":{"type":"method","name":"_reduce_334","children":[],"call":[" new_yield line "," new_yield "," new_call "]}," Ruby31Parser _reduce_333":{"type":"method","name":"_reduce_333","children":[],"call":[" new_yield line "," new_yield "," s line "," s "]}," Ruby31Parser _reduce_332":{"type":"method","name":"_reduce_332","children":[],"call":[" new_yield line "," new_yield "]}," Ruby31Parser _reduce_331":{"type":"method","name":"_reduce_331","children":[],"call":[" s line "," s "," new_yield line "," new_yield "]}," Ruby31Parser _reduce_330":{"type":"method","name":"_reduce_330","children":[],"call":[" new_hash "," new_yield line "," new_yield "]}," Ruby31Parser _reduce_329":{"type":"method","name":"_reduce_329","children":[],"call":[" lexer lineno "," lexer "," s line "," s "]}," Ruby31Parser _reduce_328":{"type":"method","name":"_reduce_328","children":[],"call":["result line ","result sexp_type= "," s ","result line_max= "," new_hash "," new_hash  line "," new_hash  sexp_type= "," new_hash  line_max= "]}," Ruby31Parser _reduce_327":{"type":"method","name":"_reduce_327","children":[],"call":[" lexer lineno "," lexer "]}," Ruby31Parser _reduce_326":{"type":"method","name":"_reduce_326","children":[],"call":[" wrap ","val [] ","result line_max= ","result line ","result sexp_type= "," s "," wrap  line_max= "," wrap  line "," wrap  sexp_type= "]}," Ruby31Parser _reduce_325":{"type":"method","name":"_reduce_325","children":[],"call":[" s line ","expr line "," s ","id to_sym "," wrap ","val [] "]}," Ruby31Parser _reduce_324":{"type":"method","name":"_reduce_324","children":[],"call":["result paren= "," s line "," lexer lineno "," lexer "," s ","expr line ","id to_sym "," s line  paren= "]}," Ruby31Parser _reduce_323":{"type":"method","name":"_reduce_323","children":[],"call":["result paren= "," s line "," s "]}," Ruby31Parser _reduce_322":{"type":"method","name":"_reduce_322","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby31Parser _reduce_321":{"type":"method","name":"_reduce_321","children":[],"call":[" s line "," s "," lexer lex_state= "," lexer "]}," Ruby31Parser _reduce_320":{"type":"method","name":"_reduce_320","children":[],"call":[" lexer lineno "," lexer "," lexer lex_state= "," s line "," s "]}," Ruby31Parser _reduce_319":{"type":"method","name":"_reduce_319","children":[],"call":[" new_begin "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer lex_state= "]}," Ruby31Parser _reduce_318":{"type":"method","name":"_reduce_318","children":[],"call":[" lexer lineno "," lexer "," lexer cmdarg push "," lexer cmdarg "," new_begin "," lexer cmdarg pop "]}," Ruby31Parser _reduce_317":{"type":"method","name":"_reduce_317","children":[],"call":["result line "," new_call ","msg to_sym "," lexer cmdarg push "," lexer cmdarg "," lexer "," new_call  line "]}," Ruby31Parser _reduce_306":{"type":"method","name":"_reduce_306","children":[],"call":[" s line ","arg line "," s "]}," Ruby31Parser _reduce_305":{"type":"method","name":"_reduce_305","children":[],"call":[" arg_concat "," s line ","arg line "," s "]}," Ruby31Parser _reduce_304":{"type":"method","name":"_reduce_304","children":[],"call":["val [] << ","val [] "," arg_concat "]}," Ruby31Parser _reduce_303":{"type":"method","name":"_reduce_303","children":[],"call":[" new_masgn_arg ","val [] ","val [] << "]}," Ruby31Parser _reduce_302":{"type":"method","name":"_reduce_302","children":[],"call":[" new_masgn_arg ","val [] "]}," Ruby31Parser _reduce_301":{"type":"method","name":"_reduce_301","children":[],"call":[" list_append "," s line "," s "," lexer lineno "," lexer "," new_masgn_arg ","val [] "," s  lexer lineno  "," lexer  lexer lineno no "]}," Ruby31Parser _reduce_300":{"type":"method","name":"_reduce_300","children":[],"call":[" list_append "," s line "," s "]}," Ruby31Parser _reduce_299":{"type":"method","name":"_reduce_299","children":[],"call":[" s line ","arg line "," s "," list_append "]}," Ruby31Parser _reduce_298":{"type":"method","name":"_reduce_298","children":[],"call":[" s line "," s "," lexer lineno "," lexer ","arg line "]}," Ruby31Parser _reduce_296":{"type":"method","name":"_reduce_296","children":[],"call":["val [] "]}," Ruby31Parser _reduce_295":{"type":"method","name":"_reduce_295","children":[],"call":[" s line "," s ","val [] "]}," Ruby31Parser _reduce_294":{"type":"method","name":"_reduce_294","children":[],"call":[" s line ","arg line "," s "]}," Ruby31Parser _reduce_293":{"type":"method","name":"_reduce_293","children":[],"call":[" lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg pop ","(sym :tLBRACE_ARG) include? "," s line ","arg line "," s "]}," Ruby31Parser _reduce_292":{"type":"method","name":"_reduce_292","children":[],"call":[" lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg pop ","(sym :tLPAREN) include? "," last_token_type first "," last_token_type ","(sym :tLBRACE_ARG) include? "]}," Ruby31Parser _reduce_291":{"type":"method","name":"_reduce_291","children":[],"call":[" call_args "," lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg pop ","(sym :tLPAREN) include? "," last_token_type first "," last_token_type "]}," Ruby31Parser _reduce_290":{"type":"method","name":"_reduce_290","children":[],"call":[" call_args ","val [] "," array_to_hash "]}," Ruby31Parser _reduce_289":{"type":"method","name":"_reduce_289","children":[],"call":[" call_args ","val [] "," array_to_hash "]}," Ruby31Parser _reduce_288":{"type":"method","name":"_reduce_288","children":[],"call":[" call_args ","val [] "," array_to_hash "]}," Ruby31Parser _reduce_287":{"type":"method","name":"_reduce_287","children":[],"call":[" call_args "," warning "]}," Ruby31Parser _reduce_286":{"type":"method","name":"_reduce_286","children":[],"call":[" args "," array_to_hash ","val [] "," call_args "," warning "]}," Ruby31Parser _reduce_285":{"type":"method","name":"_reduce_285","children":[],"call":[" args "," array_to_hash ","val [] "]}," Ruby31Parser _reduce_284":{"type":"method","name":"_reduce_284","children":[],"call":[" args "," array_to_hash ","val [] "]}," Ruby31Parser _reduce_279":{"type":"method","name":"_reduce_279","children":[],"call":[" call_args "," yyerror "," lexer is_local_id "," lexer "]}," Ruby31Parser _reduce_278":{"type":"method","name":"_reduce_278","children":[],"call":[" call_args "," yyerror "," lexer is_local_id "," lexer "]}," Ruby31Parser _reduce_277":{"type":"method","name":"_reduce_277","children":[],"call":["result line_max= "," call_args "," yyerror "," lexer is_local_id "," lexer "," call_args  line_max= "]}," Ruby31Parser _reduce_276":{"type":"method","name":"_reduce_276","children":[],"call":[" new_rescue "," new_resbody "," s line "," s "," remove_begin "," value_expr ","result line_max= "," new_ remove_begin  "," new_res value_expr  "," new_rescue  line_max= "]}," Ruby31Parser _reduce_274":{"type":"method","name":"_reduce_274","children":[],"call":[" args "," array_to_hash ","val [] "]}," Ruby31Parser _reduce_273":{"type":"method","name":"_reduce_273","children":[],"call":[" args "," array_to_hash ","val [] "]}," Ruby31Parser _reduce_272":{"type":"method","name":"_reduce_272","children":[],"call":[" args ","val [] "," array_to_hash "]}," Ruby31Parser _reduce_270":{"type":"method","name":"_reduce_270","children":[],"call":[" value_expr ","val [] "]}," Ruby31Parser _reduce_269":{"type":"method","name":"_reduce_269","children":[],"call":[" new_call "," argl ","op to_sym "," warn "," value_expr ","val [] "]}," Ruby31Parser _reduce_268":{"type":"method","name":"_reduce_268","children":[],"call":[" new_call "," argl ","op to_sym "," warn "]}," Ruby31Parser _reduce_262":{"type":"method","name":"_reduce_262","children":[],"call":[" new_endless_defs "]}," Ruby31Parser _reduce_261":{"type":"method","name":"_reduce_261","children":[],"call":[" new_endless_defs "]}," Ruby31Parser _reduce_260":{"type":"method","name":"_reduce_260","children":[],"call":[" new_endless_defn "," new_endless_defs "]}," Ruby31Parser _reduce_259":{"type":"method","name":"_reduce_259","children":[],"call":[" new_endless_defn "]}," Ruby31Parser _reduce_258":{"type":"method","name":"_reduce_258","children":[],"call":[" s line ","c line "," s "," new_endless_defn "]}," Ruby31Parser _reduce_257":{"type":"method","name":"_reduce_257","children":[],"call":[" s line "," s ","c line "]}," Ruby31Parser _reduce_256":{"type":"method","name":"_reduce_256","children":[],"call":[" logical_op ","val [] "," s line "," s "]}," Ruby31Parser _reduce_255":{"type":"method","name":"_reduce_255","children":[],"call":[" logical_op ","val [] "]}," Ruby31Parser _reduce_254":{"type":"method","name":"_reduce_254","children":[],"call":[" new_call "," argl ","val [] ","val []= "," value_expr "," logical_op "]}," Ruby31Parser _reduce_253":{"type":"method","name":"_reduce_253","children":[],"call":[" new_call "," argl ","val [] ","val []= "," value_expr "]}," Ruby31Parser _reduce_252":{"type":"method","name":"_reduce_252","children":[],"call":[" new_call "," value_expr ","val [] "," argl ","val []= "]}," Ruby31Parser _reduce_251":{"type":"method","name":"_reduce_251","children":[],"call":["result line ","arg line "," new_call "," value_expr ","val [] "," new_call  line "]}," Ruby31Parser _reduce_250":{"type":"method","name":"_reduce_250","children":[],"call":[" s line ","lhs line "," s "," new_match ","result line ","arg line "," new_call "," s line  line "," new_call  line "]}," Ruby31Parser _reduce_249":{"type":"method","name":"_reduce_249","children":[],"call":[" new_match "," s line ","lhs line "," s "]}," Ruby31Parser _reduce_248":{"type":"method","name":"_reduce_248","children":[],"call":[" new_call "," argl ","val [] "," new_match "]}," Ruby31Parser _reduce_247":{"type":"method","name":"_reduce_247","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby31Parser _reduce_246":{"type":"method","name":"_reduce_246","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby31Parser _reduce_244":{"type":"method","name":"_reduce_244","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby31Parser _reduce_243":{"type":"method","name":"_reduce_243","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby31Parser _reduce_242":{"type":"method","name":"_reduce_242","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby31Parser _reduce_241":{"type":"method","name":"_reduce_241","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby31Parser _reduce_240":{"type":"method","name":"_reduce_240","children":[],"call":[" new_call ","val [] "," argl "]}," Ruby31Parser _reduce_239":{"type":"method","name":"_reduce_239","children":[],"call":[" new_call ","val [] "]}," Ruby31Parser _reduce_238":{"type":"method","name":"_reduce_238","children":[],"call":[" new_call "," argl "," wrap ","val [] "]}," Ruby31Parser _reduce_237":{"type":"method","name":"_reduce_237","children":[],"call":[" new_call "," argl ","val [] "," wrap "]}," Ruby31Parser _reduce_236":{"type":"method","name":"_reduce_236","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby31Parser _reduce_235":{"type":"method","name":"_reduce_235","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby31Parser _reduce_234":{"type":"method","name":"_reduce_234","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby31Parser _reduce_233":{"type":"method","name":"_reduce_233","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby31Parser _reduce_232":{"type":"method","name":"_reduce_232","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby31Parser _reduce_231":{"type":"method","name":"_reduce_231","children":[],"call":[" s line ","v2 line "," s "," new_call "," argl ","val [] "]}," Ruby31Parser _reduce_230":{"type":"method","name":"_reduce_230","children":[],"call":[" s line ","v2 line "," s "]}," Ruby31Parser _reduce_229":{"type":"method","name":"_reduce_229","children":[],"call":[" s line ","v1 line "," s ","v2 line "]}," Ruby31Parser _reduce_228":{"type":"method","name":"_reduce_228","children":[],"call":[" s line ","v1 line "," s "]}," Ruby31Parser _reduce_227":{"type":"method","name":"_reduce_227","children":[],"call":[" s line ","v1 line "," s ","v2 last ","v1 last ","Integer  === ","v2 sexp_type == ","v2 sexp_type ","v1 sexp_type == ","v1 sexp_type ","val [] "]}," Ruby31Parser _reduce_226":{"type":"method","name":"_reduce_226","children":[],"call":[" s line ","v1 line "," s ","v2 last ","v1 last ","Integer  === ","v2 sexp_type == ","v2 sexp_type ","v1 sexp_type == ","v1 sexp_type ","val [] "]}," Ruby31Parser _reduce_225":{"type":"method","name":"_reduce_225","children":[],"call":[" backref_assign_error "," new_op_asgn "," s line ","v1 line "," s ","v2 last ","v1 last ","Integer  === ","v2 sexp_type == ","v2 sexp_type ","v1 sexp_type == ","v1 sexp_type ","val [] "," new_op_ new_op_asgn  "]}," Ruby31Parser _reduce_224":{"type":"method","name":"_reduce_224","children":[],"call":[" new_const_op_asgn "," wrap "," backref_assign_error "," new_op_asgn "," new_const_op_ new_op_asgn  "," new_op_ new_op_asgn  "]}," Ruby31Parser _reduce_223":{"type":"method","name":"_reduce_223","children":[],"call":[" new_const_op_asgn "," s line ","lhs1 line "," s ","lhs2 to_sym "," wrap "," s line 1 line "," wrap 1 line "," s line 2 to_sym "," wrap 2 to_sym "]}," Ruby31Parser _reduce_222":{"type":"method","name":"_reduce_222","children":[],"call":[" s line ","lhs line "," s ","op to_sym ","id to_sym "," new_const_op_asgn ","lhs1 line ","lhs2 to_sym "," s line  line "," s line 1 line "," s line 2 to_sym "]}," Ruby31Parser _reduce_221":{"type":"method","name":"_reduce_221","children":[],"call":[" new_op_asgn2 "," s line ","lhs line "," s ","op to_sym ","id to_sym "]}," Ruby31Parser _reduce_220":{"type":"method","name":"_reduce_220","children":[],"call":[" new_op_asgn2 "]}," Ruby31Parser _reduce_219":{"type":"method","name":"_reduce_219","children":[],"call":[" new_op_asgn1 "," new_op_asgn2 "]}," Ruby31Parser _reduce_218":{"type":"method","name":"_reduce_218","children":[],"call":[" new_op_asgn "," new_op_asgn1 "]}," Ruby31Parser _reduce_217":{"type":"method","name":"_reduce_217","children":[],"call":[" new_assign ","val [] "," new_op_asgn "]}," Ruby31Parser _reduce_145":{"type":"method","name":"_reduce_145","children":[],"call":[" new_undef ","val [] "]}," Ruby31Parser _reduce_144":{"type":"method","name":"_reduce_144","children":[],"call":[" lexer lex_state= "," lexer "," new_undef ","val [] "]}," Ruby31Parser _reduce_143":{"type":"method","name":"_reduce_143","children":[],"call":[" new_undef ","val [] "," lexer lex_state= "," lexer "]}," Ruby31Parser _reduce_141":{"type":"method","name":"_reduce_141","children":[],"call":[" wrap ","val [] "]}," Ruby31Parser _reduce_139":{"type":"method","name":"_reduce_139","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby31Parser _reduce_135":{"type":"method","name":"_reduce_135","children":[],"call":["result line ","pval line "," s ","name to_sym "," s  line "]}," Ruby31Parser _reduce_134":{"type":"method","name":"_reduce_134","children":[],"call":["id to_sym ","result line ","pval line "," s ","name to_sym "," s  line "]}," Ruby31Parser _reduce_133":{"type":"method","name":"_reduce_133","children":[],"call":[" wrap ","val [] ","id to_sym "]}," Ruby31Parser _reduce_131":{"type":"method","name":"_reduce_131","children":[],"call":[" yyerror "]}," Ruby31Parser _reduce_130":{"type":"method","name":"_reduce_130","children":[],"call":[" backref_assign_error ","val [] "," yyerror "]}," Ruby31Parser _reduce_129":{"type":"method","name":"_reduce_129","children":[],"call":[" s line "," s ","id to_sym "," yyerror "," debug "," in_single > "," in_single "," in_def "," backref_assign_error ","val [] "]}," Ruby31Parser _reduce_128":{"type":"method","name":"_reduce_128","children":[],"call":[" s line "," s ","id to_sym ","expr line "," yyerror "," debug "," in_single > "," in_single "," in_def "," s expr line ine ","expr expr line ine "," in_singexpr line e > "," in_singexpr line e "]}," Ruby31Parser _reduce_127":{"type":"method","name":"_reduce_127","children":[],"call":[" new_attrasgn "," s line "," s ","id to_sym ","expr line "," yyerror "," debug "," in_single > "," in_single "," in_def "," s expr line ine ","expr expr line ine "," in_singexpr line e > "," in_singexpr line e "]}," Ruby31Parser _reduce_126":{"type":"method","name":"_reduce_126","children":[],"call":[" new_attrasgn "]}," Ruby31Parser _reduce_125":{"type":"method","name":"_reduce_125","children":[],"call":[" new_attrasgn "]}," Ruby31Parser _reduce_124":{"type":"method","name":"_reduce_124","children":[],"call":[" aryset "," new_attrasgn "]}," Ruby31Parser _reduce_123":{"type":"method","name":"_reduce_123","children":[],"call":[" debug "," assignable "," aryset "]}," Ruby31Parser _reduce_122":{"type":"method","name":"_reduce_122","children":[],"call":[" assignable "," debug "]}," Ruby31Parser _reduce_121":{"type":"method","name":"_reduce_121","children":[],"call":[" backref_assign_error "," assignable "]}," Ruby31Parser _reduce_120":{"type":"method","name":"_reduce_120","children":[],"call":[" s line "," s ","id to_sym "," yyerror "," debug "," in_single > "," in_single "," in_def "," backref_assign_error "]}," Ruby31Parser _reduce_119":{"type":"method","name":"_reduce_119","children":[],"call":[" s line "," s ","id to_sym ","expr line "," yyerror "," debug "," in_single > "," in_single "," in_def "," s expr line ine ","expr expr line ine "," in_singexpr line e > "," in_singexpr line e "]}," Ruby31Parser _reduce_118":{"type":"method","name":"_reduce_118","children":[],"call":[" new_attrasgn "," s line "," s ","id to_sym ","expr line "," yyerror "," debug "," in_single > "," in_single "," in_def "," s expr line ine ","expr expr line ine "," in_singexpr line e > "," in_singexpr line e "]}," Ruby31Parser _reduce_117":{"type":"method","name":"_reduce_117","children":[],"call":[" new_attrasgn "]}," Ruby31Parser _reduce_116":{"type":"method","name":"_reduce_116","children":[],"call":[" new_attrasgn "]}," Ruby31Parser _reduce_115":{"type":"method","name":"_reduce_115","children":[],"call":[" aryset ","val [] "," new_attrasgn "]}," Ruby31Parser _reduce_114":{"type":"method","name":"_reduce_114","children":[],"call":[" assignable ","val [] "," aryset "]}," Ruby31Parser _reduce_113":{"type":"method","name":"_reduce_113","children":[],"call":[" assignable ","val [] "]}," Ruby31Parser _reduce_112":{"type":"method","name":"_reduce_112","children":[],"call":[" list_append ","val [] "," assignable "]}," Ruby31Parser _reduce_111":{"type":"method","name":"_reduce_111","children":[],"call":[" s line ","item line "," s "," list_append ","val [] "]}," Ruby31Parser _reduce_110":{"type":"method","name":"_reduce_110","children":[],"call":["val [] << ","val [] compact ","val [] "," s line ","item line "," s "]}," Ruby31Parser _reduce_109":{"type":"method","name":"_reduce_109","children":[],"call":[" s line ","lhs line "," s ","val [] << ","val [] compact ","val [] "]}," Ruby31Parser _reduce_108":{"type":"method","name":"_reduce_108","children":[],"call":["val [] "," s line ","lhs line "," s "]}," Ruby31Parser _reduce_106":{"type":"method","name":"_reduce_106","children":[],"call":[" s line "," s ","post sexp_body ","post line "," s post line ine ","post post line ine "]}," Ruby31Parser _reduce_105":{"type":"method","name":"_reduce_105","children":[],"call":[" s line "," s "," lexer lineno "," lexer ","post sexp_body ","post line "," s  lexer lineno ine "," s post line ine ","  lexer lineno exer  lexer lineno ineno "," post line exer post line ineno ","  lexer lineno exer "," post line exer ","post  lexer lineno ine ","post post line ine "]}," Ruby31Parser _reduce_104":{"type":"method","name":"_reduce_104","children":[],"call":[" s line ","ary line "," s ","ary concat ","post sexp_body ","splat line ","node line "," s line  line "," s line  concat "]}," Ruby31Parser _reduce_103":{"type":"method","name":"_reduce_103","children":[],"call":[" s line "," s ","node line ","ary line ","ary concat ","post sexp_body ","splat line "," s node line ine ","node node line ine "," s line  line ","ary node line ine "," s line  concat ","spnode line at node line ine "]}," Ruby31Parser _reduce_102":{"type":"method","name":"_reduce_102","children":[],"call":[" s line ","ary line "," s ","ary concat ","post sexp_body "," list_append ","head line ","node line "," s node line ine "," list_append  line "," s line  line ","ary node line ine "," list_append  concat "," s line  concat "," node line ist_append ","head node line ine ","node node line ine "]}," Ruby31Parser _reduce_101":{"type":"method","name":"_reduce_101","children":[],"call":[" s line "," s ","head << ","head line ","ary line ","ary concat ","post sexp_body "," list_append "," s head line ine ","head head line ine ","ary head line ine "," list_append  line "," list_append  concat "," head line ist_append "]}," Ruby31Parser _reduce_100":{"type":"method","name":"_reduce_100","children":[],"call":[" s line ","result line "," s ","result concat ","ary2 sexp_body "," list_append ","splat line ","head << ","head line "," s head line ine "," s line  line "," list_append  line ","resuhead line t head line ine "," s line  concat "," list_append  concat ","resuhead line t concat "," head line ist_append ","sphead line at head line ine ","head head line ine "]}," Ruby31Parser _reduce_99":{"type":"method","name":"_reduce_99","children":[],"call":[" s line ","head line "," s ","head << ","tail line ","result line ","result concat ","ary2 sexp_body "," list_append ","splat line "," s line  line "," list_append  line "," s line  concat "," list_append  concat "]}," Ruby31Parser _reduce_98":{"type":"method","name":"_reduce_98","children":[],"call":[" s line ","lhs line "," s ","lhs << ","rhs compact ","head line ","head << ","tail line "]}," Ruby31Parser _reduce_97":{"type":"method","name":"_reduce_97","children":[],"call":[" s line ","head line "," s ","lhs line ","lhs << ","rhs compact "]}," Ruby31Parser _reduce_96":{"type":"method","name":"_reduce_96","children":[],"call":[" s line "," s ","arg line ","head line "," s arg line ine ","arg arg line ine ","head arg line ine "]}," Ruby31Parser _reduce_94":{"type":"method","name":"_reduce_94","children":[],"call":["val [] "]}," Ruby31Parser _reduce_92":{"type":"method","name":"_reduce_92","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last "," s val [] last  "]}," Ruby31Parser _reduce_91":{"type":"method","name":"_reduce_91","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last "," s val [] last  "]}," Ruby31Parser _reduce_90":{"type":"method","name":"_reduce_90","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last "," s val [] last  "]}," Ruby31Parser _reduce_89":{"type":"method","name":"_reduce_89","children":[],"call":["result line "," new_yield "," s line "," s "," ret_args ","val [] ","val [] last "," new_yield  line "," s line  line ","result val [] last  "," s val [] last  "]}," Ruby31Parser _reduce_88":{"type":"method","name":"_reduce_88","children":[],"call":[" new_super ","val [] ","result line "," new_yield "," new_super  line "," new_yield  line "]}," Ruby31Parser _reduce_87":{"type":"method","name":"_reduce_87","children":[],"call":["block insert "," block_dup_check "," new_call ","msg to_sym "," new_super ","val [] "," new_ new_call  "]}," Ruby31Parser _reduce_86":{"type":"method","name":"_reduce_86","children":[],"call":["result line "," new_call ","id to_sym ","block insert "," block_dup_check ","msg to_sym "," new_call  line "," new_ new_call  "]}," Ruby31Parser _reduce_85":{"type":"method","name":"_reduce_85","children":[],"call":["block insert "," block_dup_check "," new_call ","val [] ","msg to_sym ","result line ","id to_sym "," new_ new_call  "," new_call  line "]}," Ruby31Parser _reduce_84":{"type":"method","name":"_reduce_84","children":[],"call":["result line ","lhs line "," new_call ","op to_sym ","block insert "," block_dup_check ","val [] ","msg to_sym "," new_call  line "," new_ new_call  "]}," Ruby31Parser _reduce_83":{"type":"method","name":"_reduce_83","children":[],"call":["result insert "," block_dup_check ","call concat ","args sexp_body ","result line ","lhs line "," new_call ","op to_sym ","call concat  insert "," new_call  insert ","call concat  line "," new_call  line "]}," Ruby31Parser _reduce_82":{"type":"method","name":"_reduce_82","children":[],"call":["call concat ","args sexp_body ","result insert "," block_dup_check ","call concat  insert "]}," Ruby31Parser _reduce_81":{"type":"method","name":"_reduce_81","children":[],"call":[" new_call line "," new_call ","msg to_sym ","call concat ","args sexp_body "]}," Ruby31Parser _reduce_80":{"type":"method","name":"_reduce_80","children":[],"call":["result line "," new_call line "," new_call ","msg to_sym "," new_call line  line "]}," Ruby31Parser _reduce_79":{"type":"method","name":"_reduce_79","children":[],"call":[" lexer lineno "," lexer ","result line "," lexer lineno  line "]}," Ruby31Parser _reduce_78":{"type":"method","name":"_reduce_78","children":[],"call":[" new_call line ","blk line "," new_call ","msg to_sym "," lexer lineno "," lexer "]}," Ruby31Parser _reduce_74":{"type":"method","name":"_reduce_74","children":[],"call":[]}," Ruby31Parser _reduce_73":{"type":"method","name":"_reduce_73","children":[],"call":[" lexer cond pop "," lexer cond "," lexer "]}," Ruby31Parser _reduce_72":{"type":"method","name":"_reduce_72","children":[],"call":[" lexer cond push "," lexer cond "," lexer "," lexer cond pop "]}," Ruby31Parser _reduce_71":{"type":"method","name":"_reduce_71","children":[],"call":[" value_expr ","val [] "," lexer cond push "," lexer cond "," lexer "]}," Ruby31Parser _reduce_70":{"type":"method","name":"_reduce_70","children":[],"call":[" in_single "," lexer lex_state= ","EXPR_ENDFN  | "," lexer "," value_expr ","val [] "]}," Ruby31Parser _reduce_69":{"type":"method","name":"_reduce_69","children":[],"call":[" lexer lex_state= "," lexer "," in_single ","EXPR_ENDFN  | "]}," Ruby31Parser _reduce_68":{"type":"method","name":"_reduce_68","children":[],"call":[" lexer lex_state= "," lexer "," in_argdef= "]}," Ruby31Parser _reduce_67":{"type":"method","name":"_reduce_67","children":[],"call":["id to_sym "," lexer cond push "," lexer cond "," lexer "," lexer cmdarg push "," lexer cmdarg "," env extend "," env "," in_def= "," in_def "]}," Ruby31Parser _reduce_65":{"type":"method","name":"_reduce_65","children":[],"call":[" new_case ","expr line "," new_in "," in_kwarg= "," value_expr "," env unextend "," env "," value_expr  line "," value_ value_expr  "]}," Ruby31Parser _reduce_64":{"type":"method","name":"_reduce_64","children":[],"call":[" env extend "," env "," in_kwarg= "," in_kwarg "," lexer command_start= "," lexer "," lexer lex_state= ","EXPR_BEG  | "," new_case ","expr line "," new_in "," value_expr "," env unextend "," value_expr  line "," value_ value_expr  "]}," Ruby31Parser _reduce_63":{"type":"method","name":"_reduce_63","children":[],"call":[" new_case ","rhs line "," new_in "," in_kwarg= "," env unextend "," env "," env extend "," in_kwarg "," lexer command_start= "," lexer "," lexer lex_state= ","EXPR_BEG  | "," new_in  line "]}," Ruby31Parser _reduce_62":{"type":"method","name":"_reduce_62","children":[],"call":[" env extend "," env "," in_kwarg= "," in_kwarg "," lexer command_start= "," lexer "," lexer lex_state= ","EXPR_BEG  | "," new_case ","rhs line "," new_in "," env unextend "," new_in  line "]}," Ruby31Parser _reduce_61":{"type":"method","name":"_reduce_61","children":[],"call":[" new_call line ","cmd line "," new_call "," env extend "," env "," in_kwarg= "," in_kwarg "," lexer command_start= "," lexer "," lexer lex_state= ","EXPR_BEG  | "]}," Ruby31Parser _reduce_60":{"type":"method","name":"_reduce_60","children":[],"call":[" new_call line "," new_call ","cmd line "]}," Ruby31Parser _reduce_59":{"type":"method","name":"_reduce_59","children":[],"call":[" logical_op "," new_call line "," new_call "]}," Ruby31Parser _reduce_58":{"type":"method","name":"_reduce_58","children":[],"call":[" logical_op "]}," Ruby31Parser _reduce_55":{"type":"method","name":"_reduce_55","children":[],"call":[" new_rescue "," new_resbody "," s line "," s "," value_expr "," value_ value_expr  "]}," Ruby31Parser _reduce_54":{"type":"method","name":"_reduce_54","children":[],"call":[" value_expr "," new_rescue "," new_resbody "," s line "," s "," value_ value_expr  "]}," Ruby31Parser _reduce_53":{"type":"method","name":"_reduce_53","children":[],"call":[" backref_assign_error ","val [] "," value_expr "]}," Ruby31Parser _reduce_52":{"type":"method","name":"_reduce_52","children":[],"call":[" new_endless_defs "," backref_assign_error ","val [] "]}," Ruby31Parser _reduce_51":{"type":"method","name":"_reduce_51","children":[],"call":[" new_endless_defs "]}," Ruby31Parser _reduce_50":{"type":"method","name":"_reduce_50","children":[],"call":[" new_endless_defn "," new_endless_defs "]}," Ruby31Parser _reduce_49":{"type":"method","name":"_reduce_49","children":[],"call":[" new_endless_defn "]}," Ruby31Parser _reduce_48":{"type":"method","name":"_reduce_48","children":[],"call":[" s line "," s ","id to_sym ","lhs2 to_sym "," new_endless_defn "]}," Ruby31Parser _reduce_47":{"type":"method","name":"_reduce_47","children":[],"call":[" s line "," s ","id to_sym ","lhs2 to_sym "]}," Ruby31Parser _reduce_46":{"type":"method","name":"_reduce_46","children":[],"call":["result line ","prim line ","result sexp_type= ","call_op == "," s ","op_asgn to_sym ","id to_sym "," s line ","lhs2 to_sym "," s  line "," s line  line "," s  sexp_type= "," s line  sexp_type= "]}," Ruby31Parser _reduce_45":{"type":"method","name":"_reduce_45","children":[],"call":["result line ","prim line ","result sexp_type= ","call_op == "," s ","op_asgn to_sym ","id to_sym "," s  line "," s  sexp_type= "]}," Ruby31Parser _reduce_44":{"type":"method","name":"_reduce_44","children":[],"call":[" new_op_asgn1 ","result line ","prim line ","result sexp_type= ","call_op == "," s ","op_asgn to_sym ","id to_sym "," new_op_asgn1  line "," s  line "," new_op_asgn1  sexp_type= "," s  sexp_type= "]}," Ruby31Parser _reduce_43":{"type":"method","name":"_reduce_43","children":[],"call":[" new_op_asgn "," new_op_asgn1 "]}," Ruby31Parser _reduce_42":{"type":"method","name":"_reduce_42","children":[],"call":[" new_assign ","val [] "," new_op_asgn "]}," Ruby31Parser _reduce_40":{"type":"method","name":"_reduce_40","children":[],"call":[" new_masgn ","val [] "]}," Ruby31Parser _reduce_39":{"type":"method","name":"_reduce_39","children":[],"call":[" new_masgn "," new_rescue "," new_resbody "," s line ","resbody line "," s ","val [] "," new_ new_resbody  "," new_resbody  line "]}," Ruby31Parser _reduce_38":{"type":"method","name":"_reduce_38","children":[],"call":[" new_assign "," s line ","rhs line "," s "," new_masgn "," new_rescue "," new_resbody ","resbody line "," new_ new_resbody  "," new_resbody  line "]}," Ruby31Parser _reduce_37":{"type":"method","name":"_reduce_37","children":[],"call":[" new_masgn ","val [] "," new_assign "," s line ","rhs line "," s "]}," Ruby31Parser _reduce_35":{"type":"method","name":"_reduce_35","children":[],"call":[" new_iter "," s line "," s "," yyerror "," debug "," in_single > "," in_single "," in_def "]}," Ruby31Parser _reduce_34":{"type":"method","name":"_reduce_34","children":[],"call":[" new_rescue "," new_resbody "," s line ","resbody line "," s "," new_iter "," yyerror "," debug "," in_single > "," in_single "," in_def "," new_ new_resbody  "," new_resbody  line "]}," Ruby31Parser _reduce_33":{"type":"method","name":"_reduce_33","children":[],"call":[" new_until "," new_rescue "," new_resbody "," s line ","resbody line "," s "," new_ new_resbody  "," new_resbody  line "]}," Ruby31Parser _reduce_32":{"type":"method","name":"_reduce_32","children":[],"call":[" new_while "," new_until "]}," Ruby31Parser _reduce_31":{"type":"method","name":"_reduce_31","children":[],"call":[" new_if "," new_while "]}," Ruby31Parser _reduce_30":{"type":"method","name":"_reduce_30","children":[],"call":[" new_if "]}," Ruby31Parser _reduce_29":{"type":"method","name":"_reduce_29","children":[],"call":["val [] "," new_if "]}," Ruby31Parser _reduce_28":{"type":"method","name":"_reduce_28","children":[],"call":[" yyerror ","val [] "]}," Ruby31Parser _reduce_27":{"type":"method","name":"_reduce_27","children":[],"call":[" s line "," s ","lhs to_sym "," yyerror "]}," Ruby31Parser _reduce_26":{"type":"method","name":"_reduce_26","children":[],"call":[" s line "," s ","rhs to_sym ","lhs to_sym "]}," Ruby31Parser _reduce_25":{"type":"method","name":"_reduce_25","children":[],"call":[" s line line "," s line "," s ","rhs to_sym ","lhs to_sym "]}," Ruby31Parser _reduce_24":{"type":"method","name":"_reduce_24","children":[],"call":[" lexer lex_state= "," lexer "," s line line "," s line "," s "]}," Ruby31Parser _reduce_23":{"type":"method","name":"_reduce_23","children":[],"call":["val [] "," lexer lex_state= "," lexer "]}," Ruby31Parser _reduce_22":{"type":"method","name":"_reduce_22","children":[],"call":[" yyerror ","val [] "]}," Ruby31Parser _reduce_20":{"type":"method","name":"_reduce_20","children":[],"call":[" debug ","val [] "]}," Ruby31Parser _reduce_19":{"type":"method","name":"_reduce_19","children":[],"call":[" block_append ","val [] "," debug "]}," Ruby31Parser _reduce_16":{"type":"method","name":"_reduce_16","children":[],"call":[" new_compstmt "]}," Ruby31Parser _reduce_15":{"type":"method","name":"_reduce_15","children":[],"call":[" new_body "," new_compstmt "]}," Ruby31Parser _reduce_14":{"type":"method","name":"_reduce_14","children":[],"call":[" new_body "]}," Ruby31Parser _reduce_13":{"type":"method","name":"_reduce_13","children":[],"call":[" yyerror ","_values [] "," new_body "]}," Ruby31Parser _reduce_12":{"type":"method","name":"_reduce_12","children":[],"call":[" new_iter "," s line "," s "," yyerror ","_values [] "]}," Ruby31Parser _reduce_11":{"type":"method","name":"_reduce_11","children":[],"call":[" lexer lineno "," lexer "," new_iter "," s line "," s "]}," Ruby31Parser _reduce_10":{"type":"method","name":"_reduce_10","children":[],"call":["preexe line ","iter line "]}," Ruby31Parser _reduce_9":{"type":"method","name":"_reduce_9","children":[],"call":[" env extend "," env "," yyerror "," debug "," in_single > "," in_single "," in_def "]}," Ruby31Parser _reduce_6":{"type":"method","name":"_reduce_6","children":[],"call":[" block_append ","val [] "]}," Ruby31Parser _reduce_3":{"type":"method","name":"_reduce_3","children":[],"call":[]}," Ruby31Parser _reduce_2":{"type":"method","name":"_reduce_2","children":[],"call":[" lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer cond pop "," lexer cond "," new_compstmt "]}," Ruby31Parser _reduce_1":{"type":"method","name":"_reduce_1","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby30Parser _reduce_773":{"type":"method","name":"_reduce_773","children":[],"call":[]}," Ruby30Parser _reduce_772":{"type":"method","name":"_reduce_772","children":[],"call":[" yyerrok "]}," Ruby30Parser _reduce_769":{"type":"method","name":"_reduce_769","children":[],"call":[" yyerrok "]}," Ruby30Parser _reduce_765":{"type":"method","name":"_reduce_765","children":[],"call":[" lexer lineno "," lexer "]}," Ruby30Parser _reduce_764":{"type":"method","name":"_reduce_764","children":[],"call":[" lexer lineno "," lexer "]}," Ruby30Parser _reduce_742":{"type":"method","name":"_reduce_742","children":[],"call":[" s line "," s ","arg line "," s arg line  ","arg arg line  "]}," Ruby30Parser _reduce_741":{"type":"method","name":"_reduce_741","children":[],"call":[" s line "," s ","sym sexp_type= "]}," Ruby30Parser _reduce_734":{"type":"method","name":"_reduce_734","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","lit line "," wrap ","val [] "," wrap  line "]}," Ruby30Parser _reduce_730":{"type":"method","name":"_reduce_730","children":[],"call":[]}," RubyParserStuff attrset_id?":{"type":"method","name":"attrset_id?","children":[],"call":["id =~ "]}," RubyParserStuff ary_to_pat":{"type":"method","name":"ary_to_pat","children":[],"call":[" new_array_pattern ","ary line ","pat sexp_type= ","ary dup "," new_array_ary dup tern ","ary dup  sexp_type= "]}," RubyLexer unescape_string":{"type":"method","name":"unescape_string","children":[],"call":["str b ","str valid_encoding? "," unescape b force_encoding "," unescape b "," unescape ","str gsub "]}," Ruby31Parser _reduce_572":{"type":"method","name":"_reduce_572","children":[],"call":[" ary_to_pat ","val [] "]}," Ruby31Parser _reduce_571":{"type":"method","name":"_reduce_571","children":[],"call":[" ary_to_pat ","val [] "," wrap "]}," Ruby31Parser _reduce_570":{"type":"method","name":"_reduce_570","children":[],"call":[" ary_to_pat ","val [] "," wrap "]}," Ruby31Parser _reduce_569":{"type":"method","name":"_reduce_569","children":[],"call":[" ary_to_pat ","val [] "," wrap "]}," Ruby20Parser _reduce_616":{"type":"method","name":"_reduce_616","children":[],"call":[]}," Ruby20Parser _reduce_583":{"type":"method","name":"_reduce_583","children":[],"call":[" yyerror ","result [] == ","result [] ","val [] "," assignable ","val [] to_sym "," lexer lex_state= "," lexer ","val []  [] == "," assignable  [] == ","val []  [] "," assignable  [] "]}," Ruby20Parser _reduce_361":{"type":"method","name":"_reduce_361","children":[],"call":[" s ","val [] "]}," Ruby20Parser _reduce_354":{"type":"method","name":"_reduce_354","children":[],"call":[" s ","val [] "]}," Ruby19Parser _reduce_574":{"type":"method","name":"_reduce_574","children":[],"call":[" yyerrok "]}," Ruby19Parser _reduce_524":{"type":"method","name":"_reduce_524","children":[],"call":[" env []= "," env ","val [] to_sym ","val [] "]}," Ruby19Parser _reduce_475":{"type":"method","name":"_reduce_475","children":[],"call":[" s ","result last intern ","result last ","result []= ","result [] ","val [] "," lexer lex_state= "," lexer "," s  last intern ","val []  last intern "," s  last ","val []  last "," s  []= ","val []  []= "," s  [] ","val []  [] "]}," Ruby32Parser _reduce_none":{"type":"method","name":"_reduce_none","children":[],"call":["val [] "]}," Ruby32Parser _reduce_785":{"type":"method","name":"_reduce_785","children":[],"call":[]}," Ruby32Parser _reduce_784":{"type":"method","name":"_reduce_784","children":[],"call":[" yyerrok "]}," Ruby32Parser _reduce_781":{"type":"method","name":"_reduce_781","children":[],"call":[" yyerrok "]}," Ruby32Parser _reduce_777":{"type":"method","name":"_reduce_777","children":[],"call":[" lexer lineno "," lexer "," yyerrok "]}," Ruby32Parser _reduce_776":{"type":"method","name":"_reduce_776","children":[],"call":[" lexer lineno "," lexer "," yyerrok "]}," Ruby32Parser _reduce_754":{"type":"method","name":"_reduce_754","children":[],"call":[" s line "," s ","arg line "," s arg line  ","arg arg line  "]}," Ruby32Parser _reduce_753":{"type":"method","name":"_reduce_753","children":[],"call":[" s line "," s ","sym sexp_type= "]}," Ruby32Parser _reduce_752":{"type":"method","name":"_reduce_752","children":[],"call":[" s line ","lit line "," s "," wrap ","val [] "," wrap  line "]}," Ruby32Parser _reduce_751":{"type":"method","name":"_reduce_751","children":[],"call":[" s line ","lit line "," s "," wrap "," wrap  line "]}," Ruby32Parser _reduce_750":{"type":"method","name":"_reduce_750","children":[],"call":[" s line ","v1 line "," s "]}," Ruby32Parser _reduce_749":{"type":"method","name":"_reduce_749","children":[],"call":["result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] ","val [] dup "," s line "," s ","arg line "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "," s arg line  ","arg arg line  "]}," Ruby32Parser _reduce_746":{"type":"method","name":"_reduce_746","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","lit line "," wrap ","val [] "," wrap  line "]}," Ruby32Parser _reduce_745":{"type":"method","name":"_reduce_745","children":[],"call":[" yyerror ","result sexp_type == ","result sexp_type ","val [] "," s line ","lit line "," s "," wrap ","v1 line ","val []  sexp_type == "," s line  sexp_type == ","val []  sexp_type "," s line  sexp_type "," wrap  line "]}," Ruby32Parser _reduce_744":{"type":"method","name":"_reduce_744","children":[],"call":[" lexer lex_state= "," lexer "," s line ","v1 line "," s ","result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] ","val [] dup "," s line  sexp_type= ","val [] dup  push ","val [] sexp_body  empty? "]}," Ruby32Parser _reduce_742":{"type":"method","name":"_reduce_742","children":[],"call":[]}," Ruby32Parser _reduce_741":{"type":"method","name":"_reduce_741","children":[],"call":[" s line "," lexer lineno "," lexer "," s "]}," Ruby32Parser _reduce_740":{"type":"method","name":"_reduce_740","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," yyerror ","result sexp_type == ","result sexp_type ","val [] "," s line  sexp_type == ","val []  sexp_type == "," s line  sexp_type ","val []  sexp_type "]}," Ruby32Parser _reduce_739":{"type":"method","name":"_reduce_739","children":[],"call":["(str \"&\") to_sym "," env []= "," env ","id to_sym "," yyerror ","result sexp_type == ","result sexp_type ","val [] "," lexer lex_state= "," lexer ","val []  sexp_type == ","val []  sexp_type "]}," Ruby32Parser _reduce_736":{"type":"method","name":"_reduce_736","children":[],"call":[" lexer lineno "," lexer "," env []= "," env "]}," Ruby32Parser _reduce_735":{"type":"method","name":"_reduce_735","children":[],"call":[" assignable ","id to_sym "]}," Ruby32Parser _reduce_732":{"type":"method","name":"_reduce_732","children":[],"call":[" block_append ","val [] "]}," Ruby32Parser _reduce_731":{"type":"method","name":"_reduce_731","children":[],"call":[" s line ","opt line "," s "," env []= "," env "]}," Ruby32Parser _reduce_730":{"type":"method","name":"_reduce_730","children":[],"call":["result << "," env []= "," env "," assignable ","id to_sym "]}," Ruby32Parser _reduce_729":{"type":"method","name":"_reduce_729","children":[],"call":[" s line ","optblk line "," s "," assignable ","id to_sym "]}," Ruby32Parser _reduce_728":{"type":"method","name":"_reduce_728","children":[],"call":[" assignable "]}," Ruby32Parser _reduce_727":{"type":"method","name":"_reduce_727","children":[],"call":[" assignable "," block_append ","val [] "]}," Ruby32Parser _reduce_726":{"type":"method","name":"_reduce_726","children":[],"call":[" lexer lineno "," lexer "," env []= "," env "," block_append ","val [] "," s line ","opt line "," s "]}," Ruby32Parser _reduce_725":{"type":"method","name":"_reduce_725","children":[],"call":[" assignable ","id to_sym "," s line ","opt line "," s ","result << "," s line  << "]}," Ruby32Parser _reduce_724":{"type":"method","name":"_reduce_724","children":[],"call":["result << "," s line ","optblk line "," s "," s line  << "]}," Ruby32Parser _reduce_721":{"type":"method","name":"_reduce_721","children":[],"call":[" args "," assignable "," env []= "," env "]}," Ruby32Parser _reduce_719":{"type":"method","name":"_reduce_719","children":[],"call":["list << ","item last "," assignable ","id to_sym "]}," Ruby32Parser _reduce_717":{"type":"method","name":"_reduce_717","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym "]}," Ruby32Parser _reduce_716":{"type":"method","name":"_reduce_716","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym "," args "]}," Ruby32Parser _reduce_715":{"type":"method","name":"_reduce_715","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym "," args "]}," Ruby32Parser _reduce_714":{"type":"method","name":"_reduce_714","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym ","list << ","item last "]}," Ruby32Parser _reduce_712":{"type":"method","name":"_reduce_712","children":[],"call":["result << ","item first ","Sexp  === "," s line ","list line "," s ","list sexp_type == ","list sexp_type ","result line_max= ","item line_max "," in_argdef= "," env []= "," env ","label to_sym "," s line  << "," s line  line_max= ","result item line_max = ","item item line_max  "]}," Ruby32Parser _reduce_711":{"type":"method","name":"_reduce_711","children":[],"call":[" new_arg "," s line "," s "," env []= "," env ","label to_sym "," in_argdef= "]}," Ruby32Parser _reduce_710":{"type":"method","name":"_reduce_710","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym "," in_argdef= "]}," Ruby32Parser _reduce_707":{"type":"method","name":"_reduce_707","children":[],"call":[" env []= "," env ","id to_sym ","result line_max= ","result << ","item line_max ","Sexp  === "," s line ","list line "," s ","list sexp_type == ","list sexp_type ","result item line_max = "," s line  line_max= "," s line  << ","item item line_max  "]}," Ruby32Parser _reduce_705":{"type":"method","name":"_reduce_705","children":[],"call":[" yyerror "," new_arg "]}," Ruby32Parser _reduce_704":{"type":"method","name":"_reduce_704","children":[],"call":[" yyerror "]}," Ruby32Parser _reduce_703":{"type":"method","name":"_reduce_703","children":[],"call":[" yyerror "]}," Ruby32Parser _reduce_702":{"type":"method","name":"_reduce_702","children":[],"call":[" yyerror "," env []= "," env ","id to_sym "]}," Ruby32Parser _reduce_701":{"type":"method","name":"_reduce_701","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," env []= "," env ","id to_sym "]}," Ruby32Parser _reduce_700":{"type":"method","name":"_reduce_700","children":[],"call":[" args "," yyerror "]}," Ruby32Parser _reduce_699":{"type":"method","name":"_reduce_699","children":[],"call":[" args "," yyerror "]}," Ruby32Parser _reduce_698":{"type":"method","name":"_reduce_698","children":[],"call":[" args "," yyerror "]}," Ruby32Parser _reduce_697":{"type":"method","name":"_reduce_697","children":[],"call":[" args "," yyerror "]}," Ruby32Parser _reduce_696":{"type":"method","name":"_reduce_696","children":[],"call":[" args "," yyerror "," s line "," s "]}," Ruby32Parser _reduce_695":{"type":"method","name":"_reduce_695","children":[],"call":[" args "," s line "," s "]}," Ruby32Parser _reduce_694":{"type":"method","name":"_reduce_694","children":[],"call":[" args "]}," Ruby32Parser _reduce_693":{"type":"method","name":"_reduce_693","children":[],"call":[" args "]}," Ruby32Parser _reduce_692":{"type":"method","name":"_reduce_692","children":[],"call":[" args "]}," Ruby32Parser _reduce_691":{"type":"method","name":"_reduce_691","children":[],"call":[" args "]}," Ruby32Parser _reduce_690":{"type":"method","name":"_reduce_690","children":[],"call":[" args "]}," Ruby32Parser _reduce_689":{"type":"method","name":"_reduce_689","children":[],"call":[" args "]}," Ruby32Parser _reduce_688":{"type":"method","name":"_reduce_688","children":[],"call":[" args "]}," Ruby32Parser _reduce_687":{"type":"method","name":"_reduce_687","children":[],"call":[" args "]}," Ruby32Parser _reduce_686":{"type":"method","name":"_reduce_686","children":[],"call":[" args "]}," Ruby32Parser _reduce_685":{"type":"method","name":"_reduce_685","children":[],"call":[" args "]}," Ruby32Parser _reduce_684":{"type":"method","name":"_reduce_684","children":[],"call":["val [] "," args "]}," Ruby32Parser _reduce_681":{"type":"method","name":"_reduce_681","children":[],"call":[" args "]}," Ruby32Parser _reduce_680":{"type":"method","name":"_reduce_680","children":[],"call":[" args "]}," Ruby32Parser _reduce_679":{"type":"method","name":"_reduce_679","children":[],"call":[" args ","val [] "]}," Ruby32Parser _reduce_678":{"type":"method","name":"_reduce_678","children":[],"call":[" end_args ","val [] "]}," Ruby32Parser _reduce_677":{"type":"method","name":"_reduce_677","children":[],"call":[" lexer lex_state "," lexer "," in_kwarg= "," in_kwarg "]}," Ruby32Parser _reduce_675":{"type":"method","name":"_reduce_675","children":[],"call":[" end_args "," args "]}," Ruby32Parser _reduce_674":{"type":"method","name":"_reduce_674","children":[],"call":[" end_args "," args "]}," Ruby32Parser _reduce_672":{"type":"method","name":"_reduce_672","children":[],"call":[" end_args "," lexer lex_state "," lexer "," in_argdef= "," in_kwarg= "," in_kwarg "]}," Ruby32Parser _reduce_671":{"type":"method","name":"_reduce_671","children":[],"call":["val [] "," lexer lex_state "," lexer "," in_kwarg= "," in_kwarg "]}," Ruby32Parser _reduce_670":{"type":"method","name":"_reduce_670","children":[],"call":[" lexer command_start= "," lexer "," lexer lex_state= "," end_args "," in_argdef= "]}," Ruby32Parser _reduce_669":{"type":"method","name":"_reduce_669","children":[],"call":[" s line "," s "," end_args "," in_argdef= "]}," Ruby32Parser _reduce_668":{"type":"method","name":"_reduce_668","children":[],"call":[" s line "," s "," end_args "]}," Ruby32Parser _reduce_667":{"type":"method","name":"_reduce_667","children":[],"call":[" debug "," assignable ","val [] "]}," Ruby32Parser _reduce_666":{"type":"method","name":"_reduce_666","children":[],"call":[" assignable ","val [] "]}," Ruby32Parser _reduce_665":{"type":"method","name":"_reduce_665","children":[],"call":[" gettable ","Sexp  === ","val [] "," lexer command_start= "," lexer "," lexer lex_state= "]}," Ruby32Parser _reduce_664":{"type":"method","name":"_reduce_664","children":[],"call":["result line "," gettable ","Sexp  === "," raise ","val inspect ","val first "," lexer command_start= "," lexer "," lexer lex_state= "," s line "," s "," gettable  line "," s line  line "]}," Ruby32Parser _reduce_663":{"type":"method","name":"_reduce_663","children":[],"call":[" s line "," s "," lexer lineno "," lexer "," s  lexer lineno ine ","  lexer lineno exer  lexer lineno ineno ","  lexer lineno exer "]}," Ruby32Parser _reduce_662":{"type":"method","name":"_reduce_662","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," debug "," assignable ","val [] "]}," Ruby32Parser _reduce_661":{"type":"method","name":"_reduce_661","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," file "," debug "," assignable ","val [] "]}," Ruby32Parser _reduce_660":{"type":"method","name":"_reduce_660","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," assignable ","val [] "," gettable ","Sexp  === "]}," Ruby32Parser _reduce_659":{"type":"method","name":"_reduce_659","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," gettable ","Sexp  === ","val [] ","result line "," raise ","val inspect ","val first "," s line  line "," gettable  line "]}," Ruby32Parser _reduce_658":{"type":"method","name":"_reduce_658","children":[],"call":[" s line "," lexer lineno "," lexer "," s ","result line "," gettable ","Sexp  === "," raise ","val inspect ","val first "," s line  line "," gettable  line "]}," Ruby32Parser _reduce_657":{"type":"method","name":"_reduce_657","children":[],"call":[" s line "," lexer lineno "," lexer "," s "]}," Ruby32Parser _reduce_651":{"type":"method","name":"_reduce_651","children":[],"call":[" wrap ","val [] "," s line "," s "]}," Ruby32Parser _reduce_650":{"type":"method","name":"_reduce_650","children":[],"call":[" wrap ","val [] "]}," Ruby32Parser _reduce_649":{"type":"method","name":"_reduce_649","children":[],"call":[" wrap ","val [] "]}," Ruby32Parser _reduce_644":{"type":"method","name":"_reduce_644","children":[],"call":["num -@ "," wrap ","val [] "]}," Ruby32Parser _reduce_642":{"type":"method","name":"_reduce_642","children":[],"call":[" debug "," s line ","result line "," s ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," lexer lineno "," lexer "," lexer lex_state= "," s line  line "," s line  last to_sym "," s line  last "," s line  sexp_type= "," s line  sexp_type "]}," Ruby32Parser _reduce_637":{"type":"method","name":"_reduce_637","children":[],"call":[" wrap ","val [] "," lexer lex_state= "," lexer "," debug "," s line ","result line "," s ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," wrap  line "," s line  line "," wrap  last to_sym "," s line  last to_sym "," wrap  last "," s line  last "," wrap  sexp_type= "," s line  sexp_type= "," wrap  sexp_type "," s line  sexp_type "]}," Ruby32Parser _reduce_636":{"type":"method","name":"_reduce_636","children":[],"call":[" wrap ","val [] "," lexer lex_state= "," lexer "," debug "," s line ","result line "," s ","result last to_sym ","result last ","result sexp_type= ","result sexp_type "," wrap  line "," s line  line "," wrap  last to_sym "," s line  last to_sym "," wrap  last "," s line  last "," wrap  sexp_type= "," s line  sexp_type= "," wrap  sexp_type "," s line  sexp_type "]}," Ruby32Parser _reduce_632":{"type":"method","name":"_reduce_632","children":[],"call":[" wrap ","val [] "," lexer lex_state= "," lexer "]}," Ruby32Parser _reduce_631":{"type":"method","name":"_reduce_631","children":[],"call":[" wrap ","val [] "," lexer lex_state= "," lexer "]}," Ruby32Parser _reduce_630":{"type":"method","name":"_reduce_630","children":[],"call":[" wrap ","val [] "," lexer lex_state= "," lexer "]}," Ruby32Parser _reduce_629":{"type":"method","name":"_reduce_629","children":[],"call":[" raise ","stmt inspect "," debug "," s line "," s ","stmt sexp_type "," lexer lex_state= "," lexer "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "]}," Ruby32Parser _reduce_628":{"type":"method","name":"_reduce_628","children":[],"call":[" lexer lex_state= "," lexer "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," lexer lineno "," lexer lex_state "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "]}," Ruby32Parser _reduce_627":{"type":"method","name":"_reduce_627","children":[],"call":[" s line ","str line "," s "," lexer lex_strterm= "," lexer "," wrap ","val [] "]}," Ruby32Parser _reduce_626":{"type":"method","name":"_reduce_626","children":[],"call":[" lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm "," wrap ","val [] "]}," Ruby32Parser _reduce_625":{"type":"method","name":"_reduce_625","children":[],"call":[" new_string "," wrap ","val [] "]}," Ruby32Parser _reduce_624":{"type":"method","name":"_reduce_624","children":[],"call":[" literal_concat "," wrap ","val [] "," raise ","stmt inspect "," debug "," s line "," s ","stmt sexp_type "," lexer lex_state= "," lexer "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "]}," Ruby32Parser _reduce_623":{"type":"method","name":"_reduce_623","children":[],"call":[" raise ","stmt inspect "," debug "," s line "," s ","stmt sexp_type "," lexer lex_state= "," lexer "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer cond push "," lexer cmdarg push "," lexer lex_state "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "]}," Ruby32Parser _reduce_622":{"type":"method","name":"_reduce_622","children":[],"call":[" literal_concat "," lexer lex_state= "," lexer "," lexer string_nest= "," lexer brace_nest= "," lexer lex_strterm= "," lexer cond push "," lexer cond "," lexer cmdarg push "," lexer cmdarg "," lexer lex_state "," lexer string_nest "," lexer brace_nest "," lexer lex_strterm "," s line ","str line "," s "]}," Ruby32Parser _reduce_621":{"type":"method","name":"_reduce_621","children":[],"call":[" s line ","str line "," s "," lexer lex_strterm= "," lexer "," lexer lex_state= "," lexer lex_strterm "]}," Ruby32Parser _reduce_620":{"type":"method","name":"_reduce_620","children":[],"call":[" literal_concat "," lexer lex_state= "," lexer "," lexer lex_strterm= "," lexer lex_strterm "," new_string "]}," Ruby32Parser _reduce_619":{"type":"method","name":"_reduce_619","children":[],"call":[" s line "," s "," +@ "," prev_value_to_lineno ","_values last "," new_string "," literal_concat "," s  prev_value_to_lineno  "," prev_value_to_ prev_value_to_lineno no "]}," Ruby32Parser _reduce_618":{"type":"method","name":"_reduce_618","children":[],"call":["val [] dup << "," new_qsym_list_entry ","val [] dup ","val [] "," literal_concat "]}," Ruby32Parser _reduce_617":{"type":"method","name":"_reduce_617","children":[],"call":[" new_qsym_list "," literal_concat "]}," Ruby32Parser _reduce_616":{"type":"method","name":"_reduce_616","children":[],"call":["val [] dup << "," new_qword_list_entry ","val [] dup ","val [] "," literal_concat "]}," Ruby32Parser _reduce_615":{"type":"method","name":"_reduce_615","children":[],"call":[" new_qword_list "," literal_concat "]}," Ruby32Parser _reduce_614":{"type":"method","name":"_reduce_614","children":[],"call":["list line ","result line_max= "," literal_concat "," s line "," s "," +@ "," prev_value_to_lineno ","_values last ","list  prev_value_to_lineno  ","list line  line_max= "," literal_concat  line_max= "," s line  line_max= ","result  prev_value_to_lineno _max= "," s  prev_value_to_lineno  "," prev_value_to_ prev_value_to_lineno no "]}," Ruby32Parser _reduce_613":{"type":"method","name":"_reduce_613","children":[],"call":[" s line "," s ","result line_max= "," +@ "," prev_value_to_lineno ","_values last ","val [] dup << "," new_qsym_list_entry ","val [] dup ","val [] "," s  prev_value_to_lineno  "," s line  line_max= ","val [] dup <<  line_max= ","result  prev_value_to_lineno _max= "," prev_value_to_ prev_value_to_lineno no "]}," Ruby32Parser _reduce_612":{"type":"method","name":"_reduce_612","children":[],"call":["list line ","result line_max= ","val [] dup << "," new_qsym_list_entry ","val [] dup ","val [] "," new_qsym_list ","list line  line_max= ","val [] dup <<  line_max= "," new_qsym_list  line_max= "]}," Ruby32Parser _reduce_611":{"type":"method","name":"_reduce_611","children":[],"call":[" s line "," s ","result line_max= "," new_qsym_list ","val [] dup << "," new_qword_list_entry ","val [] dup ","val [] "," s line  line_max= "," new_qsym_list  line_max= ","val [] dup <<  line_max= "]}," Ruby32Parser _reduce_610":{"type":"method","name":"_reduce_610","children":[],"call":["list dup << "," new_symbol_list_entry ","list dup ","val [] dup << "," new_qword_list_entry ","val [] dup ","val [] "," new_qword_list "]}," Ruby32Parser _reduce_609":{"type":"method","name":"_reduce_609","children":[],"call":[" new_symbol_list "," new_qword_list ","result line_max= ","list line "," new_symbol_list  line_max= "," new_qword_list  line_max= ","list line  line_max= "]}," Ruby32Parser _reduce_608":{"type":"method","name":"_reduce_608","children":[],"call":["list line ","result line_max= "," s line "," s ","list line  line_max= "," s line  line_max= "]}," Ruby32Parser _reduce_607":{"type":"method","name":"_reduce_607","children":[],"call":[" s line "," s ","result line_max= ","list line "," s line  line_max= ","list line  line_max= "]}," Ruby32Parser _reduce_606":{"type":"method","name":"_reduce_606","children":[],"call":[" literal_concat ","val [] ","result line_max= ","list line "," s line "," s "," literal_concat  line_max= ","list line  line_max= "," s line  line_max= "]}," Ruby32Parser _reduce_604":{"type":"method","name":"_reduce_604","children":[],"call":["val [] dup << "," new_word_list_entry ","val [] dup ","val [] ","list dup << "," new_symbol_list_entry ","list dup "," new_symbol_list "]}," Ruby32Parser _reduce_603":{"type":"method","name":"_reduce_603","children":[],"call":[" new_word_list "," new_symbol_list ","result line_max= ","list line "," new_word_list  line_max= "," new_symbol_list  line_max= ","list line  line_max= "]}," Ruby32Parser _reduce_602":{"type":"method","name":"_reduce_602","children":[],"call":["list line ","result line_max= "," s line "," s ","list line  line_max= "," s line  line_max= "]}," Ruby32Parser _reduce_601":{"type":"method","name":"_reduce_601","children":[],"call":[" s line "," s ","result line_max= "," literal_concat ","val [] "," s line  line_max= "," literal_concat  line_max= "]}," Ruby32Parser _reduce_600":{"type":"method","name":"_reduce_600","children":[],"call":[" new_regexp "," literal_concat ","val [] "]}," Ruby32Parser _reduce_599":{"type":"method","name":"_reduce_599","children":[],"call":[" new_xstring ","val [] dup << "," new_word_list_entry ","val [] dup ","val [] "]}," Ruby32Parser _reduce_598":{"type":"method","name":"_reduce_598","children":[],"call":[" new_string ","val [] dup << "," new_word_list_entry ","val [] dup ","val [] "," new_word_list "]}," Ruby32Parser _reduce_597":{"type":"method","name":"_reduce_597","children":[],"call":["str line "," dedent ","func =~ "," new_word_list ","result line_max= ","list line "," dedent  line ","str line  line_max= "," new_word_list  line_max= ","list line  line_max= "]}," Ruby32Parser _reduce_596":{"type":"method","name":"_reduce_596","children":[],"call":[" literal_concat ","val [] ","result line_max= ","list line "," s line "," s "," literal_concat  line_max= ","list line  line_max= "," s line  line_max= "]}," Ruby32Parser _reduce_594":{"type":"method","name":"_reduce_594","children":[],"call":[" debug "," new_regexp "," new_xstring "]}," Ruby32Parser _reduce_593":{"type":"method","name":"_reduce_593","children":[],"call":[" s ","str value ","str sexp_type == ","str sexp_type "," new_xstring "," new_string "," s  value "," s  sexp_type == "," s  sexp_type "," new_x s ing "," new_ s ing "]}," Ruby32Parser _reduce_591":{"type":"method","name":"_reduce_591","children":[],"call":[" s line "," s ","str line "," dedent ","func =~ "," literal_concat ","val [] "," dedent  line "]}," Ruby32Parser _reduce_589":{"type":"method","name":"_reduce_589","children":[],"call":[" s line "," s "," debug "]}," Ruby32Parser _reduce_587":{"type":"method","name":"_reduce_587","children":[],"call":["val [] "," s ","str value ","str sexp_type == ","str sexp_type "," s  value "," s  sexp_type == "," s  sexp_type "]}," Ruby32Parser _reduce_584":{"type":"method","name":"_reduce_584","children":[],"call":[" s line ","arg line "," s "]}," Ruby32Parser _reduce_583":{"type":"method","name":"_reduce_583","children":[],"call":[" s line "," s "]}," Ruby32Parser _reduce_582":{"type":"method","name":"_reduce_582","children":[],"call":["result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s line ","var line "," s ","val [] "," new_resbody  << ","val []  << "]}," Ruby32Parser _reduce_581":{"type":"method","name":"_reduce_581","children":[],"call":[" wrap ","val [] "]}," Ruby32Parser _reduce_580":{"type":"method","name":"_reduce_580","children":[],"call":[" s line "," s ","id to_sym ","lhs line "," s lhs line ine ","lhs line hs lhs line ine "]}," Ruby32Parser _reduce_579":{"type":"method","name":"_reduce_579","children":[],"call":[" wrap ","val [] "," s line ","arg line "," s "]}," Ruby32Parser _reduce_578":{"type":"method","name":"_reduce_578","children":[],"call":[" s line ","arg line "," s "]}," Ruby32Parser _reduce_577":{"type":"method","name":"_reduce_577","children":[],"call":["result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s line ","var line "," s "," new_resbody  << "]}," Ruby32Parser _reduce_576":{"type":"method","name":"_reduce_576","children":[],"call":[" wrap ","val [] ","result << "," new_resbody ","klasses line ","klasses << "," new_assign "," s line ","var line "," s "," wrap  << "," new_resbody  << "]}," Ruby32Parser _reduce_575":{"type":"method","name":"_reduce_575","children":[],"call":[" wrap ","val [] "," s line "," s ","id to_sym ","lhs line ","valhs line  [] "," s lhs line ine ","lhs line hs lhs line ine "]}," Ruby32Parser _reduce_573":{"type":"method","name":"_reduce_573","children":[],"call":[" wrap ","val [] "]}," Ruby32Parser _reduce_572":{"type":"method","name":"_reduce_572","children":[],"call":[" ary_to_pat ","val [] "]}," Ruby32Parser _reduce_571":{"type":"method","name":"_reduce_571","children":[],"call":[" ary_to_pat ","val [] "," wrap "]}," Ruby32Parser _reduce_570":{"type":"method","name":"_reduce_570","children":[],"call":[" ary_to_pat ","val [] "," wrap "]}," Ruby32Parser _reduce_569":{"type":"method","name":"_reduce_569","children":[],"call":[" ary_to_pat ","val [] "," wrap "]}," Ruby32Parser _reduce_564":{"type":"method","name":"_reduce_564","children":[],"call":[" s line ","v1 line "," s "," ary_to_pat ","val [] "]}," Ruby32Parser _reduce_563":{"type":"method","name":"_reduce_563","children":[],"call":[" s line ","v1 line "," s "," ary_to_pat ","val [] "]}," Ruby32Parser _reduce_559":{"type":"method","name":"_reduce_559","children":[],"call":[" s line ","v1 line "," s "]}," Ruby32Parser _reduce_558":{"type":"method","name":"_reduce_558","children":[],"call":[" s line ","v1 line "," s "]}," Ruby32Parser _reduce_557":{"type":"method","name":"_reduce_557","children":[],"call":[" s line ","lhs line "," s "," value_expr ","v1 line "," value_expr  line "]}," Ruby32Parser _reduce_556":{"type":"method","name":"_reduce_556","children":[],"call":[" s line ","lhs line "," s "," value_expr "," value_expr  line "]}," Ruby32Parser _reduce_552":{"type":"method","name":"_reduce_552","children":[],"call":[" s line "," s ","v1 line ","lhs line "," value_expr "," value_expr  line "]}," Ruby32Parser _reduce_551":{"type":"method","name":"_reduce_551","children":[],"call":[" s line "," s ","lhs line "," value_expr "," value_expr  line "]}," Ruby32Parser _reduce_550":{"type":"method","name":"_reduce_550","children":[],"call":[" s line "," s "," assignable ","id to_sym ","lhs line "," value_expr "," value_expr  line "]}," Ruby32Parser _reduce_549":{"type":"method","name":"_reduce_549","children":[],"call":[" debug "]}," Ruby32Parser _reduce_548":{"type":"method","name":"_reduce_548","children":[],"call":[" wrap ","val [] "]}," Ruby32Parser _reduce_547":{"type":"method","name":"_reduce_547","children":[],"call":[" s line ","lhs line "," s "," debug "," assignable ","lhs value ","lhs sexp_type "]}," Ruby32Parser _reduce_546":{"type":"method","name":"_reduce_546","children":[],"call":[" s line ","lhs line "," s "]}," Ruby32Parser _reduce_545":{"type":"method","name":"_reduce_545","children":[],"call":["kwarg concat ","kw sexp_body "," s line "," s "," assignable ","id to_sym "]}," Ruby32Parser _reduce_543":{"type":"method","name":"_reduce_543","children":[],"call":[" new_hash_pattern_tail ","rest line "," debug "," wrap ","val [] "]}," Ruby32Parser _reduce_542":{"type":"method","name":"_reduce_542","children":[],"call":[" new_hash_pattern_tail ","kwarg line "," wrap ","val [] "," s line ","lhs line "," s "," debug "," assignable ","lhs value ","lhs sexp_type "]}," Ruby32Parser _reduce_541":{"type":"method","name":"_reduce_541","children":[],"call":[" new_hash_pattern_tail ","kwarg line "," s line ","lhs line "," s "," debug "," assignable ","lhs value ","lhs sexp_type "]}," Ruby32Parser _reduce_540":{"type":"method","name":"_reduce_540","children":[],"call":[" new_hash_pattern_tail ","kw_arg line "," s line ","lhs line "," s ","kwarg concat ","kw sexp_body "]}," Ruby32Parser _reduce_539":{"type":"method","name":"_reduce_539","children":[],"call":[" s line ","expr line "," s ","expr sexp_type == ","expr sexp_type ","kwarg concat ","kw sexp_body "," s line  line "," s line  sexp_type == "," s line  sexp_type "]}," Ruby32Parser _reduce_538":{"type":"method","name":"_reduce_538","children":[],"call":[" array_pat_concat "," new_hash_pattern_tail ","rest line "]}," Ruby32Parser _reduce_536":{"type":"method","name":"_reduce_536","children":[],"call":[" new_hash_pattern_tail ","kwarg line "]}," Ruby32Parser _reduce_535":{"type":"method","name":"_reduce_535","children":[],"call":["id to_sym "," new_hash_pattern_tail ","kwarg line ","kw_arg line "]}," Ruby32Parser _reduce_534":{"type":"method","name":"_reduce_534","children":[],"call":[" new_find_pattern_tail "," new_hash_pattern_tail ","kw_arg line "," s line ","expr line "," s ","expr sexp_type == ","expr sexp_type "," s line  line "," s line  sexp_type == "," s line  sexp_type "]}," Ruby32Parser _reduce_533":{"type":"method","name":"_reduce_533","children":[],"call":["result line "," new_array_pattern_tail "," s line ","expr line "," s ","expr sexp_type == ","expr sexp_type "," array_pat_concat "," new_array_pattern_tail  line "," array_pat_concat  line "," s line  line "," s line  sexp_type == "," s line  sexp_type "]}," Ruby32Parser _reduce_532":{"type":"method","name":"_reduce_532","children":[],"call":["result line "," new_array_pattern_tail "," array_pat_concat "," new_array_pattern_tail  line "," array_pat_concat  line "]}," Ruby32Parser _reduce_531":{"type":"method","name":"_reduce_531","children":[],"call":["result line ","head line "," s ","tail sexp_body ","head sexp_body "," s  line "]}," Ruby32Parser _reduce_530":{"type":"method","name":"_reduce_530","children":[],"call":["id to_sym "]}," Ruby32Parser _reduce_528":{"type":"method","name":"_reduce_528","children":[],"call":[" new_array_pattern_tail line ","head line "," new_array_pattern_tail "," new_find_pattern_tail ","result line "," new_array_pattern_tail line  line "," new_find_pattern_tail  line "," new_array_pattern_tail  line "]}," Ruby32Parser _reduce_527":{"type":"method","name":"_reduce_527","children":[],"call":[" new_array_pattern_tail line ","expr line "," new_array_pattern_tail ","result line "," new_array_pattern_tail line  line "," new_array_pattern_tail  line "]}," Ruby32Parser _reduce_526":{"type":"method","name":"_reduce_526","children":[],"call":["result line ","head line "," new_array_pattern_tail ","id to_sym "," s ","tail sexp_body ","head sexp_body "," new_array_pattern_tail  line "," s  line "]}," Ruby32Parser _reduce_525":{"type":"method","name":"_reduce_525","children":[],"call":["result line ","head line "," new_array_pattern_tail ","id to_sym "," s ","tail sexp_body ","head sexp_body "," new_array_pattern_tail  line "," s  line "]}," Ruby32Parser _reduce_524":{"type":"method","name":"_reduce_524","children":[],"call":["result line ","head line "," new_array_pattern_tail "," array_pat_concat "," new_array_pattern_tail  line "]}," Ruby32Parser _reduce_523":{"type":"method","name":"_reduce_523","children":[],"call":[" new_array_pattern_tail "," new_array_pattern_tail line ","head line "]}," Ruby32Parser _reduce_522":{"type":"method","name":"_reduce_522","children":[],"call":[" new_array_pattern_tail line ","expr line "," new_array_pattern_tail "," s line "," s ","head line "]}," Ruby32Parser _reduce_521":{"type":"method","name":"_reduce_521","children":[],"call":[" pop_pktbl "," new_array_pattern_tail line ","head line "," new_array_pattern_tail ","result line "," array_pat_concat "," new_array_pattern_tail line  line "," new_array_pattern_tail  line "]}," Ruby32Parser _reduce_520":{"type":"method","name":"_reduce_520","children":[],"call":[" push_pktbl ","result line ","head line "," new_array_pattern_tail "," array_pat_concat "," new_array_pattern_tail  line "]}," Ruby32Parser _reduce_519":{"type":"method","name":"_reduce_519","children":[],"call":[" new_hash_pattern "," new_hash_pattern_tail "," new_array_pattern_tail "," new_array_pattern_tail line ","expr line "," s line "," s "," new_hash_pattern_ new_hash_pattern_tail  "," new_array_pattern_ new_hash_pattern_tail  "," new_array_pattern_ new_hash_pattern_tail  line "]}," Ruby32Parser _reduce_518":{"type":"method","name":"_reduce_518","children":[],"call":[" new_hash_pattern ","kwargs line "," in_kwarg= "," pop_pktbl "," new_array_pattern_tail line ","expr line "," new_array_pattern_tail "," s line "," s "]}," Ruby32Parser _reduce_517":{"type":"method","name":"_reduce_517","children":[],"call":[" in_kwarg= "," in_kwarg "," push_pktbl "," pop_pktbl "]}," Ruby32Parser _reduce_516":{"type":"method","name":"_reduce_516","children":[],"call":[" s line "," s "," push_pktbl "," new_hash_pattern "," new_hash_pattern_tail "," new_hash_pattern_ new_hash_pattern_tail  "]}," Ruby32Parser _reduce_515":{"type":"method","name":"_reduce_515","children":[],"call":[" new_find_pattern "," new_hash_pattern "," new_hash_pattern_tail ","kwargs line "," in_kwarg= "," pop_pktbl "," new_hash_pattern_ new_hash_pattern_tail  "]}," Ruby32Parser _reduce_514":{"type":"method","name":"_reduce_514","children":[],"call":[" new_array_pattern ","pat line "," new_hash_pattern ","kwargs line "," in_kwarg= "," pop_pktbl "," in_kwarg "," push_pktbl "]}," Ruby32Parser _reduce_513":{"type":"method","name":"_reduce_513","children":[],"call":[" new_array_pattern ","const line "," new_array_pattern_tail "," in_kwarg= "," in_kwarg "," push_pktbl "," s line "," s "," new_array_pattern_ new_array_pattern_tail  "]}," Ruby32Parser _reduce_512":{"type":"method","name":"_reduce_512","children":[],"call":[" new_hash_pattern ","const line "," s line "," s "," new_find_pattern "]}," Ruby32Parser _reduce_511":{"type":"method","name":"_reduce_511","children":[],"call":[" new_find_pattern line ","const line "," new_find_pattern "," pop_pktbl "," new_array_pattern ","pat line "]}," Ruby32Parser _reduce_510":{"type":"method","name":"_reduce_510","children":[],"call":[" new_array_pattern ","const line "," pop_pktbl ","pat line "," new_array_pattern_tail "," new_array_pattern_ new_array_pattern_tail  "]}," Ruby32Parser _reduce_509":{"type":"method","name":"_reduce_509","children":[],"call":[" new_array_pattern ","const line "," new_array_pattern_tail "," new_hash_pattern "," new_array_pattern_ new_array_pattern_tail  "]}," Ruby32Parser _reduce_508":{"type":"method","name":"_reduce_508","children":[],"call":[" new_hash_pattern ","lhs line "," pop_pktbl ","const line "," new_find_pattern line "," new_find_pattern "]}," Ruby32Parser _reduce_507":{"type":"method","name":"_reduce_507","children":[],"call":[" new_find_pattern line ","const line "," new_find_pattern "," pop_pktbl "," new_array_pattern "]}," Ruby32Parser _reduce_506":{"type":"method","name":"_reduce_506","children":[],"call":[" new_array_pattern ","lhs line "," pop_pktbl ","const line "," new_array_pattern_tail "," new_array_pattern_ new_array_pattern_tail  "]}," Ruby32Parser _reduce_503":{"type":"method","name":"_reduce_503","children":[],"call":[" push_pktbl "," new_find_pattern line ","const line "," new_find_pattern "," pop_pktbl "," new_array_pattern ","lhs line "]}," Ruby32Parser _reduce_502":{"type":"method","name":"_reduce_502","children":[],"call":[" push_pktbl "," new_array_pattern ","lhs line "," pop_pktbl "]}," Ruby32Parser _reduce_500":{"type":"method","name":"_reduce_500","children":[],"call":[" s line ","lhs line "," s "," push_pktbl "]}," Ruby32Parser _reduce_498":{"type":"method","name":"_reduce_498","children":[],"call":[" new_assign "," s line ","var line "," s "," env []= "," env ","var last "," push_pktbl "]}," Ruby32Parser _reduce_496":{"type":"method","name":"_reduce_496","children":[],"call":[" new_hash_pattern ","kwargs line "," s line ","lhs line "," s "]}," Ruby32Parser _reduce_495":{"type":"method","name":"_reduce_495","children":[],"call":[" new_array_pattern ","args line "," new_assign "," s line ","var line "," s "," env []= "," env ","var last "]}," Ruby32Parser _reduce_494":{"type":"method","name":"_reduce_494","children":[],"call":[" new_find_pattern "," new_assign "," s line ","var line "," s "," env []= "," env ","var last "]}," Ruby32Parser _reduce_493":{"type":"method","name":"_reduce_493","children":[],"call":[" new_array_pattern ","expr line "," new_hash_pattern ","kwargs line "]}," Ruby32Parser _reduce_492":{"type":"method","name":"_reduce_492","children":[],"call":[" new_array_pattern ","expr line "," new_array_pattern_tail "," new_hash_pattern ","kwargs line ","args line "," new_array_pattern_ new_array_pattern_tail  "]}," Ruby32Parser _reduce_490":{"type":"method","name":"_reduce_490","children":[],"call":[" s line ","body line "," s "," remove_begin "," new_find_pattern "," new_array_pattern ","expr line "," remove_begin  line "]}," Ruby32Parser _reduce_489":{"type":"method","name":"_reduce_489","children":[],"call":[" s line ","body line "," s "," remove_begin "," new_array_pattern ","expr line "," new_array_pattern_tail "," remove_begin  line "," new_array_pattern_ new_array_pattern_tail  "]}," Ruby32Parser _reduce_485":{"type":"method","name":"_reduce_485","children":[],"call":[" new_in "," s line ","body line "," s "," remove_begin "," remove_begin  line "]}," Ruby32Parser _reduce_484":{"type":"method","name":"_reduce_484","children":[],"call":[" in_kwarg= ","_values [] "," pop_pvtbl "," pop_pktbl "]}," Ruby32Parser _reduce_483":{"type":"method","name":"_reduce_483","children":[],"call":[" push_pktbl "," push_pvtbl "," in_kwarg= "," in_kwarg "," lexer command_start= "," lexer "," lexer lex_state= ","EXPR_BEG  | "]}," Ruby32Parser _reduce_480":{"type":"method","name":"_reduce_480","children":[],"call":["result << ","val [] ","result line "," new_when "," in_kwarg= ","_values [] "," pop_pvtbl "," pop_pktbl "," push_pktbl "," push_pvtbl "," in_kwarg "," lexer command_start= "," lexer "," lexer lex_state= ","EXPR_BEG  | "," new_when  << "," in_kwarg  << "," new_when  line "," in_kwarg  line "]}," Ruby32Parser _reduce_479":{"type":"method","name":"_reduce_479","children":[],"call":[" lexer lineno "," lexer "," push_pktbl "," push_pvtbl "," in_kwarg= "," in_kwarg "," lexer command_start= "," lexer lex_state= ","EXPR_BEG  | "]}," Ruby32Parser _reduce_478":{"type":"method","name":"_reduce_478","children":[],"call":[" list_append "," s line ","id line "," s "]}," Ruby32Parser _reduce_477":{"type":"method","name":"_reduce_477","children":[],"call":[" list_append ","result << ","result line "," new_when "," list_append  << "," new_when  << "," list_append  line "," new_when  line "]}," Ruby32Parser _reduce_476":{"type":"method","name":"_reduce_476","children":[],"call":[" s line ","arg line "," s ","result << ","result line "," new_when "," list_append ","id line "," s line  << "," new_when  << "," list_append  << "," s line  line "," new_when  line "," list_append  line "]}," Ruby32Parser _reduce_475":{"type":"method","name":"_reduce_475","children":[],"call":[" s line ","arg line "," s "," list_append ","id line "]}," Ruby32Parser _reduce_474":{"type":"method","name":"_reduce_474","children":[],"call":[" env unextend "," env "," lexer cmdarg pop "," lexer cmdarg "," lexer "," new_do_body "," list_append "," s line ","arg line "," s "]}," Ruby32Parser _reduce_473":{"type":"method","name":"_reduce_473","children":[],"call":[" lexer cmdarg push "," lexer cmdarg "," lexer "," s line ","arg line "," s "]}," Ruby32Parser _reduce_472":{"type":"method","name":"_reduce_472","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," s line ","arg line "," s "," env unextend "," lexer cmdarg pop "," lexer cmdarg "," new_do_body "]}," Ruby32Parser _reduce_471":{"type":"method","name":"_reduce_471","children":[],"call":[" lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," env unextend "," env "," new_brace_body "," new_do_body "," lexer cmdarg push "]}," Ruby32Parser _reduce_470":{"type":"method","name":"_reduce_470","children":[],"call":[" lexer cmdarg store "," lexer cmdarg "," lexer "," lexer cmdarg push "," lexer lineno "," env extend "," env "]}," Ruby32Parser _reduce_469":{"type":"method","name":"_reduce_469","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," lexer cmdarg pop "," lexer cmdarg "," lexer cmdarg restore "," env unextend "," new_brace_body "]}," Ruby32Parser _reduce_468":{"type":"method","name":"_reduce_468","children":[],"call":[" env unextend "," env ","result line "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer cmdarg restore "," new_brace_body "," lexer cmdarg store "," new_brace_body  line "," lexer cmdarg store  line "]}," Ruby32Parser _reduce_467":{"type":"method","name":"_reduce_467","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," lexer cmdarg store "," lexer cmdarg "]}," Ruby32Parser _reduce_466":{"type":"method","name":"_reduce_466","children":[],"call":[" env unextend "," env ","result line "," lexer lineno "," lexer "," env extend "," lexer lineno  line "]}," Ruby32Parser _reduce_465":{"type":"method","name":"_reduce_465","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," env unextend ","result line "," lexer lineno  line "]}," Ruby32Parser _reduce_464":{"type":"method","name":"_reduce_464","children":[],"call":[" new_aref "," env extend "," env "," env unextend ","result line "," new_aref  line "]}," Ruby32Parser _reduce_463":{"type":"method","name":"_reduce_463","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," env unextend "," env ","result line "," env extend "," s line  line "]}," Ruby32Parser _reduce_462":{"type":"method","name":"_reduce_462","children":[],"call":[" new_super ","val [] "," env extend "," env "," new_aref "]}," Ruby32Parser _reduce_461":{"type":"method","name":"_reduce_461","children":[],"call":[" new_call ","val [] "," new_aref "," s line "," s "]}," Ruby32Parser _reduce_460":{"type":"method","name":"_reduce_460","children":[],"call":[" new_call ","val [] "," s line "," s "," new_super "]}," Ruby32Parser _reduce_459":{"type":"method","name":"_reduce_459","children":[],"call":[" new_call ","id to_sym "," new_super ","val [] "]}," Ruby32Parser _reduce_458":{"type":"method","name":"_reduce_458","children":[],"call":[" new_call ","op to_sym ","val [] "]}," Ruby32Parser _reduce_457":{"type":"method","name":"_reduce_457","children":[],"call":[" new_call ","op to_sym ","result line_max= ","val [] ","id to_sym "," new_call  line_max= "]}," Ruby32Parser _reduce_456":{"type":"method","name":"_reduce_456","children":[],"call":["call concat ","args sexp_body ","result line_max= ","args line_max "," new_call ","id to_sym ","op to_sym ","call concat  line_max= "," new_call  line_max= "]}," Ruby32Parser _reduce_455":{"type":"method","name":"_reduce_455","children":[],"call":["iter2 insert "," new_call ","name to_sym ","op to_sym ","result line_max= "," new_ new_call  "," new_call  line_max= "]}," Ruby32Parser _reduce_454":{"type":"method","name":"_reduce_454","children":[],"call":["iter2 insert "," new_call ","name to_sym ","result line_max= ","op to_sym ","args line_max ","call concat ","args sexp_body "," new_ new_call  "," new_call  line_max= "," new_call  concat "]}," Ruby32Parser _reduce_453":{"type":"method","name":"_reduce_453","children":[],"call":[" new_call ","id to_sym ","result line_max= ","args line_max ","call concat ","args sexp_body ","iter2 insert ","name to_sym "," new_ new_call  "," new_call  line_max= "," new_call  concat "]}," Ruby32Parser _reduce_452":{"type":"method","name":"_reduce_452","children":[],"call":["result insert "," invert_block_call "," inverted? "," syntax_error ","cmd block_pass? ","iter2 insert "," new_call ","name to_sym "," invert_block_ new_call  "," new_ new_call  "]}," Ruby32Parser _reduce_451":{"type":"method","name":"_reduce_451","children":[],"call":["iter line ","iter2 insert "," new_call ","name to_sym ","id to_sym "," new_ new_call  "]}," Ruby32Parser _reduce_450":{"type":"method","name":"_reduce_450","children":[],"call":["val [] "," new_call ","id to_sym ","result insert "," invert_block_call "," inverted? "," syntax_error ","cmd block_pass? "," invert_block_call  [] ","val []  insert "," new_call  insert "]}," Ruby32Parser _reduce_449":{"type":"method","name":"_reduce_449","children":[],"call":["val [] ","result insert "," invert_block_call "," inverted? "," syntax_error ","cmd block_pass? ","iter line "," invert_block_call  [] ","val []  insert ","iter line  insert "]}," Ruby32Parser _reduce_448":{"type":"method","name":"_reduce_448","children":[],"call":["result == "," s ","val [] ","iter line ","val []  == ","iter line  == "]}," Ruby32Parser _reduce_447":{"type":"method","name":"_reduce_447","children":[],"call":[" args ","val [] "]}," Ruby32Parser _reduce_446":{"type":"method","name":"_reduce_446","children":[],"call":[" env unextend "," env ","result line "," new_iter "," s line "," s "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer lpar_beg= ","val [] ","result == "," in_argdef= "," new_iter  line ","val []  line "," new_iter  == ","val []  == "]}," Ruby32Parser _reduce_445":{"type":"method","name":"_reduce_445","children":[],"call":[" lexer cmdarg push "," lexer cmdarg "," lexer ","result == "," s ","val [] "," args "," in_argdef= ","val []  == "," args  == "]}," Ruby32Parser _reduce_444":{"type":"method","name":"_reduce_444","children":[],"call":[" lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," lexer lineno "," env extend "," env "," args "," env unextend ","result line "," new_iter "," s line "," s "," lexer cmdarg pop "," lexer cmdarg "," args  line "," new_iter  line "]}," Ruby32Parser _reduce_442":{"type":"method","name":"_reduce_442","children":[],"call":[" wrap ","val [] "," lexer cmdarg push "," lexer cmdarg "," lexer "," lexer lpar_beg= "," lexer paren_nest "," lexer lpar_beg "," env extend "," env "]}," Ruby32Parser _reduce_441":{"type":"method","name":"_reduce_441","children":[],"call":[" args "," lexer lpar_beg= "," lexer paren_nest "," lexer "," lexer lpar_beg "," env extend "," env "]}," Ruby32Parser _reduce_440":{"type":"method","name":"_reduce_440","children":[],"call":[" args "," wrap ","val [] "]}," Ruby32Parser _reduce_439":{"type":"method","name":"_reduce_439","children":[],"call":[" args "," wrap ","val [] "]}," Ruby32Parser _reduce_437":{"type":"method","name":"_reduce_437","children":[],"call":[" args "]}," Ruby32Parser _reduce_436":{"type":"method","name":"_reduce_436","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," args "]}," Ruby32Parser _reduce_435":{"type":"method","name":"_reduce_435","children":[],"call":[" args "," in_argdef= "]}," Ruby32Parser _reduce_434":{"type":"method","name":"_reduce_434","children":[],"call":[" lexer command_start= "," lexer "," args "," s line "," s "]}," Ruby32Parser _reduce_433":{"type":"method","name":"_reduce_433","children":[],"call":[" s line "," s "," in_argdef= "," args "]}," Ruby32Parser _reduce_432":{"type":"method","name":"_reduce_432","children":[],"call":[" args "," lexer command_start= "," lexer "]}," Ruby32Parser _reduce_431":{"type":"method","name":"_reduce_431","children":[],"call":[" args "," lexer command_start= "," lexer "]}," Ruby32Parser _reduce_430":{"type":"method","name":"_reduce_430","children":[],"call":[" args "]}," Ruby32Parser _reduce_429":{"type":"method","name":"_reduce_429","children":[],"call":[" args "]}," Ruby32Parser _reduce_428":{"type":"method","name":"_reduce_428","children":[],"call":[" args "]}," Ruby32Parser _reduce_427":{"type":"method","name":"_reduce_427","children":[],"call":[" args "]}," Ruby32Parser _reduce_426":{"type":"method","name":"_reduce_426","children":[],"call":[" args "]}," Ruby32Parser _reduce_425":{"type":"method","name":"_reduce_425","children":[],"call":[" args "]}," Ruby32Parser _reduce_424":{"type":"method","name":"_reduce_424","children":[],"call":[" args "]}," Ruby32Parser _reduce_423":{"type":"method","name":"_reduce_423","children":[],"call":["arg << "," args "]}," Ruby32Parser _reduce_422":{"type":"method","name":"_reduce_422","children":[],"call":[" args "]}," Ruby32Parser _reduce_421":{"type":"method","name":"_reduce_421","children":[],"call":[" args ","arg << "]}," Ruby32Parser _reduce_420":{"type":"method","name":"_reduce_420","children":[],"call":[" args ","arg << "]}," Ruby32Parser _reduce_419":{"type":"method","name":"_reduce_419","children":[],"call":[" args "]}," Ruby32Parser _reduce_418":{"type":"method","name":"_reduce_418","children":[],"call":[" args "]}," Ruby32Parser _reduce_417":{"type":"method","name":"_reduce_417","children":[],"call":[" s "," args "]}," Ruby32Parser _reduce_415":{"type":"method","name":"_reduce_415","children":[],"call":[" args "," s "]}," Ruby32Parser _reduce_414":{"type":"method","name":"_reduce_414","children":[],"call":["result line "," call_args "," s "," call_args  line "," s  line "]}," Ruby32Parser _reduce_413":{"type":"method","name":"_reduce_413","children":[],"call":[" call_args "," args "]}," Ruby32Parser _reduce_412":{"type":"method","name":"_reduce_412","children":[],"call":[" call_args "," args ","result line "," call_args  line "," args  line "]}," Ruby32Parser _reduce_411":{"type":"method","name":"_reduce_411","children":[],"call":[" call_args ","result line "," call_args  line "]}," Ruby32Parser _reduce_407":{"type":"method","name":"_reduce_407","children":[],"call":["result line "," lexer lineno "," lexer "," args "," in_argdef= "," args  line "]}," Ruby32Parser _reduce_406":{"type":"method","name":"_reduce_406","children":[],"call":["result line "," args ","(str \"*\") to_sym "," args  line "]}," Ruby32Parser _reduce_405":{"type":"method","name":"_reduce_405","children":[],"call":[" block_var "]}," Ruby32Parser _reduce_404":{"type":"method","name":"_reduce_404","children":[],"call":[" block_var "," args line "," args "]}," Ruby32Parser _reduce_403":{"type":"method","name":"_reduce_403","children":[],"call":[" block_var ","result line "," args ","(str \"*\") to_sym "," block_var  line "," args  line "]}," Ruby32Parser _reduce_402":{"type":"method","name":"_reduce_402","children":[],"call":[" block_var "]}," Ruby32Parser _reduce_401":{"type":"method","name":"_reduce_401","children":[],"call":[" block_var "]}," Ruby32Parser _reduce_400":{"type":"method","name":"_reduce_400","children":[],"call":[" list_append ","val [] "," block_var "]}," Ruby32Parser _reduce_399":{"type":"method","name":"_reduce_399","children":[],"call":[" s line "," lexer lineno "," lexer "," s "," block_var "]}," Ruby32Parser _reduce_398":{"type":"method","name":"_reduce_398","children":[],"call":["val [] "," block_var "]}," Ruby32Parser _reduce_396":{"type":"method","name":"_reduce_396","children":[],"call":["val [] delete_at ","val [] ","val [] [] nil? ","val [] [] "," s line "," s ","arg last ","arg sexp_type == ","arg sexp_type ","arg line "," s arg line  ","arg last  last ","arg last  sexp_type == ","arg last  sexp_type ","arg last  line ","arg arg line  "]}," Ruby32Parser _reduce_394":{"type":"method","name":"_reduce_394","children":[],"call":["val [] "," s line "," s "]}," Ruby32Parser _reduce_392":{"type":"method","name":"_reduce_392","children":[],"call":[" s line "," s "]}," Ruby32Parser _reduce_376":{"type":"method","name":"_reduce_376","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby32Parser _reduce_375":{"type":"method","name":"_reduce_375","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby32Parser _reduce_374":{"type":"method","name":"_reduce_374","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby32Parser _reduce_366":{"type":"method","name":"_reduce_366","children":[],"call":[" value_expr ","val [] "]}," Ruby32Parser _reduce_365":{"type":"method","name":"_reduce_365","children":[],"call":[" s line "," s "]}," Ruby32Parser _reduce_364":{"type":"method","name":"_reduce_364","children":[],"call":[" s line "," s "]}," Ruby32Parser _reduce_363":{"type":"method","name":"_reduce_363","children":[],"call":[" s line "," s "," value_expr ","val [] "]}," Ruby32Parser _reduce_362":{"type":"method","name":"_reduce_362","children":[],"call":[" s line "," s "]}," Ruby32Parser _reduce_361":{"type":"method","name":"_reduce_361","children":[],"call":[" lexer ignore_body_comments "," lexer "," in_single "," in_def= "," env unextend "," env "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," new_defs ","val insert ","val [] pop ","val [] ","val prepend ","val shift "," s line "," s "]}," Ruby32Parser _reduce_360":{"type":"method","name":"_reduce_360","children":[],"call":[" lexer ignore_body_comments "," lexer "," in_def= "," env unextend "," env "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," new_defn ","val insert ","val first pop ","val first "," s line "," s "]}," Ruby32Parser _reduce_359":{"type":"method","name":"_reduce_359","children":[],"call":[" lexer ignore_body_comments "," lexer "," env unextend "," env "," new_module "," s line "," s "]}," Ruby32Parser _reduce_358":{"type":"method","name":"_reduce_358","children":[],"call":[" env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," lexer ignore_body_comments "," lexer "," in_def= "," env unextend "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," new_defs ","val insert ","val [] pop ","val [] ","val prepend ","val shift "]}," Ruby32Parser _reduce_357":{"type":"method","name":"_reduce_357","children":[],"call":[" lexer lineno "," lexer "," lexer ignore_body_comments "," in_def= "," env unextend "," env "," lexer cmdarg pop "," lexer cmdarg "," lexer cond pop "," lexer cond "," new_defn ","val insert ","val first pop ","val first "]}," Ruby32Parser _reduce_356":{"type":"method","name":"_reduce_356","children":[],"call":[" lexer ignore_body_comments "," lexer "," env unextend "," env "," new_sclass "," new_module "]}," Ruby32Parser _reduce_355":{"type":"method","name":"_reduce_355","children":[],"call":[" env extend "," env "," in_single= "," in_single "," yyerror "," in_single > "," in_def "]}," Ruby32Parser _reduce_354":{"type":"method","name":"_reduce_354","children":[],"call":[" in_def= "," in_def "," lexer ignore_body_comments "," lexer "," env unextend "," env "," new_sclass "]}," Ruby32Parser _reduce_353":{"type":"method","name":"_reduce_353","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," in_single= "," in_single "]}," Ruby32Parser _reduce_352":{"type":"method","name":"_reduce_352","children":[],"call":[" lexer ignore_body_comments "," lexer "," env unextend "," env "," new_class "," in_def= "," in_def "]}," Ruby32Parser _reduce_351":{"type":"method","name":"_reduce_351","children":[],"call":[" env extend "," env "," yyerror "," in_single > "," in_single "," in_def "," lexer ignore_body_comments "," lexer "," env unextend "," new_class "]}," Ruby32Parser _reduce_350":{"type":"method","name":"_reduce_350","children":[],"call":[" lexer lineno "," lexer "," env extend "," env "," yyerror "," in_single > "," in_single "," in_def "]}," Ruby32Parser _reduce_349":{"type":"method","name":"_reduce_349","children":[],"call":[" new_for "]}," Ruby32Parser _reduce_348":{"type":"method","name":"_reduce_348","children":[],"call":[" new_case "]}," Ruby32Parser _reduce_347":{"type":"method","name":"_reduce_347","children":[],"call":[" new_case "]}," Ruby32Parser _reduce_346":{"type":"method","name":"_reduce_346","children":[],"call":[" new_case "]}," Ruby32Parser _reduce_345":{"type":"method","name":"_reduce_345","children":[],"call":[" new_until "]}," Ruby32Parser _reduce_344":{"type":"method","name":"_reduce_344","children":[],"call":[" new_while "]}," Ruby32Parser _reduce_343":{"type":"method","name":"_reduce_343","children":[],"call":[" new_if "]}," Ruby32Parser _reduce_342":{"type":"method","name":"_reduce_342","children":[],"call":[" new_if "]}," Ruby32Parser _reduce_341":{"type":"method","name":"_reduce_341","children":[],"call":[]}," Ruby32Parser _reduce_340":{"type":"method","name":"_reduce_340","children":[],"call":["iter insert "," block_dup_check ","val [] "]}," Ruby32Parser _reduce_338":{"type":"method","name":"_reduce_338","children":[],"call":["iter insert "]}," Ruby32Parser _reduce_337":{"type":"method","name":"_reduce_337","children":[],"call":[" debug "]}," Ruby32Parser _reduce_336":{"type":"method","name":"_reduce_336","children":[],"call":[" new_call "]}," Ruby32Parser _reduce_335":{"type":"method","name":"_reduce_335","children":[],"call":[" s line "," s "]}," Ruby32Parser _reduce_334":{"type":"method","name":"_reduce_334","children":[],"call":[" new_yield line "," new_yield "]}," Ruby32Parser _reduce_333":{"type":"method","name":"_reduce_333","children":[],"call":[" new_yield line "," new_yield "]}," Ruby32Parser _reduce_332":{"type":"method","name":"_reduce_332","children":[],"call":[" new_yield line "," new_yield "]}," Ruby32Parser _reduce_331":{"type":"method","name":"_reduce_331","children":[],"call":[" s line "," s "]}," Ruby32Parser _reduce_330":{"type":"method","name":"_reduce_330","children":[],"call":[" new_hash "]}," Ruby32Parser _reduce_329":{"type":"method","name":"_reduce_329","children":[],"call":[" lexer lineno "," lexer "]}," Ruby32Parser _reduce_328":{"type":"method","name":"_reduce_328","children":[],"call":["result line ","result sexp_type= "," s ","result line_max= "]}," Ruby32Parser _reduce_327":{"type":"method","name":"_reduce_327","children":[],"call":[" lexer lineno "," lexer "," wrap ","val [] "]}," Ruby32Parser _reduce_326":{"type":"method","name":"_reduce_326","children":[],"call":[" wrap ","val [] "," s line ","expr line "," s ","id to_sym "]}," Ruby32Parser _reduce_325":{"type":"method","name":"_reduce_325","children":[],"call":[" s line ","expr line "," s ","id to_sym ","result paren= "," s line  paren= "]}," Ruby32Parser _reduce_324":{"type":"method","name":"_reduce_324","children":[],"call":["result paren= "," s line "," lexer lineno "," lexer "," s "]}," Ruby32Parser _reduce_323":{"type":"method","name":"_reduce_323","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby32Parser _reduce_322":{"type":"method","name":"_reduce_322","children":[],"call":[" lexer lex_state= "," lexer "," s line "," s "]}," Ruby32Parser _reduce_321":{"type":"method","name":"_reduce_321","children":[],"call":[" s line "," s "," lexer lex_state= "," lexer "]}," Ruby32Parser _reduce_320":{"type":"method","name":"_reduce_320","children":[],"call":[" lexer lineno "," lexer "," lexer lex_state= "," new_begin "," lexer cmdarg pop "," lexer cmdarg "]}," Ruby32Parser _reduce_319":{"type":"method","name":"_reduce_319","children":[],"call":[" new_begin "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer cmdarg push "]}," Ruby32Parser _reduce_318":{"type":"method","name":"_reduce_318","children":[],"call":[" lexer lineno "," lexer "," lexer cmdarg push "," lexer cmdarg ","result line "," new_call ","msg to_sym "," lexer lineno  line "," new_call  line "]}," Ruby32Parser _reduce_317":{"type":"method","name":"_reduce_317","children":[],"call":["result line "," new_call ","msg to_sym "," new_call  line "]}," Ruby32Parser _reduce_306":{"type":"method","name":"_reduce_306","children":[],"call":[" s line ","arg line "," s "," arg_concat "]}," Ruby32Parser _reduce_305":{"type":"method","name":"_reduce_305","children":[],"call":[" arg_concat ","val [] << ","val [] "]}," Ruby32Parser _reduce_304":{"type":"method","name":"_reduce_304","children":[],"call":["val [] << ","val [] "," new_masgn_arg "]}," Ruby32Parser _reduce_303":{"type":"method","name":"_reduce_303","children":[],"call":[" new_masgn_arg ","val [] "]}," Ruby32Parser _reduce_302":{"type":"method","name":"_reduce_302","children":[],"call":[" new_masgn_arg ","val [] "," list_append "," s line "," s "]}," Ruby32Parser _reduce_301":{"type":"method","name":"_reduce_301","children":[],"call":[" list_append "," s line "," s "," lexer lineno "," lexer "," s  lexer lineno  "," lexer  lexer lineno no "]}," Ruby32Parser _reduce_300":{"type":"method","name":"_reduce_300","children":[],"call":[" list_append "]}," Ruby32Parser _reduce_299":{"type":"method","name":"_reduce_299","children":[],"call":[" s line ","arg line "," s "]}," Ruby32Parser _reduce_298":{"type":"method","name":"_reduce_298","children":[],"call":[" s line "," s "," lexer lineno "," lexer ","arg line "]}," Ruby32Parser _reduce_296":{"type":"method","name":"_reduce_296","children":[],"call":["val [] "]}," Ruby32Parser _reduce_295":{"type":"method","name":"_reduce_295","children":[],"call":[" s line "," s ","val [] "]}," Ruby32Parser _reduce_294":{"type":"method","name":"_reduce_294","children":[],"call":[" s line ","arg line "," s "]}," Ruby32Parser _reduce_293":{"type":"method","name":"_reduce_293","children":[],"call":[" lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg pop ","(sym :tLBRACE_ARG) include? "," s line ","arg line "," s "]}," Ruby32Parser _reduce_292":{"type":"method","name":"_reduce_292","children":[],"call":[" lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg pop ","(sym :tLPAREN) include? "," last_token_type first "," last_token_type ","(sym :tLBRACE_ARG) include? "]}," Ruby32Parser _reduce_291":{"type":"method","name":"_reduce_291","children":[],"call":[" call_args "," lexer cmdarg push "," lexer cmdarg "," lexer "," lexer cmdarg pop ","(sym :tLPAREN) include? "," last_token_type first "," last_token_type "]}," Ruby32Parser _reduce_290":{"type":"method","name":"_reduce_290","children":[],"call":[" call_args ","val [] "," array_to_hash "]}," Ruby32Parser _reduce_289":{"type":"method","name":"_reduce_289","children":[],"call":[" call_args ","val [] "," array_to_hash "]}," Ruby32Parser _reduce_288":{"type":"method","name":"_reduce_288","children":[],"call":[" call_args ","val [] "," array_to_hash "]}," Ruby32Parser _reduce_287":{"type":"method","name":"_reduce_287","children":[],"call":[" call_args "," warning "]}," Ruby32Parser _reduce_286":{"type":"method","name":"_reduce_286","children":[],"call":[" args "," array_to_hash ","val [] "," call_args "," warning "]}," Ruby32Parser _reduce_285":{"type":"method","name":"_reduce_285","children":[],"call":[" args "," array_to_hash ","val [] "]}," Ruby32Parser _reduce_284":{"type":"method","name":"_reduce_284","children":[],"call":[" args "," array_to_hash ","val [] "]}," Ruby32Parser _reduce_279":{"type":"method","name":"_reduce_279","children":[],"call":[" call_args "," yyerror "," lexer is_local_id "," lexer "]}," Ruby32Parser _reduce_278":{"type":"method","name":"_reduce_278","children":[],"call":[" call_args "," yyerror "," lexer is_local_id "," lexer "]}," Ruby32Parser _reduce_277":{"type":"method","name":"_reduce_277","children":[],"call":["result line_max= "," call_args "," yyerror "," lexer is_local_id "," lexer "," call_args  line_max= "]}," Ruby32Parser _reduce_276":{"type":"method","name":"_reduce_276","children":[],"call":[" new_rescue "," new_resbody "," s line "," s "," remove_begin "," value_expr ","result line_max= "," new_ remove_begin  "," new_res value_expr  "," new_rescue  line_max= "]}," Ruby32Parser _reduce_274":{"type":"method","name":"_reduce_274","children":[],"call":[" args "," array_to_hash ","val [] "]}," Ruby32Parser _reduce_273":{"type":"method","name":"_reduce_273","children":[],"call":[" args "," array_to_hash ","val [] "]}," Ruby32Parser _reduce_272":{"type":"method","name":"_reduce_272","children":[],"call":[" args ","val [] "," array_to_hash "]}," Ruby32Parser _reduce_270":{"type":"method","name":"_reduce_270","children":[],"call":[" value_expr ","val [] "]}," Ruby32Parser _reduce_269":{"type":"method","name":"_reduce_269","children":[],"call":[" new_call "," argl ","op to_sym "," warn "," value_expr ","val [] "]}," Ruby32Parser _reduce_268":{"type":"method","name":"_reduce_268","children":[],"call":[" new_call "," argl ","op to_sym "," warn "]}," Ruby32Parser _reduce_262":{"type":"method","name":"_reduce_262","children":[],"call":[" new_endless_defs "]}," Ruby32Parser _reduce_261":{"type":"method","name":"_reduce_261","children":[],"call":[" new_endless_defs "]}," Ruby32Parser _reduce_260":{"type":"method","name":"_reduce_260","children":[],"call":[" new_endless_defn "," new_endless_defs "]}," Ruby32Parser _reduce_259":{"type":"method","name":"_reduce_259","children":[],"call":[" new_endless_defn "]}," Ruby32Parser _reduce_258":{"type":"method","name":"_reduce_258","children":[],"call":[" s line ","c line "," s "," new_endless_defn "]}," Ruby32Parser _reduce_257":{"type":"method","name":"_reduce_257","children":[],"call":[" s line "," s ","c line "]}," Ruby32Parser _reduce_256":{"type":"method","name":"_reduce_256","children":[],"call":[" logical_op ","val [] "," s line "," s "]}," Ruby32Parser _reduce_255":{"type":"method","name":"_reduce_255","children":[],"call":[" logical_op ","val [] "]}," Ruby32Parser _reduce_254":{"type":"method","name":"_reduce_254","children":[],"call":[" new_call "," argl ","val [] ","val []= "," value_expr "," logical_op "]}," Ruby32Parser _reduce_253":{"type":"method","name":"_reduce_253","children":[],"call":[" new_call "," argl ","val [] ","val []= "," value_expr "]}," Ruby32Parser _reduce_252":{"type":"method","name":"_reduce_252","children":[],"call":[" new_call "," value_expr ","val [] "," argl ","val []= "]}," Ruby32Parser _reduce_251":{"type":"method","name":"_reduce_251","children":[],"call":["result line ","arg line "," new_call "," value_expr ","val [] "," new_call  line "]}," Ruby32Parser _reduce_250":{"type":"method","name":"_reduce_250","children":[],"call":[" s line ","lhs line "," s "," new_match ","result line ","arg line "," new_call "," s line  line "," new_call  line "]}," Ruby32Parser _reduce_249":{"type":"method","name":"_reduce_249","children":[],"call":[" new_match "," s line ","lhs line "," s "]}," Ruby32Parser _reduce_248":{"type":"method","name":"_reduce_248","children":[],"call":[" new_call "," argl ","val [] "," new_match "]}," Ruby32Parser _reduce_247":{"type":"method","name":"_reduce_247","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby32Parser _reduce_246":{"type":"method","name":"_reduce_246","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby32Parser _reduce_244":{"type":"method","name":"_reduce_244","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby32Parser _reduce_243":{"type":"method","name":"_reduce_243","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby32Parser _reduce_242":{"type":"method","name":"_reduce_242","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby32Parser _reduce_241":{"type":"method","name":"_reduce_241","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby32Parser _reduce_240":{"type":"method","name":"_reduce_240","children":[],"call":[" new_call ","val [] "," argl "]}," Ruby32Parser _reduce_239":{"type":"method","name":"_reduce_239","children":[],"call":[" new_call ","val [] "]}," Ruby32Parser _reduce_238":{"type":"method","name":"_reduce_238","children":[],"call":[" new_call "," argl "," wrap ","val [] "]}," Ruby32Parser _reduce_237":{"type":"method","name":"_reduce_237","children":[],"call":[" new_call "," argl ","val [] "," wrap "]}," Ruby32Parser _reduce_236":{"type":"method","name":"_reduce_236","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby32Parser _reduce_235":{"type":"method","name":"_reduce_235","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby32Parser _reduce_234":{"type":"method","name":"_reduce_234","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby32Parser _reduce_233":{"type":"method","name":"_reduce_233","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby32Parser _reduce_232":{"type":"method","name":"_reduce_232","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby32Parser _reduce_231":{"type":"method","name":"_reduce_231","children":[],"call":[" s line ","v2 line "," s "," new_call "," argl ","val [] "]}," Ruby32Parser _reduce_230":{"type":"method","name":"_reduce_230","children":[],"call":[" s line ","v2 line "," s "]}," Ruby32Parser _reduce_229":{"type":"method","name":"_reduce_229","children":[],"call":[" s line ","v1 line "," s ","v2 line "]}," Ruby32Parser _reduce_228":{"type":"method","name":"_reduce_228","children":[],"call":[" s line ","v1 line "," s "]}," Ruby32Parser _reduce_227":{"type":"method","name":"_reduce_227","children":[],"call":[" s line ","v1 line "," s ","v2 last ","v1 last ","Integer  === ","v2 sexp_type == ","v2 sexp_type ","v1 sexp_type == ","v1 sexp_type ","val [] "]}," Ruby32Parser _reduce_226":{"type":"method","name":"_reduce_226","children":[],"call":[" s line ","v1 line "," s ","v2 last ","v1 last ","Integer  === ","v2 sexp_type == ","v2 sexp_type ","v1 sexp_type == ","v1 sexp_type ","val [] "]}," Ruby32Parser _reduce_225":{"type":"method","name":"_reduce_225","children":[],"call":[" backref_assign_error "," new_op_asgn "," s line ","v1 line "," s ","v2 last ","v1 last ","Integer  === ","v2 sexp_type == ","v2 sexp_type ","v1 sexp_type == ","v1 sexp_type ","val [] "," new_op_ new_op_asgn  "]}," Ruby32Parser _reduce_224":{"type":"method","name":"_reduce_224","children":[],"call":[" new_const_op_asgn "," wrap "," backref_assign_error "," new_op_asgn "," new_const_op_ new_op_asgn  "," new_op_ new_op_asgn  "]}," Ruby32Parser _reduce_223":{"type":"method","name":"_reduce_223","children":[],"call":[" new_const_op_asgn "," s line ","lhs1 line "," s ","lhs2 to_sym "," wrap "," s line 1 line "," wrap 1 line "," s line 2 to_sym "," wrap 2 to_sym "]}," Ruby32Parser _reduce_222":{"type":"method","name":"_reduce_222","children":[],"call":[" s line ","lhs line "," s ","op to_sym ","id to_sym "," new_const_op_asgn ","lhs1 line ","lhs2 to_sym "," s line  line "," s line 1 line "," s line 2 to_sym "]}," Ruby32Parser _reduce_221":{"type":"method","name":"_reduce_221","children":[],"call":[" new_op_asgn2 "," s line ","lhs line "," s ","op to_sym ","id to_sym "]}," Ruby32Parser _reduce_220":{"type":"method","name":"_reduce_220","children":[],"call":[" new_op_asgn2 "]}," Ruby32Parser _reduce_219":{"type":"method","name":"_reduce_219","children":[],"call":[" new_op_asgn1 "," new_op_asgn2 "]}," Ruby32Parser _reduce_218":{"type":"method","name":"_reduce_218","children":[],"call":[" new_op_asgn "," new_op_asgn1 "]}," Ruby32Parser _reduce_217":{"type":"method","name":"_reduce_217","children":[],"call":[" new_assign ","val [] "," new_op_asgn "]}," Ruby32Parser _reduce_145":{"type":"method","name":"_reduce_145","children":[],"call":[" new_undef ","val [] "]}," Ruby32Parser _reduce_144":{"type":"method","name":"_reduce_144","children":[],"call":[" lexer lex_state= "," lexer "," new_undef ","val [] "]}," Ruby32Parser _reduce_143":{"type":"method","name":"_reduce_143","children":[],"call":[" new_undef ","val [] "," lexer lex_state= "," lexer "]}," Ruby32Parser _reduce_141":{"type":"method","name":"_reduce_141","children":[],"call":[" wrap ","val [] "]}," Ruby32Parser _reduce_139":{"type":"method","name":"_reduce_139","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby32Parser _reduce_135":{"type":"method","name":"_reduce_135","children":[],"call":["result line ","pval line "," s ","name to_sym "," s  line "]}," Ruby32Parser _reduce_134":{"type":"method","name":"_reduce_134","children":[],"call":["id to_sym ","result line ","pval line "," s ","name to_sym "," s  line "]}," Ruby32Parser _reduce_133":{"type":"method","name":"_reduce_133","children":[],"call":[" wrap ","val [] ","id to_sym "]}," Ruby32Parser _reduce_131":{"type":"method","name":"_reduce_131","children":[],"call":[" yyerror "]}," Ruby32Parser _reduce_130":{"type":"method","name":"_reduce_130","children":[],"call":[" backref_assign_error ","val [] "," yyerror "]}," Ruby32Parser _reduce_129":{"type":"method","name":"_reduce_129","children":[],"call":[" s line "," s ","id to_sym "," yyerror "," debug "," in_single > "," in_single "," in_def "," backref_assign_error ","val [] "]}," Ruby32Parser _reduce_128":{"type":"method","name":"_reduce_128","children":[],"call":[" s line "," s ","id to_sym ","expr line "," yyerror "," debug "," in_single > "," in_single "," in_def "," s expr line ine ","expr expr line ine "," in_singexpr line e > "," in_singexpr line e "]}," Ruby32Parser _reduce_127":{"type":"method","name":"_reduce_127","children":[],"call":[" new_attrasgn "," s line "," s ","id to_sym ","expr line "," yyerror "," debug "," in_single > "," in_single "," in_def "," s expr line ine ","expr expr line ine "," in_singexpr line e > "," in_singexpr line e "]}," Ruby32Parser _reduce_126":{"type":"method","name":"_reduce_126","children":[],"call":[" new_attrasgn "]}," Ruby32Parser _reduce_125":{"type":"method","name":"_reduce_125","children":[],"call":[" new_attrasgn "]}," Ruby32Parser _reduce_124":{"type":"method","name":"_reduce_124","children":[],"call":[" aryset "," new_attrasgn "]}," Ruby32Parser _reduce_123":{"type":"method","name":"_reduce_123","children":[],"call":[" debug "," assignable "," aryset "]}," Ruby32Parser _reduce_122":{"type":"method","name":"_reduce_122","children":[],"call":[" assignable "," debug "]}," Ruby32Parser _reduce_121":{"type":"method","name":"_reduce_121","children":[],"call":[" backref_assign_error "," assignable "]}," Ruby32Parser _reduce_120":{"type":"method","name":"_reduce_120","children":[],"call":[" s line "," s ","id to_sym "," yyerror "," debug "," in_single > "," in_single "," in_def "," backref_assign_error "]}," Ruby32Parser _reduce_119":{"type":"method","name":"_reduce_119","children":[],"call":[" s line "," s ","id to_sym ","expr line "," yyerror "," debug "," in_single > "," in_single "," in_def "," s expr line ine ","expr expr line ine "," in_singexpr line e > "," in_singexpr line e "]}," Ruby32Parser _reduce_118":{"type":"method","name":"_reduce_118","children":[],"call":[" new_attrasgn "," s line "," s ","id to_sym ","expr line "," yyerror "," debug "," in_single > "," in_single "," in_def "," s expr line ine ","expr expr line ine "," in_singexpr line e > "," in_singexpr line e "]}," Ruby32Parser _reduce_117":{"type":"method","name":"_reduce_117","children":[],"call":[" new_attrasgn "]}," Ruby32Parser _reduce_116":{"type":"method","name":"_reduce_116","children":[],"call":[" new_attrasgn "]}," Ruby32Parser _reduce_115":{"type":"method","name":"_reduce_115","children":[],"call":[" aryset ","val [] "," new_attrasgn "]}," Ruby32Parser _reduce_114":{"type":"method","name":"_reduce_114","children":[],"call":[" assignable ","val [] "," aryset "]}," Ruby32Parser _reduce_113":{"type":"method","name":"_reduce_113","children":[],"call":[" assignable ","val [] "]}," Ruby32Parser _reduce_112":{"type":"method","name":"_reduce_112","children":[],"call":[" list_append ","val [] "," assignable "]}," Ruby32Parser _reduce_111":{"type":"method","name":"_reduce_111","children":[],"call":[" s line ","item line "," s "," list_append ","val [] "]}," Ruby32Parser _reduce_110":{"type":"method","name":"_reduce_110","children":[],"call":["val [] << ","val [] compact ","val [] "," s line ","item line "," s "]}," Ruby32Parser _reduce_109":{"type":"method","name":"_reduce_109","children":[],"call":[" s line ","lhs line "," s ","val [] << ","val [] compact ","val [] "]}," Ruby32Parser _reduce_108":{"type":"method","name":"_reduce_108","children":[],"call":["val [] "," s line ","lhs line "," s "]}," Ruby32Parser _reduce_106":{"type":"method","name":"_reduce_106","children":[],"call":[" s line "," s ","post sexp_body ","post line "," s post line ine ","post post line ine "]}," Ruby32Parser _reduce_105":{"type":"method","name":"_reduce_105","children":[],"call":[" s line "," s "," lexer lineno "," lexer ","post sexp_body ","post line "," s  lexer lineno ine "," s post line ine ","  lexer lineno exer  lexer lineno ineno "," post line exer post line ineno ","  lexer lineno exer "," post line exer ","post  lexer lineno ine ","post post line ine "]}," Ruby32Parser _reduce_104":{"type":"method","name":"_reduce_104","children":[],"call":[" s line ","ary line "," s ","ary concat ","post sexp_body ","splat line ","node line "," s line  line "," s line  concat "]}," Ruby32Parser _reduce_103":{"type":"method","name":"_reduce_103","children":[],"call":[" s line "," s ","node line ","ary line ","ary concat ","post sexp_body ","splat line "," s node line ine ","node node line ine "," s line  line ","ary node line ine "," s line  concat ","spnode line at node line ine "]}," Ruby32Parser _reduce_102":{"type":"method","name":"_reduce_102","children":[],"call":[" s line ","ary line "," s ","ary concat ","post sexp_body "," list_append ","head line ","node line "," s node line ine "," list_append  line "," s line  line ","ary node line ine "," list_append  concat "," s line  concat "," node line ist_append ","head node line ine ","node node line ine "]}," Ruby32Parser _reduce_101":{"type":"method","name":"_reduce_101","children":[],"call":[" s line "," s ","head << ","head line ","ary line ","ary concat ","post sexp_body "," list_append "," s head line ine ","head head line ine ","ary head line ine "," list_append  line "," list_append  concat "," head line ist_append "]}," Ruby32Parser _reduce_100":{"type":"method","name":"_reduce_100","children":[],"call":[" s line ","result line "," s ","result concat ","ary2 sexp_body "," list_append ","splat line ","head << ","head line "," s head line ine "," s line  line "," list_append  line ","resuhead line t head line ine "," s line  concat "," list_append  concat ","resuhead line t concat "," head line ist_append ","sphead line at head line ine ","head head line ine "]}," Ruby32Parser _reduce_99":{"type":"method","name":"_reduce_99","children":[],"call":[" s line ","head line "," s ","head << ","tail line ","result line ","result concat ","ary2 sexp_body "," list_append ","splat line "," s line  line "," list_append  line "," s line  concat "," list_append  concat "]}," Ruby32Parser _reduce_98":{"type":"method","name":"_reduce_98","children":[],"call":[" s line ","lhs line "," s ","lhs << ","rhs compact ","head line ","head << ","tail line "]}," Ruby32Parser _reduce_97":{"type":"method","name":"_reduce_97","children":[],"call":[" s line ","head line "," s ","lhs line ","lhs << ","rhs compact "]}," Ruby32Parser _reduce_96":{"type":"method","name":"_reduce_96","children":[],"call":[" s line "," s ","arg line ","head line "," s arg line ine ","arg arg line ine ","head arg line ine "]}," Ruby32Parser _reduce_94":{"type":"method","name":"_reduce_94","children":[],"call":["val [] "]}," Ruby32Parser _reduce_92":{"type":"method","name":"_reduce_92","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last "," s val [] last  "]}," Ruby32Parser _reduce_91":{"type":"method","name":"_reduce_91","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last "," s val [] last  "]}," Ruby32Parser _reduce_90":{"type":"method","name":"_reduce_90","children":[],"call":[" s line "," s "," ret_args ","val [] ","val [] last "," s val [] last  "]}," Ruby32Parser _reduce_89":{"type":"method","name":"_reduce_89","children":[],"call":["result line "," new_yield "," s line "," s "," ret_args ","val [] ","val [] last "," new_yield  line "," s line  line ","result val [] last  "," s val [] last  "]}," Ruby32Parser _reduce_88":{"type":"method","name":"_reduce_88","children":[],"call":[" new_super ","val [] ","result line "," new_yield "," new_super  line "," new_yield  line "]}," Ruby32Parser _reduce_87":{"type":"method","name":"_reduce_87","children":[],"call":["block insert "," block_dup_check "," new_call ","msg to_sym "," new_super ","val [] "," new_ new_call  "]}," Ruby32Parser _reduce_86":{"type":"method","name":"_reduce_86","children":[],"call":["result line "," new_call ","id to_sym ","block insert "," block_dup_check ","msg to_sym "," new_call  line "," new_ new_call  "]}," Ruby32Parser _reduce_85":{"type":"method","name":"_reduce_85","children":[],"call":["block insert "," block_dup_check "," new_call ","val [] ","msg to_sym ","result line ","id to_sym "," new_ new_call  "," new_call  line "]}," Ruby32Parser _reduce_84":{"type":"method","name":"_reduce_84","children":[],"call":["result line ","lhs line "," new_call ","op to_sym ","block insert "," block_dup_check ","val [] ","msg to_sym "," new_call  line "," new_ new_call  "]}," Ruby32Parser _reduce_83":{"type":"method","name":"_reduce_83","children":[],"call":["result insert "," block_dup_check ","call concat ","args sexp_body ","result line ","lhs line "," new_call ","op to_sym ","call concat  insert "," new_call  insert ","call concat  line "," new_call  line "]}," Ruby32Parser _reduce_82":{"type":"method","name":"_reduce_82","children":[],"call":["call concat ","args sexp_body ","result insert "," block_dup_check ","call concat  insert "]}," Ruby32Parser _reduce_81":{"type":"method","name":"_reduce_81","children":[],"call":[" new_call line "," new_call ","msg to_sym ","call concat ","args sexp_body "]}," Ruby32Parser _reduce_80":{"type":"method","name":"_reduce_80","children":[],"call":["result line "," new_call line "," new_call ","msg to_sym "," new_call line  line "]}," Ruby32Parser _reduce_79":{"type":"method","name":"_reduce_79","children":[],"call":[" lexer lineno "," lexer ","result line "," lexer lineno  line "]}," Ruby32Parser _reduce_78":{"type":"method","name":"_reduce_78","children":[],"call":[" new_call line ","blk line "," new_call ","msg to_sym "," lexer lineno "," lexer "]}," Ruby32Parser _reduce_74":{"type":"method","name":"_reduce_74","children":[],"call":[]}," Ruby32Parser _reduce_73":{"type":"method","name":"_reduce_73","children":[],"call":[" lexer cond pop "," lexer cond "," lexer "]}," Ruby32Parser _reduce_72":{"type":"method","name":"_reduce_72","children":[],"call":[" lexer cond push "," lexer cond "," lexer "," lexer cond pop "]}," Ruby32Parser _reduce_71":{"type":"method","name":"_reduce_71","children":[],"call":[" value_expr ","val [] "," lexer cond push "," lexer cond "," lexer "]}," Ruby32Parser _reduce_70":{"type":"method","name":"_reduce_70","children":[],"call":[" in_single "," lexer lex_state= ","EXPR_ENDFN  | "," lexer "," value_expr ","val [] "]}," Ruby32Parser _reduce_69":{"type":"method","name":"_reduce_69","children":[],"call":[" lexer lex_state= "," lexer "," in_single ","EXPR_ENDFN  | "]}," Ruby32Parser _reduce_68":{"type":"method","name":"_reduce_68","children":[],"call":[" lexer lex_state= "," lexer "," in_argdef= "]}," Ruby32Parser _reduce_67":{"type":"method","name":"_reduce_67","children":[],"call":["id to_sym "," lexer cond push "," lexer cond "," lexer "," lexer cmdarg push "," lexer cmdarg "," env extend "," env "," in_def= "," in_def "]}," Ruby32Parser _reduce_65":{"type":"method","name":"_reduce_65","children":[],"call":[" new_case ","expr line "," new_in "," in_kwarg= "," value_expr "," env unextend "," env "," value_expr  line "," value_ value_expr  "]}," Ruby32Parser _reduce_64":{"type":"method","name":"_reduce_64","children":[],"call":[" env extend "," env "," in_kwarg= "," in_kwarg "," lexer command_start= "," lexer "," lexer lex_state= ","EXPR_BEG  | "," new_case ","expr line "," new_in "," value_expr "," env unextend "," value_expr  line "," value_ value_expr  "]}," Ruby32Parser _reduce_63":{"type":"method","name":"_reduce_63","children":[],"call":[" new_case ","rhs line "," new_in "," in_kwarg= "," env unextend "," env "," env extend "," in_kwarg "," lexer command_start= "," lexer "," lexer lex_state= ","EXPR_BEG  | "," new_in  line "]}," Ruby32Parser _reduce_62":{"type":"method","name":"_reduce_62","children":[],"call":[" env extend "," env "," in_kwarg= "," in_kwarg "," lexer command_start= "," lexer "," lexer lex_state= ","EXPR_BEG  | "," new_case ","rhs line "," new_in "," env unextend "," new_in  line "]}," Ruby32Parser _reduce_61":{"type":"method","name":"_reduce_61","children":[],"call":[" new_call line ","cmd line "," new_call "," env extend "," env "," in_kwarg= "," in_kwarg "," lexer command_start= "," lexer "," lexer lex_state= ","EXPR_BEG  | "]}," Ruby32Parser _reduce_60":{"type":"method","name":"_reduce_60","children":[],"call":[" new_call line "," new_call ","cmd line "]}," Ruby32Parser _reduce_59":{"type":"method","name":"_reduce_59","children":[],"call":[" logical_op "," new_call line "," new_call "]}," Ruby32Parser _reduce_58":{"type":"method","name":"_reduce_58","children":[],"call":[" logical_op "]}," Ruby32Parser _reduce_55":{"type":"method","name":"_reduce_55","children":[],"call":[" new_rescue "," new_resbody "," s line "," s "," value_expr "," value_ value_expr  "]}," Ruby32Parser _reduce_54":{"type":"method","name":"_reduce_54","children":[],"call":[" value_expr "," new_rescue "," new_resbody "," s line "," s "," value_ value_expr  "]}," Ruby32Parser _reduce_53":{"type":"method","name":"_reduce_53","children":[],"call":[" backref_assign_error ","val [] "," value_expr "]}," Ruby32Parser _reduce_52":{"type":"method","name":"_reduce_52","children":[],"call":[" new_endless_defs "," backref_assign_error ","val [] "]}," Ruby32Parser _reduce_51":{"type":"method","name":"_reduce_51","children":[],"call":[" new_endless_defs "]}," Ruby32Parser _reduce_50":{"type":"method","name":"_reduce_50","children":[],"call":[" new_endless_defn "," new_endless_defs "]}," Ruby32Parser _reduce_49":{"type":"method","name":"_reduce_49","children":[],"call":[" new_endless_defn "]}," Ruby32Parser _reduce_48":{"type":"method","name":"_reduce_48","children":[],"call":[" s line "," s ","id to_sym ","lhs2 to_sym "," new_endless_defn "]}," Ruby32Parser _reduce_47":{"type":"method","name":"_reduce_47","children":[],"call":[" s line "," s ","id to_sym ","lhs2 to_sym "]}," Ruby32Parser _reduce_46":{"type":"method","name":"_reduce_46","children":[],"call":["result line ","prim line ","result sexp_type= ","call_op == "," s ","op_asgn to_sym ","id to_sym "," s line ","lhs2 to_sym "," s  line "," s line  line "," s  sexp_type= "," s line  sexp_type= "]}," Ruby32Parser _reduce_45":{"type":"method","name":"_reduce_45","children":[],"call":["result line ","prim line ","result sexp_type= ","call_op == "," s ","op_asgn to_sym ","id to_sym "," s  line "," s  sexp_type= "]}," Ruby32Parser _reduce_44":{"type":"method","name":"_reduce_44","children":[],"call":[" new_op_asgn1 ","result line ","prim line ","result sexp_type= ","call_op == "," s ","op_asgn to_sym ","id to_sym "," new_op_asgn1  line "," s  line "," new_op_asgn1  sexp_type= "," s  sexp_type= "]}," Ruby32Parser _reduce_43":{"type":"method","name":"_reduce_43","children":[],"call":[" new_op_asgn "," new_op_asgn1 "]}," Ruby32Parser _reduce_42":{"type":"method","name":"_reduce_42","children":[],"call":[" new_assign ","val [] "," new_op_asgn "]}," Ruby32Parser _reduce_40":{"type":"method","name":"_reduce_40","children":[],"call":[" new_masgn ","val [] "]}," Ruby32Parser _reduce_39":{"type":"method","name":"_reduce_39","children":[],"call":[" new_masgn "," new_rescue "," new_resbody "," s line ","resbody line "," s ","val [] "," new_ new_resbody  "," new_resbody  line "]}," Ruby32Parser _reduce_38":{"type":"method","name":"_reduce_38","children":[],"call":[" new_assign "," s line ","rhs line "," s "," new_masgn "," new_rescue "," new_resbody ","resbody line "," new_ new_resbody  "," new_resbody  line "]}," Ruby32Parser _reduce_37":{"type":"method","name":"_reduce_37","children":[],"call":[" new_masgn ","val [] "," new_assign "," s line ","rhs line "," s "]}," Ruby32Parser _reduce_35":{"type":"method","name":"_reduce_35","children":[],"call":[" new_iter "," s line "," s "," yyerror "," debug "," in_single > "," in_single "," in_def "]}," Ruby32Parser _reduce_34":{"type":"method","name":"_reduce_34","children":[],"call":[" new_rescue "," new_resbody "," s line ","resbody line "," s "," new_iter "," yyerror "," debug "," in_single > "," in_single "," in_def "," new_ new_resbody  "," new_resbody  line "]}," Ruby32Parser _reduce_33":{"type":"method","name":"_reduce_33","children":[],"call":[" new_until "," new_rescue "," new_resbody "," s line ","resbody line "," s "," new_ new_resbody  "," new_resbody  line "]}," Ruby32Parser _reduce_32":{"type":"method","name":"_reduce_32","children":[],"call":[" new_while "," new_until "]}," Ruby32Parser _reduce_31":{"type":"method","name":"_reduce_31","children":[],"call":[" new_if "," new_while "]}," Ruby32Parser _reduce_30":{"type":"method","name":"_reduce_30","children":[],"call":[" new_if "]}," Ruby32Parser _reduce_29":{"type":"method","name":"_reduce_29","children":[],"call":["val [] "," new_if "]}," Ruby32Parser _reduce_28":{"type":"method","name":"_reduce_28","children":[],"call":[" yyerror ","val [] "]}," Ruby32Parser _reduce_27":{"type":"method","name":"_reduce_27","children":[],"call":[" s line "," s ","lhs to_sym "," yyerror "]}," Ruby32Parser _reduce_26":{"type":"method","name":"_reduce_26","children":[],"call":[" s line "," s ","rhs to_sym ","lhs to_sym "]}," Ruby32Parser _reduce_25":{"type":"method","name":"_reduce_25","children":[],"call":[" s line line "," s line "," s ","rhs to_sym ","lhs to_sym "]}," Ruby32Parser _reduce_24":{"type":"method","name":"_reduce_24","children":[],"call":[" lexer lex_state= "," lexer "," s line line "," s line "," s "]}," Ruby32Parser _reduce_23":{"type":"method","name":"_reduce_23","children":[],"call":["val [] "," lexer lex_state= "," lexer "]}," Ruby32Parser _reduce_22":{"type":"method","name":"_reduce_22","children":[],"call":[" yyerror ","val [] "]}," Ruby32Parser _reduce_20":{"type":"method","name":"_reduce_20","children":[],"call":[" debug ","val [] "]}," Ruby32Parser _reduce_19":{"type":"method","name":"_reduce_19","children":[],"call":[" block_append ","val [] "," debug "]}," Ruby32Parser _reduce_16":{"type":"method","name":"_reduce_16","children":[],"call":[" new_compstmt "]}," Ruby32Parser _reduce_15":{"type":"method","name":"_reduce_15","children":[],"call":[" new_body "," new_compstmt "]}," Ruby32Parser _reduce_14":{"type":"method","name":"_reduce_14","children":[],"call":[" new_body "]}," Ruby32Parser _reduce_13":{"type":"method","name":"_reduce_13","children":[],"call":[" yyerror ","_values [] "," new_body "]}," Ruby32Parser _reduce_12":{"type":"method","name":"_reduce_12","children":[],"call":[" new_iter "," s line "," s "," yyerror ","_values [] "]}," Ruby32Parser _reduce_11":{"type":"method","name":"_reduce_11","children":[],"call":[" lexer lineno "," lexer "," new_iter "," s line "," s "]}," Ruby32Parser _reduce_10":{"type":"method","name":"_reduce_10","children":[],"call":["preexe line ","iter line "]}," Ruby32Parser _reduce_9":{"type":"method","name":"_reduce_9","children":[],"call":[" env extend "," env "," yyerror "," debug "," in_single > "," in_single "," in_def "]}," Ruby32Parser _reduce_6":{"type":"method","name":"_reduce_6","children":[],"call":[" block_append ","val [] "]}," Ruby32Parser _reduce_3":{"type":"method","name":"_reduce_3","children":[],"call":[]}," Ruby32Parser _reduce_2":{"type":"method","name":"_reduce_2","children":[],"call":[" lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer cond pop "," lexer cond "," new_compstmt "]}," Ruby32Parser _reduce_1":{"type":"method","name":"_reduce_1","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby27Parser _reduce_747":{"type":"method","name":"_reduce_747","children":[],"call":[" lexer lineno "," lexer "]}," Ruby27Parser _reduce_746":{"type":"method","name":"_reduce_746","children":[],"call":[" lexer lineno "," lexer "]}," Ruby26Parser _reduce_642":{"type":"method","name":"_reduce_642","children":[],"call":[" lexer lineno "," lexer "]}," Ruby26Parser _reduce_641":{"type":"method","name":"_reduce_641","children":[],"call":[" lexer lineno "," lexer "]}," Ruby25Parser _reduce_640":{"type":"method","name":"_reduce_640","children":[],"call":[" lexer lineno "," lexer "]}," Ruby25Parser _reduce_639":{"type":"method","name":"_reduce_639","children":[],"call":[" lexer lineno "," lexer "]}," Ruby24Parser _reduce_640":{"type":"method","name":"_reduce_640","children":[],"call":[" lexer lineno "," lexer "]}," Ruby24Parser _reduce_639":{"type":"method","name":"_reduce_639","children":[],"call":[" lexer lineno "," lexer "]}," Ruby23Parser _reduce_639":{"type":"method","name":"_reduce_639","children":[],"call":[" lexer lineno "," lexer "]}," Ruby23Parser _reduce_638":{"type":"method","name":"_reduce_638","children":[],"call":[" lexer lineno "," lexer "]}," Ruby22Parser _reduce_638":{"type":"method","name":"_reduce_638","children":[],"call":[" lexer lineno "," lexer "]}," Ruby22Parser _reduce_637":{"type":"method","name":"_reduce_637","children":[],"call":[" lexer lineno "," lexer "]}," Ruby21Parser _reduce_636":{"type":"method","name":"_reduce_636","children":[],"call":[" lexer lineno "," lexer "]}," Ruby21Parser _reduce_635":{"type":"method","name":"_reduce_635","children":[],"call":[" lexer lineno "," lexer "]}," Ruby20Parser _reduce_631":{"type":"method","name":"_reduce_631","children":[],"call":[" lexer lineno "," lexer "]}," Ruby20Parser _reduce_630":{"type":"method","name":"_reduce_630","children":[],"call":[" lexer lineno "," lexer "]}," Ruby32Parser _reduce_780":{"type":"method","name":"_reduce_780","children":[],"call":[" yyerrok "]}," Ruby32Parser _reduce_779":{"type":"method","name":"_reduce_779","children":[],"call":[" yyerrok "]}," Ruby32Parser _reduce_772":{"type":"method","name":"_reduce_772","children":[],"call":[" lexer lineno "," lexer "]}," Ruby32Parser _reduce_771":{"type":"method","name":"_reduce_771","children":[],"call":[" lexer lineno "," lexer "]}," Ruby32Parser _reduce_770":{"type":"method","name":"_reduce_770","children":[],"call":[" lexer lineno "," lexer "]}," Ruby32Parser _reduce_748":{"type":"method","name":"_reduce_748","children":[],"call":[" s line "," s ","arg line ","sym sexp_type= "," s arg line  ","arg arg line  "]}," Ruby32Parser _reduce_747":{"type":"method","name":"_reduce_747","children":[],"call":[" s line "," s ","sym sexp_type= ","lit line "," wrap ","val [] "," wrap  line "]}," Ruby32Parser _reduce_743":{"type":"method","name":"_reduce_743","children":[],"call":["result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] ","val [] dup ","val [] dup  push ","val [] sexp_body  empty? "]}," Ruby32Parser _reduce_738":{"type":"method","name":"_reduce_738","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby32Parser _reduce_734":{"type":"method","name":"_reduce_734","children":[],"call":["(str \"&\") to_sym "," env []= "," env ","id to_sym "]}," Ruby32Parser _reduce_733":{"type":"method","name":"_reduce_733","children":[],"call":["(str \"&\") to_sym "," env []= "," env ","id to_sym "]}," Ruby32Parser _reduce_723":{"type":"method","name":"_reduce_723","children":[],"call":[" s line ","optblk line "," s "," assignable "," in_argdef= "]}," Ruby32Parser _reduce_722":{"type":"method","name":"_reduce_722","children":[],"call":[" assignable "," in_argdef= "]}," Ruby32Parser _reduce_720":{"type":"method","name":"_reduce_720","children":[],"call":[" env []= "," env "," assignable ","id to_sym "]}," Ruby32Parser _reduce_718":{"type":"method","name":"_reduce_718","children":[],"call":[]}," Ruby32Parser _reduce_713":{"type":"method","name":"_reduce_713","children":[],"call":["list << ","item last "]}," Ruby32Parser _reduce_709":{"type":"method","name":"_reduce_709","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym "," in_argdef= "]}," Ruby32Parser _reduce_708":{"type":"method","name":"_reduce_708","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym "," in_argdef= "]}," Ruby32Parser _reduce_706":{"type":"method","name":"_reduce_706","children":[],"call":["result line_max= ","result << ","item line_max ","Sexp  === "," s line ","list line "," s ","list sexp_type == ","list sexp_type "," new_arg ","result item line_max = "," s line  line_max= "," new_arg  line_max= "," s line  << "," new_arg  << ","item item line_max  "]}," Ruby32Parser _reduce_683":{"type":"method","name":"_reduce_683","children":[],"call":[" args "]}," Ruby32Parser _reduce_682":{"type":"method","name":"_reduce_682","children":[],"call":[" args "]}," Ruby32Parser _reduce_673":{"type":"method","name":"_reduce_673","children":[],"call":[" args "," end_args "," in_argdef= "]}," Ruby32Parser _reduce_656":{"type":"method","name":"_reduce_656","children":[],"call":[" s line "," s "," file "]}," Ruby32Parser _reduce_655":{"type":"method","name":"_reduce_655","children":[],"call":[" s line "," s "," file "]}," Ruby32Parser _reduce_654":{"type":"method","name":"_reduce_654","children":[],"call":[" s line "," s "]}," Ruby32Parser _reduce_653":{"type":"method","name":"_reduce_653","children":[],"call":[" s line "," s "]}," Ruby32Parser _reduce_652":{"type":"method","name":"_reduce_652","children":[],"call":[" s line "," s "]}," Ruby32Parser _reduce_645":{"type":"method","name":"_reduce_645","children":[],"call":[" wrap ","val [] "]}," Ruby32Parser _reduce_643":{"type":"method","name":"_reduce_643","children":[],"call":[" wrap ","val [] "]}," Ruby32Parser _reduce_638":{"type":"method","name":"_reduce_638","children":[],"call":["num -@ "]}," Ruby32Parser _reduce_605":{"type":"method","name":"_reduce_605","children":[],"call":["result line_max= "," s line "," s ","list dup << "," new_symbol_list_entry ","list dup "," s line  line_max= ","list dup <<  line_max= "]}," Ruby32Parser _reduce_595":{"type":"method","name":"_reduce_595","children":[],"call":["result line_max= "," s line "," s "," new_regexp "," s line  line_max= "," new_regexp  line_max= "]}," Ruby32Parser _reduce_592":{"type":"method","name":"_reduce_592","children":[],"call":[" new_string ","str line "," dedent ","func =~ "," new_ dedent ing "," dedent  line "]}," Ruby32Parser _reduce_590":{"type":"method","name":"_reduce_590","children":[],"call":[" literal_concat ","val [] "]}," Ruby32Parser _reduce_588":{"type":"method","name":"_reduce_588","children":[],"call":[" debug "," s ","str value ","str sexp_type == ","str sexp_type "," s  value "," s  sexp_type == "," s  sexp_type "]}," Ruby32Parser _reduce_585":{"type":"method","name":"_reduce_585","children":[],"call":[" s line "," s "]}," Ruby32Parser _reduce_574":{"type":"method","name":"_reduce_574","children":[],"call":[" s line "," s ","id to_sym ","lhs line "," wrap ","val [] "," s lhs line ine ","lhs line hs lhs line ine ","valhs line  [] "]}," Ruby32Parser _reduce_567":{"type":"method","name":"_reduce_567","children":[],"call":[" ary_to_pat ","val [] "]}," Ruby32Parser _reduce_566":{"type":"method","name":"_reduce_566","children":[],"call":[" ary_to_pat ","val [] "]}," Ruby32Parser _reduce_565":{"type":"method","name":"_reduce_565","children":[],"call":[" ary_to_pat ","val [] "]}," Ruby32Parser _reduce_553":{"type":"method","name":"_reduce_553","children":[],"call":[" s line ","v1 line "," s "]}," Ruby32Parser _reduce_544":{"type":"method","name":"_reduce_544","children":[],"call":[" s line "," s "," assignable ","id to_sym "," debug "]}," Ruby32Parser _reduce_537":{"type":"method","name":"_reduce_537","children":[],"call":[" new_hash_pattern_tail ","rest line ","kwarg line "]}," Ruby32Parser _reduce_529":{"type":"method","name":"_reduce_529","children":[],"call":["id to_sym "," new_find_pattern_tail "]}," Ruby32Parser _reduce_505":{"type":"method","name":"_reduce_505","children":[],"call":[" new_array_pattern ","const line "," new_array_pattern_tail "," new_hash_pattern ","lhs line "," pop_pktbl "," new_array_pattern_ new_array_pattern_tail  "]}," Ruby32Parser _reduce_504":{"type":"method","name":"_reduce_504","children":[],"call":[" new_hash_pattern ","lhs line "," pop_pktbl "," new_find_pattern line ","const line "," new_find_pattern "]}," Ruby32Parser _reduce_499":{"type":"method","name":"_reduce_499","children":[],"call":[" push_pktbl "]}," Ruby32Parser _reduce_491":{"type":"method","name":"_reduce_491","children":[],"call":[" new_array_pattern ","args line "," new_find_pattern "]}," Ruby32Parser _reduce_488":{"type":"method","name":"_reduce_488","children":[],"call":[" new_array_pattern ","expr line "," new_array_pattern_tail "," new_array_pattern_ new_array_pattern_tail  "]}," Ruby32Parser _reduce_486":{"type":"method","name":"_reduce_486","children":[],"call":[" s line ","body line "," s "," remove_begin "," remove_begin  line "]}," Ruby32Parser _reduce_481":{"type":"method","name":"_reduce_481","children":[],"call":[" new_in "," in_kwarg= ","_values [] "," pop_pvtbl "," pop_pktbl "]}," Ruby32Parser _reduce_443":{"type":"method","name":"_reduce_443","children":[],"call":[" env unextend "," env ","result line "," new_iter "," s line "," s "," lexer cmdarg pop "," lexer cmdarg "," lexer "," lexer lpar_beg= "," lexer cmdarg push "," new_iter  line "]}," Ruby32Parser _reduce_438":{"type":"method","name":"_reduce_438","children":[],"call":[" args "]}," Ruby32Parser _reduce_416":{"type":"method","name":"_reduce_416","children":[],"call":[" args "]}," Ruby32Parser _reduce_410":{"type":"method","name":"_reduce_410","children":[],"call":[" call_args "]}," Ruby32Parser _reduce_409":{"type":"method","name":"_reduce_409","children":[],"call":[" call_args "]}," Ruby32Parser _reduce_408":{"type":"method","name":"_reduce_408","children":[],"call":[" call_args "]}," Ruby32Parser _reduce_397":{"type":"method","name":"_reduce_397","children":[],"call":[" list_append ","arg last ","arg sexp_type == ","arg sexp_type ","arg last  last ","arg last  sexp_type == ","arg last  sexp_type "]}," Ruby32Parser _reduce_395":{"type":"method","name":"_reduce_395","children":[],"call":[]}," Ruby32Parser _reduce_393":{"type":"method","name":"_reduce_393","children":[],"call":["val [] delete_at ","val [] ","val [] [] nil? ","val [] [] "]}," Ruby32Parser _reduce_391":{"type":"method","name":"_reduce_391","children":[],"call":["val [] "]}," Ruby32Parser _reduce_389":{"type":"method","name":"_reduce_389","children":[],"call":[" s line "," s "]}," Ruby32Parser _reduce_373":{"type":"method","name":"_reduce_373","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "," in_argdef= "]}," Ruby32Parser _reduce_372":{"type":"method","name":"_reduce_372","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby32Parser _reduce_371":{"type":"method","name":"_reduce_371","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby32Parser _reduce_307":{"type":"method","name":"_reduce_307","children":[],"call":[" s line ","arg line "," s "]}," Ruby32Parser _reduce_297":{"type":"method","name":"_reduce_297","children":[],"call":[" s line "," s ","arg line "]}," Ruby32Parser _reduce_283":{"type":"method","name":"_reduce_283","children":[],"call":[" args "]}," Ruby32Parser _reduce_275":{"type":"method","name":"_reduce_275","children":[],"call":[" new_rescue "," new_resbody "," s line "," s "," remove_begin "," value_expr "," new_ remove_begin  "," new_res value_expr  "]}," Ruby32Parser _reduce_271":{"type":"method","name":"_reduce_271","children":[],"call":[" args ","val [] "]}," Ruby32Parser _reduce_267":{"type":"method","name":"_reduce_267","children":[],"call":[" new_call "," argl ","op to_sym "]}," Ruby32Parser _reduce_245":{"type":"method","name":"_reduce_245","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby32Parser _reduce_216":{"type":"method","name":"_reduce_216","children":[],"call":[" new_assign ","val [] "]}," Ruby32Parser _reduce_142":{"type":"method","name":"_reduce_142","children":[],"call":[" new_undef ","val [] "]}," Ruby32Parser _reduce_140":{"type":"method","name":"_reduce_140","children":[],"call":[" wrap ","val [] "]}," Ruby32Parser _reduce_138":{"type":"method","name":"_reduce_138","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby32Parser _reduce_132":{"type":"method","name":"_reduce_132","children":[],"call":[" wrap ","val [] "]}," Ruby32Parser _reduce_107":{"type":"method","name":"_reduce_107","children":[],"call":["val [] "]}," Ruby32Parser _reduce_95":{"type":"method","name":"_reduce_95","children":[],"call":[" s line "," s ","arg line "," s arg line ine ","arg arg line ine "]}," Ruby32Parser _reduce_93":{"type":"method","name":"_reduce_93","children":[],"call":["val [] "]}," Ruby32Parser _reduce_77":{"type":"method","name":"_reduce_77","children":[],"call":[" new_call line ","blk line "," new_call ","msg to_sym "]}," Ruby32Parser _reduce_66":{"type":"method","name":"_reduce_66","children":[],"call":["id to_sym "," lexer cond push "," lexer cond "," lexer "," lexer cmdarg push "," lexer cmdarg "," env extend "," env "," in_def= "," in_def "]}," Ruby32Parser _reduce_57":{"type":"method","name":"_reduce_57","children":[],"call":[" logical_op "]}," Ruby32Parser _reduce_41":{"type":"method","name":"_reduce_41","children":[],"call":[" new_assign ","val [] "]}," Ruby32Parser _reduce_36":{"type":"method","name":"_reduce_36","children":[],"call":[" new_masgn ","val [] "]}," Ruby32Parser _reduce_21":{"type":"method","name":"_reduce_21","children":[],"call":[" yyerror "]}," Ruby32Parser _reduce_18":{"type":"method","name":"_reduce_18","children":[],"call":[" block_append ","val [] "]}," Ruby31Parser _reduce_779":{"type":"method","name":"_reduce_779","children":[],"call":[" yyerrok "]}," Ruby31Parser _reduce_778":{"type":"method","name":"_reduce_778","children":[],"call":[" yyerrok "]}," Ruby31Parser _reduce_775":{"type":"method","name":"_reduce_775","children":[],"call":[" yyerrok "]}," Ruby31Parser _reduce_771":{"type":"method","name":"_reduce_771","children":[],"call":[" lexer lineno "," lexer "]}," Ruby31Parser _reduce_770":{"type":"method","name":"_reduce_770","children":[],"call":[" lexer lineno "," lexer "]}," Ruby31Parser _reduce_769":{"type":"method","name":"_reduce_769","children":[],"call":[" lexer lineno "," lexer "]}," Ruby31Parser _reduce_748":{"type":"method","name":"_reduce_748","children":[],"call":[" s line "," s ","arg line ","sym sexp_type= "," s arg line  ","arg arg line  "]}," Ruby31Parser _reduce_747":{"type":"method","name":"_reduce_747","children":[],"call":[" s line "," s ","sym sexp_type= ","lit line "," wrap ","val [] "," wrap  line "]}," Ruby31Parser _reduce_743":{"type":"method","name":"_reduce_743","children":[],"call":["result sexp_type= ","list push ","more empty? ","val [] sexp_body ","val [] ","val [] dup ","val [] dup  push ","val [] sexp_body  empty? "]}," Ruby31Parser _reduce_738":{"type":"method","name":"_reduce_738","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby31Parser _reduce_734":{"type":"method","name":"_reduce_734","children":[],"call":["(str \"&\") to_sym "," env []= "," env ","id to_sym "]}," Ruby31Parser _reduce_733":{"type":"method","name":"_reduce_733","children":[],"call":["(str \"&\") to_sym "," env []= "," env ","id to_sym "]}," Ruby31Parser _reduce_723":{"type":"method","name":"_reduce_723","children":[],"call":[" s line ","optblk line "," s "," assignable "," in_argdef= "]}," Ruby31Parser _reduce_722":{"type":"method","name":"_reduce_722","children":[],"call":[" assignable "," in_argdef= "]}," Ruby31Parser _reduce_720":{"type":"method","name":"_reduce_720","children":[],"call":[" env []= "," env "," assignable ","id to_sym "]}," Ruby31Parser _reduce_718":{"type":"method","name":"_reduce_718","children":[],"call":[]}," Ruby31Parser _reduce_713":{"type":"method","name":"_reduce_713","children":[],"call":["list << ","item last "]}," Ruby31Parser _reduce_709":{"type":"method","name":"_reduce_709","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym "," in_argdef= "]}," Ruby31Parser _reduce_708":{"type":"method","name":"_reduce_708","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym "," in_argdef= "]}," Ruby31Parser _reduce_706":{"type":"method","name":"_reduce_706","children":[],"call":["result line_max= ","result << ","item line_max ","Sexp  === "," s line ","list line "," s ","list sexp_type == ","list sexp_type "," new_arg ","result item line_max = "," s line  line_max= "," new_arg  line_max= "," s line  << "," new_arg  << ","item item line_max  "]}," Ruby31Parser _reduce_683":{"type":"method","name":"_reduce_683","children":[],"call":[" args "]}," Ruby31Parser _reduce_682":{"type":"method","name":"_reduce_682","children":[],"call":[" args "]}," Ruby31Parser _reduce_673":{"type":"method","name":"_reduce_673","children":[],"call":[" args "," end_args "," in_argdef= "]}," Ruby31Parser _reduce_656":{"type":"method","name":"_reduce_656","children":[],"call":[" s line "," s "," file "]}," Ruby31Parser _reduce_655":{"type":"method","name":"_reduce_655","children":[],"call":[" s line "," s "," file "]}," Ruby31Parser _reduce_654":{"type":"method","name":"_reduce_654","children":[],"call":[" s line "," s "]}," Ruby31Parser _reduce_653":{"type":"method","name":"_reduce_653","children":[],"call":[" s line "," s "]}," Ruby31Parser _reduce_652":{"type":"method","name":"_reduce_652","children":[],"call":[" s line "," s "]}," Ruby31Parser _reduce_645":{"type":"method","name":"_reduce_645","children":[],"call":[" wrap ","val [] "]}," Ruby31Parser _reduce_643":{"type":"method","name":"_reduce_643","children":[],"call":[" wrap ","val [] "]}," Ruby31Parser _reduce_638":{"type":"method","name":"_reduce_638","children":[],"call":["num -@ "]}," Ruby31Parser _reduce_605":{"type":"method","name":"_reduce_605","children":[],"call":["result line_max= "," s line "," s ","list dup << "," new_symbol_list_entry ","list dup "," s line  line_max= ","list dup <<  line_max= "]}," Ruby31Parser _reduce_595":{"type":"method","name":"_reduce_595","children":[],"call":["result line_max= "," s line "," s "," new_regexp "," s line  line_max= "," new_regexp  line_max= "]}," Ruby31Parser _reduce_592":{"type":"method","name":"_reduce_592","children":[],"call":[" new_string ","str line "," dedent ","func =~ "," new_ dedent ing "," dedent  line "]}," Ruby31Parser _reduce_590":{"type":"method","name":"_reduce_590","children":[],"call":[" literal_concat ","val [] "]}," Ruby31Parser _reduce_588":{"type":"method","name":"_reduce_588","children":[],"call":[" debug "," s ","str value ","str sexp_type == ","str sexp_type "," s  value "," s  sexp_type == "," s  sexp_type "]}," Ruby31Parser _reduce_585":{"type":"method","name":"_reduce_585","children":[],"call":[" s line "," s "]}," Ruby31Parser _reduce_574":{"type":"method","name":"_reduce_574","children":[],"call":[" s line "," s ","id to_sym ","lhs line "," wrap ","val [] "," s lhs line ine ","lhs line hs lhs line ine ","valhs line  [] "]}," Ruby31Parser _reduce_567":{"type":"method","name":"_reduce_567","children":[],"call":[" ary_to_pat ","val [] "]}," Ruby31Parser _reduce_566":{"type":"method","name":"_reduce_566","children":[],"call":[" ary_to_pat ","val [] "]}," Ruby31Parser _reduce_565":{"type":"method","name":"_reduce_565","children":[],"call":[" ary_to_pat ","val [] "]}," Ruby31Parser _reduce_553":{"type":"method","name":"_reduce_553","children":[],"call":[" s line ","v1 line "," s "]}," Ruby31Parser _reduce_544":{"type":"method","name":"_reduce_544","children":[],"call":[" s line "," s "," assignable ","id to_sym "," debug "]}," Ruby31Parser _reduce_537":{"type":"method","name":"_reduce_537","children":[],"call":[" new_hash_pattern_tail ","rest line ","kwarg line "]}," Ruby31Parser _reduce_529":{"type":"method","name":"_reduce_529","children":[],"call":["id to_sym "," new_find_pattern_tail "]}," Ruby31Parser _reduce_505":{"type":"method","name":"_reduce_505","children":[],"call":[" new_find_pattern line ","const line "," new_find_pattern "," pop_pktbl "," new_array_pattern "]}," Ruby31Parser _reduce_504":{"type":"method","name":"_reduce_504","children":[],"call":[" new_array_pattern ","const line "," pop_pktbl "," new_array_pattern_tail "," new_array_pattern_ new_array_pattern_tail  "]}," Ruby31Parser _reduce_501":{"type":"method","name":"_reduce_501","children":[],"call":[" new_find_pattern line ","const line "," new_find_pattern "," pop_pktbl "," new_array_pattern ","lhs line "]}," Ruby31Parser _reduce_497":{"type":"method","name":"_reduce_497","children":[],"call":[" push_pktbl "]}," Ruby31Parser _reduce_488":{"type":"method","name":"_reduce_488","children":[],"call":[" new_find_pattern "," new_array_pattern ","expr line "]}," Ruby31Parser _reduce_487":{"type":"method","name":"_reduce_487","children":[],"call":[" new_array_pattern ","expr line "," new_array_pattern_tail "," new_array_pattern_ new_array_pattern_tail  "]}," Ruby31Parser _reduce_486":{"type":"method","name":"_reduce_486","children":[],"call":[" new_array_pattern ","expr line "," new_array_pattern_tail "," new_array_pattern_ new_array_pattern_tail  "]}," Ruby31Parser _reduce_443":{"type":"method","name":"_reduce_443","children":[],"call":["result == "," s ","val [] "," args "," in_argdef= ","val []  == "," args  == "]}," Ruby31Parser _reduce_416":{"type":"method","name":"_reduce_416","children":[],"call":[" args "]}," Ruby31Parser _reduce_410":{"type":"method","name":"_reduce_410","children":[],"call":[" args ","result line "," call_args "," args  line "," call_args  line "]}," Ruby31Parser _reduce_409":{"type":"method","name":"_reduce_409","children":[],"call":["result line "," call_args "," call_args  line "]}," Ruby31Parser _reduce_408":{"type":"method","name":"_reduce_408","children":[],"call":[" call_args "]}," Ruby31Parser _reduce_397":{"type":"method","name":"_reduce_397","children":[],"call":[" block_var "]}," Ruby31Parser _reduce_395":{"type":"method","name":"_reduce_395","children":[],"call":[" list_append ","arg last ","arg sexp_type == ","arg sexp_type ","arg last  last ","arg last  sexp_type == ","arg last  sexp_type "]}," Ruby31Parser _reduce_393":{"type":"method","name":"_reduce_393","children":[],"call":[]}," Ruby31Parser _reduce_391":{"type":"method","name":"_reduce_391","children":[],"call":["val [] delete_at ","val [] ","val [] [] nil? ","val [] [] "]}," Ruby31Parser _reduce_389":{"type":"method","name":"_reduce_389","children":[],"call":["val [] "]}," Ruby31Parser _reduce_387":{"type":"method","name":"_reduce_387","children":[],"call":[" s line "," s "]}," Ruby31Parser _reduce_371":{"type":"method","name":"_reduce_371","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "," in_argdef= "]}," Ruby31Parser _reduce_370":{"type":"method","name":"_reduce_370","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby31Parser _reduce_369":{"type":"method","name":"_reduce_369","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby31Parser _reduce_339":{"type":"method","name":"_reduce_339","children":[],"call":[]}," Ruby31Parser _reduce_316":{"type":"method","name":"_reduce_316","children":[],"call":["result line "," new_call ","msg to_sym "," new_call  line "]}," Ruby31Parser _reduce_297":{"type":"method","name":"_reduce_297","children":[],"call":[" s line "," s ","arg line "]}," Ruby31Parser _reduce_283":{"type":"method","name":"_reduce_283","children":[],"call":[" args "]}," Ruby31Parser _reduce_275":{"type":"method","name":"_reduce_275","children":[],"call":[" new_rescue "," new_resbody "," s line "," s "," remove_begin "," value_expr "," new_ remove_begin  "," new_res value_expr  "]}," Ruby31Parser _reduce_271":{"type":"method","name":"_reduce_271","children":[],"call":[" args ","val [] "]}," Ruby31Parser _reduce_267":{"type":"method","name":"_reduce_267","children":[],"call":[" new_call "," argl ","op to_sym "]}," Ruby31Parser _reduce_245":{"type":"method","name":"_reduce_245","children":[],"call":[" new_call "," argl ","val [] "]}," Ruby31Parser _reduce_216":{"type":"method","name":"_reduce_216","children":[],"call":[" new_assign ","val [] "]}," Ruby31Parser _reduce_142":{"type":"method","name":"_reduce_142","children":[],"call":[" new_undef ","val [] "]}," Ruby31Parser _reduce_140":{"type":"method","name":"_reduce_140","children":[],"call":[" wrap ","val [] "]}," Ruby31Parser _reduce_138":{"type":"method","name":"_reduce_138","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby31Parser _reduce_132":{"type":"method","name":"_reduce_132","children":[],"call":[" wrap ","val [] "]}," Ruby31Parser _reduce_107":{"type":"method","name":"_reduce_107","children":[],"call":["val [] "]}," Ruby31Parser _reduce_95":{"type":"method","name":"_reduce_95","children":[],"call":[" s line "," s ","arg line "," s arg line ine ","arg arg line ine "]}," Ruby31Parser _reduce_93":{"type":"method","name":"_reduce_93","children":[],"call":["val [] "]}," Ruby31Parser _reduce_77":{"type":"method","name":"_reduce_77","children":[],"call":[" new_call line ","blk line "," new_call ","msg to_sym "]}," Ruby31Parser _reduce_66":{"type":"method","name":"_reduce_66","children":[],"call":["id to_sym "," lexer cond push "," lexer cond "," lexer "," lexer cmdarg push "," lexer cmdarg "," env extend "," env "," in_def= "," in_def "]}," Ruby31Parser _reduce_57":{"type":"method","name":"_reduce_57","children":[],"call":[" logical_op "]}," Ruby31Parser _reduce_41":{"type":"method","name":"_reduce_41","children":[],"call":[" new_assign ","val [] "]}," Ruby31Parser _reduce_36":{"type":"method","name":"_reduce_36","children":[],"call":[" new_masgn ","val [] "]}," Ruby31Parser _reduce_21":{"type":"method","name":"_reduce_21","children":[],"call":[" yyerror "]}," Ruby31Parser _reduce_18":{"type":"method","name":"_reduce_18","children":[],"call":[" block_append ","val [] "]}," Ruby30Parser _reduce_766":{"type":"method","name":"_reduce_766","children":[],"call":[" yyerrok "]}," Ruby30Parser _reduce_759":{"type":"method","name":"_reduce_759","children":[],"call":[" lexer lineno "," lexer "]}," Ruby30Parser _reduce_758":{"type":"method","name":"_reduce_758","children":[],"call":[" lexer lineno "," lexer "]}," Ruby30Parser _reduce_757":{"type":"method","name":"_reduce_757","children":[],"call":[" lexer lineno "," lexer "]}," Ruby30Parser _reduce_735":{"type":"method","name":"_reduce_735","children":[],"call":[" s line "," s ","sym sexp_type= "]}," Ruby30Parser _reduce_726":{"type":"method","name":"_reduce_726","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby30Parser _reduce_722":{"type":"method","name":"_reduce_722","children":[],"call":[]}," Ruby30Parser _reduce_721":{"type":"method","name":"_reduce_721","children":[],"call":["(str \"&\") to_sym "," env []= "," env ","id to_sym "]}," Ruby30Parser _reduce_711":{"type":"method","name":"_reduce_711","children":[],"call":[" s line ","optblk line "," s "]}," Ruby30Parser _reduce_710":{"type":"method","name":"_reduce_710","children":[],"call":[" assignable "," in_argdef= "]}," Ruby30Parser _reduce_708":{"type":"method","name":"_reduce_708","children":[],"call":[" env []= "," env "]}," Ruby30Parser _reduce_706":{"type":"method","name":"_reduce_706","children":[],"call":[]}," Ruby30Parser _reduce_701":{"type":"method","name":"_reduce_701","children":[],"call":["list << ","item last "]}," Ruby30Parser _reduce_697":{"type":"method","name":"_reduce_697","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym "," in_argdef= "]}," Ruby30Parser _reduce_696":{"type":"method","name":"_reduce_696","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym "," in_argdef= "]}," Ruby30Parser _reduce_694":{"type":"method","name":"_reduce_694","children":[],"call":["result line_max= ","result << ","item line_max ","Sexp  === "," s line ","list line "," s ","list sexp_type == ","list sexp_type ","result item line_max = "," s line  line_max= "," s line  << ","item item line_max  "]}," Ruby30Parser _reduce_671":{"type":"method","name":"_reduce_671","children":[],"call":[" args "]}," Ruby30Parser _reduce_643":{"type":"method","name":"_reduce_643","children":[],"call":[" s line "," s "]}," Ruby30Parser _reduce_642":{"type":"method","name":"_reduce_642","children":[],"call":[" s line "," s "," file "]}," Ruby30Parser _reduce_641":{"type":"method","name":"_reduce_641","children":[],"call":[" s line "," s "]}," Ruby30Parser _reduce_640":{"type":"method","name":"_reduce_640","children":[],"call":[" s line "," s "]}," Ruby30Parser _reduce_639":{"type":"method","name":"_reduce_639","children":[],"call":[" s line "," s "]}," Ruby30Parser _reduce_638":{"type":"method","name":"_reduce_638","children":[],"call":[" s line "," s "]}," Ruby30Parser _reduce_530":{"type":"method","name":"_reduce_530","children":[],"call":[" new_hash_pattern_tail ","rest line "]}," Ruby30Parser _reduce_522":{"type":"method","name":"_reduce_522","children":[],"call":["id to_sym "]}," Ruby30Parser _reduce_366":{"type":"method","name":"_reduce_366","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "," in_argdef= "]}," Ruby30Parser _reduce_365":{"type":"method","name":"_reduce_365","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby30Parser _reduce_364":{"type":"method","name":"_reduce_364","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby30Parser _reduce_292":{"type":"method","name":"_reduce_292","children":[],"call":[" s line "," s ","arg line "]}," Ruby30Parser _reduce_267":{"type":"method","name":"_reduce_267","children":[],"call":[" args ","val [] "]}," Ruby30Parser _reduce_138":{"type":"method","name":"_reduce_138","children":[],"call":[" new_undef ","val [] "]}," Ruby30Parser _reduce_136":{"type":"method","name":"_reduce_136","children":[],"call":[" wrap ","val [] "]}," Ruby30Parser _reduce_134":{"type":"method","name":"_reduce_134","children":[],"call":[" lexer lex_state= "," lexer "]}," Ruby30Parser _reduce_128":{"type":"method","name":"_reduce_128","children":[],"call":[" wrap ","val [] "]}," Ruby30Parser _reduce_62":{"type":"method","name":"_reduce_62","children":[],"call":["id to_sym "," lexer cond push "," lexer cond "," lexer "," lexer cmdarg push "," lexer cmdarg "," env extend "," env "," in_def= "," in_def "]}," Ruby30Parser _reduce_21":{"type":"method","name":"_reduce_21","children":[],"call":[" yyerror "]}," Ruby30Parser _reduce_18":{"type":"method","name":"_reduce_18","children":[],"call":[" block_append ","val [] "]}," Ruby27Parser _reduce_753":{"type":"method","name":"_reduce_753","children":[],"call":[]}," Ruby27Parser _reduce_749":{"type":"method","name":"_reduce_749","children":[],"call":[" yyerrok "]}," Ruby27Parser _reduce_744":{"type":"method","name":"_reduce_744","children":[],"call":[" lexer lineno "," lexer "]}," Ruby27Parser _reduce_743":{"type":"method","name":"_reduce_743","children":[],"call":[" lexer lineno "," lexer "]}," Ruby27Parser _reduce_720":{"type":"method","name":"_reduce_720","children":[],"call":[" s line ","lit line "," s "," wrap "," wrap  line "]}," Ruby27Parser _reduce_719":{"type":"method","name":"_reduce_719","children":[],"call":[" s line ","v1 line "," s "]}," Ruby27Parser _reduce_715":{"type":"method","name":"_reduce_715","children":[],"call":[" s line "," lexer lineno "," lexer "," s "]}," Ruby27Parser _reduce_711":{"type":"method","name":"_reduce_711","children":[],"call":[]}," Ruby27Parser _reduce_710":{"type":"method","name":"_reduce_710","children":[],"call":[]}," Ruby27Parser _reduce_706":{"type":"method","name":"_reduce_706","children":[],"call":[" lexer lineno "," lexer "," env []= "," env "]}," Ruby27Parser _reduce_696":{"type":"method","name":"_reduce_696","children":[],"call":[" lexer lineno "," lexer "," env []= "," env "]}," Ruby27Parser _reduce_695":{"type":"method","name":"_reduce_695","children":[],"call":[" assignable ","id to_sym "]}," Ruby27Parser _reduce_691":{"type":"method","name":"_reduce_691","children":[],"call":[" args "]}," Ruby27Parser _reduce_686":{"type":"method","name":"_reduce_686","children":[],"call":[" s line "," s "," env []= "," env ","label to_sym "]}," Ruby27Parser _reduce_682":{"type":"method","name":"_reduce_682","children":[],"call":["result line_max= ","result << ","item line_max ","Sexp  === "," s line ","list line "," s ","list sexp_type == ","list sexp_type ","result item line_max = "," s line  line_max= "," s line  << ","item item line_max  "]}," Ruby27Parser _reduce_681":{"type":"method","name":"_reduce_681","children":[],"call":[" new_arg "]}," Ruby27Parser _reduce_381":{"type":"method","name":"_reduce_381","children":[],"call":["val [] delete_at ","val [] ","val [] [] nil? ","val [] [] "]}," Ruby27Parser _reduce_379":{"type":"method","name":"_reduce_379","children":[],"call":["val [] "]}," Ruby27Parser _reduce_377":{"type":"method","name":"_reduce_377","children":[],"call":[" s line "," s "]}," Ruby27Parser _reduce_361":{"type":"method","name":"_reduce_361","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby27Parser _reduce_360":{"type":"method","name":"_reduce_360","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby27Parser _reduce_359":{"type":"method","name":"_reduce_359","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby26Parser _reduce_647":{"type":"method","name":"_reduce_647","children":[],"call":[]}," Ruby26Parser _reduce_643":{"type":"method","name":"_reduce_643","children":[],"call":[" yyerrok "]}," Ruby26Parser _reduce_639":{"type":"method","name":"_reduce_639","children":[],"call":[" lexer lineno "," lexer "]}," Ruby26Parser _reduce_638":{"type":"method","name":"_reduce_638","children":[],"call":[" lexer lineno "," lexer "]}," Ruby26Parser _reduce_529":{"type":"method","name":"_reduce_529","children":[],"call":[" s line "," lexer lineno "," lexer "," s "]}," Ruby26Parser _reduce_528":{"type":"method","name":"_reduce_528","children":[],"call":[" s line "," lexer lineno "," lexer "," s "]}," Ruby26Parser _reduce_371":{"type":"method","name":"_reduce_371","children":[],"call":["val [] "]}," Ruby26Parser _reduce_369":{"type":"method","name":"_reduce_369","children":[],"call":[" s line "," s "]}," Ruby26Parser _reduce_353":{"type":"method","name":"_reduce_353","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby25Parser _reduce_645":{"type":"method","name":"_reduce_645","children":[],"call":[]}," Ruby25Parser _reduce_641":{"type":"method","name":"_reduce_641","children":[],"call":[" yyerrok "]}," Ruby25Parser _reduce_637":{"type":"method","name":"_reduce_637","children":[],"call":[" lexer lineno "," lexer "]}," Ruby25Parser _reduce_636":{"type":"method","name":"_reduce_636","children":[],"call":[" lexer lineno "," lexer "]}," Ruby25Parser _reduce_351":{"type":"method","name":"_reduce_351","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby24Parser _reduce_645":{"type":"method","name":"_reduce_645","children":[],"call":[]}," Ruby24Parser _reduce_641":{"type":"method","name":"_reduce_641","children":[],"call":[" yyerrok "]}," Ruby24Parser _reduce_637":{"type":"method","name":"_reduce_637","children":[],"call":[" lexer lineno "," lexer "]}," Ruby24Parser _reduce_636":{"type":"method","name":"_reduce_636","children":[],"call":[" lexer lineno "," lexer "]}," Ruby24Parser _reduce_351":{"type":"method","name":"_reduce_351","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby23Parser _reduce_644":{"type":"method","name":"_reduce_644","children":[],"call":[]}," Ruby23Parser _reduce_640":{"type":"method","name":"_reduce_640","children":[],"call":[" yyerrok "]}," Ruby23Parser _reduce_636":{"type":"method","name":"_reduce_636","children":[],"call":[" lexer lineno "," lexer "]}," Ruby23Parser _reduce_635":{"type":"method","name":"_reduce_635","children":[],"call":[" lexer lineno "," lexer "]}," Ruby23Parser _reduce_350":{"type":"method","name":"_reduce_350","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby22Parser _reduce_643":{"type":"method","name":"_reduce_643","children":[],"call":[]}," Ruby22Parser _reduce_639":{"type":"method","name":"_reduce_639","children":[],"call":[" yyerrok "]}," Ruby22Parser _reduce_635":{"type":"method","name":"_reduce_635","children":[],"call":[" lexer lineno "," lexer "]}," Ruby22Parser _reduce_634":{"type":"method","name":"_reduce_634","children":[],"call":[" lexer lineno "," lexer "]}," Ruby22Parser _reduce_350":{"type":"method","name":"_reduce_350","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby21Parser _reduce_641":{"type":"method","name":"_reduce_641","children":[],"call":[]}," Ruby21Parser _reduce_637":{"type":"method","name":"_reduce_637","children":[],"call":[" yyerrok "]}," Ruby21Parser _reduce_633":{"type":"method","name":"_reduce_633","children":[],"call":[" lexer lineno "," lexer "]}," Ruby21Parser _reduce_632":{"type":"method","name":"_reduce_632","children":[],"call":[" lexer lineno "," lexer "]}," Ruby21Parser _reduce_350":{"type":"method","name":"_reduce_350","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby20Parser _reduce_636":{"type":"method","name":"_reduce_636","children":[],"call":[]}," Ruby20Parser _reduce_632":{"type":"method","name":"_reduce_632","children":[],"call":[" yyerrok "]}," Ruby20Parser _reduce_628":{"type":"method","name":"_reduce_628","children":[],"call":[" lexer lineno "," lexer "]}," Ruby20Parser _reduce_627":{"type":"method","name":"_reduce_627","children":[],"call":[" lexer lineno "," lexer "]}," Ruby20Parser _reduce_350":{"type":"method","name":"_reduce_350","children":[],"call":[" comments push "," lexer comments "," lexer "," comments "]}," Ruby32Parser _reduce_773":{"type":"method","name":"_reduce_773","children":[],"call":[" lexer lineno "," lexer "]}," Ruby32Parser _reduce_737":{"type":"method","name":"_reduce_737","children":[],"call":[]}," Ruby32Parser _reduce_676":{"type":"method","name":"_reduce_676","children":[],"call":[" args "]}," Ruby32Parser _reduce_646":{"type":"method","name":"_reduce_646","children":[],"call":[" wrap ","val [] "]}," Ruby32Parser _reduce_639":{"type":"method","name":"_reduce_639","children":[],"call":["num -@ "]}," Ruby32Parser _reduce_586":{"type":"method","name":"_reduce_586","children":[],"call":[" s line "," s "]}," Ruby32Parser _reduce_568":{"type":"method","name":"_reduce_568","children":[],"call":[]}," Ruby32Parser _reduce_554":{"type":"method","name":"_reduce_554","children":[],"call":[" s line ","v1 line "," s "]}," Ruby32Parser _reduce_497":{"type":"method","name":"_reduce_497","children":[],"call":[" s line ","lhs line "," s "]}," Ruby32Parser _reduce_487":{"type":"method","name":"_reduce_487","children":[],"call":[" s line ","body line "," s "," remove_begin "," remove_begin  line "]}," Ruby32Parser _reduce_482":{"type":"method","name":"_reduce_482","children":[],"call":[" new_in "]}," Ruby31Parser _reduce_780":{"type":"method","name":"_reduce_780","children":[],"call":[]}," Ruby31Parser _reduce_772":{"type":"method","name":"_reduce_772","children":[],"call":[" lexer lineno "," lexer "]}," Ruby31Parser _reduce_737":{"type":"method","name":"_reduce_737","children":[],"call":[]}," Ruby31Parser _reduce_676":{"type":"method","name":"_reduce_676","children":[],"call":[" args "]}," Ruby31Parser _reduce_646":{"type":"method","name":"_reduce_646","children":[],"call":[" wrap ","val [] "]}," Ruby31Parser _reduce_639":{"type":"method","name":"_reduce_639","children":[],"call":["num -@ "]}," Ruby31Parser _reduce_586":{"type":"method","name":"_reduce_586","children":[],"call":[" s line "," s "]}," Ruby31Parser _reduce_568":{"type":"method","name":"_reduce_568","children":[],"call":[]}," Ruby31Parser _reduce_554":{"type":"method","name":"_reduce_554","children":[],"call":[" s line ","v1 line "," s "]}," Ruby31Parser _reduce_491":{"type":"method","name":"_reduce_491","children":[],"call":[" new_hash_pattern ","kwargs line "]}," Ruby31Parser _reduce_438":{"type":"method","name":"_reduce_438","children":[],"call":[" wrap ","val [] "]}," RubyLexer process_bang":{"type":"method","name":"process_bang","children":[],"call":[" result ","TOKENS  [] "," arg_state "," matched "," scan "," in_arg_state? "]}," RubyLexer process_backtick":{"type":"method","name":"process_backtick","children":[],"call":[" result "," string "," command_state "," lex_state "]}," Ruby21Parser _reduce_360":{"type":"method","name":"_reduce_360","children":[],"call":[" s ","val [] "]}," RubyLexer ruby22?":{"type":"method","name":"ruby22?","children":[],"call":["Ruby22Parser  === "," parser ","Ruby23Parser  === "]}," Ruby22Parser _reduce_623":{"type":"method","name":"_reduce_623","children":[],"call":[" yyerrok "]}," Ruby22Parser _reduce_360":{"type":"method","name":"_reduce_360","children":[],"call":[" s ","val [] "]}," Ruby23Parser _reduce_630":{"type":"method","name":"_reduce_630","children":[],"call":[]}," Ruby23Parser _reduce_629":{"type":"method","name":"_reduce_629","children":[],"call":[" yyerrok "]}," Ruby23Parser _reduce_360":{"type":"method","name":"_reduce_360","children":[],"call":["val [] delete_at ","val [] ","val [] [] nil? ","val [] [] "," s "]}," Ruby23Parser _reduce_358":{"type":"method","name":"_reduce_358","children":[],"call":["val [] "," s ","val [] delete_at ","val [] [] nil? ","val [] [] "]}," Ruby23Parser _reduce_356":{"type":"method","name":"_reduce_356","children":[],"call":[" s ","val [] "]}," Ruby23Parser _reduce_245":{"type":"method","name":"_reduce_245","children":[],"call":[" args "," array_to_hash ","val [] "]}," Ruby22Parser _reduce_624":{"type":"method","name":"_reduce_624","children":[],"call":[" yyerrok "]}," Ruby20Parser _reduce_625":{"type":"method","name":"_reduce_625","children":[],"call":[" yyerrok "]}," Ruby20Parser _reduce_624":{"type":"method","name":"_reduce_624","children":[],"call":[" yyerrok "]}," Ruby20Parser _reduce_621":{"type":"method","name":"_reduce_621","children":[],"call":[" yyerrok "]}," Ruby23Parser _reduce_632":{"type":"method","name":"_reduce_632","children":[],"call":[]}," Ruby23Parser _reduce_631":{"type":"method","name":"_reduce_631","children":[],"call":[" yyerrok "]}," Ruby23Parser _reduce_628":{"type":"method","name":"_reduce_628","children":[],"call":[" yyerrok "]}," Ruby21Parser _reduce_624":{"type":"method","name":"_reduce_624","children":[],"call":[]}," Ruby20Parser _reduce_626":{"type":"method","name":"_reduce_626","children":[],"call":[]}," Ruby20Parser _reduce_622":{"type":"method","name":"_reduce_622","children":[],"call":[" yyerrok "]}," Ruby23Parser _reduce_625":{"type":"method","name":"_reduce_625","children":[],"call":[" yyerrok "]}," Ruby23Parser _reduce_624":{"type":"method","name":"_reduce_624","children":[],"call":[" yyerrok "]}," Ruby21Parser _reduce_621":{"type":"method","name":"_reduce_621","children":[],"call":[" yyerrok "]}," Ruby24Parser _reduce_625":{"type":"method","name":"_reduce_625","children":[],"call":[" yyerrok "]}," Ruby24Parser _reduce_360":{"type":"method","name":"_reduce_360","children":[],"call":["val [] "]}," Ruby24Parser _reduce_358":{"type":"method","name":"_reduce_358","children":[],"call":["val [] delete_at ","val [] ","val [] [] nil? ","val [] [] "]}," Ruby24Parser _reduce_356":{"type":"method","name":"_reduce_356","children":[],"call":["val [] "]}," Ruby23Parser _reduce_354":{"type":"method","name":"_reduce_354","children":[],"call":[" s ","val [] "]}," Ruby22Parser _reduce_358":{"type":"method","name":"_reduce_358","children":[],"call":["val [] delete_at ","val [] ","val [] [] nil? ","val [] [] "]}," Ruby22Parser _reduce_356":{"type":"method","name":"_reduce_356","children":[],"call":["val [] "]}," Ruby22Parser _reduce_354":{"type":"method","name":"_reduce_354","children":[],"call":[" s ","val [] "]}," Ruby21Parser _reduce_358":{"type":"method","name":"_reduce_358","children":[],"call":["val [] delete_at ","val [] ","val [] [] nil? ","val [] [] "]}," Ruby21Parser _reduce_356":{"type":"method","name":"_reduce_356","children":[],"call":["val [] "]}," Ruby21Parser _reduce_354":{"type":"method","name":"_reduce_354","children":[],"call":[" s ","val [] "]}," Ruby20Parser _reduce_617":{"type":"method","name":"_reduce_617","children":[],"call":[" yyerrok "]}," Ruby20Parser _reduce_359":{"type":"method","name":"_reduce_359","children":[],"call":["val [] delete_at ","val [] ","val [] [] nil? ","val [] [] "]}," Ruby20Parser _reduce_357":{"type":"method","name":"_reduce_357","children":[],"call":["val [] "]}," Ruby20Parser _reduce_355":{"type":"method","name":"_reduce_355","children":[],"call":[" s ","val [] "]}}