{" WebSocket Handshake Server parse_first_line":{"type":"method","name":"parse_first_line","children":[],"call":["resource_name split ","line_parts [] strip ","line_parts [] "," set_error ","method == ","line match "," raise "," fail ","line_parts [] strip  split ","line match  [] strip ","line match  [] ","line_parts [] strip  == "]}," WebSocket Handshake Server include_version":{"type":"method","name":"include_version","children":[],"call":[" set_error "," extend "," raise ","Handler Server04  new ","Handler Server76  new ","Handler Server75  new "," fail "]}," WebSocket Handshake Server set_version":{"type":"method","name":"set_version","children":[],"call":[" include_version ","@leftovers != ","@headers [] to_i ","@headers [] "]}," WebSocket Handshake Server should_respond?":{"type":"method","name":"should_respond?","children":[],"call":[]}," WebSocket Handshake Server <<":{"type":"method","name":"<<","children":[],"call":[" set_version "," parse_data ","@data << "]}," WebSocket Handshake Server initialize":{"type":"method","name":"initialize","children":[],"call":["args [] ! ! ","args [] ! ","args [] "]}," WebSocket Handshake Handler Server76 numbers_over_spaces":{"type":"method","name":"numbers_over_spaces","children":[],"call":[" set_error ","quotient > ","2 ** - ","2 ** ","numbers / ","numbers % != ","numbers % ","spaces == ","string scan size ","string scan ","string scan join to_i ","string scan join "," raise ","spaces zero? "," fail ","numbers /  > ","string scan join to_i  / ","string scan join to_i  % != ","string scan join to_i  % ","string scan size  == ","string scan size  zero? "]}," WebSocket Handshake Handler Server76 challenge_response":{"type":"method","name":"challenge_response","children":[],"call":["Digest MD5  digest ","(lvar :first) pack + + ","(lvar :first) pack + ","(lvar :second) pack ","(lvar :first) pack ","@leftovers strip "," numbers_over_spaces ","@headers [] ","@handshake instance_variable_get strip ","@handshake instance_variable_get ","@handshake headers [] to_s ","@handshake headers [] ","@handshake headers ","@handshake leftovers strip ","@handshake leftovers ","(lvar : numbers_over_spaces ) pack + + ","(lvar : numbers_over_spaces ) pack + ","(lvar : numbers_over_spaces ) pack "]}," WebSocket Handshake Handler Server76 finishing_line":{"type":"method","name":"finishing_line","children":[],"call":[" challenge_response "]}," WebSocket Handshake Handler Server76 handshake_keys":{"type":"method","name":"handshake_keys","children":[],"call":[" handshake_location ","@headers [] "," uri ","@handshake uri ","@handshake headers [] ","@handshake headers ","(array\n  (str \"Upgrade\")\n  (str \"WebSocket\")) + "," protocol "]}," WebSocket Handshake Handler Server76 header_line":{"type":"method","name":"header_line","children":[],"call":[]}," WebSocket Handshake Handler Server76 reserved_leftover_lines":{"type":"method","name":"reserved_leftover_lines","children":[],"call":[]}," WebSocket Handshake Handler Server76 valid?":{"type":"method","name":"valid?","children":[],"call":[" finishing_line ! ! "," finishing_line ! "," finishing_line "," finishing_line nil? ! "," finishing_line nil? "]}," WebSocket Handshake Handler Server75 handshake_keys":{"type":"method","name":"handshake_keys","children":[],"call":[" handshake_location ","@headers [] "," uri ","@handshake uri ","@handshake headers [] ","@handshake headers ","(array\n  (str \"Upgrade\")\n  (str \"WebSocket\")) + "," protocol "," headers [] "," headers "]}," WebSocket Handshake Handler Server75 header_line":{"type":"method","name":"header_line","children":[],"call":[]}," WebSocket Handshake Handler Server04 signature":{"type":"method","name":"signature","children":[],"call":["Base64  encode64 chomp ","Base64  encode64 ","Digest SHA1  digest ","@headers [] ","@handshake headers [] ","@handshake headers "," key ","(send\n  (const\n    (const nil :Digest) :SHA1) :digest\n  (lvar :string_to_sign)) pack chomp ","(send\n  (const\n    (const nil :Digest) :SHA1) :digest\n  (lvar :string_to_sign)) pack "," @headers []  "," @handshake headers []  "]}," WebSocket Handshake Handler Server04 handshake_keys":{"type":"method","name":"handshake_keys","children":[],"call":[" signature ","(array\n  (str \"Upgrade\")\n  (str \"websocket\")) + "," protocol "]}," WebSocket Handshake Handler Server04 header_line":{"type":"method","name":"header_line","children":[],"call":[]}," WebSocket Handshake Handler Server04 valid?":{"type":"method","name":"valid?","children":[],"call":[" set_error ","@headers [] "," verify_key "]}," WebSocket Handshake Handler Server handshake_location":{"type":"method","name":"handshake_location","children":[],"call":["location << "," path "," port "," host "]}," WebSocket Handshake Handler Server port":{"type":"method","name":"port","children":[],"call":["@headers [] to_s split [] ","@headers [] to_s split ","@headers [] to_s ","@headers [] "]}," WebSocket Handshake Handler Server host":{"type":"method","name":"host","children":[],"call":["@headers [] to_s split [] to_s ","@headers [] to_s split [] ","@headers [] to_s split ","@headers [] to_s ","@headers [] "]}," WebSocket Handshake Handler Client76 generate_key3":{"type":"method","name":"generate_key3","children":[],"call":["(send nil :rand\n  (int 4294967296)) pack + ","(send nil :rand\n  (int 4294967296)) pack "," rand "]}," WebSocket Handshake Handler Client76 generate_key":{"type":"method","name":"generate_key","children":[],"call":["key []= ","1 + "," rand ","key size - ","key size ","spaces times ","key size + ","NOISE_CHARS  [] ","NOISE_CHARS  size ","(send\n  (int 1) :+\n  (send nil :rand\n    (int 12))) times ","(send\n  (lvar :number) :*\n  (lvar :spaces)) to_s ","number * "," instance_variable_set ","max + ","4294967295 / "," rand times ","(send\n  (lvar :number) :*\n  (lvar :spaces)) to_s  []= ","(send\n  (lvar :number) :*\n  (lvar :spaces)) to_s  size - ","(send\n  (lvar :number) :*\n  (lvar :spaces)) to_s  size ","1 +  times "," rand  times ","(send\n  (lvar :number) :*\n  (lvar :spaces)) to_s  size + ","(send\n  (lvar : rand ) :*\n  (lvar :spaces)) to_s ","(send\n  (lvar :number) :*\n  (lvar :1 + )) to_s ","(send\n  (lvar :number) :*\n  (lvar : rand )) to_s "," rand  * ","4294967295 /  + "]}," WebSocket Handshake Handler Client76 finishing_line":{"type":"method","name":"finishing_line","children":[],"call":[" key3 "]}," WebSocket Handshake Handler Client76 challenge":{"type":"method","name":"challenge","children":[],"call":["Digest MD5  digest ","(ivar :@key1_number) pack + + "," key3 ","(ivar :@key1_number) pack + ","(ivar :@key2_number) pack ","(ivar :@key1_number) pack "," key2 "," key1 ","Digest MD5  digest strip "]}," WebSocket Handshake Handler Client76 verify_challenge":{"type":"method","name":"verify_challenge","children":[],"call":[" set_error ","@leftovers == "," challenge "," raise ","@handshake instance_variable_get == ","@handshake instance_variable_get ","@handshake leftovers == ","@handshake leftovers "," fail "]}," WebSocket Handshake Handler Client76 handshake_keys":{"type":"method","name":"handshake_keys","children":[],"call":["keys << "," key2 "," key1 "]}," WebSocket Handshake Handler Client76 reserved_leftover_lines":{"type":"method","name":"reserved_leftover_lines","children":[],"call":[]}," WebSocket Handshake Handler Client76 valid?":{"type":"method","name":"valid?","children":[],"call":[" verify_challenge "," verify_protocol "]}," WebSocket Handshake Handler Client76 key3":{"type":"method","name":"key3","children":[],"call":[" generate_key3 "]}," WebSocket Handshake Handler Client76 key2":{"type":"method","name":"key2","children":[],"call":[" generate_key "]}," WebSocket Handshake Handler Client76 key1":{"type":"method","name":"key1","children":[],"call":[" generate_key "]}," WebSocket Handshake Handler Client75 handshake_keys":{"type":"method","name":"handshake_keys","children":[],"call":["keys << ","@handshake origin ","@handshake port ","@handshake host ","@handshake protocols first ","@handshake protocols ","@handshake protocols any? ","@handshake default_port? ","@handshake @handshake host  "]}," WebSocket Handshake Handler Client04 verify_accept":{"type":"method","name":"verify_accept","children":[],"call":[" set_error ","@headers [] == "," accept ","@headers [] "," raise ","@handshake headers [] == ","@handshake headers [] ","@handshake headers "," fail "]}," WebSocket Handshake Handler Client04 accept":{"type":"method","name":"accept","children":[],"call":["Base64  encode64 strip ","Base64  encode64 ","Digest SHA1  digest "," key + "," key ","(send\n  (const\n    (const nil :Digest) :SHA1) :digest\n  (send\n    (send nil :key) :+\n    (str \"258EAFA5-E914-47DA-95CA-C5AB0DC85B11\"))) pack strip ","(send\n  (const\n    (const nil :Digest) :SHA1) :digest\n  (send\n    (send nil :key) :+\n    (str \"258EAFA5-E914-47DA-95CA-C5AB0DC85B11\"))) pack "]}," WebSocket Handshake Handler Client04 key":{"type":"method","name":"key","children":[],"call":["Base64  encode64 strip ","Base64  encode64 ","(send\n  (begin\n    (irange\n      (int 1)\n      (int 16))) :map) * "," rand chr "," rand ","(irange\n  (int 1)\n  (int 16)) map ","(send\n  (block\n    (send\n      (begin\n        (irange\n          (int 1)\n          (int 16))) :map)\n    (args)\n    (send\n      (send nil :rand\n        (int 255)) :chr)) :*\n  (str \"\")) pack strip ","(send\n  (block\n    (send\n      (begin\n        (irange\n          (int 1)\n          (int 16))) :map)\n    (args)\n    (send\n      (send nil :rand\n        (int 255)) :chr)) :*\n  (str \"\")) pack "]}," WebSocket Handshake Handler Client04 handshake_keys":{"type":"method","name":"handshake_keys","children":[],"call":["keys << "," key ","@handshake version ","@handshake origin ","@handshake port ","@handshake host ","@handshake protocols join ","@handshake protocols ","@handshake protocols any? ","@handshake default_port? ","@handshake @handshake host  "]}," WebSocket Handshake Handler Client04 valid?":{"type":"method","name":"valid?","children":[],"call":[" verify_accept "," verify_protocol "]}," WebSocket Handshake Handler Client01 handshake_keys":{"type":"method","name":"handshake_keys","children":[],"call":["keys << ","@handshake version "]}," WebSocket Handshake Handler Client header_line":{"type":"method","name":"header_line","children":[],"call":["? + ","@handshake query ","@handshake path ","@handshake @handshake path  "]}," WebSocket Handshake Handler Base finishing_line":{"type":"method","name":"finishing_line","children":[],"call":[]}," WebSocket Handshake Handler Base to_s":{"type":"method","name":"to_s","children":[],"call":["result join ","result << "," finishing_line ","key join "," handshake_keys each "," handshake_keys "," header_line "]}," WebSocket Handshake Client parse_first_line":{"type":"method","name":"parse_first_line","children":[],"call":[" set_error ","status == ","line_parts [] ","line match "," raise "," fail ","line_parts []  == ","line match  [] "]}," WebSocket Handshake Client include_version":{"type":"method","name":"include_version","children":[],"call":[" set_error "," extend "," raise ","Handler Client04  new ","Handler Client01  new ","Handler Client76  new ","Handler Client75  new ","Handler Client11  new "," fail "]}," WebSocket Handshake Client uri":{"type":"method","name":"uri","children":[],"call":["uri << "]}," WebSocket Handshake Client should_respond?":{"type":"method","name":"should_respond?","children":[],"call":[]}," WebSocket Handshake Client <<":{"type":"method","name":"<<","children":[],"call":[" parse_data ","@data << "]}," WebSocket Handshake Client initialize":{"type":"method","name":"initialize","children":[],"call":[" include_version "," set_error ","args [] ","uri query ","uri path ","uri port ","uri host ","uri scheme == ","uri scheme ","URI  parse ","@path empty? ","@path nil? "," raise "," default_port "," fail ","URI  parse  query ","URI  parse  path ","URI  parse  port ","URI  parse  host ","URI  parse  scheme == ","URI  parse  scheme ","args []  empty? ","uri path  empty? ","args []  nil? ","uri path  nil? "]}," WebSocket Handshake Base parse_data":{"type":"method","name":"parse_data","children":[],"call":["@headers []= ","h [] strip ","h [] ","h [] strip downcase ","HEADER  match ","lines each "," parse_first_line ","lines shift ","header split ","@data split ","@headers [] << ","@headers [] ","key =~ ","@headers key? ","@HEADER  match eaders []= ","HEADER  match  [] strip ","HEADER  match  [] ","HEADER  match  [] strip downcase ","HEADER  matcHEADER  match  ","lines eacHEADER  match  ","header split  each "," parse_lines shift  ","lines sHEADER  match ift ","header split  shift ","HEADER  match eader split ","@HEADER  match eaders [] << ","@HEADER  match eaders [] ","h [] strip downcase  =~ ","@HEADER  match eaders key? ","@headers h [] strip downcase ? "]}," WebSocket Handshake Base set_error":{"type":"method","name":"set_error","children":[],"call":[]}," WebSocket Handshake Base reserved_leftover_lines":{"type":"method","name":"reserved_leftover_lines","children":[],"call":[]}," WebSocket Handshake Base leftovers":{"type":"method","name":"leftovers","children":[],"call":["@leftovers split [] "," reserved_leftover_lines ","@leftovers split "," reserved_leftover_lines + ","@leftovers to_s split [] ","@leftovers to_s split ","@leftovers to_s ","(or\n  (send\n    (send\n      (send\n        (ivar :@leftovers) :to_s) :split\n      (str \"\\n\")\n      (send\n        (send nil :reserved_leftover_lines) :+\n        (int 1))) :[]\n    (send nil :reserved_leftover_lines))\n  (str \"\")) strip "]}," WebSocket Handshake Base should_respond?":{"type":"method","name":"should_respond?","children":[],"call":[" raise "," fail "]}," WebSocket Handshake Base valid?":{"type":"method","name":"valid?","children":[],"call":["@error == "," finished? ","@handler valid? ","@error nil? "]}," WebSocket Handshake Base finished?":{"type":"method","name":"finished?","children":[],"call":["@state == "]}," WebSocket Handshake Base <<":{"type":"method","name":"<<","children":[],"call":[" raise ","@data << "]}," WebSocket Handshake Base initialize":{"type":"method","name":"initialize","children":[],"call":["String  new "," instance_variable_set ","v dup ","args each "," +@ "]}," WebSocket Frame Outgoing to_s":{"type":"method","name":"to_s","children":[],"call":[" encode_frame "," set_error "," supported? ","@handler encode_frame "," raise "," fail "]}," WebSocket Frame Outgoing require_sending?":{"type":"method","name":"require_sending?","children":[],"call":[" error? ! "," error? "]}," WebSocket Frame Outgoing supported?":{"type":"method","name":"supported?","children":[],"call":[" support_type? "]}," WebSocket Frame Incoming to_s":{"type":"method","name":"to_s","children":[],"call":[]}," WebSocket Frame Incoming next":{"type":"method","name":"next","children":[],"call":[" decode_frame "," decoded? ","@handler decode_frame "]}," WebSocket Frame Incoming <<":{"type":"method","name":"<<","children":[],"call":["@data << "]}," WebSocket Frame Incoming decoded?":{"type":"method","name":"decoded?","children":[],"call":[]}," WebSocket Frame Incoming initialize":{"type":"method","name":"initialize","children":[],"call":["args [] "]}," WebSocket Frame Handler Handler75 decode_frame":{"type":"method","name":"decode_frame","children":[],"call":[" class new "," version "," class ","msg force_encoding ","msg respond_to? ","msg gsub! ","@data slice! "," set_error ","@data size > ","@data size ","@data getbyte != ","@data getbyte ","length == ","@data [] ","pointer + ","@data getbyte == ","pointer + - ","length > ","(send\n  (lvar :b) :&\n  (int 128)) == ","b & ","length * + ","length * ","@data getbyte ! "," loop ","(send\n  (lvar :frame_type) :&\n  (int 128)) == ","frame_type & ","@data size == "," WebSocket  max_frame_size ","@frame class new ","@frame version ","@frame class ","@frame data slice! ","@frame data "," raise ","@frame data size > ","@frame data size ","@frame data getbyte != ","@frame data getbyte ","@frame instance_variable_set ","@frame data [] ","@frame data getbyte == ","@frame data getbyte ! ","@frame data size == ","length zero? ","@frame data getbyte nil? ","@frame data size zero? "," fail ","@data slice!  force_encoding ","@frame data slice!  force_encoding ","@data slice!  respond_to? ","@frame data slice!  respond_to? ","@data slice!  gsub! ","@frame data slice!  gsub! ","msg gsu@data getbyte ! ","msg gsu@frame data getbyte ! ","@data []  slice! ","@data []  size > ","@data []  size ","@data []  getbyte != ","@data get@data getbyte yte != ","@data get@frame data getbyte yte != ","@data []  getbyte ","@data get@data getbyte yte ","@data get@frame data getbyte yte ","length * +  == ","@data []  [] ","@data []  getbyte == ","@data get@data getbyte yte == ","@data get@frame data getbyte yte == ","length * +  > ","(send\n  (lvar :@data getbyte ) :&\n  (int 128)) == ","(send\n  (lvar :@frame data getbyte ) :&\n  (int 128)) == ","@data getbyte  & ","@frame data getbyte  & ","length * +  * + ","length * +  * ","@data []  getbyte ! ","@data get@data getbyte yte ! ","@data get@frame data getbyte yte ! ","@data []  size == "," We@data getbyte Socket  max_frame_size "," We@frame data getbyte Socket  max_frame_size ","@frame data get@data getbyte yte != ","@frame data get@frame data getbyte yte != ","@frame data get@data getbyte yte ","@frame data get@frame data getbyte yte ","@frame instance_varia@data getbyte le_set ","@frame instance_varia@frame data getbyte le_set ","@frame data get@data getbyte yte == ","@frame data get@frame data getbyte yte == ","@frame data get@data getbyte yte ! ","@frame data get@frame data getbyte yte ! ","length * +  zero? ","@frame data get@data getbyte yte nil? ","@frame data get@frame data getbyte yte nil? "]}," WebSocket Frame Handler Handler75 encode_frame":{"type":"method","name":"encode_frame","children":[],"call":["ary join ","s encode ","s respond_to? ","ary collect ","@frame data ","@frame type "," raise ","ary map "," fail "]}," WebSocket Frame Handler Handler75 supported_frames":{"type":"method","name":"supported_frames","children":[],"call":[]}," WebSocket Frame Handler Handler07 opcode_to_type":{"type":"method","name":"opcode_to_type","children":[],"call":[" raise ","FRAME_TYPES_INVERSE  [] "," fail "]}," WebSocket Frame Handler Handler07 type_to_opcode":{"type":"method","name":"type_to_opcode","children":[],"call":[" raise ","FRAME_TYPES  [] "," fail "]}," WebSocket Frame Handler Handler05 masking?":{"type":"method","name":"masking?","children":[],"call":[]}," WebSocket Frame Handler Handler04 fin":{"type":"method","name":"fin","children":[],"call":[]}," WebSocket Frame Handler Handler03 opcode_to_type":{"type":"method","name":"opcode_to_type","children":[],"call":[" raise ","FRAME_TYPES_INVERSE  [] "," fail "]}," WebSocket Frame Handler Handler03 type_to_opcode":{"type":"method","name":"type_to_opcode","children":[],"call":[" raise ","FRAME_TYPES  [] "," fail "]}," WebSocket Frame Handler Handler03 masking?":{"type":"method","name":"masking?","children":[],"call":[]}," WebSocket Frame Handler Handler03 fin":{"type":"method","name":"fin","children":[],"call":[]}," WebSocket Frame Handler Handler03 decode_frame":{"type":"method","name":"decode_frame","children":[],"call":[" set_error ","e message to_sym ","e message "," class new "," version "," class "," raise ","application_data valid_encoding? ! ","application_data valid_encoding? ","application_data respond_to? ","frame_type == ","@application_data_buffer valid_encoding? ! ","@application_data_buffer valid_encoding? ","@application_data_buffer respond_to? ","@frame_type == ","@application_data_buffer << ","@frame_type ! ","@data slice! ","@data unset_mask ","application_data force_encoding ","@data getbytes ","@data set_mask ","@data getbyte == ","@data getbyte ","frame_length - ","frame_length > ","pointer + ","@data getbytes unpack first ","@data getbytes unpack ","pointer + - "," control_frame? ","length > ","@data getbyte & ","(send\n  (send\n    (ivar :@data) :getbyte\n    (lvar :pointer)) :&\n  (int 128)) == "," masking? ","@application_data_buffer nil? ! ","@application_data_buffer nil? "," data_frame? "," opcode_to_type ","@data getbyte & != ","(send\n  (begin\n    (send\n      (send\n        (ivar :@data) :getbyte\n        (lvar :pointer)) :&\n      (int 128))) :==\n  (int 128)) ^ "," fin ","@data size > ","@data size ","WebSocket  max_frame_size "," incoming_masking? ","@frame class new ","@frame version ","@frame class ","@frame data slice! ","@frame data ","@frame data unset_mask ","@frame data getbytes ","@frame data set_mask ","@frame data getbyte == ","@frame data getbyte ","@frame data getbytes unpack first ","@frame data getbytes unpack ","@frame data getbyte & ","(send\n  (send\n    (send\n      (ivar :@frame) :data) :getbyte\n    (lvar :pointer)) :&\n  (int 128)) == ","@frame incoming_masking? ","@frame data getbyte & != ","(send\n  (begin\n    (send\n      (send\n        (send\n          (ivar :@frame) :data) :getbyte\n        (lvar :pointer)) :&\n      (int 128))) :==\n  (int 128)) ^ ","@frame data size > ","@frame data size "," decode_finish_continuation_frame "," decode_continuation_frame "," decode_payload "," decode_header "," fail ","e  class new  to_sym ","e @frame class new  to_sym ","e  class new  ","e @frame class new  "," c@data getbytes unpack first ass new "," c@frame data getbytes unpack first ass new "," c@data getbytes unpack first ass "," c@frame data getbytes unpack first ass ","@data getbytes  valid_encoding? ! ","@frame data getbytes  valid_encoding? ! "," decode_payload  valid_encoding? ! ","app@data getbytes unpack first ication_data va@data getbytes unpack first id_encoding? ! ","app@frame data getbytes unpack first ication_data va@frame data getbytes unpack first id_encoding? ! ","@data getbytes  valid_encoding? ","@frame data getbytes  valid_encoding? "," decode_payload  valid_encoding? ","app@data getbytes unpack first ication_data va@data getbytes unpack first id_encoding? ","app@frame data getbytes unpack first ication_data va@frame data getbytes unpack first id_encoding? ","@data getbytes  respond_to? ","@frame data getbytes  respond_to? "," decode_payload  respond_to? ","app@data getbytes unpack first ication_data respond_to? ","app@frame data getbytes unpack first ication_data respond_to? "," opcode_to_type  == ","@@data getbytes _buffer valid_encoding? ! ","@@frame data getbytes _buffer valid_encoding? ! ","@ decode_payload _buffer valid_encoding? ! ","@app@data getbytes unpack first ication_data_buffer va@data getbytes unpack first id_encoding? ! ","@app@frame data getbytes unpack first ication_data_buffer va@frame data getbytes unpack first id_encoding? ! ","@@data getbytes _buffer valid_encoding? ","@@frame data getbytes _buffer valid_encoding? ","@ decode_payload _buffer valid_encoding? ","@app@data getbytes unpack first ication_data_buffer va@data getbytes unpack first id_encoding? ","@app@frame data getbytes unpack first ication_data_buffer va@frame data getbytes unpack first id_encoding? ","@@data getbytes _buffer respond_to? ","@@frame data getbytes _buffer respond_to? ","@ decode_payload _buffer respond_to? ","@app@data getbytes unpack first ication_data_buffer respond_to? ","@app@frame data getbytes unpack first ication_data_buffer respond_to? ","@ opcode_to_type  == ","@@data getbytes _buffer << ","@@frame data getbytes _buffer << ","@ decode_payload _buffer << ","@app@data getbytes unpack first ication_data_buffer << ","@app@frame data getbytes unpack first ication_data_buffer << ","@ opcode_to_type  ! ","@data s@data getbytes unpack first ice! ","@data s@frame data getbytes unpack first ice! ","@data getbytes  force_encoding ","@frame data getbytes  force_encoding "," decode_payload  force_encoding ","app@data getbytes unpack first ication_data force_encoding ","app@frame data getbytes unpack first ication_data force_encoding ","pointer +  - ","frame_@data getbytes unpack first ength - ","frame_@frame data getbytes unpack first ength - ","frame_@data getbyte &  - ","frame_@frame data getbyte &  - ","pointer +  > ","frame_@data getbytes unpack first ength > ","frame_@frame data getbytes unpack first ength > ","frame_@data getbyte &  > ","frame_@frame data getbyte &  > "," contro@data getbytes unpack first _frame? "," contro@frame data getbytes unpack first _frame? ","@data getbytes unpack first ength > ","@frame data getbytes unpack first ength > ","@data getbyte &  > ","@frame data getbyte &  > ","(send\n  (send\n    (ivar :@data) :getbyte\n    (@data getbytes unpack first var :pointer)) :&\n  (int 128)) == ","(send\n  (send\n    (ivar :@data) :getbyte\n    (@frame data getbytes unpack first var :pointer)) :&\n  (int 128)) == ","@@data getbytes _buffer nil? ! ","@@frame data getbytes _buffer nil? ! ","@ decode_payload _buffer nil? ! ","@app@data getbytes unpack first ication_data_buffer ni@data getbytes unpack first ? ! ","@app@frame data getbytes unpack first ication_data_buffer ni@frame data getbytes unpack first ? ! ","@@data getbytes _buffer nil? ","@@frame data getbytes _buffer nil? ","@ decode_payload _buffer nil? ","@app@data getbytes unpack first ication_data_buffer ni@data getbytes unpack first ? ","@app@frame data getbytes unpack first ication_data_buffer ni@frame data getbytes unpack first ? "," @data getbyte & _to_type "," @frame data getbyte & _to_type ","(send\n  (begin\n    (send\n      (send\n        (ivar :@data) :getbyte\n        (@data getbytes unpack first var :pointer)) :&\n      (int 128))) :==\n  (int 128)) ^ ","(send\n  (begin\n    (send\n      (send\n        (ivar :@data) :getbyte\n        (@frame data getbytes unpack first var :pointer)) :&\n      (int 128))) :==\n  (int 128)) ^ ","@frame c@data getbytes unpack first ass new ","@frame c@frame data getbytes unpack first ass new ","@frame c@data getbytes unpack first ass ","@frame c@frame data getbytes unpack first ass ","@frame data s@data getbytes unpack first ice! ","@frame data s@frame data getbytes unpack first ice! ","(send\n  (send\n    (send\n      (ivar :@frame) :data) :getbyte\n    (@data getbytes unpack first var :pointer)) :&\n  (int 128)) == ","(send\n  (send\n    (send\n      (ivar :@frame) :data) :getbyte\n    (@frame data getbytes unpack first var :pointer)) :&\n  (int 128)) == ","(send\n  (begin\n    (send\n      (send\n        (send\n          (ivar :@frame) :data) :getbyte\n        (@data getbytes unpack first var :pointer)) :&\n      (int 128))) :==\n  (int 128)) ^ ","(send\n  (begin\n    (send\n      (send\n        (send\n          (ivar :@frame) :data) :getbyte\n        (@frame data getbytes unpack first var :pointer)) :&\n      (int 128))) :==\n  (int 128)) ^ "," decode_pay@data getbytes unpack first oad "," decode_pay@frame data getbytes unpack first oad "," fai@data getbytes unpack first  "," fai@frame data getbytes unpack first  "]}," WebSocket Frame Handler Handler03 encode_frame":{"type":"method","name":"encode_frame","children":[],"call":[" set_error ","e message to_sym ","e message ","frame << ","(send\n  (lvar :length) :>>\n  (int 32)) pack ","length & ","length >> ","(lvar :length) pack ","length < ","length <= ","@data size ","opcode | "," fin "," type_to_opcode ","masking_key + ","tmp_data getbytes ","tmp_data size ","tmp_data set_mask ","Data  new ","(lvar :masking_key) join ","@data to_s ","(send\n  (send nil :rand\n    (int 256)) :chr) join "," rand chr "," rand "," outgoing_masking? ","127 | ","126 | ","byte2 | ","@frame data ","@frame data to_s ","@frame outgoing_masking? ","@frame data size ","@frame type "," encode_header + "," encode_header ","SecureRandom  random_bytes ","@frame data  << ","(send\n  (lvar :@data size ) :>>\n  (int 32)) pack ","(send\n  (lvar :@frame data size ) :>>\n  (int 32)) pack ","@data size  & ","@frame data size  & ","@data size  >> ","@frame data size  >> ","(lvar :@data size ) pack ","(lvar :@frame data size ) pack ","@data size  < ","@frame data size  < ","@data size  <= ","@frame data size  <= "," type_to_opcode  | "," type_to_ type_to_opcode  ","(send\n  (send nil :rand\n    (int 256)) :chr) join  + ","SecureRandom  random_bytes  + ","Data  new  getbytes ","Data  new  size ","Data  new  set_mask ","(lvar :(send\n  (send nil :rand\n    (int 256)) :chr) join ) join ","(lvar :SecureRandom  random_bytes ) join ","@@frame data  data ","@@frame data  data to_s ","@@frame data  outgoing_masking? ","@@frame data  data size ","@@frame data  type "]}," WebSocket Frame Handler Handler03 supported_frames":{"type":"method","name":"supported_frames","children":[],"call":[]}," WebSocket Frame Handler Base data_frame?":{"type":"method","name":"data_frame?","children":[],"call":["(sym :text) include? "]}," WebSocket Frame Handler Base control_frame?":{"type":"method","name":"control_frame?","children":[],"call":["(sym :text) include? ! ","(sym :text) include? "]}," WebSocket Frame Handler Base decode_frame":{"type":"method","name":"decode_frame","children":[],"call":[" raise "," fail "]}," WebSocket Frame Handler Base encode_frame":{"type":"method","name":"encode_frame","children":[],"call":[" raise "," fail "]}," WebSocket Frame Handler Base supported_frames":{"type":"method","name":"supported_frames","children":[],"call":[" raise "]}," WebSocket Frame Handler Base support_type?":{"type":"method","name":"support_type?","children":[],"call":[" supported_frames include? "," supported_frames "]}," WebSocket Frame Data getbyte_with_masking":{"type":"method","name":"getbyte_with_masking","children":[],"call":[" getbyte_without_masking ","masked_char ^ ","@masking_key getbyte ","index % "," getbyte_without_masking  ^ "]}," WebSocket Frame Data getbyte":{"type":"method","name":"getbyte","children":[],"call":[" [] "]}," WebSocket Frame Data getbytes":{"type":"method","name":"getbytes","children":[],"call":["data << "," getbyte ","start_index + ","count times ","data force_encoding ","data respond_to? "," mask pack "," mask ","data bytes to_a ","data bytes "," [] "," mask pack  << "," []  << "," mask pack  force_encoding "," []  force_encoding "," mask pack  respond_to? "," []  respond_to? "," mask pack  bytes to_a "," []  bytes to_a "," mask pack  bytes "," []  bytes "]}," WebSocket Frame Data unset_mask":{"type":"method","name":"unset_mask","children":[],"call":[]}," WebSocket Frame Data set_mask":{"type":"method","name":"set_mask","children":[],"call":["Data  new "," [] "," raise "," bytesize < "," bytesize "," [] bytes to_a "," [] bytes "," fail "]}," WebSocket Frame Data <<":{"type":"method","name":"<<","children":[],"call":["arg force_encoding "," respond_to? ","args each "," convert_args "]}," WebSocket Frame Data initialize":{"type":"method","name":"initialize","children":[],"call":["arg force_encoding "," respond_to? ","args each "," convert_args "]}," WebSocket Frame Base set_error":{"type":"method","name":"set_error","children":[],"call":[]}," WebSocket Frame Base set_handler":{"type":"method","name":"set_handler","children":[],"call":[" set_error "," extend "]}," WebSocket Frame Base error?":{"type":"method","name":"error?","children":[],"call":["@error ! ! ","@error ! ","@error nil? ! ","@error nil? "]}," WebSocket Frame Base initialize":{"type":"method","name":"initialize","children":[],"call":[" set_handler ","args [] ","Data  new ","args [] to_s "," include_version ","args [] to_sym "]}," WebSocket max_frame_size=":{"type":"method","name":"max_frame_size=","children":[],"call":[]}," WebSocket max_frame_size":{"type":"method","name":"max_frame_size","children":[],"call":[]}," WebSocket Handshake Server port":{"type":"method","name":"port","children":[],"call":["@headers [] to_s split [] ","@headers [] to_s split ","@headers [] to_s ","@headers [] ","(or\n  (or\n    (ivar :@port)\n    (send\n      (send\n        (send\n          (send\n            (ivar :@headers) :[]\n            (str \"host\")) :to_s) :split\n        (str \":\")) :[]\n      (int 1)))\n  (send nil :default_port)) to_i "," default_port "]}," WebSocket Handshake Server host":{"type":"method","name":"host","children":[],"call":["@headers [] to_s split [] to_s ","@headers [] to_s split [] ","@headers [] to_s split ","@headers [] to_s ","@headers [] "]}," WebSocket Handshake Handler Base handshake_keys":{"type":"method","name":"handshake_keys","children":[],"call":[]}," WebSocket Handshake Handler Base header_line":{"type":"method","name":"header_line","children":[],"call":[]}," WebSocket Handshake Base uri":{"type":"method","name":"uri","children":[],"call":["uri << "," query "," path "," port "," host "," secure "," default_port? ","String  new ","String  new  << "]}," WebSocket Handshake Base to_s":{"type":"method","name":"to_s","children":[],"call":["@handler to_s "]}," WebSocket Frame Base include_version":{"type":"method","name":"include_version","children":[],"call":[" set_error "," extend "," raise ","Handler Handler07  new ","Handler Handler05  new ","Handler Handler04  new ","Handler Handler03  new ","Handler Handler75  new "," fail "]}," WebSocket Frame Base supported_frames":{"type":"method","name":"supported_frames","children":[],"call":[" raise "," fail "]}," WebSocket Frame Base support_type?":{"type":"method","name":"support_type?","children":[],"call":[" supported_frames include? "," supported_frames ","@handler supported_frames include? ","@handler supported_frames "]}," WebSocket Frame Data mask":{"type":"method","name":"mask","children":[],"call":["result []= ","byte ^ ","mask [] ","i % ","payload each_with_index "," mask_native "," respond_to? "]}," WebSocket Handshake Base inspect":{"type":"method","name":"inspect","children":[],"call":["(begin\n  (send\n    (self) :class)) % "," __id__ * "," __id__ "," class ","(send\n  (send\n    (self) :instance_variables) :map) join "," instance_variable_get inspect "," instance_variable_get "," instance_variables map "," instance_variables ","Kernel  format ","(send\n  (send nil :instance_variables) :map) join "," instance_variable_get (begin\n  (send\n    (self) :class)) % ect "," instance_variable_get Kernel  format ect "]}," WebSocket Frame Base inspect":{"type":"method","name":"inspect","children":[],"call":["(begin\n  (send\n    (self) :class)) % "," __id__ * "," __id__ "," class ","(send\n  (send\n    (self) :instance_variables) :map) join "," instance_variable_get inspect "," instance_variable_get "," instance_variables map "," instance_variables ","Kernel  format ","(send\n  (send nil :instance_variables) :map) join "," instance_variable_get (begin\n  (send\n    (self) :class)) % ect "," instance_variable_get Kernel  format ect "]}," WebSocket Frame Handler Handler05 encode_frame":{"type":"method","name":"encode_frame","children":[],"call":["Data  new ","(ivar :@code) pack + ","@data to_s ","(ivar :@code) pack ","@frame data= ","@frame data to_s ","@frame data ","@frame code= ","(send\n  (ivar :@frame) :code) pack + ","(send\n  (ivar :@frame) :code) pack ","@frame code ","Data  new  to_s "]}," WebSocket Frame Outgoing Server outgoing_masking?":{"type":"method","name":"outgoing_masking?","children":[],"call":[]}," WebSocket Frame Outgoing Server incoming_masking?":{"type":"method","name":"incoming_masking?","children":[],"call":[" masking? ","@handler masking? "]}," WebSocket Frame Outgoing Client outgoing_masking?":{"type":"method","name":"outgoing_masking?","children":[],"call":[" masking? ","@handler masking? "]}," WebSocket Frame Outgoing Client incoming_masking?":{"type":"method","name":"incoming_masking?","children":[],"call":[]}," WebSocket Frame Incoming Server outgoing_masking?":{"type":"method","name":"outgoing_masking?","children":[],"call":[]}," WebSocket Frame Incoming Server incoming_masking?":{"type":"method","name":"incoming_masking?","children":[],"call":[" masking? ","@handler masking? "]}," WebSocket Frame Incoming Client outgoing_masking?":{"type":"method","name":"outgoing_masking?","children":[],"call":[" masking? ","@handler masking? "]}," WebSocket Frame Incoming Client incoming_masking?":{"type":"method","name":"incoming_masking?","children":[],"call":[]}," WebSocket should_raise=":{"type":"method","name":"should_raise=","children":[],"call":[]}," WebSocket should_raise":{"type":"method","name":"should_raise","children":[],"call":[]}," WebSocket Handshake Server from_hash":{"type":"method","name":"from_hash","children":[],"call":[" set_version ","hash [] "]}," WebSocket Handshake Server from_rack":{"type":"method","name":"from_rack","children":[],"call":[" set_version ","env [] read ","env [] ","memo []= ","key gsub gsub downcase ","key gsub gsub ","key gsub ","(send\n  (lvar :env) :select) inject ","key =~ ","env select ","input to_s ","input read ","input respond_to? ","input readpartial ","@version == ","(send\n  (lvar :env) :select) reduce ","key gsub tr downcase ","key gsub tr ","(send\n  (lvar :env) :select) each_with_object ","key to_s start_with? ","key to_s ","key start_with? ","env []  to_s ","env []  read ","env []  respond_to? ","env []  readpartial "]}," WebSocket Handshake Handler Server04 verify_key":{"type":"method","name":"verify_key","children":[],"call":[" raise ","@handshake headers [] ","@handshake headers "," key "," fail "]}," WebSocket Handshake Handler Base valid?":{"type":"method","name":"valid?","children":[],"call":[]}," WebSocket Handshake Handler Base initialize":{"type":"method","name":"initialize","children":[],"call":[]}," WebSocket Frame Handler Base initialize":{"type":"method","name":"initialize","children":[],"call":[]}," WebSocket ExceptionHandler ClassMethods rescue_method":{"type":"method","name":"rescue_method","children":[],"call":[" alias_method ","options [] "," raise ","WebSocket  should_raise "," set_error ","e message to_sym ","e message "," send "," define_method "," error= "]}," WebSocket ExceptionHandler set_error":{"type":"method","name":"set_error","children":[],"call":[]}," WebSocket ExceptionHandler included":{"type":"method","name":"included","children":[],"call":[]}," WebSocket Error Handshake UnknownVersion message":{"type":"method","name":"message","children":[],"call":[]}," WebSocket Error Handshake NoHostProvided message":{"type":"method","name":"message","children":[],"call":[]}," WebSocket Error Handshake InvalidStatusCode message":{"type":"method","name":"message","children":[],"call":[]}," WebSocket Error Handshake InvalidHeader message":{"type":"method","name":"message","children":[],"call":[]}," WebSocket Error Handshake InvalidAuthentication message":{"type":"method","name":"message","children":[],"call":[]}," WebSocket Error Handshake GetRequestRequired message":{"type":"method","name":"message","children":[],"call":[]}," WebSocket Error Frame UnknownVersion message":{"type":"method","name":"message","children":[],"call":[]}," WebSocket Error Frame UnknownOpcode message":{"type":"method","name":"message","children":[],"call":[]}," WebSocket Error Frame UnknownFrameType message":{"type":"method","name":"message","children":[],"call":[]}," WebSocket Error Frame UnexpectedContinuationFrame message":{"type":"method","name":"message","children":[],"call":[]}," WebSocket Error Frame TooLong message":{"type":"method","name":"message","children":[],"call":[]}," WebSocket Error Frame ReservedBitUsed message":{"type":"method","name":"message","children":[],"call":[]}," WebSocket Error Frame MaskTooShort message":{"type":"method","name":"message","children":[],"call":[]}," WebSocket Error Frame InvalidPayloadEncoding message":{"type":"method","name":"message","children":[],"call":[]}," WebSocket Error Frame Invalid message":{"type":"method","name":"message","children":[],"call":[]}," WebSocket Error Frame FragmentedControlFrame message":{"type":"method","name":"message","children":[],"call":[]}," WebSocket Error Frame DataFrameInsteadContinuation message":{"type":"method","name":"message","children":[],"call":[]}," WebSocket Error Frame ControlFramePayloadTooLong message":{"type":"method","name":"message","children":[],"call":[]}," WebSocket Frame Handler Handler07 has_close_code?":{"type":"method","name":"has_close_code?","children":[],"call":["frame data empty? ! ","frame data empty? ","frame data ","frame type == ","frame type "]}," WebSocket Frame Handler Handler07 decode_frame":{"type":"method","name":"decode_frame","children":[],"call":["result code= ","code unpack first ","code unpack ","result data slice! ","result data "," has_close_code? "," raise "," valid_encoding? "," valid_code? ","result code "," close_code? "," fail ","result result data slice! = ","result data slice!  unpack first ","result data slice!  unpack "," has_close_result data slice! ? "," valid_result data slice! ? ","result result data slice!  "," close_result data slice! ? "]}," WebSocket Frame Handler Handler07 encode_frame":{"type":"method","name":"encode_frame","children":[],"call":["@frame code= ","@frame data= ","Data  new ","(lvar :code) pack + ","@frame data to_s ","@frame data ","(lvar :code) pack ","@frame code ","@frame type == ","@frame type "," raise "," valid_code? "," fail "]}," WebSocket Frame Handler Handler07 valid_encoding?":{"type":"method","name":"valid_encoding?","children":[],"call":["data encode ","data respond_to? ! ","data respond_to? ","data nil? "]}," WebSocket Frame Handler Handler07 valid_code?":{"type":"method","name":"valid_code?","children":[],"call":["(irange\n  (int 3000)\n  (int 4999)) include? ","(int 1000) include? ","(irange\n  (int 3000)\n  (int 4999)) cover? "]}," WebSocket Error Frame UnknownCloseCode message":{"type":"method","name":"message","children":[],"call":[]}," WebSocket Handshake Handler Server04 key":{"type":"method","name":"key","children":[],"call":["@handshake headers [] ","@handshake headers "]}," WebSocket Handshake Handler Client handshake_keys":{"type":"method","name":"handshake_keys","children":[],"call":[" + ","@handshake headers to_a ","@handshake headers "]}," WebSocket Frame Data convert_args":{"type":"method","name":"convert_args","children":[],"call":["arg force_encoding ","args each ","arg dup force_encoding ","arg dup ","args collect "]}," WebSocket NiceInspect inspect":{"type":"method","name":"inspect","children":[],"call":["Kernel  format "," __id__ "," class ","(send\n  (send nil :instance_variables) :map) join "," instance_variable_get inspect "," instance_variable_get "," instance_variables map "," instance_variables "," instance_variable_get Kernel  format ect "]}," WebSocket Handshake Handler Server76 headers":{"type":"method","name":"headers","children":[],"call":["(pair\n  (sym :origin)\n  (str \"Sec-WebSocket-Origin\")) freeze "]}," WebSocket Handshake Handler Server75 protocol":{"type":"method","name":"protocol","children":[],"call":["@handshake protocols include? ","@handshake protocols "," headers [] "," headers ","@handshake headers [] "," headers [] downcase ","@handshake headers ","@handshake headers key? ","@handshake @handshake headers [] cols include? ","@handshake @handshake headers [] cols "]}," WebSocket Handshake Handler Server75 headers":{"type":"method","name":"headers","children":[],"call":["(pair\n  (sym :origin)\n  (str \"WebSocket-Origin\")) freeze "]}," WebSocket Handshake Handler Server04 protocol":{"type":"method","name":"protocol","children":[],"call":["protos first ","@handshake headers [] split & ","@handshake protocols ","@handshake headers [] split ","@handshake headers [] ","@handshake headers ","@handshake headers key? ","@handshake headers [] split &  first "]}," WebSocket Handshake Handler Client76 provided_protocols":{"type":"method","name":"provided_protocols","children":[],"call":[" Array ","@handshake headers [] to_s strip ","@handshake headers [] to_s ","@handshake headers [] ","@handshake headers "]}," WebSocket Handshake Handler Client75 provided_protocols":{"type":"method","name":"provided_protocols","children":[],"call":[" Array ","@handshake headers [] to_s strip ","@handshake headers [] to_s ","@handshake headers [] ","@handshake headers "]}," WebSocket Handshake Handler Client75 supported_protocols":{"type":"method","name":"supported_protocols","children":[],"call":[" Array ","@handshake protocols first ","@handshake protocols "]}," WebSocket Handshake Handler Client75 valid?":{"type":"method","name":"valid?","children":[],"call":[" verify_protocol "]}," WebSocket Handshake Handler Client11 handshake_keys":{"type":"method","name":"handshake_keys","children":[],"call":["key_pair [] ","key_pair [] == "," collect "]}," WebSocket Handshake Handler Client04 provided_protocols":{"type":"method","name":"provided_protocols","children":[],"call":["@handshake headers [] to_s split ","@handshake headers [] to_s ","@handshake headers [] ","@handshake headers "]}," WebSocket Handshake Handler Client04 supported_protocols":{"type":"method","name":"supported_protocols","children":[],"call":["@handshake protocols "]}," WebSocket Handshake Handler Client verify_protocol":{"type":"method","name":"verify_protocol","children":[],"call":[" raise ","protos empty? "," provided_protocols & "," supported_protocols "," provided_protocols "," supported_protocols empty? "," provided_protocols &  empty? "]}," WebSocket Handshake Base error=":{"type":"method","name":"error=","children":[],"call":[]}," WebSocket Handshake Base port":{"type":"method","name":"port","children":[],"call":[" default_port "]}," WebSocket Handshake Base default_port?":{"type":"method","name":"default_port?","children":[],"call":[" port == "," default_port "," port "]}," WebSocket Handshake Base default_port":{"type":"method","name":"default_port","children":[],"call":[" secure "]}," WebSocket Frame Handler Handler07 close_code?":{"type":"method","name":"close_code?","children":[],"call":["frame data empty? ! ","frame data empty? ","frame data ","frame type == ","frame type "]}," WebSocket Frame Handler Handler03 decode_finish_continuation_frame":{"type":"method","name":"decode_finish_continuation_frame","children":[],"call":["@frame class new ","@frame version ","@frame class "," raise ","@application_data_buffer valid_encoding? ! ","@application_data_buffer valid_encoding? ","@frame_type == ","@application_data_buffer << "," fail "]}," WebSocket Frame Handler Handler03 decode_continuation_frame":{"type":"method","name":"decode_continuation_frame","children":[],"call":["@application_data_buffer << ","String  new "," +@ "]}," WebSocket Frame Handler Handler03 decode_payload":{"type":"method","name":"decode_payload","children":[],"call":["@frame data slice! ","@frame data ","@frame data unset_mask ","payload force_encoding ","@frame data getbytes ","@frame data set_mask ","@frame data getbytes  force_encoding "]}," WebSocket Frame Handler Handler03 decode_payload_length":{"type":"method","name":"decode_payload_length","children":[],"call":["@frame data getbytes unpack first ","@frame data getbytes unpack ","@frame data getbytes ","@frame data "," buffer_exists? "]}," WebSocket Frame Handler Handler03 decode_second_byte":{"type":"method","name":"decode_second_byte","children":[],"call":[" decode_payload_length "," raise "," control_frame? ","length > ","second_byte & ","(send\n  (lvar :second_byte) :&\n  (int 128)) == ","@frame incoming_masking? ","@frame data getbyte ","@frame data "," fail "," decode_payload_second_byte &  ","second_byte &  > ","@frame data getbyte  & ","(send\n  (lvar :@frame data getbyte ) :&\n  (int 128)) == "]}," WebSocket Frame Handler Handler03 decode_first_byte":{"type":"method","name":"decode_first_byte","children":[],"call":[" raise ","@application_data_buffer nil? ! ","@application_data_buffer nil? "," data_frame? "," control_frame? "," opcode_to_type ","first_byte & ","(send\n  (begin\n    (send\n      (lvar :first_byte) :&\n      (int 128))) :==\n  (int 128)) ^ "," fin ","(send\n  (lvar :first_byte) :&\n  (int 128)) == ","first_byte & != ","@frame data getbyte ","@frame data "," fail ","@frame data getbyte  & ","(send\n  (begin\n    (send\n      (lvar :@frame data getbyte ) :&\n      (int 128))) :==\n  (int 128)) ^ ","(send\n  (lvar :@frame data getbyte ) :&\n  (int 128)) == ","@frame data getbyte  & != "]}," WebSocket Frame Handler Handler03 buffer_exists?":{"type":"method","name":"buffer_exists?","children":[],"call":["@frame data getbyte nil? ! ","@frame data getbyte nil? ","@frame data getbyte ","buffer_number - ","@frame data "]}," WebSocket Frame Handler Handler03 decode_header":{"type":"method","name":"decode_header","children":[],"call":["@frame data slice! ","@frame data "," buffer_exists? "," raise ","frame_length > ","WebSocket  max_frame_size ","header_length + "," decode_second_byte "," decode_first_byte "," fail ","header_length +  > "]}," WebSocket Frame Handler Handler03 encode_payload_length":{"type":"method","name":"encode_payload_length","children":[],"call":["output << ","(send\n  (lvar :length) :>>\n  (int 32)) pack ","length & ","length >> ","127 | ","(lvar :length) pack ","126 | ","length < ","length | ","length <= ","String  new "," +@ ","String  new  << "," +@  << "]}," WebSocket Frame Handler Handler03 encode_header":{"type":"method","name":"encode_header","children":[],"call":["output << "," encode_payload_length ","@frame data size ","@frame data "," type_to_opcode | "," fin "," type_to_opcode ","@frame type ","String  new ","@frame outgoing_masking? "," +@ ","String  new  << "," +@  << "]}," WebSocket Frame Handler Handler03 initialize":{"type":"method","name":"initialize","children":[],"call":[]}," WebSocket Error Handshake UnsupportedProtocol message":{"type":"method","name":"message","children":[],"call":[]}," WebSocket Handshake Handler Server76 protocol":{"type":"method","name":"protocol","children":[],"call":["@handshake protocols include? ","@handshake protocols ","@handshake headers [] ","@handshake headers ","@handshake headers key? ","@handshake @handshake headers [] cols include? ","@handshake @handshake headers [] cols "]}," WebSocket Handshake Handler Client76 verify_protocol":{"type":"method","name":"verify_protocol","children":[],"call":[" raise ","@handshake headers [] strip != ","@handshake protocols first ","@handshake protocols ","@handshake headers [] strip ","@handshake headers [] ","@handshake headers ","@handshake protocols empty? "]}," WebSocket Handshake Handler Client75 verify_protocol":{"type":"method","name":"verify_protocol","children":[],"call":[" raise ","@handshake headers [] strip != ","@handshake protocols first ","@handshake protocols ","@handshake headers [] strip ","@handshake headers [] ","@handshake headers ","@handshake protocols empty? "]}," WebSocket Handshake Handler Client04 verify_protocol":{"type":"method","name":"verify_protocol","children":[],"call":[" raise ","protos empty? ","@handshake headers [] split & ","@handshake protocols ","@handshake headers [] split ","@handshake headers [] ","@handshake headers ","@handshake protocols empty? ","@handshake headers [] split &  empty? "]}}