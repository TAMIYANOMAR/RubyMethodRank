{" SlackRubyBot config":{"type":"method","name":"config","children":[],"call":[]}," SlackRubyBot configure":{"type":"method","name":"configure","children":[],"call":[" block_given? "]}," parse":{"type":"method","name":"parse","children":[],"call":["actual [] ","actual is_a? ","attachments is_a? ","attachments nil? ","actual []  is_a? ","actual []  nil? "]}," SlackRubyBot Hooks Message command_to_class":{"type":"method","name":"command_to_class","children":[],"call":["d name ends_with? ","command titleize ","d name "," command_classes detect "," command_classes ","d responds_to_command? "," built_in_command_classes detect "," built_in_command_classes "," child_command_classes detect "," child_command_classes "]}," SlackRubyBot Hooks Message command_classes":{"type":"method","name":"command_classes","children":[],"call":["k name starts_with? ","k name ","klasses reject! ","SlackRubyBot Commands Base  descendants ","SlackRubyBot Commands Base  command_classes ","SlackRubyBot Commands Base  descendants  reject! "]}," SlackRubyBot Hooks Message parse_command":{"type":"method","name":"parse_command","children":[],"call":["parts [] ","parts length ","parts [] try ","parts first downcase ","parts first ","parts any? ","parts insert ","parts []= ","SlackRubyBot  config user ","SlackRubyBot  config ","parts [] == ","text split reject ","text split ","=  + ","text [] ","text length ","text [] == ","SlackRubyBot  config user == ","text split reject  [] ","text split reject  length ","text split reject  [] try ","text split reject  first downcase ","text split reject  first ","text split reject  any? ","text split reject  insert ","text split reject  []= ","text split reject  [] == ","=  +  split reject ","=  +  split ","=  +  [] ","=  +  length ","=  +  [] == "]}," SlackRubyBot Hooks Message message":{"type":"method","name":"message","children":[],"call":["klass call "," command_to_class ","bot_name == ","SlackRubyBot  config user ","SlackRubyBot  config "," parse_command ","data text ","Hashie Mash  new "," text_to_class ","d invoke ","SlackRubyBot Commands Unknown  tap "," built_in_command_classes detect "," built_in_command_classes "," child_command_classes detect "," child_command_classes ","data text strip! ","client self [] == ","data user ","client self [] ","client self ","SlackRubyBot Config  allow_message_loops ! ","SlackRubyBot Config  allow_message_loops ","SlackRubyBot Config  allow_message_loops? ! ","SlackRubyBot Config  allow_message_loops? "," message_to_self? "," message_to_self_not_allowed? "," command_to_class  call ","Hashie Mash  new  text ","Hashie Mash  new  text strip! ","Hashie Mash  new  user "]}," SlackRubyBot Hooks Hello hello":{"type":"method","name":"hello","children":[],"call":[" logger info ","SlackRubyBot  config url ","SlackRubyBot  config "," logger ","client url ","client team domain ","client team "]}," SlackRubyBot Hooks Base included":{"type":"method","name":"included","children":[],"call":["caller hooks << "," name demodulize underscore to_sym "," name demodulize underscore "," name demodulize "," name ","caller hooks "]}," SlackRubyBot Commands Unknown call":{"type":"method","name":"call","children":[],"call":[]}," SlackRubyBot Commands Hi call":{"type":"method","name":"call","children":[],"call":[]}," SlackRubyBot Commands Help call":{"type":"method","name":"call","children":[],"call":[]}," SlackRubyBot Commands Base logger":{"type":"method","name":"logger","children":[],"call":[]}," SlackRubyBot Commands Base send_message_with_gif":{"type":"method","name":"send_message_with_gif","children":[],"call":["client say ","options merge "," logger warn "," logger "]}," SlackRubyBot Commands Base send_message":{"type":"method","name":"send_message","children":[],"call":["client say ","options merge ","text length empty? ! ","text length empty? ","text length "," logger warn "," logger ","text length > "]}," SlackRubyBot Commands Default call":{"type":"method","name":"call","children":[],"call":[]}," SlackRubyBot App auth!":{"type":"method","name":"auth!","children":[],"call":[" logger info ","SlackRubyBot  config url ","SlackRubyBot  config ","SlackRubyBot  config team ","SlackRubyBot  config user "," logger ","config user_id= ","auth [] ","config team_id= ","config user= ","config team= ","config url= ","SlackRubyBot  configure ","Slack  auth_test "," client web_client auth_test "," client web_client "," client "," client auth [] "," client auth ","Slack  auth_test  [] "," client web_client auth_test  [] ","Slack  Slack  auth_test _test ","Slack   client web_client auth_test _test "," client web_client Slack  auth_test _test "," client web_client  client web_client auth_test _test "," client Slack  auth_test  [] "," client  client web_client auth_test  [] "," client Slack  auth_test  "," client  client web_client auth_test  "]}," SlackRubyBot App client":{"type":"method","name":"client","children":[],"call":["Slack  chat_postMessage ","e message ","data [] ","data key? "," logger error "," logger "," send ","client on "," hooks each "," hooks ","Slack  realtime ","client message ","Slack RealTime Client  new ","Slack  realtime  on ","Slack RealTime Client  new  on ","Slack  realtime  message ","Slack RealTime Client  new  message "]}," SlackRubyBot App start!":{"type":"method","name":"start!","children":[],"call":[" client start "," client "," loop "," client start! "," raise "," logger error "," logger "," sleep ","e message "]}," SlackRubyBot App logger":{"type":"method","name":"logger","children":[],"call":["Logger  new ","$stdout sync= "]}," SlackRubyBot App stop!":{"type":"method","name":"stop!","children":[],"call":[" client stop "," client "]}," SlackRubyBot App run":{"type":"method","name":"run","children":[],"call":[" start! "," auth! "]}," SlackRubyBot App instance":{"type":"method","name":"instance","children":[],"call":[]}," SlackRubyBot App config":{"type":"method","name":"config","children":[],"call":["SlackRubyBot  config "]}," SlackRubyBot App initialize":{"type":"method","name":"initialize","children":[],"call":["config token= ","SlackRubyBot  config token ","SlackRubyBot  config ","Slack  configure "," fail ","ENV  [] ","SlackRubyBot  configure ","config aliases= ","ENV  [] split "," raise "]}," Slack Request request":{"type":"method","name":"request","children":[],"call":[" fail ","response [] ","response is_a? "," _request "," _request  [] "," _request  is_a? "]}," SlackRubyBot Loggable InstanceMethods logger":{"type":"method","name":"logger","children":[],"call":[" class logger "," class "]}," SlackRubyBot Loggable ClassMethods logger":{"type":"method","name":"logger","children":[],"call":["Logger  new ","$stdout sync= ","SlackRubyBot Config  logger "]}," SlackRubyBot Loggable included":{"type":"method","name":"included","children":[],"call":[]}," SlackRubyBot CommandsHelper other_commands_help_attrs":{"type":"method","name":"other_commands_help_attrs","children":[],"call":["k klass ancestors include? ! ","k klass ancestors include? ","k klass ancestors ","k klass "," commands_help_attrs select "," commands_help_attrs ","k class_name constantize superclass == ","k class_name constantize superclass ","k class_name constantize ","k class_name "]}," SlackRubyBot CommandsHelper bot_help_attrs":{"type":"method","name":"bot_help_attrs","children":[],"call":["k klass ancestors include? ","k klass ancestors ","k klass "," commands_help_attrs select "," commands_help_attrs ","k class_name constantize superclass == ","k class_name constantize superclass ","k class_name constantize ","k class_name "]}," SlackRubyBot CommandsHelper help_attrs_with_present_names":{"type":"method","name":"help_attrs_with_present_names","children":[],"call":["k command_name present? ","k command_name ","help_attrs select "]}," SlackRubyBot CommandsHelper command_name_and_desc":{"type":"method","name":"command_name_and_desc","children":[],"call":["help_attrs command_name ","help_attrs command_desc ","help_attrs command_desc present? "]}," SlackRubyBot CommandsHelper collect_name_and_desc":{"type":"method","name":"collect_name_and_desc","children":[],"call":[" command_name_and_desc "," collect_help_attrs "]}," SlackRubyBot CommandsHelper collect_help_attrs":{"type":"method","name":"collect_help_attrs","children":[],"call":[" help_attrs_with_present_names map "," help_attrs_with_present_names "]}," SlackRubyBot CommandsHelper find_command_help_attrs":{"type":"method","name":"find_command_help_attrs","children":[],"call":["c command_name == ","c command_name ","k commands each ","k commands "," commands_help_attrs each "," commands_help_attrs ","k command_name == ","k command_name "," commands_help_attrs find "]}," SlackRubyBot CommandsHelper command_full_desc":{"type":"method","name":"command_full_desc","children":[],"call":["help_attrs command_long_desc "," command_name_and_desc ","help_attrs command_long_desc blank? "," find_command_help_attrs ","Slack Messages Formatting  unescape "," find_command_help_attrs  command_long_desc "," find_command_help_attrs  command_long_desc blank? "," find_command_ find_command_help_attrs  "]}," SlackRubyBot CommandsHelper other_commands_descs":{"type":"method","name":"other_commands_descs","children":[],"call":[" collect_name_and_desc "," other_commands_help_attrs "]}," SlackRubyBot CommandsHelper bot_desc_and_commands":{"type":"method","name":"bot_desc_and_commands","children":[],"call":["bot_commands_descs join "," command_name_and_desc "," collect_name_and_desc ","help_attrs commands "," collect_help_attrs "," bot_help_attrs "," collect_name_and_desc  join "]}," SlackRubyBot CommandsHelper capture_help":{"type":"method","name":"capture_help","children":[],"call":["@commands_help_attrs << ","k instance_eval ","Commands Help Attrs  new ","Commands Help Attrs  new  instance_eval "]}," SlackRubyBot CommandsHelper initialize":{"type":"method","name":"initialize","children":[],"call":[]}," SlackRubyBot Server client":{"type":"method","name":"client","children":[],"call":[" hooks client= "," hooks "," restart! ","client on ","SlackRubyBot Client  new "," token "," send_gifs "," aliases "," _hooks client= "," _hooks ","client message ","e message ","data [] ","data key? "," logger error "," logger "," send "," hooks each "," hooks SlackRubyBot Client  new = ","SlackRubyBot Client  new  on "," _hooks SlackRubyBot Client  new = ","SlackRubyBot Client  new  message "]}," SlackRubyBot Server handle_signals":{"type":"method","name":"handle_signals","children":[],"call":[" exit "," stop! ","Signal  trap ","TRAPPED_SIGNALS  each "]}," SlackRubyBot Server handle_exceptions":{"type":"method","name":"handle_exceptions","children":[],"call":[" raise "," logger error "," logger "," sleep ","e message ","e backtrace join ","e backtrace "]}," SlackRubyBot Server restart!":{"type":"method","name":"restart!","children":[],"call":[" restart! ","(send\n  (lvar :wait) :*\n  (int 2)) min ","wait * "," logger debug "," logger "," logger error ","e message "," sleep "," token "," start! "," start_async "]}," SlackRubyBot Server stop!":{"type":"method","name":"stop!","children":[],"call":[" client stop! "," client "]}," SlackRubyBot Server start_async":{"type":"method","name":"start_async","children":[],"call":[" client start_async "," client "]}," SlackRubyBot Server start!":{"type":"method","name":"start!","children":[],"call":[" client start! "," client "]}," SlackRubyBot Server run":{"type":"method","name":"run","children":[],"call":[" start! "," handle_signals "," handle_exceptions "," loop "," raise "," logger error "," logger "," sleep ","e message "," auth! "," handle_execeptions "]}," SlackRubyBot Server initialize":{"type":"method","name":"initialize","children":[],"call":[" add_hook_handlers ","SlackRubyBot Hooks Message  new ","SlackRubyBot Hooks Hello  new "," logger ","options [] "," flush_hook_blocks ","options [] ! ! ","options [] ! ","options key? "]}," SlackRubyBot Hooks Set flush_handlers":{"type":"method","name":"flush_handlers","children":[],"call":[" register_callback "," handlers keys each "," handlers keys "," handlers "," handlers each_key "]}," SlackRubyBot Hooks Set register_callback":{"type":"method","name":"register_callback","children":[],"call":["handler call "," client "," handlers [] each "," handlers [] "," handlers "," client on "]}," SlackRubyBot Hooks Set client=":{"type":"method","name":"client=","children":[],"call":[" flush_handlers "]}," SlackRubyBot Hooks Set add":{"type":"method","name":"add","children":[],"call":[" register_callback "," handlers []= "," handlers "," handlers [] << "," handlers [] "," handlers [] present? "," Set  new "]}," SlackRubyBot Hooks Set initialize":{"type":"method","name":"initialize","children":[],"call":["client blank? "," client= "," handlers= "]}," SlackRubyBot Hooks Message built_in_command_classes":{"type":"method","name":"built_in_command_classes","children":[],"call":["k != ","k name starts_with? ","k name "," command_classes select "," command_classes "]}," SlackRubyBot Hooks Message child_command_classes":{"type":"method","name":"child_command_classes","children":[],"call":["k name starts_with? ","k name "," command_classes reject "," command_classes "]}," SlackRubyBot Hooks Message message_to_self?":{"type":"method","name":"message_to_self?","children":[],"call":["client self id == ","data user ","client self id ","client self ","client self [] == ","client self [] "]}," SlackRubyBot Hooks Message message_to_self_not_allowed?":{"type":"method","name":"message_to_self_not_allowed?","children":[],"call":["SlackRubyBot Config  allow_message_loops? ! ","SlackRubyBot Config  allow_message_loops? "]}," SlackRubyBot Hooks Message call":{"type":"method","name":"call","children":[],"call":["d invoke ","SlackRubyBot Commands Unknown  tap "," built_in_command_classes detect "," built_in_command_classes "," child_command_classes detect "," child_command_classes ","data text strip! ","data text "," message_to_self? "," message_to_self_not_allowed? ","data text= ","data text strip "," bot_message? "," bot_message_not_allowed? "," prepare! ","client bot_message? ","client allow_bot_messages? ! ","client allow_bot_messages? ","client message_to_self? ","client allow_message_loops? ! ","client allow_message_loops? "]}," SlackRubyBot Hooks HookSupport add_hook_handlers":{"type":"method","name":"add_hook_handlers","children":[],"call":[" hooks add "," hooks "," Array each "," Array ","handler_hash each "," on "]}," SlackRubyBot Hooks HookSupport flush_hook_blocks":{"type":"method","name":"flush_hook_blocks","children":[],"call":[" add_hook_handlers "," class hook_blocks "," class "]}," SlackRubyBot Hooks HookSupport hooks":{"type":"method","name":"hooks","children":[],"call":["SlackRubyBot Hooks Set  new "," _hooks "," warn ","Kernel  caller first + ","Kernel  caller first ","Kernel  caller "]}," SlackRubyBot Hooks HookSupport ClassMethods on":{"type":"method","name":"on","children":[],"call":[" hook_blocks [] << "," hook_blocks [] "," hook_blocks "]}," SlackRubyBot Hooks HookSupport included":{"type":"method","name":"included","children":[],"call":[]}," SlackRubyBot Hooks Hello call":{"type":"method","name":"call","children":[],"call":[" logger info ","client team domain ","client team ","client team id ","client team name "," logger "," connected_at= ","(str \"Successfully\") compact join + ","(str \"Successfully\") compact join ","(str \"Successfully\") compact "," last_connection_till "," connected_at ","Process  clock_gettime "," (str \"Successfully\") compact join + ger info "," (str \"Successfully\") compact join + ger "]}," SlackRubyBot Hooks Hello initialize":{"type":"method","name":"initialize","children":[],"call":[" logger= "]}," SlackRubyBot Config boolean_from_env":{"type":"method","name":"boolean_from_env","children":[],"call":[" raise ","ENV  [] "," fail "]}," SlackRubyBot Config reset!":{"type":"method","name":"reset!","children":[],"call":[" send ","ATTRS  each "]}," SlackRubyBot Config send_gifs?":{"type":"method","name":"send_gifs?","children":[],"call":[" send_gifs ","v nil? "," send_gifs nil? "," boolean_from_env "," boolean_from_env  nil? "," boolean_from_en boolean_from_env  "]}," SlackRubyBot Config allow_message_loops?":{"type":"method","name":"allow_message_loops?","children":[],"call":[" allow_message_loops "," allow_message_loops ! ! "," allow_message_loops ! "]}," SlackRubyBot Commands HelpCommand general_text":{"type":"method","name":"general_text","children":[],"call":["other_commands_descs join ","bot_desc join ","CommandsHelper  instance other_commands_descs ","CommandsHelper  instance ","CommandsHelper  instance bot_desc_and_commands ","CommandsHelper  instance other_commands_descs  join ","CommandsHelper  instance bot_desc_and_commands  join ","CommandsHelper  instance CommandsHelper  instance other_commands_descs  ","CommandsHelper  instance CommandsHelper  instance bot_desc_and_commands _and_commands "]}," SlackRubyBot Commands Help Attrs command":{"type":"method","name":"command","children":[],"call":["@commands << ","k instance_eval ","k title "," class new tap "," class new "," klass "," class "," class_name "]}," SlackRubyBot Commands Help Attrs long_desc":{"type":"method","name":"long_desc","children":[],"call":[" command_long_desc= "]}," SlackRubyBot Commands Help Attrs desc":{"type":"method","name":"desc","children":[],"call":[" command_desc= "]}," SlackRubyBot Commands Help Attrs title":{"type":"method","name":"title","children":[],"call":[" command_name= "]}," SlackRubyBot Commands Help Attrs initialize":{"type":"method","name":"initialize","children":[],"call":[]}," SlackRubyBot Commands Base finalize_routes!":{"type":"method","name":"finalize_routes!","children":[],"call":[" command "," default_command_name "," routes any? "," routes "," command_name_from_class "]}," SlackRubyBot Commands Base bot_mentioned_in_message?":{"type":"method","name":"bot_mentioned_in_message?","children":[],"call":["text downcase match ! ! ","text downcase match ! ","text downcase match ","text downcase ","bot_names join ","bot_names join  join "]}," SlackRubyBot Commands Base message_from_another_user?":{"type":"method","name":"message_from_another_user?","children":[],"call":["data user != ","SlackRubyBot  config user_id ","SlackRubyBot  config ","data user "]}," SlackRubyBot Commands Base direct_message?":{"type":"method","name":"direct_message?","children":[],"call":["data channel [] == ","data channel [] ","data channel "]}," SlackRubyBot Commands Base parse":{"type":"method","name":"parse","children":[],"call":["client name "," bot_mentioned_in_message? ","client names "," message_from_another_user? "," direct_message? ","data text "," message_begins_with_bot_mention? ","data data text  "]}," SlackRubyBot Commands Base scan":{"type":"method","name":"scan","children":[],"call":[" routes []= "," routes ","ActiveSupport OrderedHash  new "]}," SlackRubyBot Commands Base match":{"type":"method","name":"match","children":[],"call":[" routes []= "," routes ","ActiveSupport OrderedHash  new "]}," SlackRubyBot Commands Base invoke":{"type":"method","name":"invoke","children":[],"call":[" raise ","data text "," send "," respond_to? ","call call ","options [] ","match any? ","expression scan ","client name? ! ","client name? ","match [] ","match names include? ","match names ","route match "," routes each_pair "," routes "," parse "," finalize_routes! "," permitted? "," call_command ","Support Match  new "," match_attachments ","data attachments empty? ! ","data attachments empty? ","data attachments "," fail ","method call ","options []  options []  ","expression scan  any? ","route match  any? ","Support Match  new  any? ","expression scan  [] ","route match  [] ","Support Match  new  [] ","expression scan  names include? ","route match  names include? ","Support Match  new  names include? ","expression scan  names ","route match  names ","Support Match  new  names ","route expression scan  ","route route match  ","route Support Match  new  "," options [] _command "," expression scan _attachments "," route match _attachments "," Support Match  new _attachments ","method options []  "]}," SlackRubyBot Commands Base command":{"type":"method","name":"command","children":[],"call":[" match ","Regexp  new ","(send\n  (lvar :values) :map) join ","Regexp  escape ","values map "," bot_matcher ","value source ","value is_a? ","Regexp IGNORECASE  | ","values each ","(send\n  (lvar :(send\n  (lvar :values) :map) join ) :map) join ","(send\n  (lvar :values) :map) join  map ","(send\n  (lvar :values) :map) join  each "]}," SlackRubyBot Commands Base operator":{"type":"method","name":"operator","children":[],"call":[" match ","Regexp  new ","(send\n  (lvar :values) :map) join ","Regexp  escape ","values map ","values each ","(send\n  (lvar :(send\n  (lvar :values) :map) join ) :map) join ","(send\n  (lvar :values) :map) join  map ","(send\n  (lvar :values) :map) join  each "]}," SlackRubyBot Commands Base default_command_name":{"type":"method","name":"default_command_name","children":[],"call":[" name split last downcase "," name split last "," name split "," name "," object_id to_s "," object_id "]}," SlackRubyBot Commands Base help":{"type":"method","name":"help","children":[],"call":["CommandsHelper  instance capture_help ","CommandsHelper  instance ","Support Help  instance capture_help ","Support Help  instance "," name "]}," SlackRubyBot Commands Base send_gif":{"type":"method","name":"send_gif","children":[],"call":["client say ","options merge "," logger warn "," logger "]}," SlackRubyBot Commands Base inherited":{"type":"method","name":"inherited","children":[],"call":["@command_classes << ","SlackRubyBot Commands Base  command_classes << ","SlackRubyBot Commands Base  command_classes "]}," SlackRubyBot Client say":{"type":"method","name":"say","children":[],"call":[" message ","(pair\n  (sym :text)\n  (lvar :text)) merge ","(lvar :text) compact join ","(lvar :text) compact ","gif image_url to_s ","gif image_url "," logger warn ","e message "," logger ","Giphy  random "," send_gifs? ","options delete ","options dup ","(pair\n  (sym :text)\n  (str \"\")) merge ","options key? ","SlackRubyBot Config  send_gifs? ","(pair\n  (sym :(lvar :text) compact join )\n  (lvar :(lvar :text) compact join )) merge ","(pair\n  (sym :options delete )\n  (lvar :options delete )) merge ","(lvar :(lvar :text) compact join ) compact join ","(lvar :options delete ) compact join ","(lvar :(lvar :text) compact join ) compact ","(lvar :options delete ) compact ","options dup  delete ","options dup  dup ","(pair\n  (sym :(lvar :text) compact join )\n  (str \"\")) merge ","(pair\n  (sym :options delete )\n  (str \"\")) merge ","options dup  key? "]}," SlackRubyBot Client url":{"type":"method","name":"url","children":[],"call":["SlackRubyBot  config url ","SlackRubyBot  config "," auth [] "," auth "]}," SlackRubyBot Client name":{"type":"method","name":"name","children":[],"call":[" self name "," self ","SlackRubyBot  config user ","SlackRubyBot  config "," auth [] "," auth "]}," SlackRubyBot Client send_gifs?":{"type":"method","name":"send_gifs?","children":[],"call":[" send_gifs ","SlackRubyBot Config  send_gifs? "," send_gifs nil? "]}," SlackRubyBot Client name?":{"type":"method","name":"name?","children":[],"call":[" names include? ","name downcase "," names "]}," SlackRubyBot Client names":{"type":"method","name":"names","children":[],"call":["(send\n  (const\n    (const nil :SlackRubyBot) :Config) :user) compact flatten ","(send\n  (const\n    (const nil :SlackRubyBot) :Config) :user) compact ","SlackRubyBot Config  user "," self name downcase "," self name "," self ","SlackRubyBot Config  user_id downcase ","SlackRubyBot Config  user_id "," self id downcase "," self id ","SlackRubyBot Config  aliases "," aliases ","SlackRubyBot Config  aliases map "," aliases map "," auth [] "," auth "," auth [] downcase "]}," SlackRubyBot Client initialize":{"type":"method","name":"initialize","children":[],"call":["attrs [] ","attrs [] ! ! ","attrs [] ! ","attrs key? "]}," SlackRubyBot Bot call":{"type":"method","name":"call","children":[],"call":[]}," SlackRubyBot Bot instance":{"type":"method","name":"instance","children":[],"call":[]}," SlackRubyBot Bot run":{"type":"method","name":"run","children":[],"call":[]}," SlackRubyBot App reset!":{"type":"method","name":"reset!","children":[],"call":["config user_id= ","config team_id= ","config user= ","config team= ","config url= ","SlackRubyBot  configure "]}," SlackRubyBot App hello":{"type":"method","name":"hello","children":[],"call":[" logger info ","config team ","config user "," logger ","config user_id= ","client self id ","client self ","config user= ","client self name ","config team_id= ","client team id ","client team ","config team= ","client team name ","config url= ","client team domain ","SlackRubyBot  configure "]}," SlackRubyBot MVC View Base use_args":{"type":"method","name":"use_args","children":[],"call":[]}," SlackRubyBot MVC View Base inherited":{"type":"method","name":"inherited","children":[],"call":[]}," SlackRubyBot MVC Model Base use_args":{"type":"method","name":"use_args","children":[],"call":[]}," SlackRubyBot MVC Model Base inherited":{"type":"method","name":"inherited","children":[],"call":[]}," SlackRubyBot MVC Controller Base call_command":{"type":"method","name":"call_command","children":[],"call":[" public_send ","verb downcase "," match captures [] "," match names index "," match names "," match "," match captures "," normalize_command_string ","verb downcase  downcase "," match captures []  downcase "," normalize_command_string  downcase "]}," SlackRubyBot MVC Controller Base use_args":{"type":"method","name":"use_args","children":[],"call":[" view use_args "," view "," model use_args "," model "]}," SlackRubyBot MVC Controller Base initialize":{"type":"method","name":"initialize","children":[],"call":[" class register_controller "," class "]}," SlackRubyBot MVC Controller Base internal_methods":{"type":"method","name":"internal_methods","children":[],"call":["controller public_instance_methods ","controller superclass ","controller abstract? ","controller superclass  public_instance_methods ","controller superclass  superclass ","controller superclass  abstract? "]}," SlackRubyBot MVC Controller Base register_controller":{"type":"method","name":"register_controller","children":[],"call":["controller call_command ","controller use_args "," command ","meth_name to_s "," command_class class_eval "," command_class ","meth_name [] == ","meth_name [] ","methods each ","(send\n  (send\n    (send\n      (lvar :klass) :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods\n      (lvar :klass))) :+\n  (send\n    (lvar :klass) :public_instance_methods\n    (false))) uniq map ","(send\n  (send\n    (send\n      (lvar :klass) :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods\n      (lvar :klass))) :+\n  (send\n    (lvar :klass) :public_instance_methods\n    (false))) uniq ","klass public_instance_methods - + ","klass public_instance_methods ","klass public_instance_methods - "," internal_methods ","controller class ","controller_ary << ","Base  instance_variable_get ","Base  instance_variable_set "," controllers ","commands each "," lookup_command_name ","name [] == ","name [] ","h []= ","Hash  new "," aliases "," controllers << ","(send\n  (send\n    (send\n      (lvar :klass) :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods\n      (lvar :klass))) :+\n  (send\n    (lvar :klass) :public_instance_methods\n    (false))) uniq map  each ","(send\n  (send\n    (send\n      (lvar :klass) :public_instance_(send\n  (send\n    (send\n      (lvar :klass) :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods\n      (lvar :klass))) :+\n  (send\n    (lvar :klass) :public_instance_methods\n    (false))) uniq map \n      (true)) :-\n    (send nil :internal_(send\n  (send\n    (send\n      (lvar :klass) :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods\n      (lvar :klass))) :+\n  (send\n    (lvar :klass) :public_instance_methods\n    (false))) uniq map \n      (lvar :klass))) :+\n  (send\n    (lvar :klass) :public_instance_(send\n  (send\n    (send\n      (lvar :klass) :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods\n      (lvar :klass))) :+\n  (send\n    (lvar :klass) :public_instance_methods\n    (false))) uniq map \n    (false))) uniq map ","(send\n  (send\n    (send\n      (lvar :controller class ) :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods\n      (lvar :controller class ))) :+\n  (send\n    (lvar :controller class ) :public_instance_methods\n    (false))) uniq map ","(send\n  (send\n    (send\n      (lvar :klass) :public_instance_(send\n  (send\n    (send\n      (lvar :klass) :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods\n      (lvar :klass))) :+\n  (send\n    (lvar :klass) :public_instance_methods\n    (false))) uniq map \n      (true)) :-\n    (send nil :internal_(send\n  (send\n    (send\n      (lvar :klass) :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods\n      (lvar :klass))) :+\n  (send\n    (lvar :klass) :public_instance_methods\n    (false))) uniq map \n      (lvar :klass))) :+\n  (send\n    (lvar :klass) :public_instance_(send\n  (send\n    (send\n      (lvar :klass) :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods\n      (lvar :klass))) :+\n  (send\n    (lvar :klass) :public_instance_methods\n    (false))) uniq map \n    (false))) uniq ","(send\n  (send\n    (send\n      (lvar :controller class ) :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods\n      (lvar :controller class ))) :+\n  (send\n    (lvar :controller class ) :public_instance_methods\n    (false))) uniq ","klass public_instance_(send\n  (send\n    (send\n      (lvar :klass) :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods\n      (lvar :klass))) :+\n  (send\n    (lvar :klass) :public_instance_methods\n    (false))) uniq map  - + ","controller class  public_instance_methods - + ","klass public_instance_(send\n  (send\n    (send\n      (lvar :klass) :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods\n      (lvar :klass))) :+\n  (send\n    (lvar :klass) :public_instance_methods\n    (false))) uniq map  ","controller class  public_instance_methods ","klass public_instance_(send\n  (send\n    (send\n      (lvar :klass) :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods\n      (lvar :klass))) :+\n  (send\n    (lvar :klass) :public_instance_methods\n    (false))) uniq map  - ","controller class  public_instance_methods - "," internal_(send\n  (send\n    (send\n      (lvar :klass) :public_instance_methods\n      (true)) :-\n    (send nil :internal_methods\n      (lvar :klass))) :+\n  (send\n    (lvar :klass) :public_instance_methods\n    (false))) uniq map  ","Base  instance_variable_get  << "," lookup_command_name  each "]}," SlackRubyBot MVC Controller Base inherited":{"type":"method","name":"inherited","children":[],"call":["klass instance_variable_set ","klass instance_variable_defined? "]}," SlackRubyBot MVC Controller Base abstract!":{"type":"method","name":"abstract!","children":[],"call":[]}," SlackRubyBot MVC Controller Base reset!":{"type":"method","name":"reset!","children":[],"call":["Base  instance_variable_set ","Class  new ","Commands Base  command_classes delete ","Controller Base  command_class ","Commands Base  command_classes ","Base  command_class "]}," SlackRubyBot MVC Controller Base command_class":{"type":"method","name":"command_class","children":[],"call":["Base  instance_variable_get "," get_or_set_ivar ","Class  new "]}," SlackRubyBot MVC Controller Base controllers":{"type":"method","name":"controllers","children":[],"call":["Base  instance_variable_get "," get_or_set_ivar "]}," SlackRubyBot MVC Controller Base normalize_command_string":{"type":"method","name":"normalize_command_string","children":[],"call":["string downcase tr ","string downcase "]}," SlackRubyBot MVC Controller Base convert_method_name_to_command_string":{"type":"method","name":"convert_method_name_to_command_string","children":[],"call":["name to_s tr ","name to_s "]}," SlackRubyBot MVC Controller Base lookup_command_name":{"type":"method","name":"lookup_command_name","children":[],"call":["(lvar :name) + "," aliases [] "," aliases "," convert_method_name_to_command_string ","(lvar : convert_method_name_to_command_string ) + "," convert_method_ convert_method_name_to_command_string _to_command_string "]}," SlackRubyBot MVC Controller Base alternate_name":{"type":"method","name":"alternate_name","children":[],"call":[" alias_method ","alias_names each "," aliases [] "," aliases "," convert_method_name_to_command_string ","alias_names map "]}," SlackRubyBot MVC Controller Base aliases":{"type":"method","name":"aliases","children":[],"call":["Base  instance_variable_get "," get_or_set_ivar ","h []= ","Hash  new "]}," SlackRubyBot Hooks HookSupport _hooks":{"type":"method","name":"_hooks","children":[],"call":["SlackRubyBot Hooks Set  new "]}," SlackRubyBot Hooks HookSupport on":{"type":"method","name":"on","children":[],"call":[" _hooks add "," _hooks "]}," SlackRubyBot Commands Base permitted?":{"type":"method","name":"permitted?","children":[],"call":[]}," SlackRubyBot SpecHelpers parse":{"type":"method","name":"parse","children":[],"call":["actual [] ","actual is_a? ","attachments is_a? ","attachments nil? ","actual []  is_a? ","actual []  nil? "]}," say":{"type":"method","name":"say","children":[],"call":[]}," test_messages":{"type":"method","name":"test_messages","children":[],"call":[]}," SlackRubyBot MVC Controller Base get_or_set_ivar":{"type":"method","name":"get_or_set_ivar","children":[],"call":["Base  instance_variable_set ","Base  instance_variable_get "]}," SlackRubyBot Commands Base message_begins_with_bot_mention?":{"type":"method","name":"message_begins_with_bot_mention?","children":[],"call":["text downcase match ! ! ","text downcase match ! ","text downcase match ","text downcase ","bot_names join ","bot_names join  join "]}," SlackRubyBot Commands Base call_command":{"type":"method","name":"call_command","children":[],"call":[" raise ","data text "," send "," permitted? "," respond_to? ","block call "]}," SlackRubyBot Commands Base bot_matcher":{"type":"method","name":"bot_matcher","children":[],"call":[]}," SlackRubyBot Commands Base command_name_from_class":{"type":"method","name":"command_name_from_class","children":[],"call":[" object_id to_s "," object_id "," name split last downcase "," name split last "," name split "," name "]}," SlackRubyBot Commands Support Match initialize":{"type":"method","name":"initialize","children":[],"call":[" raise ","match_data is_a? "]}," SlackRubyBot Commands Support Help other_commands_help_attrs":{"type":"method","name":"other_commands_help_attrs","children":[],"call":["k klass ancestors include? ! ","k klass ancestors include? ","k klass ancestors ","k klass "," commands_help_attrs select "," commands_help_attrs "]}," SlackRubyBot Commands Support Help bot_help_attrs":{"type":"method","name":"bot_help_attrs","children":[],"call":["k klass ancestors include? ","k klass ancestors ","k klass "," commands_help_attrs select "," commands_help_attrs "]}," SlackRubyBot Commands Support Help help_attrs_with_present_names":{"type":"method","name":"help_attrs_with_present_names","children":[],"call":["k command_name present? ","k command_name ","help_attrs select "]}," SlackRubyBot Commands Support Help command_name_and_desc":{"type":"method","name":"command_name_and_desc","children":[],"call":["help_attrs command_name ","help_attrs command_desc ","help_attrs command_desc present? "]}," SlackRubyBot Commands Support Help collect_name_and_desc":{"type":"method","name":"collect_name_and_desc","children":[],"call":[" command_name_and_desc "," collect_help_attrs "]}," SlackRubyBot Commands Support Help collect_help_attrs":{"type":"method","name":"collect_help_attrs","children":[],"call":[" help_attrs_with_present_names map "," help_attrs_with_present_names "]}," SlackRubyBot Commands Support Help find_command_help_attrs":{"type":"method","name":"find_command_help_attrs","children":[],"call":["c command_name == ","c command_name ","k commands each ","k commands "," commands_help_attrs each "," commands_help_attrs ","k command_name == ","k command_name "," commands_help_attrs find "]}," SlackRubyBot Commands Support Help command_full_desc":{"type":"method","name":"command_full_desc","children":[],"call":["help_attrs command_long_desc "," command_name_and_desc ","help_attrs command_long_desc blank? "," find_command_help_attrs ","Slack Messages Formatting  unescape "," find_command_help_attrs  command_long_desc "," find_command_help_attrs  command_long_desc blank? "," find_command_ find_command_help_attrs  "]}," SlackRubyBot Commands Support Help other_commands_descs":{"type":"method","name":"other_commands_descs","children":[],"call":[" collect_name_and_desc "," other_commands_help_attrs "]}," SlackRubyBot Commands Support Help bot_desc_and_commands":{"type":"method","name":"bot_desc_and_commands","children":[],"call":["bot_commands_descs join "," command_name_and_desc "," collect_name_and_desc ","help_attrs commands "," collect_help_attrs "," bot_help_attrs "," collect_name_and_desc  join "]}," SlackRubyBot Commands Support Help capture_help":{"type":"method","name":"capture_help","children":[],"call":["@commands_help_attrs << ","k instance_eval ","Commands Support Attrs  new ","Commands Support Attrs  new  instance_eval "]}," SlackRubyBot Commands Support Help initialize":{"type":"method","name":"initialize","children":[],"call":[]}," SlackRubyBot Commands Support Attrs command":{"type":"method","name":"command","children":[],"call":["@commands << ","k instance_eval ","k title "," class new tap "," class new "," klass "," class "]}," SlackRubyBot Commands Support Attrs long_desc":{"type":"method","name":"long_desc","children":[],"call":[" command_long_desc= "]}," SlackRubyBot Commands Support Attrs desc":{"type":"method","name":"desc","children":[],"call":[" command_desc= "]}," SlackRubyBot Commands Support Attrs title":{"type":"method","name":"title","children":[],"call":[" command_name= "]}," SlackRubyBot Commands Support Attrs initialize":{"type":"method","name":"initialize","children":[],"call":[]}," SlackRubyBot Commands Help general_text":{"type":"method","name":"general_text","children":[],"call":["other_commands_descs join ","bot_desc join ","Support Help  instance other_commands_descs ","Support Help  instance ","Support Help  instance bot_desc_and_commands ","Support Help  instance other_commands_descs  join ","Support Help  instance bot_desc_and_commands  join ","Support Help  instance Support Help  instance other_commands_descs  ","Support Help  instance Support Help  instance bot_desc_and_commands _and_commands "]}," SlackRubyBot Commands Base match_attachments":{"type":"method","name":"match_attachments","children":[],"call":["route match ","attachment [] ","fields_to_scan each ","data attachments each ","data attachments ","route route match  "]}," SlackRubyBot Commands Base routes":{"type":"method","name":"routes","children":[],"call":["ActiveSupport OrderedHash  new "]}," SlackRubyBot Commands Base attachment":{"type":"method","name":"attachment","children":[],"call":[" routes []= "," routes ","fields_to_scan is_a? ","fields_to_scan nil? "]}," Giphy random":{"type":"method","name":"random","children":[],"call":[" client gifs_random_get data "," client gifs_random_get "," config rating "," config "," config api_key "," client "]}," Giphy client":{"type":"method","name":"client","children":[],"call":["GiphyClient DefaultApi  new "]}," Giphy config":{"type":"method","name":"config","children":[],"call":[]}," Giphy configure":{"type":"method","name":"configure","children":[],"call":[" block_given? "]}," Giphy Config rating":{"type":"method","name":"rating","children":[],"call":[]}," Giphy Config api_key":{"type":"method","name":"api_key","children":[],"call":["ENV  [] "]}," SlackRubyBot Hooks Hello last_connection_till":{"type":"method","name":"last_connection_till","children":[],"call":["(send\n  (lvar :time) :-\n  (send nil :connected_at)) round ","time - "," connected_at "]}," SlackRubyBot Hooks Message bot_message?":{"type":"method","name":"bot_message?","children":[],"call":["data subtype == ","data subtype "]}," SlackRubyBot Hooks Message bot_message_not_allowed?":{"type":"method","name":"bot_message_not_allowed?","children":[],"call":["SlackRubyBot Config  allow_bot_messages? ! ","SlackRubyBot Config  allow_bot_messages? "]}," SlackRubyBot Config allow_bot_messages?":{"type":"method","name":"allow_bot_messages?","children":[],"call":[" allow_bot_messages ! ! "," allow_bot_messages ! "," allow_bot_messages "]}," SlackRubyBot App configure!":{"type":"method","name":"configure!","children":[],"call":[]}," SlackRubyBot Hooks Message prepare!":{"type":"method","name":"prepare!","children":[],"call":["data text= ","data text strip ","data text "]}," SlackRubyBot Client bot_message?":{"type":"method","name":"bot_message?","children":[],"call":["data subtype == ","data subtype "]}," SlackRubyBot Client message_to_self?":{"type":"method","name":"message_to_self?","children":[],"call":["(and\n  (send\n    (self) :self)\n  (send\n    (send\n      (send\n        (self) :self) :id) :==\n    (send\n      (lvar :data) :user))) ! ! ","(and\n  (send\n    (self) :self)\n  (send\n    (send\n      (send\n        (self) :self) :id) :==\n    (send\n      (lvar :data) :user))) ! "," self id == ","data user "," self id "," self "]}," SlackRubyBot Client allow_bot_messages?":{"type":"method","name":"allow_bot_messages?","children":[],"call":["@allow_bot_messages ! ! ","@allow_bot_messages ! ","SlackRubyBot Config  allow_bot_messages? ","@allow_bot_messages nil? "]}," SlackRubyBot Client allow_message_loops?":{"type":"method","name":"allow_message_loops?","children":[],"call":["@allow_message_loops ! ! ","@allow_message_loops ! ","SlackRubyBot Config  allow_message_loops? ","@allow_message_loops nil? "]}," SlackRubyBot Hooks Message operator_to_class":{"type":"method","name":"operator_to_class","children":[],"call":["k responds_to_operator? "," command_classes detect "," command_classes "]}," SlackRubyBot Hooks Message parse_operator":{"type":"method","name":"parse_operator","children":[],"call":["text [] split reject ","text [] split ","text [] ","text length ","text length > "]}," SlackRubyBot Hooks Message text_to_class":{"type":"method","name":"text_to_class","children":[],"call":[" operator_to_class "," parse_operator "," command_to_class "," parse_command "]}," SlackRubyBot Commands Base responds_to_operator?":{"type":"method","name":"responds_to_operator?","children":[],"call":[]}," SlackRubyBot Commands Base responds_to_command?":{"type":"method","name":"responds_to_command?","children":[],"call":[]}," SlackRubyBot Commands Base chat_postMessage":{"type":"method","name":"chat_postMessage","children":[],"call":[]}," SlackRubyBot Commands Base send_client_message":{"type":"method","name":"send_client_message","children":[],"call":[]}," SlackRubyBot Config name?":{"type":"method","name":"name?","children":[],"call":[" names include? ","name downcase "," names "]}," SlackRubyBot Config names":{"type":"method","name":"names","children":[],"call":["(send nil :user) compact flatten ","(send nil :user) compact "," aliases "," user "," user_id downcase "," user_id "]}," SlackRubyBot Commands Base get_gif_and_send":{"type":"method","name":"get_gif_and_send","children":[],"call":[]}," SlackRubyBot Server logger":{"type":"method","name":"logger","children":[],"call":["Logger  new ","$stdout sync= "]}," SlackRubyBot Server auth!":{"type":"method","name":"auth!","children":[],"call":[" logger info "," client auth [] "," client auth "," client "," logger "," client auth= "," client web_client auth_test "," client web_client "]}," SlackRubyBot Client logger":{"type":"method","name":"logger","children":[],"call":["Logger  new ","$stdout sync= "]}," SlackRubyBot Loggable logger":{"type":"method","name":"logger","children":[],"call":[" class logger "," class ","Logger  new ","$stdout sync= "]}," SlackRubyBot Server handle_execeptions":{"type":"method","name":"handle_execeptions","children":[],"call":[" raise "," logger error "," logger "," sleep ","e message "]}," SlackRubyBot Server hello!":{"type":"method","name":"hello!","children":[],"call":[" logger info "," client team domain "," client team "," client "," client team name "," client self name "," client self "," logger "]}," SlackRubyBot LoggingMethods logger":{"type":"method","name":"logger","children":[],"call":["Loggable  logger "]}}