{" GitHub Markup execute":{"type":"method","name":"execute","children":[],"call":["out gsub ","stdout read ","stdin close ","stdin puts ","Open3  popen3 "," system ! "," system ","stdout read  gsub ","stdstdout read  read "]}," GitHub Markup renderer":{"type":"method","name":"renderer","children":[],"call":["Regexp  compile =~ ","Regexp  compile ","@@markups each ","impl match? "," markups find "," markups "," markup_impls find "," markup_impls "," language ","  language  "]}," GitHub Markup can_render?":{"type":"method","name":"can_render?","children":[],"call":[" renderer ! ! "," renderer ! "," renderer "," renderer != "]}," GitHub Markup add_markup":{"type":"method","name":"add_markup","children":[],"call":["@@markups []= "]}," GitHub Markup command":{"type":"method","name":"command","children":[],"call":["block call "," execute "," add_markup ","File  dirname + + ","command to_s ","File  dirname + ","File  dirname ","command include? ! ","command include? ","File  exists? ! ","File  exists? "," system ! "," system ","rendered to_s empty? ","rendered to_s ","block arity == ","block arity "," markups << ","CommandImplementation  new "," markups ","File  exist? "," markup_impl ","File  dirname + +  to_s ","command to_s  to_s ","File  dirname + +  include? ! ","command to_s  include? ! ","File  dirname + +  include? ","command to_s  include? "," execute  to_s empty? "," execute  to_s "," markup_CommandImplementation  new  "]}," GitHub Markup markup":{"type":"method","name":"markup","children":[],"call":[" add_markup "," require ","file to_s "," markups << ","GemImplementation  new "," markups "," markup_impl "," markup_GemImplementation  new  "]}," GitHub Markup render":{"type":"method","name":"render","children":[],"call":["proc [] "," renderer ","File  read ","impl render ","File  symlink? ","symlink nil? "," renderer  [] "," renderer  render "]}," GitHub Markup RDoc to_html":{"type":"method","name":"to_html","children":[],"call":["simple_markup convert ","simple_markup add_special ","Generators HyperlinkHtml  new ","OpenStruct  new ","SM SimpleMarkup  new ","h convert "," RDoc Markup ToHtml  new "," RDoc Options  new "," RDoc VERSION  to_i >= "," RDoc VERSION  to_i ","SM SimpleMarkup  new  convert ","SM SimpleMarkup  new  add_special "," RDoc Markup ToHtml  new  convert "]}," GitHub Markup RDoc initialize":{"type":"method","name":"initialize","children":[],"call":["Linguist Language  [] "]}," GitHub Markup renderer_name":{"type":"method","name":"renderer_name","children":[],"call":["Regexp  compile =~ ","Regexp  compile ","@@markups each "]}," GitHub Markup preload!":{"type":"method","name":"preload!","children":[],"call":["markup load "," markups each "," markups "," markup_impls each "," markup_impls "]}," GitHub Markup markups":{"type":"method","name":"markups","children":[],"call":[]}," GitHub Markup Markdown try_require":{"type":"method","name":"try_require","children":[],"call":[" require "]}," GitHub Markup Markdown render":{"type":"method","name":"render","children":[],"call":["@renderer call "," load "]}," GitHub Markup Markdown load":{"type":"method","name":"load","children":[],"call":[" raise "," try_require ","MARKDOWN_GEMS  each "]}," GitHub Markup Markdown initialize":{"type":"method","name":"initialize","children":[],"call":["Linguist Language  [] "]}," GitHub Markup Implementation file_ext_regexp":{"type":"method","name":"file_ext_regexp","children":[],"call":[" regexp "]}," GitHub Markup Implementation match?":{"type":"method","name":"match?","children":[],"call":[" file_ext_regexp =~ "," file_ext_regexp "," languages include? "," languages "]}," GitHub Markup Implementation render":{"type":"method","name":"render","children":[],"call":[" raise "]}," GitHub Markup Implementation load":{"type":"method","name":"load","children":[],"call":[]}," GitHub Markup Implementation initialize":{"type":"method","name":"initialize","children":[],"call":["Linguist Language  [] ","languages map "," raise ","l inspect ","lang nil? ","Linguist Language  [] uages map ","Linguist Language  []  nil? "]}," GitHub Markup GemImplementation render":{"type":"method","name":"render","children":[],"call":[" renderer call "," renderer "," load "]}," GitHub Markup GemImplementation load":{"type":"method","name":"load","children":[],"call":[" require "," gem_name "]}," GitHub Markup GemImplementation initialize":{"type":"method","name":"initialize","children":[],"call":["gem_name to_s "]}," GitHub Markup CommandImplementation execute":{"type":"method","name":"execute","children":[],"call":["out gsub ","stdout read ","stdin close ","stdin puts ","Open3  popen3 ","spawn out gsub ","spawn out ","POSIX Spawn Child  new "," raise ","CommandError  new ","spawn err strip ","spawn err ","spawn status success? ","spawn status ","spawn out gsub force_encoding ","target encoding "," sanitize ","output join ","stderr readlines join strip ","stderr readlines join ","stderr readlines ","stdout readlines ","wait_thr value success? ","wait_thr value ","stdout read  gsub ","stdstdout read  read ","spawn stdout read  gsub ","POSIX Spawn Child  new  out gsub ","spawn stdout read  ","POSIX Spawn Child  new  out ","POSIX Spawn Child  new  err strip ","POSIX Spawn Child  new  err ","POSIX Spawn Child  new  status success? ","POSIX Spawn Child  new  status ","spawn stdout read  gsub force_encoding ","POSIX Spawn Child  new  out gsub force_encoding ","stdout read put join ","stdstdout read  readlines "]}," GitHub Markup CommandImplementation call_block":{"type":"method","name":"call_block","children":[],"call":[" block call "," block "," block arity == "," block arity "]}," GitHub Markup CommandImplementation render":{"type":"method","name":"render","children":[],"call":[" call_block ","rendered to_s empty? ","rendered to_s "," execute "," command "," execute  to_s empty? "," execute  to_s "]}," GitHub Markup CommandImplementation initialize":{"type":"method","name":"initialize","children":[],"call":["command to_s "]}," GitHub Markup CommandImplementation sanitize":{"type":"method","name":"sanitize","children":[],"call":["input gsub force_encoding ","input gsub "]}," GitHub Markup RDoc name":{"type":"method","name":"name","children":[],"call":[]}," GitHub Markup RDoc render":{"type":"method","name":"render","children":[],"call":["h convert "," RDoc Markup ToHtml  new "," RDoc Options  new "," RDoc VERSION  to_i >= "," RDoc VERSION  to_i "," RDoc Markup ToHtml  new  convert "]}," GitHub Markup Markdown name":{"type":"method","name":"name","children":[],"call":[]}," GitHub Markup GemImplementation name":{"type":"method","name":"name","children":[],"call":[" gem_name "]}," GitHub Markup language":{"type":"method","name":"language","children":[],"call":["Linguist  detect ","Linguist Blob  new "]}," GitHub Markup markup_impl":{"type":"method","name":"markup_impl","children":[],"call":[" markups []= "," markups "," raise "," markups has_key? "," markups key? "]}," GitHub Markup render_s":{"type":"method","name":"render_s","children":[],"call":[" markups [] render "," markups [] "," markups "," markups has_key? "," raise ","content nil? "," markups key? "]}," GitHub Markup markup_impls":{"type":"method","name":"markup_impls","children":[],"call":[" markups values "," markups "]}}