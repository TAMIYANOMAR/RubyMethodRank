{" Ref WeakReference object":{"type":"method","name":"object","children":[],"call":[" raise ","NotImplementedError  new ","e is_a? ","@ref __getobj__ ","@reference_pointer cleanup ","@@weak_references delete "," object_id ","@@lock synchronize ","@reference_pointer object ","@ref target ","@ref __get@reference_pointer object __ "," @reference_pointer object ect_id ","@reference_pointer @reference_pointer object ect "]}," Ref WeakReference initialize":{"type":"method","name":"initialize","children":[],"call":[" raise ","NotImplementedError  new "," WeakRef  new ","obj __id__ ","ObjectSpace  define_finalizer ","@@weak_references []= "," object_id ","ReferencePointer  new ","@@lock synchronize "," System WeakReference  new "]}," Ref WeakReference ReferencePointer remove_backreference":{"type":"method","name":"remove_backreference","children":[],"call":["obj send ","backreferences empty? ","backreferences dup delete "," object_id ","backreferences dup ","obj instance_variable_get ","obj instance_variable_defined? "," supports_backreference? ","obj instance_variable_get  empty? ","obj instance_variable_get  dup delete ","obj instance_variable_get  dup "]}," Ref WeakReference ReferencePointer add_backreference":{"type":"method","name":"add_backreference","children":[],"call":["backreferences << "," object_id ","obj instance_variable_set ","obj instance_variable_get ","obj instance_variable_defined? "," supports_backreference? ","obj instance_variable_get  << "]}," Ref WeakReference ReferencePointer verify_backreferences":{"type":"method","name":"verify_backreferences","children":[],"call":["backreferences include? "," object_id ","obj instance_variable_get ","obj instance_variable_defined? "," supports_backreference? ","obj instance_variable_get  include? "]}," Ref WeakReference ReferencePointer object":{"type":"method","name":"object","children":[],"call":[" verify_backreferences ","ObjectSpace  _id2ref "]}," Ref WeakReference ReferencePointer cleanup":{"type":"method","name":"cleanup","children":[],"call":[" remove_backreference ","ObjectSpace  _id2ref "]}," Ref WeakReference ReferencePointer initialize":{"type":"method","name":"initialize","children":[],"call":[" add_backreference ","object __id__ "]}," Ref StrongReference object":{"type":"method","name":"object","children":[],"call":[]}," Ref StrongReference initialize":{"type":"method","name":"initialize","children":[],"call":["obj __id__ "]}," Ref SoftReference add_strong_reference":{"type":"method","name":"add_strong_reference","children":[],"call":["ObjectSpace  define_finalizer ","Object  new ","@@strong_references last []= ","@@strong_references last ","@@lock synchronize "]}," Ref SoftReference object":{"type":"method","name":"object","children":[],"call":[" add_strong_reference ","@weak_reference object ","@weak_reference @weak_reference object ect "]}," Ref SoftReference initialize":{"type":"method","name":"initialize","children":[],"call":[" add_strong_reference ","WeakReference  new ","obj __id__ "]}," Ref SafeMonitor synchronize":{"type":"method","name":"synchronize","children":[],"call":[" unlock "," lock "]}," Ref SafeMonitor unlock":{"type":"method","name":"unlock","children":[],"call":["@mutex unlock ","@count == ","@owner == ","Thread  current object_id ","Thread  current "]}," Ref SafeMonitor lock":{"type":"method","name":"lock","children":[],"call":["Thread  current object_id ","Thread  current ","@mutex lock ","@owner != ","Thread  current object_id  != "]}," Ref SafeMonitor initialize":{"type":"method","name":"initialize","children":[],"call":["Mutex  new "]}," Ref ReferenceQueue size":{"type":"method","name":"size","children":[],"call":["@queue size "]}," Ref ReferenceQueue empty?":{"type":"method","name":"empty?","children":[],"call":["@queue empty? "]}," Ref ReferenceQueue shift":{"type":"method","name":"shift","children":[],"call":["@queue shift ","@lock synchronize "]}," Ref ReferenceQueue pop":{"type":"method","name":"pop","children":[],"call":["@queue pop ","@lock synchronize "]}," Ref ReferenceQueue push":{"type":"method","name":"push","children":[],"call":["@queue push ","@lock synchronize "]}," Ref ReferenceQueue monitor":{"type":"method","name":"monitor","children":[],"call":[" push ","ObjectSpace  define_finalizer ","@references []= ","reference referenced_object_id ","@lock synchronize ","reference object ","reference referenced_reference object ect_id ","reference reference object ect "]}," Ref ReferenceQueue initialize":{"type":"method","name":"initialize","children":[],"call":["@queue push ","@references delete ","@lock synchronize "," lambda ","SafeMonitor  new ","Monitor  new ","@@references delete erences delete ","SafeMonitor  new  synchronize ","Monitor  new  synchronize "]}," Ref Reference inspect":{"type":"method","name":"inspect","children":[],"call":[" referenced_object_id ","obj inspect "," class name "," class "," object "," referenced_ object ect_id "," object  inspect ","  object ect "]}," Ref Reference object":{"type":"method","name":"object","children":[],"call":[" raise "]}," Ref Reference initialize":{"type":"method","name":"initialize","children":[],"call":[" raise ","NotImplementedError  new "]}," Ref Mock MockReference object":{"type":"method","name":"object","children":[],"call":["Mock  object_space include? ","@object __id__ ","Mock  object_space "]}," Ref Mock MockReference initialize":{"type":"method","name":"initialize","children":[],"call":["Mock  object_space [] ","obj __id__ ","Mock  object_space "," raise "]}," Ref Mock gc":{"type":"method","name":"gc","children":[],"call":["finalizer call ","obj __id__ ","finalizers each "," object_space delete "," object_space ","objects each "," object_space keys ","objects empty? ","objects map "," object_space delete  each "," object_space keys  each "," object_space keys  empty? "," object_space keys  map "]}," Ref Mock object_space":{"type":"method","name":"object_space","children":[],"call":[" instance_variable_defined? "]}," Ref Mock cleanup":{"type":"method","name":"cleanup","children":[],"call":[" alias_method "]}," Ref Mock setup":{"type":"method","name":"setup","children":[{"type":"method","name":"define_finalizer_with_mock_reference","children":[],"asgn":[],"call":[" define_finalizer_without_mock_reference "," Ref Mock  object_space [] << "," Ref Mock  object_space [] ","obj __id__ "," Ref Mock  object_space "," Ref Mock  object_space include? ","obj __id__ "," Ref Mock  object_space "]},{"type":"method","name":"new_with_mock_reference","children":[],"asgn":[],"call":["Mock MockWeakReference  new "," new_without_mock_reference "," == "]},{"type":"method","name":"new_with_mock_reference","children":[],"asgn":[],"call":["Mock MockSoftReference  new "," new_without_mock_reference "," == "]}],"call":[" alias_method ","Mock MockSoftReference  new "," new_without_mock_reference "," == "," method_defined? ","Mock MockWeakReference  new "," define_finalizer_without_mock_reference "," Ref Mock  object_space [] << "," Ref Mock  object_space [] ","obj __id__ "," Ref Mock  object_space "," Ref Mock  object_space include? "," raise "," object_space "]}," Ref Mock use":{"type":"method","name":"use","children":[],"call":[" cleanup "," setup "," object_space "]}," Ref AbstractReferenceValueMap remove_reference_to":{"type":"method","name":"remove_reference_to","children":[],"call":["@references_to_keys_map delete ","@references delete ","keys each ","@references_to_keys_map [] ","@lock synchronize ","@references_to_@references_to_keys_map [] _map delete ","@references_to_keys_map []  each ","@references_to_@references_to_keys_map [] _map [] "]}," Ref AbstractReferenceValueMap inspect":{"type":"method","name":"inspect","children":[],"call":["live_entries inspect ","live_entries []= "," each "]}," Ref AbstractReferenceValueMap merge!":{"type":"method","name":"merge!","children":[],"call":[" []= ","other_hash each ","@lock synchronize "]}," Ref AbstractReferenceValueMap clear":{"type":"method","name":"clear","children":[],"call":["@references_to_keys_map clear ","@references clear ","@lock synchronize "]}," Ref AbstractReferenceValueMap each":{"type":"method","name":"each","children":[],"call":["ref object ","@references each "]}," Ref AbstractReferenceValueMap to_a":{"type":"method","name":"to_a","children":[],"call":["array << "," each "]}," Ref AbstractReferenceValueMap values":{"type":"method","name":"values","children":[],"call":["vals << "," each "]}," Ref AbstractReferenceValueMap delete":{"type":"method","name":"delete","children":[],"call":["ref object ","@references_to_keys_map delete ","ref referenced_object_id ","keys_to_id empty? ","keys_to_id delete ","@references_to_keys_map [] ","@references delete ","@references delete  object ","@@references delete erences_to_keys_map delete ","@references delete  @references delete erenced_object_id ","@references_to_keys_map []  empty? ","@references_to_keys_map []  delete ","@@references delete erences_to_keys_map [] ","@@references delete erences delete "]}," Ref AbstractReferenceValueMap []=":{"type":"method","name":"[]=","children":[],"call":["keys_for_id << ","@references_to_keys_map []= ","value __id__ ","@references_to_keys_map [] ","@references []= "," class reference_class new "," class reference_class "," class ","@lock synchronize ","key dup ","key is_a? ","ObjectSpace  define_finalizer ","@references_to_keys_map []  << ","key dup s_for_id << ","@references_to_key dup s_map []= ","@references_to_key dup s_map [] ","key dup  dup ","key dup  is_a? "]}," Ref AbstractReferenceValueMap []":{"type":"method","name":"[]","children":[],"call":["ref object ","@references [] ","@lock synchronize ","@references []  object ","@@references [] erences [] "]}," Ref AbstractReferenceValueMap initialize":{"type":"method","name":"initialize","children":[],"call":[" remove_reference_to "," lambda ","SafeMonitor  new ","Monitor  new "]}," Ref AbstractReferenceValueMap reference_class":{"type":"method","name":"reference_class","children":[],"call":[" raise ","NotImplementedError  new "," name "]}," Ref AbstractReferenceValueMap reference_class=":{"type":"method","name":"reference_class=","children":[],"call":[]}," Ref AbstractReferenceKeyMap remove_reference_to":{"type":"method","name":"remove_reference_to","children":[],"call":["@values delete ","@references_to_keys_map delete ","@lock synchronize "]}," Ref AbstractReferenceKeyMap ref_key":{"type":"method","name":"ref_key","children":[],"call":["ref referenced_object_id ","ref object ","@references_to_keys_map [] ","key __id__ ","@references_to_keys_map []  @references_to_keys_map [] erenced_object_id ","@references_to_keys_map []  object ","@@references_to_keys_map [] erences_to_keys_map [] "]}," Ref AbstractReferenceKeyMap inspect":{"type":"method","name":"inspect","children":[],"call":["live_entries inspect ","live_entries []= "," each "]}," Ref AbstractReferenceKeyMap merge!":{"type":"method","name":"merge!","children":[],"call":[" []= ","other_hash each ","@lock synchronize "]}," Ref AbstractReferenceKeyMap clear":{"type":"method","name":"clear","children":[],"call":["@references_to_keys_map clear ","@values clear ","@lock synchronize "]}," Ref AbstractReferenceKeyMap each":{"type":"method","name":"each","children":[],"call":["@values [] ","ref object ","@references_to_keys_map each ","@references_to_ref object s_map each "]}," Ref AbstractReferenceKeyMap to_a":{"type":"method","name":"to_a","children":[],"call":["array << "," each "]}," Ref AbstractReferenceKeyMap keys":{"type":"method","name":"keys","children":[],"call":["(send\n  (send\n    (ivar :@values) :keys) :collect) compact ","@references_to_keys_map [] object ","@references_to_keys_map [] ","@values keys collect ","@values keys "]}," Ref AbstractReferenceKeyMap delete":{"type":"method","name":"delete","children":[],"call":["@values delete ","@references_to_keys_map delete "," ref_key ","@lock synchronize "]}," Ref AbstractReferenceKeyMap []=":{"type":"method","name":"[]=","children":[],"call":["@values []= ","key __id__ ","@references_to_keys_map []= "," class reference_class new "," class reference_class "," class ","@lock synchronize ","ObjectSpace  define_finalizer "]}," Ref AbstractReferenceKeyMap []":{"type":"method","name":"[]","children":[],"call":["@values [] "," ref_key ","@lock synchronize "]}," Ref AbstractReferenceKeyMap initialize":{"type":"method","name":"initialize","children":[],"call":[" remove_reference_to "," lambda ","SafeMonitor  new ","Monitor  new "]}," Ref AbstractReferenceKeyMap reference_class":{"type":"method","name":"reference_class","children":[],"call":[" raise ","NotImplementedError  new "," name "]}," Ref AbstractReferenceKeyMap reference_class=":{"type":"method","name":"reference_class=","children":[],"call":[]}," Ref WeakReference ReferencePointer supports_backreference?":{"type":"method","name":"supports_backreference?","children":[],"call":["obj respond_to? "]}," Ref jruby?":{"type":"method","name":"jruby?","children":[],"call":[]}," Ref AbstractReferenceValueMap empty?":{"type":"method","name":"empty?","children":[],"call":["ref object ","@references each "]}," Ref AbstractReferenceValueMap size":{"type":"method","name":"size","children":[],"call":["ref object ","@references count "]}," Ref AbstractReferenceValueMap merge":{"type":"method","name":"merge","children":[],"call":["map []= ","pair last ","pair first "," to_h merge reduce "," class new "," class "," to_h merge "," to_h "]}," Ref AbstractReferenceValueMap to_h":{"type":"method","name":"to_h","children":[],"call":["hash []= "," each "]}," Ref AbstractReferenceKeyMap empty?":{"type":"method","name":"empty?","children":[],"call":["ref object ","@references_to_keys_map each "]}," Ref AbstractReferenceKeyMap size":{"type":"method","name":"size","children":[],"call":["ref object ","@references_to_keys_map count "]}," Ref AbstractReferenceKeyMap merge":{"type":"method","name":"merge","children":[],"call":["map []= ","pair last ","pair first "," to_h merge reduce "," class new "," class "," to_h merge "," to_h "]}," Ref AbstractReferenceKeyMap to_h":{"type":"method","name":"to_h","children":[],"call":["hash []= "," each "]}}