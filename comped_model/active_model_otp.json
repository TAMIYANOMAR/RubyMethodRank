{" ActiveModel OneTimePassword InstanceMethodsOnActivation provisioning_uri":{"type":"method","name":"provisioning_uri","children":[],"call":["ROTP TOTP  new provisioning_uri ","ROTP TOTP  new "," otp_secret_key "," email "," respond_to? "," otp_column ","ROTP HOTP  new provisioning_uri ","ROTP HOTP  new "," otp_counter_based "," otp_counter "]}," ActiveModel OneTimePassword InstanceMethodsOnActivation otp_code":{"type":"method","name":"otp_code","children":[],"call":["ROTP TOTP  new at ","ROTP TOTP  new "," otp_secret_key "," otp_column ","options fetch ","Time  now ","options is_a? "," otp_digits ","ROTP HOTP  new at "," otp_counter ","ROTP HOTP  new "," save "," new_record? ! "," new_record? ","options [] "," otp_counter_based "," respond_to? "," totp_code "," hotp_code "]}," ActiveModel OneTimePassword InstanceMethodsOnActivation authenticate_otp":{"type":"method","name":"authenticate_otp","children":[],"call":["totp verify ","totp verify_with_drift ","options [] ","ROTP TOTP  new "," otp_secret_key "," otp_column "," otp_digits "," save "," new_record? ! "," new_record? "," otp_counter ","hotp verify ","ROTP HOTP  new "," otp_counter_based "," respond_to? "," authenticate_backup_code "," backup_codes_enabled? "," authenticate_totp present? "," authenticate_totp "," otp_counter == "," authenticate_hotp ","code empty? ","code nil? ","ROTP TOTP  new  verify ","totp verify_with_options []  ","ROTP TOTP  new  verify_with_drift ","ROTP HOTP  new  verify "," authenticate_ROTP TOTP  new  present? "," authenticate_ROTP TOTP  new  "," authenticate_ROTP HOTP  new  "]}," ActiveModel OneTimePassword ClassMethods has_one_time_password":{"type":"method","name":"has_one_time_password","children":[{"type":"method","name":"attributes_protected_by_default","children":[],"asgn":[],"call":[]}],"call":[" + "," respond_to? "," otp_secret_key= ","ROTP Base32  random_base32 "," before_create "," include "," otp_column_name "," otp_column= "," otp_column_name= ","(or\n  (send\n    (lvar :options) :[]\n    (sym :column_name))\n  (str \"otp_secret_key\")) to_s ","options [] "," cattr_accessor "," otp_column "," otp_regenerate_secret "," otp_column ! "," otp_digits= "," class_attribute "," otp_counter_column_name "," otp_regenerate_counter "," otp_counter ! "," otp_counter "," otp_counter_based "," otp_counter_column_name= ","(or\n  (send\n    (lvar :options) :[]\n    (sym :counter_column_name))\n  (str \"otp_counter\")) to_s "," otp_counter_based= ","options slice "," otp_regenerate_backup_codes "," backup_codes_enabled? "," otp_one_time_backup_codes= "," otp_backup_codes_count= "," otp_backup_codes_column_name= ","(or\n  (send\n    (lvar :options) :[]\n    (sym :backup_codes_column_name))\n  (str \"otp_backup_codes\")) to_s ","(or\n  (send\n    (lvar :options) :[]\n    (sym :backup_codes_column_name))\n  (const nil :OTP_DEFAULT_BACKUP_CODES_COLUMN_NAME)) to_s "," otp_interval= ","(or\n  (send\n    (lvar :options) :[]\n    (sym :counter_column_name))\n  (const nil :OTP_DEFAULT_COUNTER_COLUMN_NAME)) to_s ","(or\n  (send\n    (lvar :options) :[]\n    (sym :column_name))\n  (const nil :OTP_DEFAULT_COLUMN_NAME)) to_s "," otp_after_column_name= "]}," ActiveModel OneTimePassword InstanceMethodsOnActivation otp_column=":{"type":"method","name":"otp_column=","children":[],"call":[" send "," class otp_column_name "," class "," public_send "]}," ActiveModel OneTimePassword InstanceMethodsOnActivation otp_column":{"type":"method","name":"otp_column","children":[],"call":[" send "," class otp_column_name "," class "," public_send "]}," ActiveModel OneTimePassword InstanceMethodsOnActivation otp_regenerate_secret":{"type":"method","name":"otp_regenerate_secret","children":[],"call":[" otp_column= ","ROTP Base32  random_base32 "," class otp_random_secret "," class "]}," ActiveModel OneTimePassword InstanceMethodsOnActivation otp_counter=":{"type":"method","name":"otp_counter=","children":[],"call":[" send "," class otp_counter_column_name "," class "," public_send "," class otp_counter_column_name != "]}," ActiveModel OneTimePassword InstanceMethodsOnActivation otp_counter":{"type":"method","name":"otp_counter","children":[],"call":[" send "," class otp_counter_column_name "," class "," public_send "," class otp_counter_column_name != "]}," ActiveModel OneTimePassword InstanceMethodsOnActivation otp_regenerate_counter":{"type":"method","name":"otp_regenerate_counter","children":[],"call":[" otp_counter= "]}," ActiveModel OneTimePassword InstanceMethodsOnActivation serializable_hash":{"type":"method","name":"serializable_hash","children":[],"call":["options [] << "," class otp_column_name "," class ","options [] ","options []= "," Array "]}," ActiveModel OneTimePassword ClassMethods otp_random_secret":{"type":"method","name":"otp_random_secret","children":[],"call":["ROTP Base32  random "]}," ActiveModel OneTimePassword InstanceMethodsOnActivation authenticate_backup_code":{"type":"method","name":"authenticate_backup_code","children":[],"call":[" save "," new_record? ! "," new_record? "," respond_to? "," public_send ","backup_codes delete "," class otp_one_time_backup_codes "," class ","backup_codes include? "," class otp_backup_codes_column_name ","backup_codes present? "," public_send  delete "," class otp_one_time_ public_send  "," public_send  include? "," class otp_ public_send _column_name "," class otp_ class otp_backup_codes_column_name  "," public_send  present? "]}," ActiveModel OneTimePassword InstanceMethodsOnActivation backup_codes_enabled?":{"type":"method","name":"backup_codes_enabled?","children":[],"call":[" class attribute_method? "," class otp_backup_codes_column_name "," class "]}," ActiveModel OneTimePassword InstanceMethodsOnActivation otp_regenerate_backup_codes":{"type":"method","name":"otp_regenerate_backup_codes","children":[],"call":[" public_send "," class otp_backup_codes_column_name "," class ","otp generate_otp ","(send\n  (send\n    (const nil :SecureRandom) :random_number\n    (float 900000.0)) :+\n  (float 100000.0)) to_i ","SecureRandom  random_number + ","SecureRandom  random_number ","Array  new "," class otp_backup_codes_count ","ROTP OTP  new "," otp_column "," class ROTP OTP  new _backup_codes_column_name ","ROTP OTP  new  generate_ROTP OTP  new  "," class ROTP OTP  new _backup_codes_count "," ROTP OTP  new _column "]}," ActiveModel OneTimePassword InstanceMethodsOnActivation totp_code":{"type":"method","name":"totp_code","children":[],"call":["ROTP TOTP  new at ","ROTP TOTP  new "," otp_digits "," otp_column ","options fetch ","Time  now ","options is_a? "," otp_interval "]}," ActiveModel OneTimePassword InstanceMethodsOnActivation hotp_code":{"type":"method","name":"hotp_code","children":[],"call":["ROTP HOTP  new at "," otp_counter ","ROTP HOTP  new "," otp_digits "," otp_column "," save "," new_record? ! "," new_record? "," respond_to? ","options [] "]}," ActiveModel OneTimePassword InstanceMethodsOnActivation authenticate_totp":{"type":"method","name":"authenticate_totp","children":[],"call":["totp verify ","options [] ","ROTP TOTP  new "," otp_digits "," otp_column "," otp_interval "," update "," otp_after_column_name "," otp_after_column_name_enabled? ","totp verify tap "," public_send ","ROTP TOTP  new  verify ","  public_send _column_name ","  public_send _column_name_enabled? ","ROTP TOTP  new  verify tap "]}," ActiveModel OneTimePassword InstanceMethodsOnActivation authenticate_hotp":{"type":"method","name":"authenticate_hotp","children":[],"call":[" save "," new_record? ! "," new_record? "," respond_to? "," otp_counter ","options [] ","hotp verify ","ROTP HOTP  new "," otp_digits "," otp_column ","ROTP HOTP  new  verify "]}," ActiveModel OneTimePassword InstanceMethodsOnActivation otp_after_column_name_enabled?":{"type":"method","name":"otp_after_column_name_enabled?","children":[],"call":[" respond_to? "," otp_after_column_name "]}}