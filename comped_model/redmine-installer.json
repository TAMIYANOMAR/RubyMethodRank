{" Redmine Installer print_logo":{"type":"method","name":"print_logo","children":[],"call":[]}," Redmine Installer set_i18n":{"type":"method","name":"set_i18n","children":[],"call":[]}," Redmine Installer locales":{"type":"method","name":"locales","children":[],"call":[]}," Redmine Installer locales_path":{"type":"method","name":"locales_path","children":[],"call":[]}," Redmine Installer root_path":{"type":"method","name":"root_path","children":[],"call":[]}," Installer Utils Methods notif":{"type":"method","name":"notif","children":[],"call":["thread join "," Notifier  notify ","image to_s ","message to_s ","title to_s ","Redmine Installer  config notif ","Redmine Installer  config "," Notifier  notify  join "]}," Installer Utils Methods translate":{"type":"method","name":"translate","children":[],"call":["I18n  translate "]}," Installer Utils Methods confirm":{"type":"method","name":"confirm","children":[],"call":["answer [] downcase == ","yes [] downcase ","yes [] ","answer [] downcase ","answer [] ","answer empty? "," gets ","$stdout print ","message << ","no upcase! ","yes upcase! "," t "," colorize "," translate ","message is_a? "," gets  [] downcase == "," t  [] downcase "," t  [] "," gets  [] downcase "," gets  [] "," gets  empty? "," translate  << "," t  upcase! "," translate  is_a? "]}," Installer Utils Methods choose":{"type":"method","name":"choose","children":[],"call":["choices [] [] ","choices [] ","input - ","input > ","choices size ","input zero? "," puts "," ask to_i "," ask "," say ","key == ","choices each ","message nil? ","options [] ","choices to_a ","choices to_a  [] [] ","choices to_a  [] "," ask to_i  - "," ask to_i  > ","choices to_a  size "," ask to_i  zero? ","choices to_a  each ","choices to_a  to_a "]}," Installer Utils Methods ask":{"type":"method","name":"ask","children":[],"call":["input empty? "," gets "," say ","message << ","options [] ! ","options [] "," translate ","message is_a? "," gets  empty? "," translate  << "," translate  is_a? "]}," Installer Utils Methods gets":{"type":"method","name":"gets","children":[],"call":["$stdin gets to_s chomp ","$stdin gets to_s ","$stdin gets ","$stdout puts ","(send\n  (gvar :$stdin) :noecho) to_s chomp ","(send\n  (gvar :$stdin) :noecho) to_s ","io gets ","$stdin noecho "]}," Installer Utils Methods colorize":{"type":"method","name":"colorize","children":[],"call":["ANSI  clear ","ANSI CHART  has_key? ","1 to_sym ","text gsub! ","ANSI  send ","text is_a? "]}," Installer Utils Methods say":{"type":"method","name":"say","children":[],"call":["$stdout flush ","$stdout puts ","lines times ","$stdout print "," colorize "," translate ","message is_a? "," translate  is_a? "]}," Installer Utils Methods some_plugins?":{"type":"method","name":"some_plugins?","children":[],"call":["(send\n  (send\n    (const nil :Dir) :glob\n    (send\n      (const nil :File) :join\n      (str \"plugins\")\n      (str \"*\"))) :select) any? ","File  directory? ","Dir  glob select ","Dir  glob ","File  join "]}," Installer Utils Methods try_create_dir":{"type":"method","name":"try_create_dir","children":[],"call":[" try_create_dir "," error "," choose "," t ","choices []= ","FileUtils  mkdir_p "]}," Installer Utils Methods error":{"type":"method","name":"error","children":[],"call":[" raise "," colorize ","args first "," translate ","args first is_a? "]}," Installer Utils Methods command":{"type":"method","name":"command","children":[],"call":["Redmine Installer Command  instance "]}," Installer Utils Methods plugin":{"type":"method","name":"plugin","children":[],"call":[]}," Installer Utils included":{"type":"method","name":"included","children":[],"call":[]}," Installer Upgrade run":{"type":"method","name":"run","children":[],"call":["Redmine Installer Profile  save "," options [] nil? "," options [] "," options ","Redmine Installer Profile  load "]}," Installer Upgrade initialize":{"type":"method","name":"initialize","children":[],"call":[" check_package ","options [] == ","options [] "," package= "]}," Installer Task inherited":{"type":"method","name":"inherited","children":[],"call":[]}," Installer Task step":{"type":"method","name":"step","children":[],"call":[]}," Installer Task check_package":{"type":"method","name":"check_package","children":[],"call":[" raise ","I18n  translate "," package nil? "," package "]}," Installer Task run":{"type":"method","name":"run","children":[],"call":[" exit ","$stderr flush ","$stderr puts ","ANSI  clear ","e message ","ANSI  red ","step down ","step ran ","@steps values reverse each ","@steps values reverse ","@steps values ","step final_step ","@steps each "," puts ","step ran= ","step print_footer ","step up ","step print_header ","step print_title ","plugin final ","Redmine Installer Plugin RedminePlugin  all each ","Redmine Installer Plugin RedminePlugin  all ","Dir  chdir "," redmine_root ","step final ","step prepare "]}," Installer Task initialize":{"type":"method","name":"initialize","children":[],"call":["@steps []= ","step new "," class STEPS  each "," class "," env= ","options [] "," settings= "," options= "]}," Step WebserverConfig up":{"type":"method","name":"up","children":[],"call":[" say ","answer generate_config "," base redmine_root "," base ","answer title ","answer nil? "," choose ","choices []= "," t ","m title ","plugin WebServer  all each ","plugin WebServer  all "," plugin "," choose  generate_config "," choose  title "," choose  nil? "]}," Step Validation print_footer":{"type":"method","name":"print_footer","children":[],"call":[" say "]}," Step Validation up":{"type":"method","name":"up","children":[],"call":[" error ","(send\n  (ivar :@records) :select) size > ","(send\n  (ivar :@records) :select) size ","x start_with? ","@records select ","REDMINE_SHOULD_CONTAINS  join ","(send\n  (ivar :@records) :&\n  (const nil :REDMINE_SHOULD_CONTAINS)) == ","@records & ","Dir  glob sort ","Dir  glob ","File  join ","Dir  chdir "," base redmine_root "," base ","(send\n  (ivar :Dir  glob sort ) :select) size > ","(send\n  (ivar :Dir  glob sort ) :select) size ","Dir  glob sort  select ","(send\n  (ivar :Dir  glob sort ) :&\n  (const nil :REDMINE_SHOULD_CONTAINS)) == ","Dir  glob sort  & "]}," Step Upgrade copy_config_file":{"type":"method","name":"copy_config_file","children":[],"call":["FileUtils  cp ","File  join "," base tmp_redmine_root "," base ","File  exist? "," base redmine_root "]}," Step Upgrade up":{"type":"method","name":"up","children":[],"call":["FileUtils  remove_entry_secure ","entry end_with? ","Dir  glob ","File  join "," base redmine_root "," base ","plugin RedminePlugin  all each ","plugin RedminePlugin  all "," plugin "," command rake_generate_secret_token "," base env "," command "," command rake_redmine_plugin_migrate "," some_plugins? "," command rake_db_migrate "," command bundle_install ","Dir  chdir "," base tmp_redmine_root ","FileUtils  cp_r ","Dir  exist? ","File  basename "," redmine_plugins each "," redmine_plugins "," copy_config_file ","plugin upgrade "]}," Step RedmineRoot load":{"type":"method","name":"load","children":[],"call":[" base redmine_root= ","configuration [] "," base "]}," Step RedmineRoot save":{"type":"method","name":"save","children":[],"call":["configuration []= "," base redmine_root "," base "]}," Step RedmineRoot up":{"type":"method","name":"up","children":[],"call":[" error "," t "," base redmine_root "," base ","File  writable? "," try_create_dir ","Dir  exist? "," base redmine_root= ","File  expand_path "," ask ","inaccessible_files join ","inaccessible_files any? ","inaccessible_files size > ","inaccessible_files size ","inaccessible_files << ","File  readable? ! ","File  readable? ","File  writable? ! ","Find  find each ","Find  find "," base redmine_root == ","Dir  pwd "]}," Step MoveRedmine print_footer":{"type":"method","name":"print_footer","children":[],"call":[" say "]}," Step MoveRedmine up":{"type":"method","name":"up","children":[],"call":["FileUtils  mv "," base redmine_root "," base ","entry end_with? ","Dir  glob ","Dir  chdir "," base tmp_redmine_root "]}," Step LoadPackage load_git":{"type":"method","name":"load_git","children":[],"call":[" get_tmp_redmine_root ","Git  copy_and_fetch "," base redmine_root "," base ","Git  clone "," base options [] "," base options "," base package "," create_tmp_dir "]}," Step LoadPackage extract_tar_gz":{"type":"method","name":"extract_tar_gz","children":[],"call":["progressbar increment ","File  symlink ","entry header linkname ","entry header ","entry header typeflag == ","entry header typeflag ","FileUtils  chmod ","entry header mode ","f write ","entry read ","File  open ","FileUtils  rm_rf ","File  file? ","entry file? ","FileUtils  mkdir_p ","File  directory? ","entry directory? ","File  join ","entry full_name ","entry read strip ","entry full_name == ","tar each ","tar rewind ","ProgressBar  create ","tar count ","Gem Package TarReader  new ","Zlib GzipReader  open "," base package "," base ","ProgressBar  create  increment "]}," Step LoadPackage extract_zip":{"type":"method","name":"extract_zip","children":[],"call":["progressbar increment ","entry extract ","FileUtils  mkdir_p ","File  dirname ","File  join ","entry name ","zip_file each ","ProgressBar  create ","zip_file size ","Zip File  open "," base package "," base ","ProgressBar  create  increment "]}," Step LoadPackage extract_to_tmp":{"type":"method","name":"extract_to_tmp","children":[],"call":[" extract_tar_gz "," extract_zip "," create_tmp_dir ","Dir  mktmpdir "]}," Step LoadPackage load_file":{"type":"method","name":"load_file","children":[],"call":[" get_tmp_redmine_root "," extract_to_tmp "," error ","SUPPORTED_ARCHIVE_FORMATS  join "," base package "," base ","SUPPORTED_ARCHIVE_FORMATS  include? ","File  extname ","File  exist? "]}," Step LoadPackage get_tmp_redmine_root":{"type":"method","name":"get_tmp_redmine_root","children":[],"call":[" base tmp_redmine_root= ","ls first "," base ","ls size == ","ls size ","Dir  glob ","File  join "," base tmp_redmine_root "," loop ","Dir  glob  first ","Dir  glob  size == ","Dir  glob  size "]}," Step LoadPackage create_tmp_dir":{"type":"method","name":"create_tmp_dir","children":[],"call":["FileUtils  remove_entry_secure ","Dir  mktmpdir "]}," Step LoadPackage final_step":{"type":"method","name":"final_step","children":[],"call":["FileUtils  remove_entry_secure "]}," Step LoadPackage up":{"type":"method","name":"up","children":[],"call":[" error "," base options [] "," base options "," base "," load_git "," load_file "," load_from_git "," load_from_archive "]}," Step Install up":{"type":"method","name":"up","children":[],"call":["plugin RedminePlugin  all each ","plugin RedminePlugin  all "," plugin "," command rake_generate_secret_token "," base env "," base "," command "," command rake_redmine_plugin_migrate "," some_plugins? "," command rake_db_migrate "," command rake_db_create "," base settings [] "," base settings "," command bundle_install ","Dir  chdir "," base tmp_redmine_root ","plugin install "]}," Step EmailConfig up":{"type":"method","name":"up","children":[],"call":[" create_for "," plugin "]}," Step DatabaseConfig up":{"type":"method","name":"up","children":[],"call":[" base settings []= "," base settings "," base "," create_for "," plugin "]}," Step Base _redmine_plugins":{"type":"method","name":"_redmine_plugins","children":[],"call":["File  directory? ","Dir  glob select ","Dir  glob ","File  join "," base redmine_root "," base "]}," Step Base redmine_plugins":{"type":"method","name":"redmine_plugins","children":[],"call":[" _redmine_plugins "]}," Step Base load":{"type":"method","name":"load","children":[],"call":[]}," Step Base save":{"type":"method","name":"save","children":[],"call":[]}," Step Base down":{"type":"method","name":"down","children":[],"call":[]}," Step Base up":{"type":"method","name":"up","children":[],"call":[]}," Step Base final_step":{"type":"method","name":"final_step","children":[],"call":[]}," Step Base print_footer":{"type":"method","name":"print_footer","children":[],"call":[]}," Step Base print_header":{"type":"method","name":"print_header","children":[],"call":[]}," Step Base print_title":{"type":"method","name":"print_title","children":[],"call":[" say ","title << "," translate "," class class_name underscore "," class class_name "," class "," index "]}," Step Base initialize":{"type":"method","name":"initialize","children":[],"call":[" ran= "," base= "," index= "]}," Step Backup do_backup":{"type":"method","name":"do_backup","children":[],"call":[" database_backup ","FileUtils  cp_r ","File  join "," base redmine_root "," base ","FileUtils  cp ","File  exist? "," plugin ","FileUtils  mkdir "," create_current_backup_dir "]}," Step Backup do_full_backup":{"type":"method","name":"do_full_backup","children":[],"call":[" database_backup ","zipfile add ","entry end_with? ","Dir  glob each ","Dir  glob ","File  join ","Zip File  open ","Dir  chdir "," base redmine_root "," base "," create_current_backup_dir "]}," Step Backup database_restore":{"type":"method","name":"database_restore","children":[],"call":["plugin Database  restore_all "," base redmine_root "," base "," plugin "]}," Step Backup database_backup":{"type":"method","name":"database_backup","children":[],"call":["plugin Database  backup_all "," base redmine_root "," base "," plugin "," create_current_backup_dir "]}," Step Backup create_current_backup_dir":{"type":"method","name":"create_current_backup_dir","children":[],"call":[" try_create_dir ","File  join ","Time  now strftime ","Time  now "," check_backup_dir "]}," Step Backup check_backup_dir":{"type":"method","name":"check_backup_dir","children":[],"call":[" try_create_dir ","Dir  exist? ","File  expand_path "," ask ","@backup_dir nil? "," try_create_File  expand_path  "," try_create_ ask  ","@backup_File  expand_path  nil? ","@backup_ ask  nil? "]}," Step Backup load":{"type":"method","name":"load","children":[],"call":["configuration [] "]}," Step Backup save":{"type":"method","name":"save","children":[],"call":["configuration []= "]}," Step Backup final_step":{"type":"method","name":"final_step","children":[],"call":[" say "," t "]}," Step Backup down":{"type":"method","name":"down","children":[],"call":[" database_restore "," say "]}," Step Backup up":{"type":"method","name":"up","children":[],"call":[" database_backup "," do_backup "," do_full_backup "," choose ","choices []= "," t "]}," Installer Profile load":{"type":"method","name":"load","children":[],"call":["step load "," task steps each "," task steps "," task ","configuration nil? ","@data [] ","id to_i ","@data []  nil? "]}," Installer Profile save":{"type":"method","name":"save","children":[],"call":["f puts ","YAML  dump ","File  open ","@data []= "," id ","step save "," task steps each "," task steps "," task "]}," Installer Profile id":{"type":"method","name":"id","children":[],"call":["@data keys map max to_i + ","@data keys map max to_i ","@data keys map max ","@data keys map ","@data keys "]}," Installer Profile initialize":{"type":"method","name":"initialize","children":[],"call":["@data is_a? ","YAML  load_file "," task= "]}," Installer Profile check_writable":{"type":"method","name":"check_writable","children":[],"call":[]}," Plugin WebServer generate_config":{"type":"method","name":"generate_config","children":[],"call":[]}," Plugin RedminePlugin EasyProject upgrade":{"type":"method","name":"upgrade","children":[],"call":[]}," Plugin RedminePlugin EasyProject install":{"type":"method","name":"install","children":[],"call":[]}," Plugin RedminePlugin am_i_there?":{"type":"method","name":"am_i_there?","children":[],"call":[]}," Plugin SMTPFromScratch initialize":{"type":"method","name":"initialize","children":[],"call":["@params add ","@params add default ","Redmine Installer ConfigParams  new ","Redmine Installer ConfigParams  new  add ","Redmine Installer ConfigParams  new  add default "]}," Plugin SendMail delivery_method":{"type":"method","name":"delivery_method","children":[],"call":[]}," Plugin SendMail initialize":{"type":"method","name":"initialize","children":[],"call":["@params add default ","@params add ","Redmine Installer ConfigParams  new ","Redmine Installer ConfigParams  new  add default ","Redmine Installer ConfigParams  new  add "]}," Plugin Gmail delivery_settings":{"type":"method","name":"delivery_settings","children":[],"call":[" merge "]}," Plugin EmailSending delivery_settings":{"type":"method","name":"delivery_settings","children":[],"call":["settings []= ","param value ","param name ","param value empty? ","@params each "]}," Plugin EmailSending delivery_method":{"type":"method","name":"delivery_method","children":[],"call":[]}," Plugin EmailSending make_config":{"type":"method","name":"make_config","children":[],"call":["f puts ","YAML  dump "," build ","File  open ","File  join "]}," Plugin EmailSending build":{"type":"method","name":"build","children":[],"call":[" delivery_settings "," delivery_method "]}," Plugin EmailSending initialize":{"type":"method","name":"initialize","children":[],"call":["@params add ","Redmine Installer ConfigParams  new ","@params add hide ","Redmine Installer ConfigParams  new  add ","Redmine Installer ConfigParams  new  add hide "]}," Plugin Database PostgreSQL command_for_restore":{"type":"method","name":"command_for_restore","children":[],"call":[" command "]}," Plugin Database PostgreSQL command_for_backup":{"type":"method","name":"command_for_backup","children":[],"call":[" command "]}," Plugin Database PostgreSQL command":{"type":"method","name":"command","children":[],"call":[" get "]}," Plugin Database PostgreSQL initialize":{"type":"method","name":"initialize","children":[],"call":["@params add default ","@params add "]}," Plugin Database PostgreSQL adapter_name":{"type":"method","name":"adapter_name","children":[],"call":[]}," Plugin Database MySQL command_for_restore":{"type":"method","name":"command_for_restore","children":[],"call":[" command_args "]}," Plugin Database MySQL command_for_backup":{"type":"method","name":"command_for_backup","children":[],"call":[" command_args "]}," Plugin Database MySQL command_args":{"type":"method","name":"command_args","children":[],"call":[" get "," params [] value "," params [] "," params "]}," Plugin Database MySQL initialize":{"type":"method","name":"initialize","children":[],"call":["@params add default ","@params add "]}," Plugin Database MySQL adapter_name":{"type":"method","name":"adapter_name","children":[],"call":[]}," Plugin Database get":{"type":"method","name":"get","children":[],"call":[" params [] value "," params [] "," params "]}," Plugin Database restore":{"type":"method","name":"restore","children":[],"call":["Kernel  system "," command_for_restore ","File  exist? "," file_for_backup "," command_for_empty ","  file_for_backup _for_backup "]}," Plugin Database backup":{"type":"method","name":"backup","children":[],"call":["Kernel  system "," command_for_backup ","File  exist? "," file_for_backup ","  file_for_backup _for_backup "]}," Plugin Database file_for_backup":{"type":"method","name":"file_for_backup","children":[],"call":["File  join "," params [] value "," params [] "," params "," class adapter_name "," class ","FileUtils  mkdir_p "]}," Plugin Database make_config":{"type":"method","name":"make_config","children":[],"call":["f puts ","YAML  dump "," build ","File  open ","File  join "]}," Plugin Database load":{"type":"method","name":"load","children":[],"call":["param value= ","param nil? ","@params [] ","data each ","@params []  value= ","@params []  nil? ","@@params [] s [] "]}," Plugin Database build":{"type":"method","name":"build","children":[],"call":["data []= "," class adapter_name "," class ","Hash  [] ","p value ","p name ","@params map ","Hash  []  []= "]}," Plugin Database initialize":{"type":"method","name":"initialize","children":[],"call":["@params add default ","@params add ","Redmine Installer ConfigParams  new ","@params add hide ","Redmine Installer ConfigParams  new  add default ","Redmine Installer ConfigParams  new  add ","Redmine Installer ConfigParams  new  add hide "]}," Plugin Database restore_all":{"type":"method","name":"restore_all","children":[],"call":[]}," Plugin Database backup_all":{"type":"method","name":"backup_all","children":[],"call":[]}," Plugin Database load_all":{"type":"method","name":"load_all","children":[],"call":[]}," Plugin Base title":{"type":"method","name":"title","children":[],"call":[]}," Plugin Base all":{"type":"method","name":"all","children":[],"call":[]}," Plugin Base inherited":{"type":"method","name":"inherited","children":[],"call":[]}," Installer Install initialize":{"type":"method","name":"initialize","children":[],"call":[" check_package "," package= "]}," Helper GenerateConfig create_for":{"type":"method","name":"create_for","children":[],"call":["instance make_config "," base tmp_redmine_root "," base ","p value= "," ask ","p default ","p title ","instance params for_asking each ","instance params for_asking ","instance params "," say ","instance class title ","instance class ","answer new ","answer nil? "," choose ","choices []= "," t ","m title ","type all each ","type all ","p hide ","answer new  make_config ","answer new  params for_asking each ","answer new  params for_asking ","answer new  params ","answer new  class title ","answer new  class "," choose  new "," choose  nil? "]}," Installer Git error":{"type":"method","name":"error","children":[],"call":[]}," Installer Git copy_and_fetch":{"type":"method","name":"copy_and_fetch","children":[],"call":[]}," Installer Git clone":{"type":"method","name":"clone","children":[],"call":[]}," String underscore":{"type":"method","name":"underscore","children":[],"call":["_ + ","1 downcase ","(send\n  (self) :gsub\n  (regexp\n    (str \"\\\\A([A-Z])\")\n    (regopt))) gsub "," gsub "]}," String camelize":{"type":"method","name":"camelize","children":[],"call":["1 upcase ","(send\n  (self) :gsub\n  (regexp\n    (str \"/(.?)\")\n    (regopt))) gsub "," gsub "]}," Module class_name":{"type":"method","name":"class_name","children":[],"call":[" name split last "," name split "," name "]}," Installer Exec redirect_stream":{"type":"method","name":"redirect_stream","children":[],"call":["out puts ","stream gets ","Thread  new "]}," Installer Exec print_result":{"type":"method","name":"print_result","children":[],"call":["out flush ","out print ","out puts "]}," Installer Exec stop_timer":{"type":"method","name":"stop_timer","children":[],"call":[" print ","  * ","@timer kill "]}," Installer Exec start_timer":{"type":"method","name":"start_timer","children":[],"call":[" sleep "," printf ","seconds divmod ","counter divmod "," loop ","Thread  new "]}," Installer Exec show_title":{"type":"method","name":"show_title","children":[],"call":["$stdout print "," start_timer "]}," Installer Exec repeat?":{"type":"method","name":"repeat?","children":[],"call":[" confirm "]}," Installer Exec print_error":{"type":"method","name":"print_error","children":[],"call":["$stderr flush ","$stderr puts "," colorize ","message << "," stderr "]}," Installer Exec run":{"type":"method","name":"run","children":[],"call":[" success "," run "," repeat? "," print_result ","exit_status success? "," stop_timer ","stderr read ","stdout read ","wait_thr value ","Open3  popen3 "," show_title ","wait_thr value  success? "]}," Installer Exec with_timer":{"type":"method","name":"with_timer","children":[],"call":["$stdout tty? "]}," Installer Exec with_title":{"type":"method","name":"with_title","children":[],"call":["I18n  translate ","title is_a? ","I18n  translate  is_a? "]}," Installer Exec initialize":{"type":"method","name":"initialize","children":[],"call":[" with_timer "," with_title "]}," Installer ConfigParam default":{"type":"method","name":"default","children":[],"call":[" value= "," value nil? "," value "," default= ","value nil? "]}," Installer ConfigParam set":{"type":"method","name":"set","children":[],"call":[" send "]}," Installer ConfigParam title":{"type":"method","name":"title","children":[],"call":["out << "," note "," name capitalize "," name "," name capitalize  << "]}," Installer ConfigParam initialize":{"type":"method","name":"initialize","children":[],"call":[" set ","@@attributes each "]}," Installer ConfigParam attribute":{"type":"method","name":"attribute","children":[],"call":[]}," Installer ConfigParams map":{"type":"method","name":"map","children":[],"call":["@params map "]}," Installer ConfigParams each":{"type":"method","name":"each","children":[],"call":["@params each "]}," Installer ConfigParams add":{"type":"method","name":"add","children":[],"call":["@params << ","ConfigParam  new ","@ConfigParam  new s << "]}," Installer ConfigParams for_asking":{"type":"method","name":"for_asking","children":[],"call":["p ask ","@params select "]}," Installer ConfigParams []":{"type":"method","name":"[]","children":[],"call":["p name == ","p name ","@params detect "]}," Installer ConfigParams initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Installer Command get_bundle_env":{"type":"method","name":"get_bundle_env","children":[],"call":["env include? "]}," Installer Command get_rails_env":{"type":"method","name":"get_rails_env","children":[],"call":["env include? "]}," Installer Command run":{"type":"method","name":"run","children":[],"call":[" run "," confirm ","Kernel  system "," puts ","args join "," colorize "," translate ","title is_a? ","args pop ","args dup "," raise ","I18n  translate "," error "," translate  is_a? ","args pop  is_a? "]}," Installer Command rake_generate_secret_token":{"type":"method","name":"rake_generate_secret_token","children":[],"call":[" run "," get_rails_env "]}," Installer Command rake_redmine_plugin_migrate":{"type":"method","name":"rake_redmine_plugin_migrate","children":[],"call":[" run "," get_rails_env "]}," Installer Command rake_db_migrate":{"type":"method","name":"rake_db_migrate","children":[],"call":[" run "," get_rails_env "]}," Installer Command rake_db_create":{"type":"method","name":"rake_db_create","children":[],"call":[" run "," get_rails_env "]}," Installer Command bundle_install":{"type":"method","name":"bundle_install","children":[],"call":[" run "," get_bundle_env "]}," Installer CLI run_action":{"type":"method","name":"run_action","children":[],"call":[]}," Installer CLI start":{"type":"method","name":"start","children":[],"call":[]}," Installer CLI spec":{"type":"method","name":"spec","children":[],"call":[]}," Installer Backup run":{"type":"method","name":"run","children":[],"call":["Redmine Installer Profile  save "," options [] nil? "," options [] "," options ","Redmine Installer Profile  load "]}," Installer Backup initialize":{"type":"method","name":"initialize","children":[],"call":[" redmine_root= "]}," EasyProject upgrade":{"type":"method","name":"upgrade","children":[],"call":[]}," EasyProject install":{"type":"method","name":"install","children":[],"call":[]}," EasyProject Command rake_easyproject_install":{"type":"method","name":"rake_easyproject_install","children":[],"call":[" run "," get_rails_env "]}," Installer ConfigParam hide":{"type":"method","name":"hide","children":[],"call":[" hide= ","value nil? "]}," Plugin Database PostgreSQL command_for_empty":{"type":"method","name":"command_for_empty","children":[],"call":[]}," Plugin Database MySQL command_for_empty":{"type":"method","name":"command_for_empty","children":[],"call":[" get "," command_args "]}," Installer Utils Methods root?":{"type":"method","name":"root?","children":[],"call":["Process  euid == ","Process  euid "]}," Installer Utils Methods windows?":{"type":"method","name":"windows?","children":[],"call":["RbConfig CONFIG  [] =~ ","RbConfig CONFIG  [] "]}," Step LoadPackage load_from_git":{"type":"method","name":"load_from_git","children":[],"call":[" get_tmp_redmine_root ","Git  copy_and_fetch "," base redmine_root "," base ","Git  clone "," base options [] "," base options "," base package ","Dir  mktmpdir "]}," Step LoadPackage download_redmine":{"type":"method","name":"download_redmine","children":[],"call":[" base package= ","@tmpfile path "," base ","@tmpfile close "," say ","progressbar finish ","data size ","progressbar progress ","@tmpfile write ","http get ","ProgressBar  create ","head [] to_i ","head [] "," error ","head is_a? ","http request_head ","Net HTTP  start ","uri port ","uri host "," URI ","@tmpfile binmode ","Tempfile  new ","Tempfile  new  path ","Tempfile  new  close ","ProgressBar  create  finish ","ProgressBar  create  progress ","Tempfile  new  write ","http request_head  [] to_i ","http request_head  [] ","http request_head  is_a? ","http request_http request_head  "," URI  port "," URI  host ","Tempfile  new  binmode "]}," Step LoadPackage load_from_archive":{"type":"method","name":"load_from_archive","children":[],"call":[" get_tmp_redmine_root "," extract_to_tmp "]}," Step LoadPackage final":{"type":"method","name":"final","children":[],"call":[" say "," t "," base redmine_root "," base "," down "]}," Step LoadPackage down":{"type":"method","name":"down","children":[],"call":["FileUtils  safe_unlink ","FileUtils  remove_entry_secure "]}," Step LoadPackage prepare":{"type":"method","name":"prepare","children":[],"call":[" error "," base options [] "," base options "," base ","SUPPORTED_ARCHIVE_FORMATS  join "," base package ","SUPPORTED_ARCHIVE_FORMATS  include? ","File  extname ","File  exist? "," download_redmine "," base package =~ "]}," Step EnvCheck up":{"type":"method","name":"up","children":[],"call":[" say "]}," Step EnvCheck prepare":{"type":"method","name":"prepare","children":[],"call":[" error "," confirm ! "," confirm "," root? "]}," Step Base final":{"type":"method","name":"final","children":[],"call":[]}," Step Base prepare":{"type":"method","name":"prepare","children":[],"call":[]}," Step Backup final":{"type":"method","name":"final","children":[],"call":[" say "," t "]}," EasyProject final":{"type":"method","name":"final","children":[],"call":[]}," Plugin RedminePlugin final":{"type":"method","name":"final","children":[],"call":[]}," RedmineInstaller print_logo":{"type":"method","name":"print_logo","children":[],"call":[]}," RedmineInstaller pastel":{"type":"method","name":"pastel","children":[],"call":[]}," RedmineInstaller prompt":{"type":"method","name":"prompt","children":[],"call":[]}," RedmineInstaller logger":{"type":"method","name":"logger","children":[],"call":[]}," RedmineInstaller Utils error":{"type":"method","name":"error","children":[],"call":[" raise "]}," RedmineInstaller Utils print_title":{"type":"method","name":"print_title","children":[],"call":[" puts "," pastel white on_black "," pastel white "," pastel "]}," RedmineInstaller Utils create_dir":{"type":"method","name":"create_dir","children":[],"call":[" error "," create_dir "," prompt yes? "," prompt ","FileUtils  mkdir_p "]}," RedmineInstaller Utils env_user":{"type":"method","name":"env_user","children":[],"call":["ENV  [] "]}," RedmineInstaller Utils ok":{"type":"method","name":"ok","children":[],"call":[" raise "," puts "," pastel red "," pastel "," pastel green "," print "]}," RedmineInstaller Utils run_command":{"type":"method","name":"run_command","children":[],"call":["RedmineInstaller Command  new run ","RedmineInstaller Command  new "]}," RedmineInstaller Utils pastel":{"type":"method","name":"pastel","children":[],"call":["RedmineInstaller  pastel "]}," RedmineInstaller Utils prompt":{"type":"method","name":"prompt","children":[],"call":["RedmineInstaller  prompt "]}," RedmineInstaller Utils logger":{"type":"method","name":"logger","children":[],"call":["RedmineInstaller  logger "]}," RedmineInstaller Utils class_name":{"type":"method","name":"class_name","children":[],"call":[" class name split last "," class name split "," class name "," class "]}," RedmineInstaller Upgrade down":{"type":"method","name":"down","children":[],"call":[" puts "," pastel bold "," logger path "," logger "," pastel ","@target_redmine database backup ","@target_redmine database ","@target_redmine database backuped? ","@package clean_up ","@temp_redmine clean_up "]}," RedmineInstaller Upgrade up":{"type":"method","name":"up","children":[],"call":["profile save ","@target_redmine save_profile ","Profile  new "," prompt yes? "," prompt ","@profile nil? "," logger info "," logger "," puts "," pastel bold "," pastel "," logger move_to "," ok ","@package clean_up ","@target_redmine move_from ","@target_redmine delete_root "," print_title ","@temp_redmine upgrade ","@temp_redmine copy_missing_plugins_from ","@temp_redmine copy_importants_from ","@target_redmine make_backup ","@temp_redmine root= ","@package redmine_root ","@package extract ","@package ensure_and_valid_package ","@target_redmine check_running_state ","@target_redmine validate ","@target_redmine ensure_and_valid_root ","@environment check ","@target_redmine load_profile ","Profile  get! "," options profile "," options ","@package_config check_version ","@temp_redmine validate ","Profile  new  save ","@target_redmine save_Profile  new  ","@Profile  new  nil? ","Profile  get!  nil? ","@target_redmine load_Profile  new  "," options Profile  new  "]}," RedmineInstaller TaskModule initialize":{"type":"method","name":"initialize","children":[],"call":[]}," RedmineInstaller Task down":{"type":"method","name":"down","children":[],"call":[]}," RedmineInstaller Task up":{"type":"method","name":"up","children":[],"call":[" raise "]}," RedmineInstaller Task run":{"type":"method","name":"run","children":[],"call":[" down "," puts "," pastel red ","e message "," pastel "," logger error ","e backtrace "," logger "," up "]}," RedmineInstaller Task initialize":{"type":"method","name":"initialize","children":[],"call":[" logger info "," env_user "," logger "," class_name ","OpenStruct  new "]}," TestPrompt initialize":{"type":"method","name":"initialize","children":[],"call":["Pastel  new "]}," RedmineInstaller Redmine load_database_dump":{"type":"method","name":"load_database_dump","children":[],"call":[" logger info "," logger ","@database do_restore ","selected == "," prompt select "," prompt ","@database_dump_to_load nil? "," load_database_dump_from_package "," task package_config dump_compatible? "," task package_config "," task "," task package_config dump_attached? "," load_database_dump_from_file "," prompt select  == "]}," RedmineInstaller Redmine easyproject?":{"type":"method","name":"easyproject?","children":[],"call":["Dir  entries include? ","Dir  entries "," plugins_path "]}," RedmineInstaller Redmine rake_easyproject_install":{"type":"method","name":"rake_easyproject_install","children":[],"call":[" error "," rake_easyproject_install "," prompt select "," prompt "," puts "," run_command "," without_env "]}," RedmineInstaller Redmine rake_generate_secret_token":{"type":"method","name":"rake_generate_secret_token","children":[],"call":[" error "," logger warn "," logger "," rake_generate_secret_token "," prompt select "," prompt "," puts "," run_command "]}," RedmineInstaller Redmine rake_redmine_plugin_migrate":{"type":"method","name":"rake_redmine_plugin_migrate","children":[],"call":[" error "," logger warn "," logger "," rake_redmine_plugin_migrate "," prompt select "," prompt "," puts "," run_command "]}," RedmineInstaller Redmine rake_db_migrate":{"type":"method","name":"rake_db_migrate","children":[],"call":[" error "," rake_db_migrate "," create_database_yml "," rake_db_create "," prompt select "," prompt "," puts "," run_command "]}," RedmineInstaller Redmine rake_db_create":{"type":"method","name":"rake_db_create","children":[],"call":[" run_command "]}," RedmineInstaller Redmine bundle_install":{"type":"method","name":"bundle_install","children":[],"call":[" error "," bundle_install "," task options bundle_options= "," prompt ask "," task options bundle_options "," task options "," task "," prompt "," prompt select "," puts ","File  exist? ! ","File  exist? ","status ! "," run_command ","File  join "," root "," run_command  ! "]}," RedmineInstaller Redmine clean_up":{"type":"method","name":"clean_up","children":[],"call":[]}," RedmineInstaller Redmine valid_options":{"type":"method","name":"valid_options","children":[],"call":[" error ","File  exist? ! ","File  exist? ","(and\n  (send\n    (const nil :File) :exist?\n    (ivar :@database_dump_to_load))\n  (send\n    (const nil :File) :file?\n    (ivar :@database_dump_to_load))) ! ","File  file? "]}," RedmineInstaller Redmine make_backup":{"type":"method","name":"make_backup","children":[],"call":[" logger info "," logger "," puts ","@database backup ","@database make_backup ","Database  init ","progressbar finish ","progressbar advance ","zipfile add ","files_to_backup each ","TTY ProgressBar  new ","files_to_backup size ","Zip File  open ","Dir  chdir "," root ","File  join ","path start_with? ","files_to_backup delete_if ","files_to_backup any? ","Dir  glob "," create_dir ","Time  now strftime ","Time  now ","File  expand_path "," prompt ask "," prompt "," make_backup "," prompt yes? ","@backup_type == "," prompt select "," print_title ","Database  init  backup ","Database  init  make_backup ","TTY ProgressBar  new  finish ","TTY ProgressBar  new  advance ","Dir  glob  each ","Dir  glob  size ","Dir  glob  delete_if ","Dir  glob  any? "]}," RedmineInstaller Redmine validate":{"type":"method","name":"validate","children":[],"call":[" error ","File  directory? ","Dir  glob each ","Dir  glob ","File  join "," root ","File  exist? ","REQUIRED_FILES  each ","Dir  chdir "]}," RedmineInstaller Redmine copy_missing_plugins_from":{"type":"method","name":"copy_missing_plugins_from","children":[],"call":["FileUtils  cp_r ","File  exist? ","File  join "," easy_plugins_path ","File  basename ","File  directory? ! ","File  directory? ","old_modifications each ","Dir  glob ","other_redmine easy_plugins_path "," easyproject? ","Dir  exist? "," plugins_path ","plugin == ","Dir  entries each ","Dir  entries ","Dir  chdir ","other_redmine plugins_path "," logger info "," logger ","missing each "," prompt yes? ! "," prompt yes? ","missing_plugin_names join "," prompt "," puts ","missing empty? ","missing map ","missing << "," yield_missing_plugins ","File  File  basename  ","File  direcFile  join ry? ! ","File  direcFile  join ry? ","Dir  glob  each "]}," RedmineInstaller Redmine copy_importants_from":{"type":"method","name":"copy_importants_from","children":[],"call":[" logger info "," logger ","FileUtils  cp_r ","FileUtils  mkdir_p ","File  join ","File  dirname "," root ","File  exist? ","other_redmine root "," Array each "," Array "," task options keep "," task options "," task ","FileUtils  cp "," log_path ","Dir  glob each ","Dir  glob ","other_redmine log_path ","other_redmine files_path "," configuration_yml_path ","other_redmine configuration_yml_path "," database_yml_path ","other_redmine database_yml_path ","Dir  chdir ","other_redmine bundle_path "," bundle_path ","Dir  exist? ","FileUtils  ln_s ","FileUtils  rm_rf "," files_path "," task options copy_files_with_symlink "," gemfile_local_path ","other_redmine gemfile_local_path "]}," RedmineInstaller Redmine move_from":{"type":"method","name":"move_from","children":[],"call":[" logger info "," root ","other_redmine root "," logger ","FileUtils  mv ","entry == ","Dir  entries each ","Dir  entries ","Dir  chdir ","FileUtils  rm "," task options copy_files_with_symlink "," task options "," task ","File  write ","index to_yaml ","path sub! ","plugin_paths each ","plugin_paths is_a? ","index [] ","index has_key? ","paths each ","load_paths each ","load_paths is_a? ","YAML  load_file ","File  exist? ","File  join ","Dir  pwd ","YAML  load_file  to_yaml ","index []  each ","index []  is_a? ","YAML  load_file  [] ","YAML  load_file  has_key? "]}," RedmineInstaller Redmine delete_root":{"type":"method","name":"delete_root","children":[],"call":[" logger info "," root "," logger ","FileUtils  remove_entry_secure ","entry == ","Dir  entries each ","Dir  entries ","Dir  chdir "," task options copy_files_with_symlink "," task options "," task ","STDIN  getch "," print_title ","Cannot automatically empty  + + ","Cannot automatically empty  + ","Cannot automatically empty  + + + + + + ","Cannot automatically empty  + + + + + ","Cannot automatically empty  + + + + ","Cannot automatically empty  + + + "]}," RedmineInstaller Redmine upgrade":{"type":"method","name":"upgrade","children":[],"call":[" rake_easyproject_install "," easyproject? "," rake_generate_secret_token "," rake_redmine_plugin_migrate "," rake_db_migrate "," bundle_install ","FileUtils  rm_f ","Dir  chdir "," root "," print_title "]}," RedmineInstaller Redmine install":{"type":"method","name":"install","children":[],"call":[" rake_easyproject_install "," easyproject? "," rake_generate_secret_token "," rake_redmine_plugin_migrate "," rake_db_migrate "," load_database_dump "," rake_db_create "," bundle_install ","FileUtils  rm_f ","Dir  chdir "," root "," print_title "]}," RedmineInstaller Redmine create_configuration_yml":{"type":"method","name":"create_configuration_yml","children":[],"call":[" logger info "," logger ","Configuration  create_config "," print_title "]}," RedmineInstaller Redmine create_database_yml":{"type":"method","name":"create_database_yml","children":[],"call":[" logger info "," logger ","Database  create_config "," print_title "]}," RedmineInstaller Redmine check_running_state":{"type":"method","name":"check_running_state","children":[],"call":[" error "," logger warn "," pids_files join "," pids_files "," logger "," prompt yes? "," prompt "," running? "]}," RedmineInstaller Redmine ensure_and_valid_root":{"type":"method","name":"ensure_and_valid_root","children":[],"call":[" error ","inaccessible_files join "," env_user ","inaccessible_files any? ","inaccessible_files size > ","inaccessible_files size ","inaccessible_files << ","File  readable? ! ","File  readable? ","File  writable? ! ","File  writable? ","Find  find each ","Find  find "," logger info "," logger "," create_dir ","Dir  exist? ","File  expand_path "," prompt ask "," prompt "," puts "," root empty? "," root ","unwritable_directories join ","unwritable_directories any? ","unwritable_directories << ","all_directories each ","all_directories uniq! ","unreadable_files join ","unreadable_files any? ","all_directories << ","File  dirname ","unreadable_files << ","unreadable_files size > ","unreadable_files size ","item != "]}," RedmineInstaller Redmine save_profile":{"type":"method","name":"save_profile","children":[],"call":["profile backup_root= ","profile backup_type= ","profile redmine_root= "]}," RedmineInstaller Redmine load_profile":{"type":"method","name":"load_profile","children":[],"call":["(sym :full) include? ","profile backup_dir ","profile backup_root ","profile backup_type ","profile redmine_root "," root empty? "," root "]}," RedmineInstaller Redmine running?":{"type":"method","name":"running?","children":[],"call":[" pids_files any? "," pids_files "]}," RedmineInstaller Redmine pids_files":{"type":"method","name":"pids_files","children":[],"call":["Dir  glob ","File  join "," root "]}," RedmineInstaller Redmine log_path":{"type":"method","name":"log_path","children":[],"call":["File  join "," root "]}," RedmineInstaller Redmine easy_plugins_path":{"type":"method","name":"easy_plugins_path","children":[],"call":["File  join "," plugins_path "]}," RedmineInstaller Redmine plugins_path":{"type":"method","name":"plugins_path","children":[],"call":["File  join "," root "]}," RedmineInstaller Redmine files_path":{"type":"method","name":"files_path","children":[],"call":["File  join "," root "]}," RedmineInstaller Redmine configuration_yml_path":{"type":"method","name":"configuration_yml_path","children":[],"call":["File  join "," root "]}," RedmineInstaller Redmine database_yml_path":{"type":"method","name":"database_yml_path","children":[],"call":["File  join "," root "]}," RedmineInstaller Redmine initialize":{"type":"method","name":"initialize","children":[],"call":["File  expand_path ","task options database_dump ","task options ","root to_s ","task options database_task options database_dump  "]}," RedmineInstaller Profile save":{"type":"method","name":"save","children":[],"call":[" puts ","e message ","File  write ","YAML  dump ","all_data []= "," to_h ","all_data keys last to_i + ","all_data keys last to_i ","all_data keys last ","all_data keys ","all_data is_a? ","YAML  load_file ","FileUtils  touch ","YAML  load_file  []= ","YAML  load_file  keys last to_i + ","YAML  load_file  keys last to_i ","YAML  load_file  keys last ","YAML  load_file  keys ","YAML  load_file  is_a? "]}," RedmineInstaller Profile initialize":{"type":"method","name":"initialize","children":[],"call":[]}," RedmineInstaller Profile get!":{"type":"method","name":"get!","children":[],"call":[]}," NilClass present?":{"type":"method","name":"present?","children":[],"call":[]}," NilClass blank?":{"type":"method","name":"blank?","children":[],"call":[]}," String present?":{"type":"method","name":"present?","children":[],"call":[" blank? ! "," blank? "]}," String blank?":{"type":"method","name":"blank?","children":[],"call":[" empty? "]}," Object present?":{"type":"method","name":"present?","children":[],"call":[]}," Object blank?":{"type":"method","name":"blank?","children":[],"call":[]}," RedmineInstaller Package extract_tar_gz":{"type":"method","name":"extract_tar_gz","children":[],"call":["progressbar finish ","progressbar advance ","File  symlink ","entry header linkname ","entry header ","entry header typeflag == ","entry header typeflag ","FileUtils  chmod ","entry header mode ","f write ","entry read ","File  open ","FileUtils  rm_rf ","File  file? ","entry file? ","FileUtils  mkdir_p ","File  directory? ","entry directory? ","File  join ","entry full_name ","entry read strip ","entry full_name == ","tar each ","tar rewind ","TTY ProgressBar  new ","tar count ","Gem Package TarReader  new ","Zlib GzipReader  open ","keyword == ","meta split ","header split ","pax_headers each ","entry read split ","TTY ProgressBar  new  finish ","TTY ProgressBar  new  advance ","entry read split  each "]}," RedmineInstaller Package extract_zip":{"type":"method","name":"extract_zip","children":[],"call":["progressbar finish ","progressbar advance ","entry extract ","FileUtils  mkdir_p ","File  dirname ","File  join ","entry name ","zip_file each ","TTY ProgressBar  new ","zip_file size ","Zip File  open ","TTY ProgressBar  new  finish ","TTY ProgressBar  new  advance "]}," RedmineInstaller Package download_redmine":{"type":"method","name":"download_redmine","children":[],"call":["@temp_file path ","@temp_file close "," logger info "," logger ","progressbar finish ","progressbar advance ","data size ","@temp_file write ","http get ","TTY ProgressBar  new ","head [] to_i ","head [] "," print_title "," error ","head is_a? ","http request_head ","Net HTTP  start ","uri port ","uri host "," URI ","@temp_file binmode ","Tempfile  new ","Tempfile  new  path ","Tempfile  new  close ","TTY ProgressBar  new  finish ","TTY ProgressBar  new  advance ","Tempfile  new  write ","http request_head  [] to_i ","http request_head  [] ","http request_head  is_a? ","http request_http request_head  "," URI  port "," URI  host ","Tempfile  new  binmode "]}," RedmineInstaller Package clean_up":{"type":"method","name":"clean_up","children":[],"call":["FileUtils  remove_entry_secure "]}," RedmineInstaller Package redmine_root":{"type":"method","name":"redmine_root","children":[],"call":["ls first ","ls size == ","ls size ","Dir  glob ","File  join "," loop ","Dir  glob  first ","Dir  glob  size == ","Dir  glob  size "]}," RedmineInstaller Package extract":{"type":"method","name":"extract","children":[],"call":[" logger info "," logger "," extract_tar_gz "," extract_zip ","Dir  mktmpdir "," print_title "]}," RedmineInstaller Package ensure_and_valid_package":{"type":"method","name":"ensure_and_valid_package","children":[],"call":[" error ","SUPPORTED_ARCHIVE_FORMATS  join ","SUPPORTED_ARCHIVE_FORMATS  include? ","File  extname "," download_redmine ","@package =~ ","File  exist? ! ","File  exist? "," prompt ask "," prompt "," package empty? "," package "," download_from_url "," valid_url? "," download_redmine_version "," download_redmine  =~ "," prompt ask  =~ "," download_from_url  =~ "," download_redmine_version  =~ "]}," RedmineInstaller Package initialize":{"type":"method","name":"initialize","children":[],"call":["package to_s "]}," RedmineInstaller Logger log":{"type":"method","name":"log","children":[],"call":["@output flush ","@output puts ","messages each "]}," RedmineInstaller Logger std":{"type":"method","name":"std","children":[],"call":[" log "]}," RedmineInstaller Logger warn":{"type":"method","name":"warn","children":[],"call":[" log "]}," RedmineInstaller Logger error":{"type":"method","name":"error","children":[],"call":[" log "]}," RedmineInstaller Logger info":{"type":"method","name":"info","children":[],"call":[" log "]}," RedmineInstaller Logger move_to":{"type":"method","name":"move_to","children":[],"call":["File  open ","FileUtils  mv "," path ","FileUtils  mkdir_p ","redmine log_path ","File  join ","Time  now strftime ","Time  now "," close "]}," RedmineInstaller Logger close":{"type":"method","name":"close","children":[],"call":["@output close ","@output flush "]}," RedmineInstaller Logger finish":{"type":"method","name":"finish","children":[],"call":["f write ","File  open "," path ","Digest SHA256  file hexdigest ","Digest SHA256  file "," close ","Digest SHA256  file hexDigest SHA256  file hexdigest  "]}," RedmineInstaller Logger path":{"type":"method","name":"path","children":[],"call":["@output path "]}," RedmineInstaller Logger initialize":{"type":"method","name":"initialize","children":[],"call":["Tempfile  create ","File  open ","ENV  [] "]}," RedmineInstaller Logger verify":{"type":"method","name":"verify","children":[],"call":[]}," RedmineInstaller Install down":{"type":"method","name":"down","children":[],"call":[" puts "," pastel bold "," logger path "," logger "," pastel ","@package clean_up ","@temp_redmine clean_up "]}," RedmineInstaller Install up":{"type":"method","name":"up","children":[],"call":[" logger info "," logger "," puts "," pastel bold "," pastel "," logger move_to "," ok ","@package clean_up ","@target_redmine move_from ","@target_redmine delete_root "," print_title ","@temp_redmine install ","@temp_redmine create_configuration_yml ","@temp_redmine create_database_yml ","@temp_redmine root= ","@package redmine_root ","@package extract ","@package ensure_and_valid_package ","@target_redmine ensure_and_valid_root ","@environment check ","@temp_redmine valid_options ","@package_config check_version ","@temp_redmine validate "]}," RedmineInstaller Install initialize":{"type":"method","name":"initialize","children":[],"call":["Redmine  new ","Package  new ","Environment  new ","PackageConfig  new "]}," RedmineInstaller Environment user_is_root?":{"type":"method","name":"user_is_root?","children":[],"call":["Process  euid == ","Process  euid "]}," RedmineInstaller Environment check":{"type":"method","name":"check","children":[],"call":[" logger info "," logger "," error ","Gem Version  new < ","Gem Version  new "," task options enable_user_root ! "," task options enable_user_root "," task options "," task "," user_is_root? "," puts "," pastel on_red "," pastel "," mysql_version =~ "," mysql_version "," mysql_version include? "]}," RedmineInstaller Database PostgreSQL restore_command":{"type":"method","name":"restore_command","children":[],"call":[" command_args "," cli_password "]}," RedmineInstaller Database PostgreSQL backup_command":{"type":"method","name":"backup_command","children":[],"call":[" command_args "," cli_password "]}," RedmineInstaller Database PostgreSQL drop_database_command":{"type":"method","name":"drop_database_command","children":[],"call":[" command_args "," cli_password "]}," RedmineInstaller Database PostgreSQL create_database_command":{"type":"method","name":"create_database_command","children":[],"call":[" command_args "," cli_password "]}," RedmineInstaller Database PostgreSQL cli_password":{"type":"method","name":"cli_password","children":[],"call":["@password present? "]}," RedmineInstaller Database PostgreSQL command_args":{"type":"method","name":"command_args","children":[],"call":["args join ","args << ","@username to_s empty? ","@username to_s ","@port to_s empty? ","@port to_s ","@host to_s empty? ","@host to_s "]}," RedmineInstaller Database PostgreSQL adapter_name":{"type":"method","name":"adapter_name","children":[],"call":[]}," RedmineInstaller Database PostgreSQL default_port":{"type":"method","name":"default_port","children":[],"call":[]}," RedmineInstaller Database MySQL restore_command":{"type":"method","name":"restore_command","children":[],"call":[" command_args "]}," RedmineInstaller Database MySQL backup_command":{"type":"method","name":"backup_command","children":[],"call":[" command_args "]}," RedmineInstaller Database MySQL drop_database_command":{"type":"method","name":"drop_database_command","children":[],"call":[" command_args "]}," RedmineInstaller Database MySQL create_database_command":{"type":"method","name":"create_database_command","children":[],"call":[" command_args "]}," RedmineInstaller Database MySQL command_args":{"type":"method","name":"command_args","children":[],"call":["args join ","args << ","@password to_s empty? ","@password to_s ","@username to_s empty? ","@username to_s ","@port to_s empty? ","@port to_s ","@host to_s empty? ","@host to_s "]}," RedmineInstaller Database MySQL adapter_name":{"type":"method","name":"adapter_name","children":[],"call":[]}," RedmineInstaller Database MySQL default_port":{"type":"method","name":"default_port","children":[],"call":[]}," RedmineInstaller Database Base to_s":{"type":"method","name":"to_s","children":[],"call":[" class_name "]}," RedmineInstaller Database Base build":{"type":"method","name":"build","children":[],"call":["data []= ","@password present? ","@username present? "," adapter_name "]}," RedmineInstaller Database Base do_restore":{"type":"method","name":"do_restore","children":[],"call":["Kernel  system "," restore_command "," puts "," create_database_command "," drop_database_command "]}," RedmineInstaller Database Base make_backup":{"type":"method","name":"make_backup","children":[],"call":["Kernel  system "," backup_command ","File  join "," puts "]}," RedmineInstaller Database Base make_config":{"type":"method","name":"make_config","children":[],"call":["f puts ","YAML  dump "," build ","File  open ","@redmine database_yml_path "]}," RedmineInstaller Database Base set_paramaters":{"type":"method","name":"set_paramaters","children":[],"call":["definition [] "]}," RedmineInstaller Database Base get_parameters":{"type":"method","name":"get_parameters","children":[],"call":[" prompt ask "," lambda "," default_port "," prompt "," prompt mask "]}," RedmineInstaller Database Base backuped?":{"type":"method","name":"backuped?","children":[],"call":["File  exist? "]}," RedmineInstaller Database Base initialize":{"type":"method","name":"initialize","children":[],"call":[]}," RedmineInstaller Database init":{"type":"method","name":"init","children":[],"call":[]}," RedmineInstaller Database create_config":{"type":"method","name":"create_config","children":[],"call":[]}," RedmineInstaller Configuration SendMail to_s":{"type":"method","name":"to_s","children":[],"call":[]}," RedmineInstaller Configuration SendMail delivery_settings":{"type":"method","name":"delivery_settings","children":[],"call":[]}," RedmineInstaller Configuration SendMail delivery_method":{"type":"method","name":"delivery_method","children":[],"call":[]}," RedmineInstaller Configuration SendMail get_parameters":{"type":"method","name":"get_parameters","children":[],"call":[" prompt ask "," prompt "]}," RedmineInstaller Configuration CustomConfiguration get_parameters":{"type":"method","name":"get_parameters","children":[],"call":[" prompt yes? "," prompt "," prompt ask "," lambda "]}," RedmineInstaller Configuration Gmail get_parameters":{"type":"method","name":"get_parameters","children":[],"call":[]}," RedmineInstaller Configuration Nothing to_s":{"type":"method","name":"to_s","children":[],"call":[]}," RedmineInstaller Configuration Nothing make_config":{"type":"method","name":"make_config","children":[],"call":[]}," RedmineInstaller Configuration Nothing get_parameters":{"type":"method","name":"get_parameters","children":[],"call":[]}," RedmineInstaller Configuration Base to_s":{"type":"method","name":"to_s","children":[],"call":[" class_name "]}," RedmineInstaller Configuration Base delivery_settings":{"type":"method","name":"delivery_settings","children":[],"call":["settings []= ","@openssl_verify to_s empty? ","@openssl_verify to_s ","@enable_starttls to_s empty? ","@enable_starttls to_s ","@password to_s empty? ","@password to_s ","@user_name to_s empty? ","@user_name to_s ","@domain to_s empty? ","@domain to_s ","@authentication to_s empty? ","@authentication to_s ","@enable_tls to_s empty? ","@enable_tls to_s ","@authentication to_sym "]}," RedmineInstaller Configuration Base delivery_method":{"type":"method","name":"delivery_method","children":[],"call":[]}," RedmineInstaller Configuration Base build":{"type":"method","name":"build","children":[],"call":[" delivery_settings "," delivery_method "]}," RedmineInstaller Configuration Base make_config":{"type":"method","name":"make_config","children":[],"call":["f puts ","YAML  dump "," build ","File  open ","@redmine configuration_yml_path "]}," RedmineInstaller Configuration Base get_parameters":{"type":"method","name":"get_parameters","children":[],"call":[" prompt mask "," prompt "," prompt ask "]}," RedmineInstaller Configuration Base initialize":{"type":"method","name":"initialize","children":[],"call":[]}," RedmineInstaller Configuration create_config":{"type":"method","name":"create_config","children":[],"call":[]}," RedmineInstaller Command SilentFormatter print_end":{"type":"method","name":"print_end","children":[],"call":[" puts ","@spinner error ","@spinner success "]}," RedmineInstaller Command SilentFormatter print_line":{"type":"method","name":"print_line","children":[],"call":["@output << "]}," RedmineInstaller Command SilentFormatter print_title":{"type":"method","name":"print_title","children":[],"call":["@spinner auto_spin ","TTY Spinner  new "," pastel red "," pastel "," pastel green "," pastel yellow ","TTY Spinner  new  auto_spin "]}," RedmineInstaller Command SilentFormatter initialize":{"type":"method","name":"initialize","children":[],"call":[]}," RedmineInstaller Command FullFormatter print_end":{"type":"method","name":"print_end","children":[],"call":[]}," RedmineInstaller Command FullFormatter print_line":{"type":"method","name":"print_line","children":[],"call":[" puts "]}," RedmineInstaller Command FullFormatter print_title":{"type":"method","name":"print_title","children":[],"call":[" puts "," pastel yellow "," pastel "]}," RedmineInstaller Command run":{"type":"method","name":"run","children":[],"call":[" formatter print_end "," formatter ","status success? ","wait_thr value "," formatter print_line "," logger std "," logger ","output each_line ","input close ","Open3  popen2e "," cmd "," formatter print_title "," title "," run! ","Bundler  with_clean_env ","Bundler  with_unbundled_env ","status status success? ? "]}," RedmineInstaller Command initialize":{"type":"method","name":"initialize","children":[],"call":["FullFormatter  new ","SilentFormatter  new "]}," RedmineInstaller CLI parse_keep_options":{"type":"method","name":"parse_keep_options","children":[],"call":["proxy_options << ","saved [] concat ","saved [] ","switch == ","proxy_options find ","Commander Runner  instance active_command proxy_options ","Commander Runner  instance active_command ","Commander Runner  instance ","Commander Runner  instance active_command proxy_options  << ","Commander Runner  instance active_command proxy_options  find ","Commander Runner  instance active_command Commander Runner  instance active_command proxy_options  "]}," RedmineInstaller CLI run":{"type":"method","name":"run","children":[],"call":[" run! "," alias_command ","RedmineInstaller Backup  new run ","RedmineInstaller Backup  new ","args [] ","c action ","c example ","c description= ","c syntax= "," command ","RedmineInstaller Logger  verify ","RedmineInstaller Upgrade  new run ","RedmineInstaller Upgrade  new ","options __hash__ ","options default ","c option "," method ","RedmineInstaller Install  new run ","RedmineInstaller Install  new "," default_command "," global_option "," program ","RedmineInstaller RestoreDB  new run ","RedmineInstaller RestoreDB  new ","RedmineInstaller Easycheck  run "," puts ","task pastel red ","e message ","task pastel ","task pastel green ","RedmineInstaller Environment  new check ","RedmineInstaller Environment  new ","RedmineInstaller Task  new ","RedmineInstaller Task  new  pastel red ","RedmineInstaller Task  new  pastel ","RedmineInstaller Task  new  pastel green "]}," Commander UI enable_paging":{"type":"method","name":"enable_paging","children":[],"call":[]}," RedmineInstaller Backup up":{"type":"method","name":"up","children":[],"call":[" logger info "," logger "," puts "," pastel bold "," pastel ","@target_redmine make_backup ","@target_redmine check_running_state ","@target_redmine validate ","@target_redmine ensure_and_valid_root "]}," RedmineInstaller Backup initialize":{"type":"method","name":"initialize","children":[],"call":["Redmine  new "]}," Console get_char":{"type":"method","name":"get_char","children":[],"call":[" input getc "," input "," mode echo ","options [] "," mode "," mode raw "," input tty? "]}," RedmineInstaller Package download_from_url":{"type":"method","name":"download_from_url","children":[],"call":["@temp_file path ","@temp_file close "," logger info "," logger ","progressbar finish ","progressbar advance ","data size ","@temp_file write ","http get ","TTY ProgressBar  new ","head [] to_i ","head [] "," print_title "," error ","head is_a? ","http request_head ","Net HTTP  start ","uri port ","uri host ","@temp_file binmode ","Tempfile  new ","URI  parse ","Tempfile  new  path ","Tempfile  new  close ","TTY ProgressBar  new  finish ","TTY ProgressBar  new  advance ","Tempfile  new  write ","http request_head  [] to_i ","http request_head  [] ","http request_head  is_a? ","http request_http request_head  ","URI  parse  port ","URI  parse  host ","Tempfile  new  binmode "]}," RedmineInstaller Package download_redmine_version":{"type":"method","name":"download_redmine_version","children":[],"call":[" download_from_url "]}," RedmineInstaller Package valid_url?":{"type":"method","name":"valid_url?","children":[],"call":["(str \"http\") include? ","uri scheme ","URI  parse ","URI  parse  scheme "]}," RedmineInstaller RestoreDB up":{"type":"method","name":"up","children":[],"call":[" logger info "," logger "," puts "," pastel bold "," pastel ","@redmine restore_db ","@redmine check_running_state ","@redmine validate ","@redmine ensure_and_valid_root ","@redmine valid_options ","@environment check "]}," RedmineInstaller RestoreDB initialize":{"type":"method","name":"initialize","children":[],"call":["Redmine  new ","Environment  new ","database_dump to_s "]}," RedmineInstaller Redmine restore_db":{"type":"method","name":"restore_db","children":[],"call":[" rake_easyproject_install "," easyproject? "," rake_redmine_plugin_migrate "," rake_db_migrate "," load_database_dump ","Dir  chdir "," root ","Database  init "," print_title "]}," RedmineInstaller Redmine bundle_path":{"type":"method","name":"bundle_path","children":[],"call":["File  join "," root "]}," RedmineInstaller Redmine gemfile_local_path":{"type":"method","name":"gemfile_local_path","children":[],"call":["File  join "," root "]}," RedmineInstaller Redmine without_env":{"type":"method","name":"without_env","children":[],"call":["ENV  replace ","names include? ","ENV  delete_if ","ENV  clone to_hash ","ENV  clone "]}," RedmineInstaller Redmine load_database_dump_from_package":{"type":"method","name":"load_database_dump_from_package","children":[],"call":[" logger info "," logger ","@database do_restore "," task package_config sql_dump_file "," task package_config "," task "," prompt no? ! "," prompt no? "," prompt "]}," RedmineInstaller Redmine load_database_dump_from_file":{"type":"method","name":"load_database_dump_from_file","children":[],"call":[" logger info "," logger ","@database do_restore ","selected == "," prompt select "," prompt "," prompt select  == "]}," RedmineInstaller PackageConfig _options":{"type":"method","name":"_options","children":[],"call":["YAML  load_file ","File  exist? ","File  join ","@redmine root "]}," RedmineInstaller PackageConfig check_version":{"type":"method","name":"check_version","children":[],"call":[" error "," min_version ","Gem Version  new > ","Gem Version  new "]}," RedmineInstaller PackageConfig options":{"type":"method","name":"options","children":[],"call":[" _options "]}," RedmineInstaller PackageConfig dump_compatible?":{"type":"method","name":"dump_compatible?","children":[],"call":["database adapter_name start_with? "," dump_type to_s "," dump_type ","database adapter_name "]}," RedmineInstaller PackageConfig sql_dump_file":{"type":"method","name":"sql_dump_file","children":[],"call":[" dump_file ","File  binwrite ","gz read ","Zlib GzipReader  open ","File  join ","@redmine root "," dump_file end_with? "," dump_attached? ! "," dump_attached? "]}," RedmineInstaller PackageConfig dump_attached?":{"type":"method","name":"dump_attached?","children":[],"call":["File  exist? "," dump_file "]}," RedmineInstaller PackageConfig dump_file":{"type":"method","name":"dump_file","children":[],"call":["File  join "," options [] to_s "," options [] "," options ","@redmine root "]}," RedmineInstaller PackageConfig dump_type":{"type":"method","name":"dump_type","children":[],"call":[" options [] "," options "]}," RedmineInstaller PackageConfig min_version":{"type":"method","name":"min_version","children":[],"call":[" options [] "," options "]}," RedmineInstaller PackageConfig initialize":{"type":"method","name":"initialize","children":[],"call":[]}," RedmineInstaller Redmine yield_missing_plugins":{"type":"method","name":"yield_missing_plugins","children":[],"call":["File  expand_path ","Dir  exist? ","File  join ","File  directory? ","plugin == ","Dir  entries each ","Dir  entries ","Dir  chdir ","Dir  exist? ! ","File  direcFile  join ry? "]}," RedmineInstaller Easycheck run":{"type":"method","name":"run","children":[],"call":[]}," RedmineInstaller Command run!":{"type":"method","name":"run!","children":[],"call":[" formatter print_end "," formatter ","status success? ","wait_thr value "," formatter print_line "," logger std "," logger ","output each_line ","input close ","Open3  popen2e "," cmd "," formatter print_title "," title ","status status success? ? "]}," RedmineInstaller Environment mysql_version":{"type":"method","name":"mysql_version","children":[],"call":[]}}