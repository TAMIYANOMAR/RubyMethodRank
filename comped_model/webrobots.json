{" WebRobots http_get":{"type":"method","name":"http_get","children":[],"call":[" raise ","response value "," URI ","response [] ","uri to_s ","response body ","http get ","uri request_uri ","header []= ","http verify_mode= ","http use_ssl= ","uri is_a? ","Net HTTP  new ","uri port ","uri host ","10 times ","http cert_store= ","store set_default_paths ","OpenSSL X509 Store  new tap ","OpenSSL X509 Store  new ","response message ","response code ","5 times ","http get  value ","http get  [] "," URI  to_s ","http get  body ","Net HTTP  new  get "," URI  request_ URI  ","Net HTTP  new  verify_mode= ","Net HTTP  new  use_ssl= "," URI  is_a? "," URI  port "," URI  host ","Net HTTP  new  cert_store= ","http get  message ","http get  code "]}," WebRobots cache_robots_txt":{"type":"method","name":"cache_robots_txt","children":[],"call":["@robotstxt []= ","block call ","@robotstxt [] ","@robotstxt key? "]}," WebRobots fetch_robots_txt":{"type":"method","name":"fetch_robots_txt","children":[],"call":["@parser parse ","@http_get call ","site + ","@parser parse! ","@parser_mutex synchronize ","RobotsTxt  unfetchable "," raise ","e response is_a? ","e response ","e is_a? "]}," WebRobots robots_txt":{"type":"method","name":"robots_txt","children":[],"call":[" fetch_robots_txt "," cache_robots_txt "]}," WebRobots split_uri":{"type":"method","name":"split_uri","children":[],"call":["site path= ","site host= ","host downcase ","(lvasgn :host\n  (send\n    (lvar :site) :host)) match ","site host ","site request_uri "," raise ","site is_a? ","site scheme ","e message ","URI  parse ","url dup ","url is_a? ","url dup  path= ","site site host = ","url dup  host= ","site host  downcase ","(lvasgn :site host \n  (send\n    (lvar :site) :site host )) match ","(lvasgn :host\n  (send\n    (lvar :url dup ) :host)) match ","site site host  ","url dup  host ","site site request_uri  ","url dup  request_uri ","url dup  is_a? ","url dup  scheme "]}," WebRobots sitemaps":{"type":"method","name":"sitemaps","children":[],"call":[" robots_txt sitemaps "," robots_txt "," split_uri "," robots_txt_for sitemaps "," robots_txt_for "]}," WebRobots option":{"type":"method","name":"option","children":[],"call":[" options [] ","token downcase "," options "]}," WebRobots options":{"type":"method","name":"options","children":[],"call":[" robots_txt options "," robots_txt "," split_uri "," robots_txt_for options "," robots_txt_for "]}," WebRobots disallowed?":{"type":"method","name":"disallowed?","children":[],"call":[" allowed? ! "," allowed? "]}," WebRobots allowed?":{"type":"method","name":"allowed?","children":[],"call":[" robots_txt allow? "," robots_txt ","request_uri == "," split_uri ","robots_txt allow? "," get_robots_txt "," evaluate ","  get_robots_txt  allow? ","  get_robots_txt  "," get_robots_txt  allow? "," get_ get_robots_txt  "]}," WebRobots initialize":{"type":"method","name":"initialize","children":[],"call":[" method ","options [] ","RobotsTxt Parser  new "," create_cache ","Mutex  new "," raise ","value inspect ","value respond_to? "]}," WebRobots RobotsTxt CrawlDelayLine compile":{"type":"method","name":"compile","children":[],"call":["@value to_i ","@value to_f "]}," WebRobots RobotsTxt DisallowLine allow?":{"type":"method","name":"allow?","children":[],"call":[]}," WebRobots RobotsTxt AllowLine allow?":{"type":"method","name":"allow?","children":[],"call":[]}," WebRobots RobotsTxt AccessControlLine match?":{"type":"method","name":"match?","children":[],"call":["@pattern match ! ! ","@pattern match ! ","@pattern match ","@empty ! ","%c % ","2 to_i ","request_uri gsub "]}," WebRobots RobotsTxt AccessControlLine compile":{"type":"method","name":"compile","children":[],"call":["Regexp  new "," raise ","unexpected characters: %s % ","s check ","re_src << ","s scan ","Regexp  quote ","%c % ","c == ","s [] to_i ","s [] ","s eos? ","StringScanner  new ","@value empty? "," raiStringScanner  new e ","unexpecs scan ed characs scan ers: %s % ","unexpes [] to_i ted s [] to_i haras [] to_i ters: %s % ","unexpected characterStringScanner  new : %StringScanner  new  % ","s s [] to_i hes [] to_i k ","StringScanner  new  check ","re_srs [] to_i  << ","re_StringScanner  new rc << ","s ss [] to_i an ","StringScanner  new  StringScanner  new can ","Regexp  quos scan e ","%s [] to_i  % ","s [] to_i  == ","s [] s scan o_i ","StringScanner  new  [] to_i ","StringScanner  new  [] ","StringScanner  new  eoStringScanner  new ? ","Ss scan ringScanner  new ","StringSs [] to_i anner  new ","@value emps scan y? "]}," WebRobots RobotsTxt AgentLine compile":{"type":"method","name":"compile","children":[],"call":["Regexp  new ","Regexp  quote ","@value == "]}," WebRobots RobotsTxt Line compile":{"type":"method","name":"compile","children":[],"call":[]}," WebRobots RobotsTxt Line initialize":{"type":"method","name":"initialize","children":[],"call":[" compile "]}," WebRobots RobotsTxt Record allow?":{"type":"method","name":"allow?","children":[],"call":["acl allow? ","acl match? ","@acls each "]}," WebRobots RobotsTxt Record default?":{"type":"method","name":"default?","children":[],"call":["@patterns include? "]}," WebRobots RobotsTxt Record match?":{"type":"method","name":"match?","children":[],"call":["pattern match ","@patterns any? "]}," WebRobots RobotsTxt Record initialize":{"type":"method","name":"initialize","children":[],"call":["(send\n  (send\n    (lvar :b) :value) :length) <=> ","a is_a? ","a value length ","a value ","b is_a? ","b value length ","b value ","@acls sort! ","@options []= ","ruleline value ","ruleline token downcase ","ruleline token ","ruleline delay ","@acls << ","rulelines each ","agentline pattern ","agentlines map ","@acls replace ","x is_a? ","x value length -@ ","x value length ","x value ","@acls sort_by "]}," WebRobots RobotsTxt options":{"type":"method","name":"options","children":[],"call":["record options "," find_record "," find_record  options "," find_ find_record  "]}," WebRobots RobotsTxt allow?":{"type":"method","name":"allow?","children":[],"call":["Time  now "," sleep ","delay > ","Time  now - ","record delay ","record allow? "," find_record ","@crawl_delay_handler call ","record delay  > ","record record delay  "," find_record  delay ","record record allow? ? "," find_record  allow? "," find_ find_record  ","@crawl_record delay _handler call "]}," WebRobots RobotsTxt find_record":{"type":"method","name":"find_record","children":[],"call":["record match? ","@records find "," target "]}," WebRobots RobotsTxt target":{"type":"method","name":"target","children":[],"call":[" raise ","@target ! "]}," WebRobots RobotsTxt initialize":{"type":"method","name":"initialize","children":[],"call":["@records concat ","@records << ","record match? ","@target ! ","defaults << ","record default? ","records each ","records empty? ! ","records empty? ","@options [] ","Time  now ","@options []  ! "]}," WebRobots RobotsTxt Parser _reduce_none":{"type":"method","name":"_reduce_none","children":[],"call":["val [] "]}," WebRobots get_robots_txt":{"type":"method","name":"get_robots_txt","children":[],"call":[" fetch_robots_txt ","@robotstxt [] "]}," WebRobots robots_txt_for":{"type":"method","name":"robots_txt_for","children":[],"call":[" get_robots_txt "," split_uri "]}," WebRobots reset":{"type":"method","name":"reset","children":[],"call":["@robotstxt delete "," split_uri "]}," WebRobots error!":{"type":"method","name":"error!","children":[],"call":[" robots_txt_for error! "," robots_txt_for "]}," WebRobots error":{"type":"method","name":"error","children":[],"call":[" robots_txt_for error "," robots_txt_for "]}," WebRobots create_cache":{"type":"method","name":"create_cache","children":[],"call":["Hash  new "]}," WebRobots RobotsTxt unfetchable":{"type":"method","name":"unfetchable","children":[],"call":[]}," WebRobots RobotsTxt error!":{"type":"method","name":"error!","children":[],"call":[" raise "]}," Document parse_meta_robots":{"type":"method","name":"parse_meta_robots","children":[],"call":["content downcase split ","content downcase ","meta [] ","element [] match ","element [] "," css find "," css ","Regexp  quote ","meta [] match ","meta []  downcase split ","meta []  downcase "]}," Document nofollow?":{"type":"method","name":"nofollow?","children":[],"call":[" meta_robots include? "," meta_robots "]}," Document noindex?":{"type":"method","name":"noindex?","children":[],"call":[" meta_robots include? "," meta_robots "]}," Document meta_robots":{"type":"method","name":"meta_robots","children":[],"call":["(or-asgn\n  (ivasgn :@meta_robots)\n  (hash)) []= "," parse_meta_robots "]}," WebRobots flush_cache":{"type":"method","name":"flush_cache","children":[],"call":["@robotstxt clear "]}," WebRobots ParseError to_s":{"type":"method","name":"to_s","children":[],"call":[]}," WebRobots ParseError initialize":{"type":"method","name":"initialize","children":[],"call":[]}," WebRobots evaluate":{"type":"method","name":"evaluate","children":[],"call":[" get_robots_txt "," split_uri "]}," WebRobots crawl_delay_handler":{"type":"method","name":"crawl_delay_handler","children":[],"call":[" sleep ","delay > ","Time  now - ","Time  now "]}," WebRobots crawl_delay":{"type":"method","name":"crawl_delay","children":[],"call":[" robots_txt_for crawl_delay "," robots_txt_for "]}," WebRobots RobotsTxt crawl_delay":{"type":"method","name":"crawl_delay","children":[],"call":["record delay "," find_record "," find_record  delay "," find_ find_record  "]}}