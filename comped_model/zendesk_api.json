{" ZendeskAPI Verbs create_verb":{"type":"method","name":"create_verb","children":[],"call":[" rescue_client_error ","@attributes clear_changes ","ZendeskAPI Trackie  new ","res [] == "," id ","res [] ","resources find ","response body [] "," class resource_name "," class ","response body ","req body= ","@client connection send "," path ","@client connection "," instance_variable_get ","opts [] ! ","opts [] "," instance_variable_defined? ","method_args pop ","method_args last is_a? ","method_args last "," define_method ","e errors "," send "," clear_associations ","@attributes replace ","@attributes deep_merge ","@response body fetch detect ","@response body fetch ","@response body ","@response body [] "," class singular_resource_name ","@response success? "," raise ","opts delete ","method_verb == ","@response body is_a? ","ZendeskAPI Trackie  new  clear_changes ","response body []  find ","@response body [] s find "," class @response body [] _name ","method_args pop  [] ! ","method_args pop  [] ","ZendeskAPI Trackie  new  replace ","ZendeskAPI Trackie  new  deep_merge "," class singular_@response body [] _name ","method_args pop  delete ","method_opts delete  == "]}," ZendeskAPI TrackChanges InstanceMethods changed?":{"type":"method","name":"changed?","children":[],"call":[" changes key? "," changes ","v changed? ","v respond_to? "," any? "," changes empty? ! "," changes empty? ","key nil? "]}," ZendeskAPI TrackChanges InstanceMethods changes":{"type":"method","name":"changes","children":[],"call":["changes []= ","v changes ","v changed? ","v respond_to? "," each ","(or-asgn\n  (ivasgn :@changes)\n  (send\n    (send\n      (send\n        (self) :class) :superclass) :new)) tap "," class superclass new "," class superclass "," class ","val changed? ","val respond_to? ","v any? ","v is_a? "]}," ZendeskAPI TrackChanges InstanceMethods delete":{"type":"method","name":"delete","children":[],"call":[" []= "," changes []= "," changes "," tap "]}," ZendeskAPI TrackChanges InstanceMethods regular_writer":{"type":"method","name":"regular_writer","children":[],"call":[" _store "," changes []= "," changes "," [] == "," [] "," has_key? "]}," ZendeskAPI TrackChanges InstanceMethods []":{"type":"method","name":"[]","children":[],"call":[]}," ZendeskAPI TrackChanges InstanceMethods clear":{"type":"method","name":"clear","children":[],"call":[" delete "," keys each "," keys "]}," ZendeskAPI TrackChanges InstanceMethods replace":{"type":"method","name":"replace","children":[],"call":[" merge! "," clear "]}," ZendeskAPI TrackChanges InstanceMethods clear_changes":{"type":"method","name":"clear_changes","children":[],"call":[" changes clear "," changes ","v clear_changes ","v respond_to? "," each ","val clear_changes ","val respond_to? ","v each ","v is_a? "]}," ZendeskAPI TrackChanges included":{"type":"method","name":"included","children":[],"call":[]}," ZendeskAPI View preview":{"type":"method","name":"preview","children":[],"call":[]}," ZendeskAPI ViewRow model_key":{"type":"method","name":"model_key","children":[],"call":[]}," ZendeskAPI Ticket import":{"type":"method","name":"import","children":[],"call":[]}," ZendeskAPI Ticket incremental_export":{"type":"method","name":"incremental_export","children":[],"call":[]}," ZendeskAPI Playlist init_playlist":{"type":"method","name":"init_playlist","children":[],"call":["response status == ","response status ","@client connection get "," id ","@client connection ","@client connection get  status == ","@client connection get  status "]}," ZendeskAPI Playlist initialized?":{"type":"method","name":"initialized?","children":[],"call":[]}," ZendeskAPI Playlist destroyed?":{"type":"method","name":"destroyed?","children":[],"call":[]}," ZendeskAPI Playlist destroy":{"type":"method","name":"destroy","children":[],"call":["response status == ","response status ","@client connection delete ","@client connection ","@client connection delete  status == ","@client connection delete  status "]}," ZendeskAPI Playlist next":{"type":"method","name":"next","children":[],"call":["response status == ","response status ","Ticket  new ","response body [] ","response body ","@client connection get ","@client connection "," destroyed? "," initialized? ! "," initialized? "," init_playlist ","@client connection get  status == ","@client connection get  status ","@client connection get  body [] ","@client connection get  body "]}," ZendeskAPI Playlist each":{"type":"method","name":"each","children":[],"call":[" next "," destroyed? ! "," destroyed? "," initialized? "," init_playlist ","  next ext "," i next itialized? "," i next it_playlist "]}," ZendeskAPI Playlist initialize":{"type":"method","name":"initialize","children":[],"call":[" init_playlist "]}," ZendeskAPI Search model_key":{"type":"method","name":"model_key","children":[],"call":[]}," ZendeskAPI Search resource_name":{"type":"method","name":"resource_name","children":[],"call":[]}," ZendeskAPI Attachment to_param":{"type":"method","name":"to_param","children":[],"call":[" token "]}," ZendeskAPI Attachment save":{"type":"method","name":"save","children":[],"call":[" token= ","upload token ","Upload  create! "," file "," client "," attributes ","Upload  create!  token "]}," ZendeskAPI Attachment initialize":{"type":"method","name":"initialize","children":[],"call":["attributes is_a? ","attributes delete ","attributes [] "]}," ZendeskAPI Setting initialize":{"type":"method","name":"initialize","children":[],"call":["attributes [] ","attributes first ","attributes merge! ","attributes delete ","(send\n  (send\n    (send\n      (lvar :attributes) :keys) :map\n    (block-pass\n      (sym :to_s))) :-\n  (array\n    (str \"association\")\n    (str \"options\"))) first ","attributes keys map - ","attributes keys map ","attributes keys "]}," ZendeskAPI Topic votes":{"type":"method","name":"votes","children":[],"call":["ZendeskAPI Collection  new ","opts merge ","ZendeskAPI Association  new ","opts [] ! ","opts [] "]}," ZendeskAPI Data inspect":{"type":"method","name":"inspect","children":[],"call":["@attributes to_hash inspect ","@attributes to_hash "," class name "," class "]}," ZendeskAPI Data ==":{"type":"method","name":"==","children":[],"call":["other object_id == "," object_id ","other object_id ","other id == "," id ","other id ","other is_a? "," class "," warn ","other class ","other is_a? ! "," caller first "," caller "," id == ","(or\n  (send\n    (lvar :other) :is_a?\n    (const nil :Data))\n  (send\n    (lvar :other) :is_a?\n    (const nil :Integer))) ! "]}," ZendeskAPI Data to_s":{"type":"method","name":"to_s","children":[],"call":[" attributes inspect "," attributes "," class singular_resource_name "," class "]}," ZendeskAPI Data path":{"type":"method","name":"path","children":[],"call":["@association generate_path "]}," ZendeskAPI Data new_record?":{"type":"method","name":"new_record?","children":[],"call":[" id nil? "," id "]}," ZendeskAPI Data id":{"type":"method","name":"id","children":[],"call":[" method_missing "," key? "]}," ZendeskAPI Data method_missing":{"type":"method","name":"method_missing","children":[],"call":["@attributes send "," raise ","args first to_sym == ","args first to_sym ","args first "]}," ZendeskAPI Data initialize":{"type":"method","name":"initialize","children":[],"call":["@attributes clear_changes "," new_record? ","ZendeskAPI Client  check_deprecated_namespace_usage "," class singular_resource_name "," class ","ZendeskAPI Trackie  new ","Association  new ","attributes delete "," raise ","attributes inspect ","attributes is_a? ","a [] == ","a [] "," class associations none? "," class associations ","ZendeskAPI Trackie  new  clear_changes "]}," ZendeskAPI Data unnested_params":{"type":"method","name":"unnested_params","children":[],"call":[]}," ZendeskAPI Data only_send_unnested_params":{"type":"method","name":"only_send_unnested_params","children":[],"call":[]}," ZendeskAPI Data resource_name":{"type":"method","name":"resource_name","children":[],"call":[" singular_resource_name plural "," singular_resource_name ","Inflection  plural "]}," ZendeskAPI Data singular_resource_name":{"type":"method","name":"singular_resource_name","children":[],"call":[" to_s split last snakecase "," to_s split last "," to_s split "," to_s ","ZendeskAPI Helpers  snakecase_string "]}," ZendeskAPI Rescue Methods rescue_client_error":{"type":"method","name":"rescue_client_error","children":[],"call":["opts [] ","opts [] call ","opts [] respond_to? "," log_error "," block_given? "," send "," define_method "," class_eval ","args each ","args any? ","args pop ","args last is_a? ","args last "," attach_error ","args pop  [] ","args pop  [] call ","args pop  [] respond_to? "]}," ZendeskAPI Rescue Methods log_error":{"type":"method","name":"log_error","children":[],"call":["logger warn ","e response [] inspect ","e response [] ","e response ","e backtrace join ","e backtrace ","e message ","@client config logger ","@client config "]}," ZendeskAPI Rescue included":{"type":"method","name":"included","children":[],"call":[]}," ZendeskAPI Middleware Response ParseIsoDates parse_dates!":{"type":"method","name":"parse_dates!","children":[],"call":["Time  parse ","value []= "," parse_dates! ","value each_with_index ","value each "]}," ZendeskAPI Middleware Response ParseIsoDates call":{"type":"method","name":"call","children":[],"call":[" parse_dates! ","response env [] ","response env ","@app call ","env [] ","@app call on_complete ","@app call  env [] ","@app call  env "]}," ZendeskAPI Middleware Response Gzip parse_response?":{"type":"method","name":"parse_response?","children":[],"call":["env [] [] == ","env [] [] ","env [] "]}," ZendeskAPI Middleware Response Deflate parse_response?":{"type":"method","name":"parse_response?","children":[],"call":["env [] [] == ","env [] [] ","env [] "]}," ZendeskAPI Middleware Response Callback on_complete":{"type":"method","name":"on_complete","children":[],"call":["c call ","@client callbacks each ","@client callbacks "]}," ZendeskAPI Middleware Response Callback initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ZendeskAPI Middleware Request Upload call":{"type":"method","name":"call","children":[],"call":["@app call ","env [] []= ","Faraday UploadIO  new ","env [] ","MIME Types  type_for first ","MIME Types  type_for ","File  basename ","env [] [] "," warn ","file class ","file path ","env [] delete "," traverse_hash "," set_file ","env [] delete  class ","file file path  ","env [] delete  path "," set_env [] delete  "]}," ZendeskAPI Middleware Request Retry call":{"type":"method","name":"call","children":[],"call":["@app call ","@logger warn ","time_left % == ","time_left % ","time_left > ","seconds_left - "," sleep ","seconds_left times ","(or\n  (send\n    (send\n      (send\n        (lvar :response) :env) :[]\n      (sym :response_headers)) :[]\n    (sym :retry_after))\n  (const nil :DEFAULT_RETRY_AFTER)) to_i ","response env [] [] ","response env [] ","response env ","ERROR_CODES  include? ","env dup ","DEFAULT_RETRY_AFTER  to_i ","@error_codes include? ","seconds_left -  % == ","seconds_left -  % ","seconds_left -  > ","(or\n  (send\n    (send\n      (send\n        (lvar :response) :env) :[]\n      (sym :response_headers)) :[]\n    (sym :retry_after))\n  (const nil :DEFAULT_RETRY_AFTER)) to_i  - ","DEFAULT_RETRY_AFTER  to_i  - ","(or\n  (send\n    (send\n      (send\n        (lvar :response) :env) :[]\n      (sym :response_headers)) :[]\n    (sym :retry_after))\n  (const nil :DEFAULT_RETRY_AFTER)) to_i  times ","DEFAULT_RETRY_AFTER  to_i  times ","(or\n  (send\n    (send\n      (send\n        (lvar :@app call ) :env) :[]\n      (sym :@app call _headers)) :[]\n    (sym :retry_after))\n  (const nil :DEFAULT_RETRY_AFTER)) to_i ","@app call  env [] [] ","@app call  env [] ","@app call  env "]}," ZendeskAPI Middleware Request Retry initialize":{"type":"method","name":"initialize","children":[],"call":["options [] ","options key? "]}," ZendeskAPI Middleware Request EtagCache call":{"type":"method","name":"call","children":[],"call":["@cache write ","env [] [] ","env [] ","env [] == ","env []= ","cached [] ","@app call on_complete ","@app call ","cached [] [] ","@cache read ","env [] to_s ","(sym :get) include? "," cache_key ","env [] merge! ","env merge! ","env to_hash ","environment [] [] ","environment [] ","env to_h ","@cache read  [] ","@cache read  [] [] "]}," ZendeskAPI Middleware Request EtagCache initialize":{"type":"method","name":"initialize","children":[],"call":["options fetch "," raise ","options [] "]}," ZendeskAPI LRUCache set_lru":{"type":"method","name":"set_lru","children":[],"call":["@lru unshift ","@lru delete "]}," ZendeskAPI LRUCache fetch":{"type":"method","name":"fetch","children":[],"call":[" write "," read ","@store has_key? "]}," ZendeskAPI LRUCache read":{"type":"method","name":"read","children":[],"call":["@store [] "," set_lru "]}," ZendeskAPI LRUCache write":{"type":"method","name":"write","children":[],"call":["@store delete ","@lru pop ","@lru size > ","@lru size "," set_lru ","@store []= "]}," ZendeskAPI LRUCache initialize":{"type":"method","name":"initialize","children":[],"call":[]}," String snakecase":{"type":"method","name":"snakecase","children":[],"call":[" gsub gsub tr gsub gsub downcase "," gsub gsub tr gsub gsub "," gsub gsub tr gsub "," gsub gsub tr "," gsub gsub "," gsub "]}," String modulize":{"type":"method","name":"modulize","children":[],"call":["1 + ","2 upcase ","(send\n  (block\n    (send\n      (block\n        (send nil :gsub\n          (regexp\n            (str \"__(.?)\")\n            (regopt)))\n        (args)\n        (dstr\n          (str \"::\")\n          (begin\n            (send\n              (nth-ref 1) :upcase)))) :gsub\n      (regexp\n        (str \"/(.?)\")\n        (regopt)))\n    (args)\n    (dstr\n      (str \"::\")\n      (begin\n        (send\n          (nth-ref 1) :upcase)))) :gsub\n  (regexp\n    (str \"(?:_+|-+)([a-z])\")\n    (regopt))) gsub ","1 upcase ","(send\n  (block\n    (send nil :gsub\n      (regexp\n        (str \"__(.?)\")\n        (regopt)))\n    (args)\n    (dstr\n      (str \"::\")\n      (begin\n        (send\n          (nth-ref 1) :upcase)))) :gsub\n  (regexp\n    (str \"/(.?)\")\n    (regopt))) gsub ","(send nil :gsub\n  (regexp\n    (str \"__(.?)\")\n    (regopt))) gsub "," gsub "]}," String plural":{"type":"method","name":"plural","children":[],"call":["Inflection  plural "]}," String singular":{"type":"method","name":"singular","children":[],"call":["Inflection  singular "]}," ZendeskAPI Configuration options":{"type":"method","name":"options","children":[],"call":["(pair\n  (sym :headers)\n  (hash\n    (pair\n      (sym :accept)\n      (str \"application/json\"))\n    (pair\n      (sym :accept_encoding)\n      (str \"gzip;q=1.0,deflate;q=0.6,identity;q=0.3\"))\n    (pair\n      (sym :user_agent)\n      (dstr\n        (str \"ZendeskAPI API \")\n        (begin\n          (const\n            (const nil :ZendeskAPI) :VERSION)))))) merge "," client_options ","(pair\n  (sym :headers)\n  (hash\n    (pair\n      (sym :accept)\n      (str \"application/json\"))\n    (pair\n      (sym :accept_encoding)\n      (str \"gzip;q=1.0,deflate;q=0.6,identity;q=0.3\"))\n    (pair\n      (sym :user_agent)\n      (dstr\n        (str \"ZendeskAPI Ruby \")\n        (begin\n          (const\n            (const nil :ZendeskAPI) :VERSION)))))) merge "]}," ZendeskAPI Configuration initialize":{"type":"method","name":"initialize","children":[],"call":[" cache= ","ZendeskAPI LRUCache  new "]}," ZendeskAPI Collection to_s":{"type":"method","name":"to_s","children":[],"call":[" orig_to_s ","@resources inspect ","inspect join ","Inflection  singular ","inspect << "," path ","@options inspect ","@options any? "]}," ZendeskAPI Collection method_missing":{"type":"method","name":"method_missing","children":[],"call":[" class new ","@options merge "," class ","opts merge! ","@collection_path dup push ","@collection_path dup ","args last ","args last is_a? "," to_a send "," to_a ","Array  new respond_to? ","Array  new ","@resource_class send ","methods include? ","@resource_class singleton_methods map ","@resource_class singleton_methods "," next_collection "," array_method "," collection_method "," resource_methods include? "," resource_methods "," respond_to? ","args last  merge! ","@resource_class singleton_methods map  include? ","@resource_class singleton_@resource_class singleton_methods map  map ","@resource_class singleton_@resource_class singleton_methods map  "," resource_@resource_class singleton_methods map  include? "," resource_@resource_class singleton_methods map  "]}," ZendeskAPI Collection to_ary":{"type":"method","name":"to_ary","children":[],"call":[]}," ZendeskAPI Collection clear_cache":{"type":"method","name":"clear_cache","children":[],"call":[]}," ZendeskAPI Collection prev":{"type":"method","name":"prev","children":[],"call":[" fetch ","@options [] "," clear_cache ","@options [] > ","@options page ","@options [] to_i > ","@options [] to_i "," cbp_request? ! "," cbp_request? "]}," ZendeskAPI Collection next":{"type":"method","name":"next","children":[],"call":[" fetch ","@options [] "," clear_cache ","@options page ","@options []= ","@options [] to_i + ","@options [] to_i "," cbp_request? ! "," cbp_request? "]}," ZendeskAPI Collection replace":{"type":"method","name":"replace","children":[],"call":[" raise ","r is_a? ! ","r is_a? ","collection any? "]}," ZendeskAPI Collection to_a":{"type":"method","name":"to_a","children":[],"call":[" fetch "]}," ZendeskAPI Collection fetch":{"type":"method","name":"fetch","children":[],"call":["response body [] ","response body ","(or\n  (send\n    (send\n      (lvar :response) :body) :[]\n    (str \"count\"))\n  (send\n    (ivar :@resources) :size)) to_i ","@resources size ","@resource_class new ","results map ","@resource_class model_key ","req params merge! ","v nil? ","@options delete_if ","req params ","@client connection send ","@client connection "," path "," association options parent new_record? "," association options parent "," association options "," association ","reload ! ","@fetchable ! "," set_includes "," set_page_and_count ","body delete ","@response body dup ","@response body ","req body= ","(str \"put\") include? ","@verb to_s ","@includes join ","@includes any? ","@options []= ","1 to_i + ","1 to_i ","@prev_page =~ ","1 to_i - ","@next_page =~ "," handle_response "," get_response "," fetch! ","response @response body dup  [] ","response @response body dup  ","(or\n  (send\n    (send\n      (lvar :response) :@response body dup ) :[]\n    (str \"count\"))\n  (send\n    (ivar :@resources) :size)) to_i ","  path  ","@response body dup  delete ","@response @response body dup  dup "," get_response  body dup ","@response @response body dup  "," get_response  body ","req @response body dup = "]}," ZendeskAPI Collection path":{"type":"method","name":"path","children":[],"call":["@association generate_path "]}," ZendeskAPI Collection <<":{"type":"method","name":"<<","children":[],"call":["@resources << ","@resource_class new ","item merge! ","item is_a? "," raise "," fetch "," wrap_resource "]}," ZendeskAPI Collection save":{"type":"method","name":"save","children":[],"call":["item save ","item changes empty? ","item changes ","item respond_to? ! ","item respond_to? ","@resources map! "," _save "]}," ZendeskAPI Collection page":{"type":"method","name":"page","children":[],"call":["@options []= "," clear_cache "]}," ZendeskAPI Collection per_page":{"type":"method","name":"per_page","children":[],"call":["@options []= "," clear_cache "]}," ZendeskAPI Collection count":{"type":"method","name":"count","children":[],"call":[" fetch "]}," ZendeskAPI Collection destroy":{"type":"method","name":"destroy","children":[],"call":["@resource_class destroy ","@options merge ","opts merge! "," association "]}," ZendeskAPI Collection update":{"type":"method","name":"update","children":[],"call":["@resource_class update ","@options merge ","opts merge! "]}," ZendeskAPI Collection find":{"type":"method","name":"find","children":[],"call":["@resource_class find ","@options merge ","opts merge! "]}," ZendeskAPI Collection create":{"type":"method","name":"create","children":[],"call":["@resource_class create ","@options merge ","attributes merge! "]}," ZendeskAPI Collection initialize":{"type":"method","name":"initialize","children":[],"call":["@resource_class superclass == ","@resource_class superclass ","@options []= ","v join ","v is_a? ","SPECIALLY_JOINED_PARAMS  include? ","k to_sym ","@options each ","Association  new ","association_options merge ","@options delete ","@collection_path join ","association_options [] ","Hashie Mash  new ","resource resource_name ","@resource_class is_a? "," Array "," join_special_params "," set_association_from_options ","SilentMash  new ","resource resource_path ","Hashie Mash  new  []= ","SilentMash  new  []= ","Hashie Mash  new  each ","SilentMash  new  each ","Hashie Mash  new  delete ","SilentMash  new  delete ","@options delete  join "]}," ZendeskAPI Client build_connection":{"type":"method","name":"build_connection","children":[],"call":["builder adapter ","Faraday  default_adapter "," config adapter "," config ","builder use "," config logger "," config retry ","builder request "," config cache ","builder response "," config password "," config username ","Faraday  new "," config options ","(sym :em_http) include? ","builder authorization "," config access_token "," config url_based_access_token ! "," config url_based_access_token ","GZIP_EXCEPTIONS  include? "," config raise_error_when_rate_limited "," config retry_on_exception "," config retry_codes "," config adapter_proc "," set_authentication "]}," ZendeskAPI Client check_deprecated_namespace_usage":{"type":"method","name":"check_deprecated_namespace_usage","children":[],"call":[]}," ZendeskAPI Client insert_callback":{"type":"method","name":"insert_callback","children":[],"call":["@callbacks << "]}," ZendeskAPI Client connection":{"type":"method","name":"connection","children":[],"call":[" build_connection "]}," ZendeskAPI Client initialize":{"type":"method","name":"initialize","children":[],"call":["logger warn ","env [] [] ","env [] "," insert_callback "," config logger "," config "," config logger level= "," config logger= ","Logger  new "," require "," config logger == "," config logger nil? "," config retry= "," config retry ! ! "," config retry ! "," config retry "," raise "," config url !~ "," config url "," config allow_http ! "," config allow_http ","ZendeskAPI Configuration  new "," block_given? "," config username "," config username end_with? "," config password= "," config token "," config password ! "," config password "," add_warning_callback "," set_default_logger "," set_token_auth "," check_url "," set_raise_error_when_rated_limited "," config logger  warn "," config  config logger  "," config  config logger  level= "," config  config logger = "," config  config logger  == "," config  config logger  nil? "," add_env [] [] _callback "," set_default_ config logger  "]}," ZendeskAPI Client current_locale":{"type":"method","name":"current_locale","children":[],"call":[" locales find "," locales ","reload ! "]}," ZendeskAPI Client current_account":{"type":"method","name":"current_account","children":[],"call":["Hashie Mash  new "," connection get body "," connection get "," connection ","reload ! ","SilentMash  new "]}," ZendeskAPI Client current_user":{"type":"method","name":"current_user","children":[],"call":[" users find "," users ","reload ! "]}," ZendeskAPI Client play":{"type":"method","name":"play","children":[],"call":["ZendeskAPI Playlist  new "]}," ZendeskAPI Client method_missing":{"type":"method","name":"method_missing","children":[],"call":[" instance_variable_set ","ZendeskAPI Collection  new ","ZendeskAPI  get_class ","method singular "," instance_variable_get "," instance_variable_defined? ","options delete ! ","options delete ","args pop ","args last is_a? ","args last ","method to_s ","@resource_cache [] []= ","ZendeskAPI  const_get ","ZendeskAPI Helpers  modulize_string ","Inflection  singular ","options hash ","@resource_cache [] ","@resource_cache [] [] ","options [] ! ","options [] ","@resource_cache [] [] write ","@resource_cache [] [] read ","ZendeskAPI LRUCache  new "," class_from_namespace "," raise "," method_as_class "," config use_resource_cache "," config "," resource_class_for ","method to_s  singular ","args pop  delete ! ","args pop  delete ","method to_s  to_s ","args pop  hash ","args pop  [] ! ","args pop  [] "," method to_s _as_class ","  resource_class_for _for "]}," ZendeskAPI get_class":{"type":"method","name":"get_class","children":[],"call":["ZendeskAPI  const_set ","Class  new ","res [] ","iter const_set ","iter const_get ","res [] inject ","ZendeskAPI  const_get ","resource to_s modulize split ","resource to_s modulize ","resource to_s ","resource nil? ","ZendeskAPI Helpers  modulize_string split ","ZendeskAPI Helpers  modulize_string ","resource to_s modulize split  [] ","ZendeskAPI Helpers  modulize_string split  [] ","resource to_s modulize split  [] inject ","ZendeskAPI Helpers  modulize_string split  [] inject ","resource to_s modulize split ource to_s modulize split ","ZendeskAPI Helpers  modulize_string split ource to_s modulize split ","resource to_s modulize split ource to_s modulize ","ZendeskAPI Helpers  modulize_string split ource to_s modulize ","resource to_s modulize split ource to_s ","ZendeskAPI Helpers  modulize_string split ource to_s ","resource to_s modulize split ource nil? ","ZendeskAPI Helpers  modulize_string split ource nil? "]}," ZendeskAPI Associations ClassMethods get_class":{"type":"method","name":"get_class","children":[],"call":["ZendeskAPI  get_class "," const_get ","resource to_s modulize ","resource to_s ","resource nil? ","ZendeskAPI Helpers  modulize_string ","resource to_s modulize ource to_s modulize ","ZendeskAPI Helpers  modulize_string ource to_s modulize ","resource to_s modulize ource to_s ","ZendeskAPI Helpers  modulize_string ource to_s ","resource to_s modulize ource nil? ","ZendeskAPI Helpers  modulize_string ource nil? "]}," ZendeskAPI Associations ClassMethods has_many":{"type":"method","name":"has_many","children":[],"call":[" resource "," send ","resources map "," has_key? "," instance_variable_set ","resources association= "," instance_association "," send replace "," wrap_resource ","resources map! ","resources is_a? "," define_method ","ZendeskAPI Collection  new ","instance_opts merge ","klass new ","res merge ","resources any? "," method_missing ","resource_name to_sym ","(send\n  (lvar :ids) :map) compact ","klass find ","ids map ","ids any? ","resource_name to_s singular ","resource_name to_s ","Association  new ","class_level_association merge ","instance_opts [] ! ","instance_opts [] "," instance_variable_get ","args pop ","args last is_a? ","args last "," instance_variable_get ! ! "," instance_variable_get ! "," associations << "," associations ","class_level_opts delete "," get_class ","Inflection  singular ","(or\n  (send\n    (lvar :class_level_options) :delete\n    (sym :include_key))\n  (sym :id)) to_s ","class_level_options delete ","(or\n  (send\n    (lvar :class_level_options) :delete\n    (sym :include))\n  (send\n    (lvar :klass) :resource_name)) to_s ","klass resource_name ","(or\n  (send\n    (lvar :class_level_opts) :delete\n    (sym :include_key))\n  (sym :id)) to_s ","(or\n  (send\n    (lvar :class_level_opts) :delete\n    (sym :include))\n  (send\n    (lvar :klass) :resource_name)) to_s ","(send\n  (lvar :ids) :map) compact  map "," method_missing  map ","(send\n  (lvar :ids) :map) compact  association= "," method_missing  association= "," Association  new  ","(send\n  (lvar :ids) :map) compact  map! "," method_missing  map! ","(send\n  (lvar :ids) :map) compact  is_a? "," method_missing  is_a? ","args pop  merge ","class_level_options delete  new ","(send\n  (lvar :ids) :map) compact  any? "," method_missing  any? ","klass resource_name  to_sym ","(send\n  (lvar : method_missing ) :map) compact ","class_level_options delete  find ","klass resource_name  to_s singular ","klass resource_name  to_s ","args pop  [] ! ","args pop  [] ","(or\n  (send\n    (lvar :class_level_options) :delete\n    (sym :include))\n  (send\n    (lvar :klass) :klass resource_name )) to_s ","(or\n  (send\n    (lvar :class_level_options) :delete\n    (sym :include))\n  (send\n    (lvar :class_level_options delete ) :resource_name)) to_s ","klass klass resource_name  ","class_level_options delete  resource_name ","(or\n  (send\n    (lvar :class_level_opts) :delete\n    (sym :include))\n  (send\n    (lvar :klass) :klass resource_name )) to_s ","(or\n  (send\n    (lvar :class_level_opts) :delete\n    (sym :include))\n  (send\n    (lvar :class_level_options delete ) :resource_name)) to_s "]}," ZendeskAPI Associations ClassMethods has":{"type":"method","name":"has","children":[],"call":[" instance_variable_set "," send ","resource id "," has_key? "," wrap_resource "," define_method ","klass new ","response body [] merge ","response body [] ","klass singular_resource_name ","response body ","@client connection get ","instance_association generate_path ","@client connection "," rescue_client_error ","klass ancestors include? ","klass ancestors "," method_missing ","resource_name to_sym ","klass find ","klass respond_to? ","Association  new ","class_level_association merge ","instance_options [] ! ","instance_options [] "," instance_variable_get ","args pop ","args last is_a? ","args last "," instance_variable_get ! ! "," instance_variable_get ! "," associations << "," associations ","class_level_options delete "," get_class ","klass superclass == ","klass superclass ","(or\n  (send\n    (lvar :class_level_options) :delete\n    (sym :include_key))\n  (sym :id)) to_s ","(or\n  (send\n    (lvar :class_level_options) :delete\n    (sym :include))\n  (send\n    (lvar :klass) :resource_name)) to_s ","klass resource_name "," wrap_resource  id ","klass find  id "," wrap_ wrap_resource  "," wrap_klass find  ","class_level_options delete  new ","@client connection get  body [] merge ","@client connection get  body [] ","klass singular_ wrap_resource _name ","klass singular_klass find _name ","klass singular_klass singular_resource_name  ","class_level_options delete  singular_resource_name ","@client connection get  body ","Association  new  generate_path ","class_level_options delete  ancestors include? ","class_level_options delete  ancestors "," wrap_resource _name to_sym ","klass find _name to_sym ","klass singular_resource_name  to_sym ","class_level_options delete  find ","class_level_options delete  respond_to? ","args pop  [] ! ","args pop  [] ","class_level_options delete  superclass == ","class_level_options delete  superclass ","(or\n  (send\n    (lvar :class_level_options) :delete\n    (sym :include))\n  (send\n    (lvar :klass) : wrap_resource _name)) to_s ","(or\n  (send\n    (lvar :class_level_options) :delete\n    (sym :include))\n  (send\n    (lvar :klass) :klass find _name)) to_s ","(or\n  (send\n    (lvar :class_level_options) :delete\n    (sym :include))\n  (send\n    (lvar :klass) :klass singular_resource_name )) to_s ","(or\n  (send\n    (lvar :class_level_options) :delete\n    (sym :include))\n  (send\n    (lvar :class_level_options delete ) :resource_name)) to_s ","klass  wrap_resource _name ","klass klass find _name ","klass klass singular_resource_name  ","class_level_options delete  resource_name "]}," ZendeskAPI Associations ClassMethods associations":{"type":"method","name":"associations","children":[],"call":[]}," ZendeskAPI Associations wrap_resource":{"type":"method","name":"wrap_resource","children":[],"call":["resource association= ","klass new ","resource merge ","Association  new ","class_level_association merge ","class_level_association [] ","options [] ","class_level_association []  new "]}," ZendeskAPI Associations included":{"type":"method","name":"included","children":[],"call":[]}," ZendeskAPI Association extract_id":{"type":"method","name":"extract_id","children":[],"call":["original_options delete ","options [] ","instance id ","@options [] ancestors include? ! ","@options [] ancestors include? ","@options [] ancestors ","@options [] "]}," ZendeskAPI Association extract_parent_id":{"type":"method","name":"extract_parent_id","children":[],"call":[" raise ","ArgumentError  new ","@options [] resource_name ","@options [] ","original_options delete ","parent_id_column to_sym ","options [] ","instance send ","@options parent id ","@options parent ","parent_class singular_resource_name "]}," ZendeskAPI Association build_parent_namespace":{"type":"method","name":"build_parent_namespace","children":[],"call":["association_on_parent [] to_s ","association_on_parent [] ","@options path "," extract_parent_id ","a [] == ","@options [] ","a [] ","parent_class associations detect ","parent_class associations ","@options [] resource_path ","a [] ! ","@options @options path  ","@options [] resource_@options path  "]}," ZendeskAPI Association generate_path":{"type":"method","name":"generate_path","children":[],"call":["namespace join ","namespace << "," extract_id ","namespace []= ","@options [] resource_name ","@options [] ","@options path ","parent_class resource_name "," build_parent_namespace ","ZendeskAPI  get_class ","namespace [] ","@options parent class ","@options parent ","options [] ","namespace size > ","namespace size ","namespace delete ","@options [] to_s split ","@options [] to_s ","args first ","options merge! ","args pop ","args last is_a? ","args last ","Hashie Mash  new ","ZendeskAPI  const_get ","ZendeskAPI Helpers  modulize_string ","@options [] resource_path ","(str \"ZendeskAPI\") each ","parent_class resource_path ","Association  class_from_namespace "," ignorable_namespace_strings each "," ignorable_namespace_strings ","SilentMash  new ","@options [] to_s split  join ","@options [] to_s split  << "," extract_ extract_id  ","@options [] to_s split  []= ","@Hashie Mash  new  [] resource_name ","@SilentMash  new  [] resource_name ","@Hashie Mash  new  [] ","@SilentMash  new  [] ","@Hashie Mash  new  path ","@SilentMash  new  path ","ZendeskAPI  get_class  resource_name ","@options parent class  resource_name ","ZendeskAPI  const_get  resource_name ","Association  class_from_namespace  resource_name "," build_ build_parent_namespace  "," build_parent_@options [] to_s split  ","@options [] to_s split  [] ","@Hashie Mash  new  parent class ","@SilentMash  new  parent class ","@Hashie Mash  new  parent ","@SilentMash  new  parent ","Hashie Mash  new  [] ","SilentMash  new  [] ","@options [] to_s split  size > ","@options [] to_s split  size ","@options [] to_s split  delete ","@Hashie Mash  new  [] to_s split ","@SilentMash  new  [] to_s split ","@Hashie Mash  new  [] to_s ","@SilentMash  new  [] to_s ","Hashie Mash  new  merge! ","SilentMash  new  merge! ","@Hashie Mash  new  [] resource_path ","@SilentMash  new  [] resource_path ","ZendeskAPI  get_class  resource_path ","@options parent class  resource_path ","ZendeskAPI  const_get  resource_path ","Association  class_from_namespace  resource_path ","Association  class_from_@options [] to_s split  "," ignorable_@options [] to_s split _strings each "," ignorable_@options [] to_s split _strings "]}," ZendeskAPI Association initialize":{"type":"method","name":"initialize","children":[],"call":["Hashie Mash  new ","SilentMash  new "]}," ZendeskAPI Update ClassMethod update":{"type":"method","name":"update","children":[],"call":["resource save "," new ","ZendeskAPI Client  check_deprecated_namespace_usage "," singular_resource_name ","resource attributes merge! ","resource attributes ","attributes delete "," update! "," new  save "," singular_ new _name "," new  attributes merge! "," new  attributes "]}," ZendeskAPI Update included":{"type":"method","name":"included","children":[],"call":[]}," ZendeskAPI Destroy ClassMethod destroy":{"type":"method","name":"destroy","children":[],"call":["req params= ","client connection delete ","association generate_path ","client connection ","Association  new ","opts delete "," destroy! "]}," ZendeskAPI Destroy destroy":{"type":"method","name":"destroy","children":[],"call":["@client connection delete "," path "," url ","@client connection "," new_record? "," destroyed? "," destroy! "]}," ZendeskAPI Destroy destroyed?":{"type":"method","name":"destroyed?","children":[],"call":[]}," ZendeskAPI Destroy included":{"type":"method","name":"included","children":[],"call":[]}," ZendeskAPI Create ClassMethods create!":{"type":"method","name":"create!","children":[],"call":[" raise "," create "," new tap "," new ","ZendeskAPI Client  check_deprecated_namespace_usage "," singular_resource_name ","resource save! ","  create reate ","ZendeskAPI Client   create he create k_depre create ated_namespa create e_usage "," singular_resour create e_name ","resour create e save! "]}," ZendeskAPI Create ClassMethods create":{"type":"method","name":"create","children":[],"call":["resource save "," new ","ZendeskAPI Client  check_deprecated_namespace_usage "," singular_resource_name "," create! "," new  save "," singular_ new _name "]}," ZendeskAPI Create included":{"type":"method","name":"included","children":[],"call":[]}," ZendeskAPI Read find":{"type":"method","name":"find","children":[],"call":[" new ","response body [] "," singular_resource_name ","response body ","req params= ","client connection get ","association generate_path ","client connection ","Association  new ","options delete "," raise ","options [] ","resource set_includes "," new tap ","options []= ","includes join ","includes any? "," Array "," ancestors include? "," ancestors ","resource attributes clear_changes ","resource attributes "," find! ","resource set_ Array  "," Array  join "," Array  any? "]}," ZendeskAPI Save save_associations":{"type":"method","name":"save_associations","children":[],"call":[" attributes []= ","association to_param ","association map ","association is_a? "," attributes ","association_data [] "," send ","association save ","association changes empty? ! ","association changes empty? ","association changes ","association respond_to? "," class associations each "," class associations "," class ","association_data [] == ","inline_creation ! "," new_record? ","association changed? "," send  to_param "," send  map "," send  is_a? "," send _data [] "," send  save "," send  changes empty? ! "," send  changes empty? "," send  changes "," send  respond_to? "," class  send s each "," class  send s "," send _data [] == "," send  changed? "]}," ZendeskAPI Save save!":{"type":"method","name":"save!","children":[],"call":[" raise "," save "," clear_associations ","@attributes clear_changes ","@attributes replace ","@attributes deep_merge ","@response body [] "," class singular_resource_name "," class ","@response body ","req body= "," attributes_for_save merge "," attributes_for_save ","@client connection send ","@client connection "," save_associations ","options [] "," path "," url "," new_record? "," destroyed? "," respond_to? ","options [] ! "," block_given? "," handle_response "]}," ZendeskAPI Save save":{"type":"method","name":"save","children":[],"call":["@attributes clear_changes ","@attributes replace ","@attributes deep_merge ","response body [] "," class singular_resource_name "," class ","response body ","req body= "," attributes changes "," attributes "," class singular_resource_name to_sym "," class unnested_params ","@client connection send ","@client connection "," save_associations ","options [] "," path "," url "," new_record? "," destroyed? "," respond_to? "," clear_associations ","@response body [] ","@response body ","req body merge! ","req body ","e errors "," save! "]}," ZendeskAPI TicketComment save":{"type":"method","name":"save","children":[],"call":[" save_associations "]}," ZendeskAPI Middleware Request Upload traverse_hash":{"type":"method","name":"traverse_hash","children":[],"call":[" traverse_hash ","hash [] "," set_file ","hash [] key? ","hash [] is_a? ","hash keys each ","hash keys "]}," ZendeskAPI Middleware Request Upload set_file":{"type":"method","name":"set_file","children":[],"call":["hash []= ","Faraday UploadIO  new ","File  basename ","hash [] ","MIME Types  type_for first ","MIME Types  type_for ","top_level ! "," warn ","file class ","file path ","hash delete ","hash [] delete ","hash [] key? ","hash [] is_a? ","hash key? ","file original_filename ","file respond_to? ","file tempfile path ","file tempfile ","file is_a? ","file content_type ","mime_type content_type ","MiniMime  lookup_by_filename ","mime_type nil? ! ","mime_type nil? ","hash []  []= ","hash []  [] ","hash delete  class ","hash [] delete  class ","file file path  ","file file tempfile path  ","hash delete  path ","hash [] delete  path ","hash []  delete ","hash []  [] delete ","hash []  [] key? ","hash []  [] is_a? ","hash []  key? ","hash delete  original_hash delete name ","hash [] delete  original_hash [] delete name ","hash delete  respond_to? ","hash [] delete  respond_to? ","file tempfile file path  ","file tempfile file tempfile path  ","hash delete  temphash delete  path ","hash [] delete  temphash [] delete  path ","hash delete  temphash delete  ","hash [] delete  temphash [] delete  ","hash delete  is_a? ","hash [] delete  is_a? ","hash delete  content_type ","hash [] delete  content_type ","file content_type  content_type ","mime_type content_type  content_type ","MiniMime  lookup_by_filename  content_type ","MiniMime  lookup_by_hash delete name ","MiniMime  lookup_by_hash [] delete name ","file content_type  nil? ! ","mime_type content_type  nil? ! ","MiniMime  lookup_by_filename  nil? ! ","file content_type  nil? ","mime_type content_type  nil? ","MiniMime  lookup_by_filename  nil? "]}," ZendeskAPI const_missing":{"type":"method","name":"const_missing","children":[],"call":["Object  const_missing "]}," ZendeskAPI Sideloading _side_load":{"type":"method","name":"_side_load","children":[],"call":[" _side_load ","(lvar :loaded) flatten ","association [] ","resource send ","loaded_associations each ","resource loaded_associations ","resources each ","association side_load ","@included [] ","associations each ","klass associated_with "," to_array ","(lvar :resource send ) flatten ","resource send _associations each ","resource loaded_associations  each ","loaded_klass associated_with  each ","resource resource send _associations ","resource resource loaded_associations  ","resource loaded_klass associated_with  ","klass associated_with  each "]}," ZendeskAPI Sideloading set_includes":{"type":"method","name":"set_includes","children":[],"call":[" _side_load ","@included []= ","body [] ","body keys each ","body keys ","resources empty? ","resources first class ","resources first ","(lvar :resource_or_resources) flatten compact ","(lvar :resource_or_resources) flatten ","@client config logger warn ","@client config logger ","@client config ","body key? ","side_load to_s ","includes each "," to_array ","(lvar :resource_or_resources) flatten compact  empty? "," to_array  empty? ","(lvar :resource_or_resources) flatten compact  first class "," to_array  first class ","(lvar :resource_or_resources) flatten compact  first "," to_array  first ","(lvar :resource_or_(lvar :resource_or_resources) flatten compact ) flatten compact ","(lvar :resource_or_ to_array ) flatten compact ","(lvar :resource_or_(lvar :resource_or_resources) flatten compact ) flatten ","(lvar :resource_or_ to_array ) flatten "]}," ZendeskAPI Sideloading included":{"type":"method","name":"included","children":[],"call":[]}," ZendeskAPI User initialize":{"type":"method","name":"initialize","children":[],"call":[" role_id= "," role id "," role "," key? "," role name "]}," ZendeskAPI Search new":{"type":"method","name":"new","children":[],"call":[]}," ZendeskAPI Search search":{"type":"method","name":"search","children":[],"call":[]}," ZendeskAPI Data to_json":{"type":"method","name":"to_json","children":[],"call":[" method_missing "]}," ZendeskAPI Data loaded_associations":{"type":"method","name":"loaded_associations","children":[],"call":["(and\n  (send\n    (lvar :loaded) :respond_to?\n    (sym :empty?))\n  (send\n    (lvar :loaded) :empty?)) ! ","loaded empty? ","loaded respond_to? ","@attributes method_missing ","association [] "," class associations select "," class associations "," class ","(and\n  (send\n    (lvar :@attributes method_missing ) :respond_to?\n    (sym :empty?))\n  (send\n    (lvar :@attributes method_missing ) :empty?)) ! ","@attributes method_missing  empty? ","@attributes method_missing  respond_to? "]}," ZendeskAPI Middleware Response Logger dump_debug":{"type":"method","name":"dump_debug","children":[],"call":["info concat ","env [] inspect ","env [] ","env [] nil? ","(send\n  (send\n    (lvar :env) :[]\n    (lvar :headers_key)) :map) join ","v inspect ","env [] map ","(send\n  (send\n    (lvar :env) :[]\n    (lvar :headers_key)) :map) join  concat "]}," ZendeskAPI Middleware Response Logger on_complete":{"type":"method","name":"on_complete","children":[],"call":["@logger debug "," dump_debug ","@logger info ","env [] to_s ","env [] "]}," ZendeskAPI Middleware Response Logger call":{"type":"method","name":"call","children":[],"call":["@logger debug "," dump_debug ","@logger info ","env [] to_s ","env [] ","@app call on_complete ","@app call ","info concat ","env [] to_s [] ","(irange\n  (int 400)\n  (int 499)) cover? ","env [] to_i "]}," ZendeskAPI Middleware Response Logger initialize":{"type":"method","name":"initialize","children":[],"call":[" Logger  new "," require "]}," ZendeskAPI Helpers snakecase_string":{"type":"method","name":"snakecase_string","children":[],"call":[]}," ZendeskAPI Helpers modulize_string":{"type":"method","name":"modulize_string","children":[],"call":[]}," ZendeskAPI Collection set_page_and_count":{"type":"method","name":"set_page_and_count","children":[],"call":["@options []= ","1 to_i + ","1 to_i ","@prev_page =~ ","1 to_i - ","@next_page =~ ","body [] ","(or\n  (send\n    (lvar :body) :[]\n    (str \"count\"))\n  (send\n    (ivar :@resources) :size)) to_i ","@resources size ","@options [] []= ","body [] [] ","@options [] "," cbp_response? "," page_links "]}," ZendeskAPI Collection each_page":{"type":"method","name":"each_page","children":[],"call":[" next ","block call ","arguments take ","block arity ","block arity >= ","@options [] "," each "," empty? ! "," empty? "," clear_cache "," page "," all "," warn ","arguments take  take "]}," ZendeskAPI Collection include":{"type":"method","name":"include","children":[],"call":["@includes concat ","sideloads map "," tap "]}," ZendeskAPI Associations ClassMethods associated_with":{"type":"method","name":"associated_with","children":[],"call":["associated_with push ","Association  new ","association [] == ","name to_s ","association [] "," associations inject "," associations "]}," ZendeskAPI Association _side_load":{"type":"method","name":"_side_load","children":[],"call":["collection replace ","ZendeskAPI Collection  new tap ","ZendeskAPI Collection  new "," options [] "," options ","resource client ","resource send ","side_loads map! "]}," ZendeskAPI Association side_load":{"type":"method","name":"side_load","children":[],"call":["resource send "," _side_load ","side_load [] == ","resource id ","side_load [] ","side_loads select "," options name "," options ","resource class singular_resource_name ","resource class ","id == ","side_loads detect "," options include_key ","resource key? "," options singular ","ids include? ","resources each ","Inflection  singular "," options name to_s "," side_load_from_parent_id "," side_load_from_child_or_parent_id "," side_load_from_child_ids "," _sresource id e_load "," _sresource send e_load ","sresource id e_load [] == ","sresource send e_load [] == ","resource resource id  ","resource resource send  ","sresource id e_load [] ","sresource send e_load [] ","sresource id e_loads select ","sresource send e_loads select ","resource id  == ","resource send  == ","sresource id e_loads detect ","sresource send e_loads detect "," options  options include_key  "," options include_ options include_key  ","resource  options include_key ? ","resource id s include? ","resource send s include? ","resource send  include? "," sresource id e_load_from_parent_resource id  "," sresource send e_load_from_parent_resource send  "," sresource id e_load_from_child_or_parent_resource id  "," sresource send e_load_from_child_or_parent_resource send  "," sresource id e_load_from_child_resource id s "," sresource send e_load_from_child_resource send s "," side_load_from_child_resource send  "]}," ZendeskAPI Read extended":{"type":"method","name":"extended","children":[],"call":[]}," ZendeskAPI Save clear_associations":{"type":"method","name":"clear_associations","children":[],"call":[" instance_variable_set "," instance_variable_defined? ","association_data [] "," class associations each "," class associations "," class "]}," Server ZlibJSON mongoize":{"type":"method","name":"mongoize","children":[],"call":["Moped BSON Binary  new ","Zlib  deflate ","input_hash to_json "]}," Server ZlibJSON demongoize":{"type":"method","name":"demongoize","children":[],"call":["JSON  parse symbolize_keys ","JSON  parse ","Zlib  inflate ","serialized_object to_s ","MultiJson  load "]}," Server HtmlRenderer RedcarpetRenderer block_code":{"type":"method","name":"block_code","children":[],"call":["(send\n  (lvar :mod) :inject\n  (array)) join ","str push ","mod inject ","CodeRay  scan html ","CodeRay  scan ","mod []= ","code =~ ","code slice ","str_begin + ","chars [] != ","chars [] ","i - ","char == ","chars [] each_with_index ","code [] chars to_a ","code [] chars ","code [] ","code index ","code include? ","1 strip ","code start_with? ","language == ","(send\n  (lvar :(send\n  (lvar :mod) :inject\n  (array)) join ) :inject\n  (array)) join ","(send\n  (lvar :mod) :inject\n  (array)) join  inject ","(send\n  (lvar :mod) :inject\n  (array)) join  []= ","CodeRay  scan html  =~ ","CodeRay  scan html  slice ","code index  + ","code [] chars to_a  [] != ","code [] chars to_a  [] ","code [] chars to_a  [] each_with_index ","CodeRay  scan html  [] chars to_a ","code [] code [] chars to_a  to_a ","CodeRay  scan html  [] chars ","code [] code [] chars to_a  ","CodeRay  scan html  [] ","CodeRay  scan html  index ","CodeRay  scan html  include? ","CodeRay  scan html  start_with? "]}," Server HtmlRenderer RedcarpetRenderer header":{"type":"method","name":"header","children":[],"call":[" icons ","@headers << ","HtmlRenderer  generate_id ","(int 2) include? ","HtmlRenderer  generate_HtmlRenderer  generate_id  "]}," Server HtmlRenderer RedcarpetRenderer icons":{"type":"method","name":"icons","children":[],"call":[]}," Server HtmlRenderer generate_id":{"type":"method","name":"generate_id","children":[],"call":[]}," Server HtmlRenderer render":{"type":"method","name":"render","children":[],"call":[]}," Server HtmlRenderer markdown":{"type":"method","name":"markdown","children":[],"call":[]}," ZendeskAPI Data subclasses":{"type":"method","name":"subclasses","children":[],"call":[]}," ZendeskAPI Data inherited":{"type":"method","name":"inherited","children":[],"call":[" subclasses push "," subclasses "]}," Data format":{"type":"method","name":"format","children":[],"call":[" resource_name ","client send loaded? ","client send "," instance_eval "," define_method "," class_eval "," block_given? "]}," Data /":{"type":"method","name":"/","children":[],"call":[" send ","ZendeskAPI Collection  new "," class ","(lvasgn :res\n  (send\n    (ivar :@client) :send\n    (send\n      (send\n        (self) :class) :resource_name))) loaded? ","@client send "," class resource_name "," association options parent "," association options "," association ","method == ","(lvasgn :@client send \n  (send\n    (ivar :@client) :send\n    (send\n      (send\n        (self) :class) :@client send ource_name))) loaded? "," class @client send ource_name "]}," Client format_headers":{"type":"method","name":"format_headers","children":[],"call":[]}," Client to_a":{"type":"method","name":"to_a","children":[],"call":[" class resources "," class "]}," Client resources":{"type":"method","name":"resources","children":[],"call":[]}," Client to_s":{"type":"method","name":"to_s","children":[],"call":[]}," Collection format_headers":{"type":"method","name":"format_headers","children":[],"call":["@resource_class format_headers "]}," Collection to_s":{"type":"method","name":"to_s","children":[],"call":[" path "]}," Collection loaded?":{"type":"method","name":"loaded?","children":[],"call":["@resources any? "]}," Collection log_error":{"type":"method","name":"log_error","children":[],"call":[" raise "]}," Collection /":{"type":"method","name":"/","children":[],"call":[" send ","id is_a? ! ","id is_a? "," find ","obj id == ","obj id "," detect "," loaded? ","@collection_path shift ","@collection_path length == ","@collection_path length ","id == "]}," Console path":{"type":"method","name":"path","children":[],"call":[" client "]}," Console config":{"type":"method","name":"config","children":[],"call":[]}," Console method_missing":{"type":"method","name":"method_missing","children":[],"call":[" path send "," path "]}," Console ls":{"type":"method","name":"ls","children":[],"call":["Object  public_methods include? ","Object  public_methods ","method to_sym == ","method to_sym ","method =~ "," path public_methods reject "," path public_methods "," path "," puts "," printf ","lengths [] + ","lengths [] ","object each_with_index ","format each "," format_headers each_with_index "," format_headers ","lengths []= ","(send\n  (send\n    (lvar :field) :to_s) :length) max ","field to_s length ","field to_s ","format inject ","elem format "," client ","elem method arity == ","elem method arity ","elem method "," to_a map "," to_a "," path respond_to? ","obj send ","args inject ","args any? "]}," Console cwd":{"type":"method","name":"cwd","children":[],"call":[" path "]}," Console cd":{"type":"method","name":"cd","children":[],"call":["new_path is_a? ","new_path class to_s =~ ","new_path class to_s ","new_path class "]}," Console url":{"type":"method","name":"url","children":[],"call":[" client config url= "," client config "," client "]}," Console basic_auth":{"type":"method","name":"basic_auth","children":[],"call":[" password "," username "]}," Console password":{"type":"method","name":"password","children":[],"call":[" client config password= "," client config "," client "]}," Console username":{"type":"method","name":"username","children":[],"call":[" client config username= "," client config "," client "]}," Console help":{"type":"method","name":"help","children":[],"call":[]}," Console client":{"type":"method","name":"client","children":[],"call":["blk call ","blk nil? ","cfg send "," config each "," config "," config keys any? "," config keys ","ZendeskAPI Client  new "]}," Console Eval loop_eval":{"type":"method","name":"loop_eval","children":[],"call":["split gsub! ","str [] == ","str [] ","split join ","split []= ","s =~ ","split [] map ","split [] ","str split ","split join  gsub! ","str split  gsub! ","split join  join ","str split  join ","split join  []= ","str split  []= ","split join  [] map ","str split  [] map ","split join  [] ","str split  [] ","str split join  ","str str split  "]}," Console /":{"type":"method","name":"/","children":[],"call":[" puts "," send ","id is_a? ! ","id is_a? "," find ","obj id == ","obj id "," detect "," loaded? ","@collection_path shift ","@collection_path length == ","@collection_path length ","id == "]}," ZendeskAPI Collection last_page?":{"type":"method","name":"last_page?","children":[],"call":["@options [] to_i * >= "," count ","@options [] to_i * ","@options [] to_i ","@options [] ","@options [] ! ","@next_page == ","@next_page ! "]}," ZendeskAPI Collection first_page?":{"type":"method","name":"first_page?","children":[],"call":["@options [] to_i <= ","@options [] to_i ","@options [] ","@options [] ! ","@prev_page ! "]}," ZendeskAPI Ticket Comment save":{"type":"method","name":"save","children":[],"call":[" save_associations "," new_record? "]}," ZendeskAPI Rescue Methods attach_error":{"type":"method","name":"attach_error","children":[],"call":[" error= "," respond_to? "," error_message= ","error description ","error error ","Hashie Mash  new ","error is_a? ","e response [] ","e response "," Hashie Mash  new = "," e response [] = "," Hashie Mash  new _message= "," e response [] _message= ","Hashie Mash  new  description ","e response []  description ","Hashie Mash  new  Hashie Mash  new  ","e response []  e response []  ","Hashie Mash  new  is_a? ","e response []  is_a? "]}," ZendeskAPI Middleware Request EtagCache cache_key":{"type":"method","name":"cache_key","children":[],"call":["env [] to_s ","env [] "]}," ZendeskAPI Association side_load_from_child_or_parent_id":{"type":"method","name":"side_load_from_child_or_parent_id","children":[],"call":["resource send "," options name "," options ","id == ","side_load [] ","side_loads detect ","resource class singular_resource_name ","resource class ","resource id "," options include_key ","resource key? ","resource id  == ","resource send  == ","sresource id e_load [] ","sresource send e_load [] ","sresource id e_loads detect ","sresource send e_loads detect ","resource resource id  ","resource resource send  "," options  options include_key  "]}," ZendeskAPI Association side_load_from_child_ids":{"type":"method","name":"side_load_from_child_ids","children":[],"call":["resource send "," _side_load ","ids include? ","side_load [] "," options include_key "," options ","side_loads select "," options name ","resource send  include? "]}," ZendeskAPI Association side_load_from_parent_id":{"type":"method","name":"side_load_from_parent_id","children":[],"call":["resource send "," _side_load ","side_load [] == ","resource id ","side_load [] ","side_loads select "," options name "," options ","resource class singular_resource_name ","resource class "]}," Format format":{"type":"method","name":"format","children":[],"call":[" resource_name ","client send loaded? ","client send "," instance_eval "," define_method "," class_eval "," block_given? "]}," Format extended":{"type":"method","name":"extended","children":[],"call":[]}," Path /":{"type":"method","name":"/","children":[],"call":[" send ","ZendeskAPI Collection  new "," class ","(lvasgn :res\n  (send\n    (ivar :@client) :send\n    (send\n      (send\n        (self) :class) :resource_name))) loaded? ","@client send "," class resource_name "," association options parent "," association options "," association ","method == ","(lvasgn :@client send \n  (send\n    (ivar :@client) :send\n    (send\n      (send\n        (self) :class) :@client send ource_name))) loaded? "," class @client send ource_name "]}," Subclasses ClassMethods resources":{"type":"method","name":"resources","children":[],"call":["subclasses sort_by ","resource name =~ ","resource name ","subclasses delete_if ","GET_SUBCLASSES  call ","ZendeskAPI Data  subclasses ","GET_SUBCLASSES  call  sort_by ","GET_SUBCLASSES  call  delete_if ","ZendeskAPI Data  GET_SUBCLASSES  call  "]}," Subclasses format_headers":{"type":"method","name":"format_headers","children":[],"call":[]}," Subclasses to_a":{"type":"method","name":"to_a","children":[],"call":[" class resources "," class "]}," Subclasses to_s":{"type":"method","name":"to_s","children":[],"call":[]}," Subclasses included":{"type":"method","name":"included","children":[],"call":[]}," Console format_headers":{"type":"method","name":"format_headers","children":[],"call":["@resource_class format_headers "]}," Console to_s":{"type":"method","name":"to_s","children":[],"call":[" path "]}," Console loaded?":{"type":"method","name":"loaded?","children":[],"call":["@resources any? "]}," Console log_error":{"type":"method","name":"log_error","children":[],"call":[" raise "]}," Console included":{"type":"method","name":"included","children":[],"call":[]}," ZendeskAPI Collection resource_methods":{"type":"method","name":"resource_methods","children":[],"call":["@resource_class singleton_methods map ","@resource_class singleton_methods "]}," ZendeskAPI Collection collection_method":{"type":"method","name":"collection_method","children":[],"call":["@resource_class send "]}," ZendeskAPI Collection next_collection":{"type":"method","name":"next_collection","children":[],"call":[" class new ","@options merge "," class ","opts merge! ","@collection_path dup push ","@collection_path dup ","args last ","args last is_a? ","args last  merge! "]}," ZendeskAPI Collection array_method":{"type":"method","name":"array_method","children":[],"call":[" to_a send "," to_a "," to_a public_send "]}," ZendeskAPI Collection handle_response":{"type":"method","name":"handle_response","children":[],"call":[" set_includes "," set_page_and_count ","@resource_class new ","results map ","body delete ","@resource_class model_key "," wrap_resource "," raise ","body keys inspect ","body keys ","response_body dup ","@response env ","response_body is_a? "," assert_results "," assert_valid_response_body ","response_body dup  delete ","response_body dup  keys inspect ","response_body dup  keys ","response_response_body dup  dup ","response_response_body dup  is_a? "," assert_valid_response_response_body dup  "]}," ZendeskAPI Collection get_response":{"type":"method","name":"get_response","children":[],"call":["req params merge! ","req params ","req body= ","(str \"put\") include? ","@verb to_s ","@includes join ","@includes any? ","v nil? ","@options delete_if ","@client connection send ","@client connection "]}," ZendeskAPI Collection set_association_from_options":{"type":"method","name":"set_association_from_options","children":[],"call":["Association  new ","association_options merge ","@options delete ","@collection_path join ","association_options [] ","@options delete  join "]}," ZendeskAPI Collection join_special_params":{"type":"method","name":"join_special_params","children":[],"call":["@options []= ","v join ","v is_a? ","SPECIALLY_JOINED_PARAMS  include? ","k to_sym ","@options each "]}," ZendeskAPI Client add_warning_callback":{"type":"method","name":"add_warning_callback","children":[],"call":["logger warn ","env [] [] ","env [] "," insert_callback "," config logger "," config "," config logger  warn "," config  config logger  "]}," ZendeskAPI Client set_default_logger":{"type":"method","name":"set_default_logger","children":[],"call":[" config logger level= "," config logger "," config "," config logger= ","Logger  new "," require "," config logger == "," config logger nil? "]}," ZendeskAPI Client set_token_auth":{"type":"method","name":"set_token_auth","children":[],"call":[" config username "," config "," config username end_with? "," config password= "," config token "," config password ! "," config password "," raise "," config username nil? "," config token nil? "]}," ZendeskAPI Client check_url":{"type":"method","name":"check_url","children":[],"call":[" warn "," config url !~ "," config url "," config "," raise "," config allow_http ! "," config allow_http "," config url start_with? ! "," config url start_with? "]}," ZendeskAPI Associations ClassMethods HasMany define_has_many_setter":{"type":"method","name":"define_has_many_setter","children":[],"call":[" resource "," send ","resources map ","association [] "," has_key? "," instance_variable_set ","resources association= ","Association  new ","association merge "," send replace "," wrap_resource ","resources map! ","resources is_a? "," define_method "]}," ZendeskAPI Associations ClassMethods HasMany define_has_many_getter":{"type":"method","name":"define_has_many_getter","children":[],"call":[" instance_variable_set ","association [] "," send ","resources map "," has_key? "," resource ","ZendeskAPI Collection  new ","instance_opts merge ","klass new ","res merge ","resources any? "," method_missing ","association [] to_sym ","(send\n  (lvar :ids) :map) compact ","klass find ","ids map ","ids any? ","Inflection  singular ","association [] to_s ","Association  new ","association merge ","instance_opts [] ! ","instance_opts [] "," instance_variable_get ","args pop ","args last is_a? ","args last "," define_method ","collection replace ","collection extend ","association [] any? "," wrap_resource ","(send\n  (lvar :ids) :map) compact  map "," method_missing  map ","args pop  merge ","association []  new ","(send\n  (lvar :ids) :map) compact  any? "," method_missing  any? ","(send\n  (lvar : method_missing ) :map) compact ","association []  find ","args pop  [] ! ","args pop  [] ","ZendeskAPI Collection  new  replace ","ZendeskAPI Collection  new  extend "]}," ZendeskAPI Associations ClassMethods HasMany has_many":{"type":"method","name":"has_many","children":[],"call":[" define_has_many_setter "," define_has_many_getter "," define_used "," associations << "," associations ","class_level_association merge! "," build_association ","klass resource_name ","class_level_options delete "," build_association  merge! ","klass klass resource_name  ","class_level_options delete  resource_name "]}," ZendeskAPI Associations ClassMethods Has define_has_setter":{"type":"method","name":"define_has_setter","children":[],"call":[" instance_variable_set ","association [] "," send ","resource id "," has_key? "," wrap_resource "," define_method "," wrap_resource  id "," wrap_ wrap_resource  "]}," ZendeskAPI Associations ClassMethods Has define_has_getter":{"type":"method","name":"define_has_getter","children":[],"call":[" instance_variable_set ","association [] "," send ","resource id "," has_key? ","klass new ","response body [] merge ","response body [] ","klass singular_resource_name ","response body ","@client connection get ","instance_association generate_path ","@client connection "," rescue_client_error ","klass superclass == ","klass superclass "," wrap_resource "," method_missing ","association [] to_sym ","klass find ","klass respond_to? ","Association  new ","association merge ","instance_options [] ! ","instance_options [] "," instance_variable_get ","args pop ","args last is_a? ","args last "," define_method ","association [] ! ","klass find  id ","association []  new ","@client connection get  body [] merge ","@client connection get  body [] ","klass singular_klass find _name ","association []  singular_resource_name ","@client connection get  body ","Association  new  generate_path ","association []  superclass == ","association []  superclass "," wrap_klass find  ","association []  find ","association []  respond_to? ","args pop  [] ! ","args pop  [] "]}," ZendeskAPI Associations ClassMethods Has has":{"type":"method","name":"has","children":[],"call":[" define_has_setter "," define_has_getter "," define_used "," associations << "," associations ","class_level_association merge! "," build_association ","klass singular_resource_name ","class_level_options delete "," build_association  merge! ","klass singular_klass singular_resource_name  ","class_level_options delete  singular_resource_name "]}," ZendeskAPI Associations ClassMethods define_used":{"type":"method","name":"define_used","children":[],"call":[" instance_variable_get ! ! "," instance_variable_get ! "," instance_variable_get ","association [] "," define_method "]}," ZendeskAPI Associations ClassMethods build_association":{"type":"method","name":"build_association","children":[],"call":["options delete ","(or\n  (send\n    (lvar :options) :delete\n    (sym :include_key))\n  (sym :id)) to_s ","(or\n  (send\n    (lvar :options) :delete\n    (sym :include))\n  (send\n    (lvar :klass) :resource_name)) to_s ","klass resource_name "," Array "]}," ZendeskAPI Associations ClassMethods extended":{"type":"method","name":"extended","children":[],"call":[]}," ZendeskAPI Trackie size":{"type":"method","name":"size","children":[],"call":[" [] "]}," ZendeskAPI Upload id":{"type":"method","name":"id","children":[],"call":[" token "]}," ZendeskAPI Macro apply":{"type":"method","name":"apply","children":[],"call":[" apply! ","Hashie Mash  new ","SilentMash  new "]}," ZendeskAPI Macro apply!":{"type":"method","name":"apply!","children":[],"call":["Hashie Mash  new ","response body fetch ","response body ","@client connection get ","@client connection ","ticket path "," path ","SilentMash  new ","@client connection get  body fetch ","@client connection get  body "]}," ZendeskAPI Middleware Response Callback call":{"type":"method","name":"call","children":[],"call":["c call ","@client callbacks each ","@client callbacks ","@app call on_complete ","@app call "]}," ZendeskAPI Rule attributes_for_save":{"type":"method","name":"attributes_for_save","children":[],"call":[" attributes changes merge "," attributes changes "," attributes "," class singular_resource_name to_sym "," class singular_resource_name "," class ","h merge "," send ","(sym :conditions) inject "]}," ZendeskAPI Data attributes_for_save":{"type":"method","name":"attributes_for_save","children":[],"call":[" attributes changes "," attributes "," class singular_resource_name to_sym "," class singular_resource_name "," class "," class unnested_params "," attribute_changes "]}," ZendeskAPI Data namespace":{"type":"method","name":"namespace","children":[],"call":[]}," ZendeskAPI Data resource_path":{"type":"method","name":"resource_path","children":[],"call":["(ivar :@namespace) compact join ","(ivar :@namespace) compact "," resource_name "]}," ZendeskAPI Middleware Response RaiseError on_complete":{"type":"method","name":"on_complete","children":[],"call":[" raise ","Error NetworkError  new ","Error RecordInvalid  new ","Error RecordNotFound  new ","env [] "]}," ZendeskAPI Error RecordInvalid initialize":{"type":"method","name":"initialize","children":[],"call":["response [] [] ","response [] ","response [] key? ","response [] is_a? "," response [] [] "," response [] "," response "," response [] is_a? "," generate_error_msg "]}," ZendeskAPI Collection _save":{"type":"method","name":"_save","children":[],"call":["item send ","item changes empty? ! ","item changes empty? ","item changes ","item respond_to? ","@resources map! ","item changed? ","item destroyed? ! ","item destroyed? "]}," ZendeskAPI Collection _all":{"type":"method","name":"_all","children":[],"call":[" next ","block call ","arguments take ","block arity ","block arity >= ","@options [] "," each "," empty? ! "," empty? "," fetch "," fetch! "," clear_cache "," page "," raise "," last_page? ","arguments take  take "]}," ZendeskAPI Collection each_page!":{"type":"method","name":"each_page!","children":[],"call":[" all! "," warn "]}," ZendeskAPI Collection all":{"type":"method","name":"all","children":[],"call":[" _all "]}," ZendeskAPI Collection all!":{"type":"method","name":"all!","children":[],"call":[" _all "]}," ZendeskAPI Collection to_a!":{"type":"method","name":"to_a!","children":[],"call":[" fetch! "]}," ZendeskAPI Collection fetch!":{"type":"method","name":"fetch!","children":[],"call":[" handle_response ","@response body dup ","@response body "," get_response "," path "," association options parent new_record? "," association options parent "," association options "," association ","reload ! ","@fetchable ! "," handle_cursor_response ","path_query_link == "," get_resources "," get_response  body dup "," get_response  body "]}," ZendeskAPI Collection save!":{"type":"method","name":"save!","children":[],"call":[" _save "]}," ZendeskAPI Collection count!":{"type":"method","name":"count!","children":[],"call":[" fetch! "]}," ZendeskAPI Update ClassMethod _update":{"type":"method","name":"_update","children":[],"call":["resource attributes merge! ","resource attributes "," new ","attributes delete ","ZendeskAPI Client  check_deprecated_namespace_usage "," singular_resource_name "," new  attributes merge! "," new  attributes "," singular_ new _name "]}," ZendeskAPI Update ClassMethod update!":{"type":"method","name":"update!","children":[],"call":["resource tap ","resource attributes merge! ","resource attributes "," new ","attributes delete ","ZendeskAPI Client  check_deprecated_namespace_usage "," singular_resource_name ","resource save! ","resource is_a? "," new  tap "," new  attributes merge! "," new  attributes "," singular_ new _name "," new  save! "," new  is_a? "]}," ZendeskAPI Destroy ClassMethod destroy!":{"type":"method","name":"destroy!","children":[],"call":["req params= ","client connection delete ","association generate_path ","client connection ","Association  new ","opts delete "," new destroy! "," new "]}," ZendeskAPI Destroy destroy!":{"type":"method","name":"destroy!","children":[],"call":["@client connection delete "," path "," url ","@client connection "," new_record? "," destroyed? "," block_given? "]}," ZendeskAPI Read find!":{"type":"method","name":"find!","children":[],"call":["resource set_includes ","response body "," new tap "," new ","response body [] "," singular_resource_name ","req params= ","client connection get ","association generate_path ","client connection ","options []= ","includes join ","includes any? "," Array ","options [] ","Association  new ","options delete "," raise "," ancestors include? "," ancestors ","resource attributes clear_changes ","resource attributes "," block_given? ","resource handle_response ","resource set_ Array  "," Array  join "," Array  any? "]}," ZendeskAPI Topic TopicVote attributes_for_save":{"type":"method","name":"attributes_for_save","children":[],"call":[" attributes changes "," attributes "]}," ZendeskAPI Upload attributes_for_save":{"type":"method","name":"attributes_for_save","children":[],"call":[" attributes changes "," attributes "]}," ZendeskAPI SingularResource attributes_for_save":{"type":"method","name":"attributes_for_save","children":[],"call":[" attributes changes "," attributes "," class resource_name to_sym "," class resource_name "," class "," attribute_changes "]}," ZendeskAPI Sideloading to_array":{"type":"method","name":"to_array","children":[],"call":["(lvar :item) flatten compact ","(lvar :item) flatten ","item is_a? "]}," ZendeskAPI OauthToken singular_resource_name":{"type":"method","name":"singular_resource_name","children":[],"call":[]}," ZendeskAPI OauthClient singular_resource_name":{"type":"method","name":"singular_resource_name","children":[],"call":[]}," ZendeskAPI Tag attributes_for_save":{"type":"method","name":"attributes_for_save","children":[],"call":[" id "," class resource_name "," class "]}," ZendeskAPI Tag Update _save":{"type":"method","name":"_save","children":[],"call":[" raise ","method == ","req body= ","@resources map "," client connection post "," path "," client connection "," client ","@client connection post ","@client connection ","@resources reject map ","@resources reject "]}," ZendeskAPI Tag destroy!":{"type":"method","name":"destroy!","children":[],"call":["req body= "," attributes_for_save "]}," ZendeskAPI Tag changed?":{"type":"method","name":"changed?","children":[],"call":[]}," ZendeskAPI Tag path":{"type":"method","name":"path","children":[],"call":["opts merge "," raise "," association options parent "," association options "," association "]}," ZendeskAPI Collection wrap_resource":{"type":"method","name":"wrap_resource","children":[],"call":["@resource_class new "," association ","res merge "," wrap_resource ","Hash  [] ","res merge! ","@res merge ource_class new ","res merge  merge "," wrap_res merge ource ","res merge  merge! "]}," ZendeskAPI Middleware Response RaiseError call":{"type":"method","name":"call","children":[],"call":[" raise ","Error NetworkError  new "]}," ZendeskAPI Error RecordInvalid to_s":{"type":"method","name":"to_s","children":[],"call":["@errors to_s "," class name "," class "]}," ZendeskAPI Client class_from_namespace":{"type":"method","name":"class_from_namespace","children":[],"call":["ns const_get ","ns const_defined? ","(const nil :ZendeskAPI) each "," module_defines_class? "," namespaces each "," namespaces "]}," ZendeskAPI Client voice":{"type":"method","name":"voice","children":[],"call":["Delegator  new "]}," ZendeskAPI Collection build!":{"type":"method","name":"build!","children":[],"call":[" << "," fetch! "," wrap_resource tap "," wrap_resource "]}," ZendeskAPI Collection build":{"type":"method","name":"build","children":[],"call":[" << "," wrap_resource tap "," wrap_resource "]}," ZendeskAPI Role to_param":{"type":"method","name":"to_param","children":[],"call":[" name "]}," ZendeskAPI App handle_response":{"type":"method","name":"handle_response","children":[],"call":["@attributes replace ","@response body ","response body "]}," ZendeskAPI App attributes_for_save":{"type":"method","name":"attributes_for_save","children":[],"call":[" attributes changes "," attributes "]}," ZendeskAPI App installations":{"type":"method","name":"installations","children":[],"call":[]}," ZendeskAPI App uploads":{"type":"method","name":"uploads","children":[],"call":[]}," ZendeskAPI App Installation handle_response":{"type":"method","name":"handle_response","children":[],"call":["@attributes replace ","@response body "]}," ZendeskAPI App Installation attributes_for_save":{"type":"method","name":"attributes_for_save","children":[],"call":[" attributes changes "," attributes "]}," ZendeskAPI App Upload attributes_for_save":{"type":"method","name":"attributes_for_save","children":[],"call":[" attributes "]}," ZendeskAPI App Upload changed?":{"type":"method","name":"changed?","children":[],"call":[]}," ZendeskAPI App Upload save!":{"type":"method","name":"save!","children":[],"call":[" attributes id= ","@response body [] ","@response body "," attributes "," tap "]}," ZendeskAPI App Upload initialize":{"type":"method","name":"initialize","children":[],"call":["attributes delete ","attributes [] "]}," ZendeskAPI App Upload resource_path":{"type":"method","name":"resource_path","children":[],"call":[]}," ZendeskAPI App initialize":{"type":"method","name":"initialize","children":[],"call":["attributes [] "]}," ZendeskAPI Save handle_response":{"type":"method","name":"handle_response","children":[],"call":["@attributes replace ","@attributes deep_merge ","@response body [] "," class singular_resource_name "," class ","@response body "]}," ZendeskAPI Setting attributes_for_save":{"type":"method","name":"attributes_for_save","children":[],"call":[" attributes changes "," attributes "," class resource_name "," class "]}," ZendeskAPI Setting path":{"type":"method","name":"path","children":[],"call":["options merge "]}," ZendeskAPI Setting new_record?":{"type":"method","name":"new_record?","children":[],"call":[]}," ZendeskAPI User change_password!":{"type":"method","name":"change_password!","children":[],"call":[" password! ","opts merge "]}," ZendeskAPI User set_password!":{"type":"method","name":"set_password!","children":[],"call":[" password! ","opts merge "]}," ZendeskAPI User change_password":{"type":"method","name":"change_password","children":[],"call":[" password ","opts merge "]}," ZendeskAPI User set_password":{"type":"method","name":"set_password","children":[],"call":[" password ","opts merge "]}," ZendeskAPI PushNotificationDevice destroy_many":{"type":"method","name":"destroy_many","children":[],"call":[]}," ZendeskAPI App create!":{"type":"method","name":"create!","children":[],"call":[]}," ZendeskAPI AppNotification handle_response":{"type":"method","name":"handle_response","children":[],"call":["@attributes replace ","response body ","response body is_a? ","@response body "]}," ZendeskAPI AppNotification attributes_for_save":{"type":"method","name":"attributes_for_save","children":[],"call":[" attributes changes "," attributes "]}," ZendeskAPI AppNotification resource_path":{"type":"method","name":"resource_path","children":[],"call":[]}," ZendeskAPI AppInstallation handle_response":{"type":"method","name":"handle_response","children":[],"call":["@attributes replace ","response body ","@response body "]}," ZendeskAPI AppInstallation attributes_for_save":{"type":"method","name":"attributes_for_save","children":[],"call":[" attributes changes "," attributes "]}," ZendeskAPI AppInstallation singular_resource_name":{"type":"method","name":"singular_resource_name","children":[],"call":[]}," ZendeskAPI User handle_response":{"type":"method","name":"handle_response","children":[],"call":[" role_id= "," role name "," role "," key? "]}," ZendeskAPI User attributes_for_save":{"type":"method","name":"attributes_for_save","children":[],"call":[" class singular_resource_name "," class ","k == "," attributes changes delete_if "," attributes changes "," attributes "]}," ZendeskAPI User clear_sessions":{"type":"method","name":"clear_sessions","children":[],"call":[" clear_sessions! "]}," ZendeskAPI User clear_sessions!":{"type":"method","name":"clear_sessions!","children":[],"call":["@client connection delete "," path + "," path ","@client connection "]}," ZendeskAPI User current_session":{"type":"method","name":"current_session","children":[],"call":["ZendeskAPI User CurrentSession  find "]}," ZendeskAPI User CurrentSession singular_resource_name":{"type":"method","name":"singular_resource_name","children":[],"call":[]}," ZendeskAPI User incremental_export":{"type":"method","name":"incremental_export","children":[],"call":[]}," ZendeskAPI UserView preview":{"type":"method","name":"preview","children":[],"call":[]}," ZendeskAPI View columns=":{"type":"method","name":"columns=","children":[],"call":[" output []= "," output "]}," ZendeskAPI View add_column":{"type":"method","name":"add_column","children":[],"call":[" columns= ","columns << "," execution columns map "," execution columns "," execution ","  execution columns map = "," execution columns map  << "," execution  execution columns map  map "," execution  execution columns map  "]}," ZendeskAPI Actions add_action":{"type":"method","name":"add_action","children":[],"call":[" actions << "," actions "]}," ZendeskAPI Conditions add_any_condition":{"type":"method","name":"add_any_condition","children":[],"call":[" conditions [] << "," conditions [] "," conditions "]}," ZendeskAPI Conditions add_all_condition":{"type":"method","name":"add_all_condition","children":[],"call":[" conditions [] << "," conditions [] "," conditions "]}," ZendeskAPI Conditions any_conditions=":{"type":"method","name":"any_conditions=","children":[],"call":[" conditions []= "," conditions "]}," ZendeskAPI Conditions all_conditions=":{"type":"method","name":"all_conditions=","children":[],"call":[" conditions []= "," conditions "]}," ZendeskAPI UserViewRow model_key":{"type":"method","name":"model_key","children":[],"call":[]}," ZendeskAPI Ticket import!":{"type":"method","name":"import!","children":[],"call":[]}," ZendeskAPI Ticket to_param":{"type":"method","name":"to_param","children":[],"call":[" map "]}," ZendeskAPI TicketEvent incremental_export":{"type":"method","name":"incremental_export","children":[],"call":[]}," ZendeskAPI AnonymousRequest singular_resource_name":{"type":"method","name":"singular_resource_name","children":[],"call":[]}," ZendeskAPI Request Comment save":{"type":"method","name":"save","children":[],"call":[" save_associations "," new_record? "]}," ZendeskAPI Topic import":{"type":"method","name":"import","children":[],"call":[]}," ZendeskAPI Topic import!":{"type":"method","name":"import!","children":[],"call":[]}," ZendeskAPI Topic TopicComment import":{"type":"method","name":"import","children":[],"call":[]}," ZendeskAPI Topic TopicComment import!":{"type":"method","name":"import!","children":[],"call":[]}," ZendeskAPI Brand destroy!":{"type":"method","name":"destroy!","children":[],"call":[" save! "," active= "]}," ZendeskAPI Organization incremental_export":{"type":"method","name":"incremental_export","children":[],"call":[]}," ZendeskAPI DataNamespace descendants":{"type":"method","name":"descendants","children":[],"call":[]}," ZendeskAPI DataNamespace included":{"type":"method","name":"included","children":[],"call":["@descendants << "]}," ZendeskAPI Data new_from_response":{"type":"method","name":"new_from_response","children":[],"call":["resource attributes clear_changes ","resource attributes ","resource set_includes ","response body ","resource handle_response "," new tap "," new "]}," ZendeskAPI Middleware Response ParseJson on_complete":{"type":"method","name":"on_complete","children":[],"call":["env []= ","JSON  parse ","env [] ","env [] strip empty? ","env [] strip ","type == ","type split first ","type split ","type index ","env [] [] to_s ","env [] [] ","env [] strip empty? ! ","env [] respond_to? ","type split first  == ","env [] [] to_s  == ","type split first  split first ","env [] [] to_s  split first ","type split first  split ","env [] [] to_s  split ","type split first  index ","env [] [] to_s  index "]}," ZendeskAPI Middleware Response Gzip on_complete":{"type":"method","name":"on_complete","children":[],"call":["env []= ","Zlib GzipReader  new read ","Zlib GzipReader  new ","StringIO  new ","env [] ","env [] [] == ","env [] [] ","env [] strip empty? ! ","env [] strip empty? ","env [] strip ","env [] respond_to? ","env [] force_encoding strip empty? ","env [] force_encoding strip ","env [] force_encoding ","env [] [] != "]}," ZendeskAPI Middleware Response Deflate on_complete":{"type":"method","name":"on_complete","children":[],"call":["env body= ","Zlib Inflate  inflate ","env body ","env [] [] == ","env [] [] ","env [] ","env body strip empty? ! ","env body strip empty? ","env body strip ","env body respond_to? ","env [] [] != "]}," ZendeskAPI Middleware Request UrlBasedAccessToken call":{"type":"method","name":"call","children":[],"call":["@app call ","env [] query ","env [] ","env [] query= "]}," ZendeskAPI Middleware Request UrlBasedAccessToken initialize":{"type":"method","name":"initialize","children":[],"call":[]}," ZendeskAPI Middleware Request EncodeJson call":{"type":"method","name":"call","children":[],"call":["@app call ","env [] [] ","env [] ","env []= ","JSON  dump ","type == ","type empty? ","(and\n  (send\n    (send\n      (lvar :env) :[]\n      (sym :body)) :respond_to?\n    (sym :to_str))\n  (send\n    (send\n      (lvar :env) :[]\n      (sym :body)) :empty?)) ! ","env [] empty? ","env [] respond_to? ","type split first ","type split ","type index ","env [] [] to_s ","type split first  == ","env [] [] to_s  == ","type split first  empty? ","env [] [] to_s  empty? ","type split first  split first ","env [] [] to_s  split first ","type split first  split ","env [] [] to_s  split ","type split first  index ","env [] [] to_s  index "]}," ZendeskAPI Collection with_association?":{"type":"method","name":"with_association?","children":[],"call":["@resource_class to_s split size > ","@resource_class to_s split size ","@resource_class to_s split ","@resource_class to_s ","(const nil :Tag) include? "]}," ZendeskAPI Collection to_param":{"type":"method","name":"to_param","children":[],"call":[" map "]}," ZendeskAPI Collection respond_to?":{"type":"method","name":"respond_to?","children":[],"call":["Array  new respond_to? ","Array  new "]}," ZendeskAPI Client method_as_class":{"type":"method","name":"method_as_class","children":[],"call":["ZendeskAPI Association  class_from_namespace ","ZendeskAPI Helpers  modulize_string ","Inflection  singular ","method to_s ","method to_s gsub "," class_from_namespace "]}," ZendeskAPI Client respond_to?":{"type":"method","name":"respond_to?","children":[],"call":[" method_as_class nil? ! "," method_as_class nil? "," method_as_class ","cache [] ","@resource_cache [] ","(or\n  (or\n    (send\n      (send\n        (lvar :cache) :to_h) :[]\n      (sym :class))\n    (send nil :resource_class_for\n      (lvar :method)))\n  (zsuper)) ! ! ","(or\n  (or\n    (send\n      (send\n        (lvar :cache) :to_h) :[]\n      (sym :class))\n    (send nil :resource_class_for\n      (lvar :method)))\n  (zsuper)) ! "," resource_class_for ","cache to_h [] ","cache to_h ","@resource_cache []  [] ","@resource_@resource_cache []  [] ","(or\n  (or\n    (send\n      (send\n        (lvar :@resource_cache [] ) :to_h) :[]\n      (sym :class))\n    (send nil :resource_class_for\n      (lvar :method)))\n  (zsuper)) ! ! ","(or\n  (or\n    (send\n      (send\n        (lvar :@resource_cache [] ) :to_h) :[]\n      (sym :class))\n    (send nil :resource_class_for\n      (lvar :method)))\n  (zsuper)) ! ","@resource_cache []  to_h [] ","@resource_cache []  to_h "]}," ZendeskAPI Association ignorable_namespace_strings":{"type":"method","name":"ignorable_namespace_strings","children":[],"call":["(send\n  (send\n    (const\n      (const nil :ZendeskAPI) :DataNamespace) :descendants) :map) flatten uniq ","(send\n  (send\n    (const\n      (const nil :ZendeskAPI) :DataNamespace) :descendants) :map) flatten ","klass to_s split ","klass to_s ","ZendeskAPI DataNamespace  descendants map ","ZendeskAPI DataNamespace  descendants "]}," ZendeskAPI Association module_defines_class?":{"type":"method","name":"module_defines_class?","children":[],"call":["mod const_defined? ","RUBY_VERSION  < "]}," ZendeskAPI Association class_from_namespace":{"type":"method","name":"class_from_namespace","children":[],"call":["ns const_get "," module_defines_class? "," namespaces each "," namespaces "]}," ZendeskAPI Association namespaces":{"type":"method","name":"namespaces","children":[],"call":["(const nil :ZendeskAPI) + ","ZendeskAPI DataNamespace  descendants "]}," ZendeskAPI DestroyMany destroy_many!":{"type":"method","name":"destroy_many!","children":[],"call":["JobStatus  new_from_response "," block_given? ","req params= ","ids join ","client connection delete ","association generate_path ","client connection "," resource_path "]}," ZendeskAPI CreateMany create_many!":{"type":"method","name":"create_many!","children":[],"call":["JobStatus  new_from_response "," block_given? ","req body= "," resource_name ","client connection post ","association generate_path ","client connection "," resource_path "]}," ZendeskAPI Read ClassMethods find":{"type":"method","name":"find","children":[],"call":[" find! "]}," ZendeskAPI Read ClassMethods find!":{"type":"method","name":"find!","children":[],"call":[" new_from_response "," block_given? ","req params= ","client connection get ","association generate_path ","client connection ","options []= ","includes join ","includes any? "," Array ","options [] ","Association  new ","options delete "," raise "," ancestors include? "," ancestors "," Array  join "," Array  any? "]}," ZendeskAPI Read reload!":{"type":"method","name":"reload!","children":[],"call":[" attributes clear_changes "," attributes "," handle_response "," block_given? ","@client connection get "," path ","@client connection "," client connection get "," client connection "," client "]}," ZendeskAPI Read included":{"type":"method","name":"included","children":[],"call":[]}," ZendeskAPI ResponseHandler handle_response":{"type":"method","name":"handle_response","children":[],"call":["@attributes replace ","@attributes deep_merge ","response body [] "," class singular_resource_name "," class ","response body ","response body is_a? "]}," ZendeskAPI UpdateMany update_many!":{"type":"method","name":"update_many!","children":[],"call":["JobStatus  new_from_response "," block_given? ","req body= "," singular_resource_name ","req params= ","ids join ","client connection put ","association generate_path ","client connection ","Association  new ","attributes delete ","ids_or_attributes join "," resource_name ","attributes == "]}," ZendeskAPI Voice Agent Ticket display!":{"type":"method","name":"display!","children":[],"call":[]}," ZendeskAPI Voice Agent Ticket new_record?":{"type":"method","name":"new_record?","children":[],"call":[]}," ZendeskAPI Middleware Response SanitizeResponse on_complete":{"type":"method","name":"on_complete","children":[],"call":["env [] scrub! ","env [] "]}," ZendeskAPI Collection respond_to_missing?":{"type":"method","name":"respond_to_missing?","children":[],"call":[" respond_to? "]}," ZendeskAPI Error ClientError to_s":{"type":"method","name":"to_s","children":[],"call":[" response url "," response "," response method "]}," ZendeskAPI Data respond_to_missing?":{"type":"method","name":"respond_to_missing?","children":[],"call":["@attributes respond_to? "]}," ZendeskAPI CreateOrUpdateMany create_or_update_many!":{"type":"method","name":"create_or_update_many!","children":[],"call":["JobStatus  new_from_response "," block_given? ","req body= "," resource_name ","client connection post ","association generate_path ","client connection ","Association  new ","Association  new  generate_path "]}," ZendeskAPI CreateOrUpdate create_or_update!":{"type":"method","name":"create_or_update!","children":[],"call":[" new_from_response "," Array ","association options [] ","association options "," block_given? ","req body= "," resource_name ","client connection post ","association generate_path ","client connection "," singular_resource_name "]}," ZendeskAPI Middleware Request RaiseRateLimited call":{"type":"method","name":"call","children":[],"call":[" raise ","Error RateLimited  new ","@logger warn ","ERROR_CODES  include? ","response env [] ","response env ","@app call ","@app call  env [] ","@app call  env "]}," ZendeskAPI Middleware Request RaiseRateLimited initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," ZendeskAPI Client set_raise_error_when_rated_limited":{"type":"method","name":"set_raise_error_when_rated_limited","children":[],"call":[" config raise_error_when_rate_limited= "," config raise_error_when_rate_limited ! ! "," config raise_error_when_rate_limited ! "," config raise_error_when_rate_limited "," config "," config retry "]}," ZendeskAPI Topic resource_path":{"type":"method","name":"resource_path","children":[],"call":[]}," ZendeskAPI TopicSubscription path":{"type":"method","name":"path","children":[],"call":["options merge "]}," ZendeskAPI TopicSubscription model_key":{"type":"method","name":"model_key","children":[],"call":[]}," ZendeskAPI Category resource_path":{"type":"method","name":"resource_path","children":[],"call":[]}," ZendeskAPI Article resource_path":{"type":"method","name":"resource_path","children":[],"call":[]}," ZendeskAPI Section resource_path":{"type":"method","name":"resource_path","children":[],"call":[]}," ZendeskAPI DataResource handle_response":{"type":"method","name":"handle_response","children":[],"call":["@attributes replace ","@attributes deep_merge ","response body [] "," class singular_resource_name "," class ","response body "]}," ZendeskAPI Error RecordInvalid generate_error_msg":{"type":"method","name":"generate_error_msg","children":[],"call":["(send\n  (lvar :response_body) :[]\n  (str \"description\")) compact join ","(send\n  (lvar :response_body) :[]\n  (str \"description\")) compact ","response_body [] ","response_body values_at compact join ","response_body values_at compact ","response_body values_at "]}," ZendeskAPI SearchExport resource_name":{"type":"method","name":"resource_name","children":[],"call":[]}," ZendeskAPI Collection handle_cursor_response":{"type":"method","name":"handle_cursor_response","children":[],"call":[" wrap_resource ","results map "," raise ","body keys inspect ","body keys ","@resource_class model_key ","body delete ","response_body dup "," get_next_page_data "," more_results? ","@response env ","response_body is_a? ","response_body dup  keys inspect ","response_body dup  keys ","response_body dup  delete ","response_response_body dup  dup "," get_next_page_data  dup ","response_response_body dup  is_a? "," get_next_page_data  is_a? "]}," ZendeskAPI Collection get_next_page_data":{"type":"method","name":"get_next_page_data","children":[],"call":["response [] [] ","response [] ","original_response_body []= ","original_response_body [] + ","original_response_body [] "," get_response_body ","original_response_body [] [] ","@client connection send body ","@client connection send ","@client connection ","@resource_class model_key "," get_response_body  [] [] ","@client connection send body  [] [] "," get_response_body  [] ","@client connection send body  [] ","original_ get_response_body _body []= ","original_@client connection send body _body []= ","original_ get_response_body _body [] + ","original_@client connection send body _body [] + ","original_ get_response_body _body [] ","original_@client connection send body _body [] "," get_ get_response_body _body "," get_@client connection send body _body ","original_ get_response_body _body [] [] ","original_@client connection send body _body [] [] "]}," ZendeskAPI Collection get_response_body":{"type":"method","name":"get_response_body","children":[],"call":["@client connection send body ","@client connection send ","@client connection "]}," ZendeskAPI Collection more_results?":{"type":"method","name":"more_results?","children":[],"call":["response [] present? ","response [] ","response [] [] ","Helpers  present? "]}," ZendeskAPI Ticket attribute_changes":{"type":"method","name":"attribute_changes","children":[],"call":[" attributes changes merge "," attributes [] "," attributes "," attributes changes "]}," ZendeskAPI Schedule resource_path":{"type":"method","name":"resource_path","children":[],"call":[]}," ZendeskAPI Data attribute_changes":{"type":"method","name":"attribute_changes","children":[],"call":[" attributes changes "," attributes "]}," ZendeskAPI Client set_authentication":{"type":"method","name":"set_authentication","children":[],"call":["builder request ","config password ","config username ","builder use ","config access_token ","config url_based_access_token ! ","config url_based_access_token "]}," ZendeskAPI Client namespaces":{"type":"method","name":"namespaces","children":[],"call":["(const nil :ZendeskAPI) + ","ZendeskAPI DataNamespace  descendants "]}," ZendeskAPI Client module_defines_class?":{"type":"method","name":"module_defines_class?","children":[],"call":["mod const_defined? ","RUBY_VERSION  < "]}," ZendeskAPI CommentMixin save":{"type":"method","name":"save","children":[],"call":[" save_associations "]}," ZendeskAPI CommentMixin included":{"type":"method","name":"included","children":[],"call":[]}," ZendeskAPI Article Label destroy!":{"type":"method","name":"destroy!","children":[],"call":["req path= "," path "]}," ZendeskAPI Helpers present?":{"type":"method","name":"present?","children":[],"call":[]}," ZendeskAPI Collection assert_results":{"type":"method","name":"assert_results","children":[],"call":[" raise ","body keys inspect ","body keys ","@resource_class model_key "]}," ZendeskAPI Collection assert_valid_response_body":{"type":"method","name":"assert_valid_response_body","children":[],"call":[" raise ","@response env ","response_body is_a? "]}," ZendeskAPI Collection handle_search_export_response":{"type":"method","name":"handle_search_export_response","children":[],"call":[" wrap_resource ","results map "," assert_results ","body delete ","@resource_class model_key ","response_body dup "," get_next_page_data "," more_results? "," assert_valid_response_body ","response_body dup  delete ","response_response_body dup  dup "," get_next_page_data  dup "," assert_valid_response_response_body dup  "," assert_valid_ get_next_page_data  "]}," ZendeskAPI Collection page_links":{"type":"method","name":"page_links","children":[],"call":["body [] ","body [] [] "]}," ZendeskAPI Collection get_resources":{"type":"method","name":"get_resources","children":[],"call":[" handle_response ","@response body "," handle_search_export_response ","path_query_link == "," get_response ","@options page= ","@options per_page= "," raise "," intentional_obp_request? ","@options delete ","@next_page nil? "," warn "," should_try_cbp? "," set_cbp_options "," first_cbp_request? "," supports_cbp? "," get_response  body "]}," ZendeskAPI Collection intentional_obp_request?":{"type":"method","name":"intentional_obp_request?","children":[],"call":[" cbp_request? ! "," cbp_request? ","Helpers  present? ","@options [] "]}," ZendeskAPI Collection cbp_request?":{"type":"method","name":"cbp_request?","children":[],"call":["@options [] is_a? ","@options [] "]}," ZendeskAPI Collection cbp_response?":{"type":"method","name":"cbp_response?","children":[],"call":["(and\n  (send\n    (lvar :body) :[]\n    (str \"meta\"))\n  (send\n    (lvar :body) :[]\n    (str \"links\"))) ! ! ","(and\n  (send\n    (lvar :body) :[]\n    (str \"meta\"))\n  (send\n    (lvar :body) :[]\n    (str \"links\"))) ! ","body [] "]}," ZendeskAPI Collection should_try_cbp?":{"type":"method","name":"should_try_cbp?","children":[],"call":["path_query_link end_with? ","not_supported_endpoints none? "]}," ZendeskAPI Search cbp_path_regexes":{"type":"method","name":"cbp_path_regexes","children":[],"call":[]}," ZendeskAPI Group cbp_path_regexes":{"type":"method","name":"cbp_path_regexes","children":[],"call":[]}," ZendeskAPI GroupMembership cbp_path_regexes":{"type":"method","name":"cbp_path_regexes","children":[],"call":[]}," ZendeskAPI Trigger cbp_path_regexes":{"type":"method","name":"cbp_path_regexes","children":[],"call":[]}," ZendeskAPI Ticket cbp_path_regexes":{"type":"method","name":"cbp_path_regexes","children":[],"call":[]}," ZendeskAPI OrganizationSubscription cbp_path_regexes":{"type":"method","name":"cbp_path_regexes","children":[],"call":[]}," ZendeskAPI Organization cbp_path_regexes":{"type":"method","name":"cbp_path_regexes","children":[],"call":[]}," ZendeskAPI DataResource cbp_path_regexes":{"type":"method","name":"cbp_path_regexes","children":[],"call":[]}," ZendeskAPI Collection Pagination set_cbp_response_options":{"type":"method","name":"set_cbp_response_options","children":[],"call":["@options page merge! ","body [] [] ","body [] ","@options page ","@options page= "," cbp_request? "]}," ZendeskAPI Collection Pagination set_page_and_count":{"type":"method","name":"set_page_and_count","children":[],"call":["@options []= ","Regexp  last_match to_i + ","Regexp  last_match to_i ","Regexp  last_match ","@prev_page =~ ","Regexp  last_match to_i - ","@next_page =~ "," set_cbp_response_options "," cbp_response? "," page_links ","(or\n  (send\n    (lvar :body) :[]\n    (str \"count\"))\n  (send\n    (ivar :@resources) :size)) to_i ","@resources size ","body [] "]}," ZendeskAPI Collection Pagination first_cbp_request?":{"type":"method","name":"first_cbp_request?","children":[],"call":["@next_page nil? "]}," ZendeskAPI Collection Pagination supports_cbp?":{"type":"method","name":"supports_cbp?","children":[],"call":[" path match? "," path ","@resource_class cbp_path_regexes any? ","@resource_class cbp_path_regexes "]}," ZendeskAPI Collection Pagination intentional_obp_request?":{"type":"method","name":"intentional_obp_request?","children":[],"call":[" cbp_request? ! "," cbp_request? ","Helpers  present? ","@options [] "]}," ZendeskAPI Collection Pagination cbp_request?":{"type":"method","name":"cbp_request?","children":[],"call":["@options [] is_a? ","@options [] "]}," ZendeskAPI Collection Pagination set_cbp_options":{"type":"method","name":"set_cbp_options","children":[],"call":["@options page= ","@options delete "]}," ZendeskAPI Collection Pagination cbp_response?":{"type":"method","name":"cbp_response?","children":[],"call":["(and\n  (send\n    (lvar :body) :[]\n    (str \"meta\"))\n  (send\n    (lvar :body) :[]\n    (str \"links\"))) ! ! ","(and\n  (send\n    (lvar :body) :[]\n    (str \"meta\"))\n  (send\n    (lvar :body) :[]\n    (str \"links\"))) ! ","body [] "]}," ZendeskAPI Collection Pagination page_links":{"type":"method","name":"page_links","children":[],"call":["body [] ","body [] [] "]}," ZendeskAPI Collection Pagination last_page?":{"type":"method","name":"last_page?","children":[],"call":["@next_page == ","@next_page ! "]}," ZendeskAPI Collection Pagination first_page?":{"type":"method","name":"first_page?","children":[],"call":["@prev_page ! "]}," ZendeskAPI Collection Pagination page":{"type":"method","name":"page","children":[],"call":["@options []= "," clear_cache "]}," ZendeskAPI Collection Pagination per_page":{"type":"method","name":"per_page","children":[],"call":["@options []= "," clear_cache "]}," ZendeskAPI Collection Pagination more_results?":{"type":"method","name":"more_results?","children":[],"call":["response [] [] ","response [] ","Helpers  present? "]}," ZendeskAPI Client resource_class_for":{"type":"method","name":"resource_class_for","children":[],"call":["ZendeskAPI Association  class_from_namespace ","ZendeskAPI Helpers  modulize_string ","Inflection  singular ","method to_s gsub ","method to_s "]}," ZendeskAPI OauthClient cbp_path_regexes":{"type":"method","name":"cbp_path_regexes","children":[],"call":[]}," ZendeskAPI Macro cbp_path_regexes":{"type":"method","name":"cbp_path_regexes","children":[],"call":[]}," ZendeskAPI Automation cbp_path_regexes":{"type":"method","name":"cbp_path_regexes","children":[],"call":[]}," ZendeskAPI View cbp_path_regexes":{"type":"method","name":"cbp_path_regexes","children":[],"call":[]}," ZendeskAPI DeletedTicket cbp_path_regexes":{"type":"method","name":"cbp_path_regexes","children":[],"call":[]}," ZendeskAPI SuspendedTicket cbp_path_regexes":{"type":"method","name":"cbp_path_regexes","children":[],"call":[]}," ZendeskAPI TicketMetric cbp_path_regexes":{"type":"method","name":"cbp_path_regexes","children":[],"call":[]}," ZendeskAPI TicketField cbp_path_regexes":{"type":"method","name":"cbp_path_regexes","children":[],"call":[]}," ZendeskAPI Activity cbp_path_regexes":{"type":"method","name":"cbp_path_regexes","children":[],"call":[]}," ZendeskAPI Tag cbp_path_regexes":{"type":"method","name":"cbp_path_regexes","children":[],"call":[]}," ZendeskAPI Topic cbp_path_regexes":{"type":"method","name":"cbp_path_regexes","children":[],"call":[]}," ZendeskAPI User cbp_path_regexes":{"type":"method","name":"cbp_path_regexes","children":[],"call":[]}," ZendeskAPI Ticket Audit cbp_path_regexes":{"type":"method","name":"cbp_path_regexes","children":[],"call":[]}," ZendeskAPI Brand cbp_path_regexes":{"type":"method","name":"cbp_path_regexes","children":[],"call":[]}}