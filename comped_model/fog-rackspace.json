{" Fog Storage Rackspace Real authenticate_v1":{"type":"method","name":"authenticate_v1","children":[],"call":["credentials [] "," endpoint_uri ","Fog Rackspace  authenticate ","Fog Rackspace  authenticate  [] "]}," Fog Storage Rackspace Real request":{"type":"method","name":"request","children":[],"call":[" raise ","ServiceError  slurp ","InternalServerError  slurp ","BadRequest  slurp ","NotFound  slurp "]}," Fog Storage Rackspace Real reload":{"type":"method","name":"reload","children":[],"call":["@connection reset "]}," Fog Storage Rackspace Real ssl?":{"type":"method","name":"ssl?","children":[],"call":[" rackspace_cdn_ssl ! ! "," rackspace_cdn_ssl ! "," rackspace_cdn_ssl "]}," Fog Storage Rackspace Real initialize":{"type":"method","name":"initialize","children":[],"call":["Fog Core Connection  new "," endpoint_uri to_s "," endpoint_uri ","Excon  defaults []= ","Excon  defaults "," service_net? ","options [] "," authenticate "," apply_options "]}," Fog Storage Rackspace Mock authenticate_v1":{"type":"method","name":"authenticate_v1","children":[],"call":["Fog Mock  random_hex "," endpoint_uri "," region ","Fog Rackspace MockData  uuid ","Fog Rackspace MockData  Fog Rackspace MockData  uuid  "]}," Fog Storage Rackspace Mock ssl?":{"type":"method","name":"ssl?","children":[],"call":["@rackspace_cdn_ssl ! ! ","@rackspace_cdn_ssl ! "]}," Fog Storage Rackspace Mock remove_container":{"type":"method","name":"remove_container","children":[],"call":[" data delete ","Fog Rackspace  escape "," data "]}," Fog Storage Rackspace Mock add_container":{"type":"method","name":"add_container","children":[],"call":[" data []= ","MockContainer  new ","Fog Rackspace  escape "," data "]}," Fog Storage Rackspace Mock mock_container!":{"type":"method","name":"mock_container!","children":[],"call":[" raise ","Fog Storage Rackspace NotFound  new "," mock_container "]}," Fog Storage Rackspace Mock mock_container":{"type":"method","name":"mock_container","children":[],"call":[" data [] ","Fog Rackspace  escape "," data "]}," Fog Storage Rackspace Mock reset_data":{"type":"method","name":"reset_data","children":[],"call":[" class data delete "," class data "," class "]}," Fog Storage Rackspace Mock account_meta":{"type":"method","name":"account_meta","children":[],"call":[" class account_meta [] "," class account_meta "," class "]}," Fog Storage Rackspace Mock data":{"type":"method","name":"data","children":[],"call":[" class data [] "," class data "," class "]}," Fog Storage Rackspace Mock initialize":{"type":"method","name":"initialize","children":[],"call":[" endpoint_uri "," authenticate "," apply_options "]}," Fog Storage Rackspace Mock reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog Storage Rackspace Mock MockObject to_headers":{"type":"method","name":"to_headers","children":[],"call":["(pair\n  (str \"Content-Type\")\n  (ivar :@content_type)) merge ","@last_modified strftime "]}," Fog Storage Rackspace Mock MockObject large_object_prefix":{"type":"method","name":"large_object_prefix","children":[],"call":["@meta [] "]}," Fog Storage Rackspace Mock MockObject each_part":{"type":"method","name":"each_part","children":[],"call":["Fog Logger  warning ","cont mock_object "," service mock_container "," service ","segment [] split ","segment [] ","Fog JSON  decode each ","Fog JSON  decode "," body "," static_manifest? ","target_container objects [] ","target_container objects ","keys each ","matching sort ","name start_with? ","all select ","target_container objects keys "," service data [] "," service data "," large_object_prefix split "," large_object_prefix "," dynamic_manifest? ","cont mock_cont mock_object ect "," service mock_container  mock_object "," service mock_ service mock_container ainer ","target_container cont mock_object ects [] ","target_ service mock_container ainer objects [] "," service data []  objects [] ","target_container cont mock_object ects ","target_ service mock_container ainer objects "," service data []  objects ","matching sort  each ","target_container objects keys  select ","target_container cont mock_object ects keys ","target_ service mock_container ainer objects keys ","target_container objects matching sort  "," service data []  objects keys "," large_cont mock_object ect_prefix split "," large_cont mock_object ect_prefix "]}," Fog Storage Rackspace Mock MockObject dynamic_manifest?":{"type":"method","name":"dynamic_manifest?","children":[],"call":[" large_object_prefix nil? ! "," large_object_prefix nil? "," large_object_prefix "]}," Fog Storage Rackspace Mock MockObject static_manifest?":{"type":"method","name":"static_manifest?","children":[],"call":[]}," Fog Storage Rackspace Mock MockObject initialize":{"type":"method","name":"initialize","children":[],"call":["Digest MD5  hexdigest ","Time  now utc ","Time  now ","data [] ","data [] read ","data [] respond_to? ","data [] [] ","Fog Storage  parse_data ","Fog Storage  parse_data  [] ","Fog Storage  parse_data  [] read ","Fog Storage  parse_data  [] respond_to? ","Fog Storage  parse_data  [] [] ","Fog Storage  parse_Fog Storage  parse_data  "]}," Fog Storage Rackspace Mock MockContainer remove_object":{"type":"method","name":"remove_object","children":[],"call":["@objects delete ","Fog Rackspace  escape "]}," Fog Storage Rackspace Mock MockContainer add_object":{"type":"method","name":"add_object","children":[],"call":["@objects []= ","MockObject  new "," service ","Fog Rackspace  escape "]}," Fog Storage Rackspace Mock MockContainer mock_object!":{"type":"method","name":"mock_object!","children":[],"call":[" raise ","Fog Storage Rackspace NotFound  new "," mock_object "]}," Fog Storage Rackspace Mock MockContainer mock_object":{"type":"method","name":"mock_object","children":[],"call":["@objects [] ","Fog Rackspace  escape "]}," Fog Storage Rackspace Mock MockContainer to_headers":{"type":"method","name":"to_headers","children":[],"call":["@meta merge "," bytes_used ","@objects size "]}," Fog Storage Rackspace Mock MockContainer bytes_used":{"type":"method","name":"bytes_used","children":[],"call":["a + ","(send\n  (send\n    (ivar :@objects) :values) :map) reduce ","o bytes_used ","@objects values map ","@objects values "]}," Fog Storage Rackspace Mock MockContainer empty?":{"type":"method","name":"empty?","children":[],"call":["@objects empty? "]}," Fog Storage Rackspace Mock MockContainer initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Fog Storage Rackspace Common account":{"type":"method","name":"account","children":[],"call":["account reload ","Fog Storage Rackspace Account  new ","Fog Storage Rackspace Account  new  reload "]}," Fog Storage Rackspace Common endpoint_uri":{"type":"method","name":"endpoint_uri","children":[],"call":[]}," Fog Storage Rackspace Common region":{"type":"method","name":"region","children":[],"call":[]}," Fog Storage Rackspace Common request_id_header":{"type":"method","name":"request_id_header","children":[],"call":[]}," Fog Storage Rackspace Common service_name":{"type":"method","name":"service_name","children":[],"call":[]}," Fog Storage Rackspace Common authenticate":{"type":"method","name":"authenticate","children":[],"call":["URI  parse ","@rackspace_auth_token nil? "]}," Fog Storage Rackspace Common service_net?":{"type":"method","name":"service_net?","children":[],"call":["@rackspace_servicenet == "]}," Fog Storage Rackspace Common cdn":{"type":"method","name":"cdn","children":[],"call":["@cdn enabled? ","Fog CDN  new "]}," Fog Storage Rackspace Common apply_options":{"type":"method","name":"apply_options","children":[],"call":["Fog Logger  deprecation ","options [] "]}," Fog Rackspace Service select_options":{"type":"method","name":"select_options","children":[],"call":["selected []= ","@options [] ","keys each "]}," Fog Rackspace Service auth_token":{"type":"method","name":"auth_token","children":[],"call":["@identity_service auth_token "]}," Fog Rackspace Service endpoint_uri_v2":{"type":"method","name":"endpoint_uri_v2","children":[],"call":["@identity_service service_catalog get_endpoint "," service_net? "," region "," service_name ","@identity_service service_catalog "]}," Fog Rackspace Service authenticate_v1":{"type":"method","name":"authenticate_v1","children":[],"call":[" raise ","Fog Errors NotImplemented  new "]}," Fog Rackspace Service authenticate_v2":{"type":"method","name":"authenticate_v2","children":[],"call":["@identity_service auth_token ","Fog Rackspace Identity  new ","identity_options [] ","Fog Rackspace Identity  new  auth_token "]}," Fog Rackspace Service v2_authentication?":{"type":"method","name":"v2_authentication?","children":[],"call":["@rackspace_auth_url =~ ","@rackspace_auth_url nil? "]}," Fog Rackspace Service v1_authentication?":{"type":"method","name":"v1_authentication?","children":[],"call":[" v2_authentication? ! "," v2_authentication? "]}," Fog Rackspace Service authentication_method":{"type":"method","name":"authentication_method","children":[],"call":["Fog Logger  deprecation "," v2_authentication? "]}," Fog Rackspace Service request_params":{"type":"method","name":"request_params","children":[],"call":["params merge ","params [] "," endpoint_uri path "," endpoint_uri "," headers "]}," Fog Rackspace Service headers":{"type":"method","name":"headers","children":[],"call":["(pair\n  (str \"Content-Type\")\n  (str \"application/json\")) merge ","options [] "," auth_token "]}," Fog Rackspace Service process_response":{"type":"method","name":"process_response","children":[],"call":["response body= ","Fog Logger  warning ","Fog JSON  decode ","response body ","Fog Rackspace  json_response? ","response body strip empty? ! ","response body strip empty? ","response body strip ","response body is_a? "]}," Fog Rackspace Service service_net?":{"type":"method","name":"service_net?","children":[],"call":[]}," Fog Rackspace Service request":{"type":"method","name":"request","children":[],"call":[" process_response "," authenticate "," raise ","@connection request "," request_params ","ees message downcase include? ","ees message downcase ","ees message "," process_@connection request  "]}," Fog Rackspace Service request_without_retry":{"type":"method","name":"request_without_retry","children":[],"call":[" process_response ","@connection request "," request_params "," process_@connection request  "]}," Fog Rackspace Service authenticate":{"type":"method","name":"authenticate","children":[],"call":[" send "," authentication_method "]}," Fog Rackspace Service endpoint_uri":{"type":"method","name":"endpoint_uri","children":[],"call":["URI  parse "," endpoint_uri_v2 "," raise "," v1_authentication? "]}," Fog Rackspace Service region":{"type":"method","name":"region","children":[],"call":[" raise ","Fog Errors NotImplemented  new "]}," Fog Rackspace Service service_name":{"type":"method","name":"service_name","children":[],"call":[" raise ","Fog Errors NotImplemented  new "]}," Fog Storage Rackspace Mock put_static_obj_manifest":{"type":"method","name":"put_static_obj_manifest","children":[],"call":["response status= ","Excon Response  new ","o static_manifest= ","c add_object ","Fog JSON  encode "," raise ","Fog Storage Rackspace BadRequest  slurp ","Excon Errors  status_error ","response body= ","errors empty? ","errors << ","segment [] ","target_object bytes_used == ","target_object bytes_used ","target_object hash == ","target_object hash ","target_container mock_object ","Fog Storage Rackspace NotFound  new "," mock_container ","segment [] split ","segments each "," mock_container! ","Excon Response  new  status= ","respc add_object nse status= ","Excc add_object n Respc add_object nse  new ","Ex mock_container! on Response  new ","c add_object  static_manifest= ","o stati mock_container! _manifest= ","c add_c add_object bject "," mock_container!  add_obje mock_container! t ","Fc add_object g JSON  encc add_object de ","Fog JSON  en mock_container! ode ","Fc add_object g Stc add_object rage Rackspace BadRequest  slurp ","Fog Storage Ra mock_container! kspa mock_container! e BadRequest  slurp ","Excc add_object n Errc add_object rs  status_errc add_object r ","Excon Errors  status_Excon Errors  status_error  ","Ex mock_container! on Errors  status_error ","Excon Response  new  body= ","respc add_object nse bc add_object dy= ","errc add_object rs empty? ","Excon Errors  status_error s empty? ","errc add_object rs << ","Excon Errors  status_error s << ","target_c add_object bject bytes_used == ","target_container mock_object  bytes_used == ","target_obje mock_container! t bytes_used == ","target_c add_object bject bytes_used ","target_container mock_object  bytes_used ","target_obje mock_container! t bytes_used ","target_c add_object bject hash == ","target_container mock_object  hash == ","target_obje mock_container! t hash == ","target_c add_object bject hash ","target_container mock_object  hash ","target_obje mock_container! t hash ","target_cc add_object ntainer mc add_object ck_c add_object bject "," mock_container  mock_object ","target_ mock_container! ontainer mo mock_container! k_obje mock_container! t ","Fc add_object g Stc add_object rage Rackspace Nc add_object tFc add_object und  new ","Fog Storage Ra mock_container! kspa mock_container! e NotFound  new "," mc add_object ck_cc add_object ntainer "," mo mock_container! k_ mock_container! ontainer ","segments ea mock_container! h "," mc add_object ck_cc add_object ntainer! "," mo mock_container! k_ mock_container! ontainer! "]}," Fog Storage Rackspace Real put_static_obj_manifest":{"type":"method","name":"put_static_obj_manifest","children":[],"call":[" request ","Fog Rackspace  escape ","Fog JSON  encode "]}," Fog Storage Rackspace Common put_object_manifest":{"type":"method","name":"put_object_manifest","children":[],"call":[" put_dynamic_obj_manifest "]}," Fog Storage Rackspace Mock put_object":{"type":"method","name":"put_object","children":[],"call":["response status= ","Excon Response  new "," raise ","Fog Storage Rackspace ServiceError  new ","c remove_object ","etag != ","o hash ","o meta [] ","o meta ","o meta []= ","options [] ","HeaderOptions  include? ","options [] to_s ","k =~ ","options keys each ","options keys ","c add_object ","data << ","chunk empty? "," loop "," block_given? "," mock_container! ","Excon Response  new  status= ","respc add_object nse status= ","Excc add_object n Respc add_object nse  new ","Ex mock_container! on Response  new ","Fc add_object g Stc add_object rage Rackspace ServiceErrc add_object r  new ","Fog Storage Ra mock_container! kspa mock_container! e Servi mock_container! eError  new ","c remc add_object ve_c add_object bject "," mock_container!  remove_obje mock_container! t ","o meta []  != ","c add_object  hash ","c add_object  meta [] ","c add_object  meta ","c add_object  meta []= ","c add_object ptic add_object ns [] ","HeaderOptic add_object ns  include? ","HeaderOptions  in mock_container! lude? ","c add_object ptic add_object ns [] tc add_object _s ","c add_object ptic add_object ns keys each ","options keys ea mock_container! h ","c add_object ptic add_object ns keys ","c add_c add_object bject "," mock_container!  add_obje mock_container! t "," mock_container! hunk empty? "," lc add_object c add_object p "," blc add_object ck_given? "," blo mock_container! k_given? "," mc add_object ck_cc add_object ntainer! "," mo mock_container! k_ mock_container! ontainer! "]}," Fog Storage Rackspace Real put_object":{"type":"method","name":"put_object","children":[],"call":[" request ","params merge! ","Fog Rackspace  escape ","params [] ! ","params [] ","data [] "," block_given? ","data [] merge! ","Fog Storage  parse_data ","Fog Storage  parse_data  [] ","Fog Storage  parse_data  [] merge! ","Fog Storage  parse_Fog Storage  parse_data  "]}," Fog Storage Rackspace Mock put_dynamic_obj_manifest":{"type":"method","name":"put_dynamic_obj_manifest","children":[],"call":["response status= ","Excon Response  new ","o meta []= ","o meta ","c add_object "," mock_container! ","(send\n  (lvar :parts) :map) join ","Fog Rackspace  escape ","parts map ","explicit_manifest split ","options [] ","Excon Response  new  status= ","respc add_object nse status= ","Excc add_object n Respc add_object nse  new ","Ex mock_container! on Response  new ","c add_object  meta []= ","c add_object  meta ","c add_c add_object bject "," mock_container!  add_obje mock_container! t "," mc add_object ck_cc add_object ntainer! "," mo mock_container! k_ mock_container! ontainer! ","(send\n  (lvar :parts) :map) jc add_object in ","(send\n  (lvar :explicit_manifest split ) :map) join ","Fc add_object g Rackspace  escape ","Fog Ra mock_container! kspa mock_container! e  es mock_container! ape ","explicit_manifest split  map ","expli mock_container! it_manifest split ","(send\n  (lvar :parts) :map) join  split ","options []  split ","c add_object ptic add_object ns [] "]}," Fog Storage Rackspace Real put_dynamic_obj_manifest":{"type":"method","name":"put_dynamic_obj_manifest","children":[],"call":[" request ","(pair\n  (str \"X-Object-Manifest\")\n  (lvar :path)) merge ","Fog Rackspace  escape "]}," Fog Storage Rackspace Mock put_container":{"type":"method","name":"put_container","children":[],"call":["response status= ","Excon Response  new ","container meta []= ","options [] to_s ","options [] ","container meta ","k =~ ","options keys each ","options keys "," add_container "," mock_container nil? ! "," mock_container nil? "," mock_container ","Excon Response  new  status= "," add_container  meta []= "," add_container  meta "," add_ add_container  "," mock_ add_container  nil? ! "," mock_ add_container  nil? "," mock_ add_container  "]}," Fog Storage Rackspace Real put_container":{"type":"method","name":"put_container","children":[],"call":[" request ","Fog Rackspace  escape "," raise ","Fog Errors Error  new ","name =~ "]}," Fog Storage Rackspace Mock post_set_meta_temp_url_key":{"type":"method","name":"post_set_meta_temp_url_key","children":[],"call":["response status= ","Excon Response  new "," account_meta []= "," account_meta ","Excon Response  new  status= "]}," Fog Storage Rackspace Real post_set_meta_temp_url_key":{"type":"method","name":"post_set_meta_temp_url_key","children":[],"call":[" request "]}," Fog Storage Rackspace Mock head_object":{"type":"method","name":"head_object","children":[],"call":["response headers= ","response status= ","Excon Response  new ","headers []= ","o static_manifest? ","length to_s ","Digest MD5  hexdigest ","hashes join ","part bytes_used ","hashes << ","part hash ","o each_part ","o to_headers ","c mock_object! "," mock_container! ","Excon Response  new  headers= ","response o to_headers = ","respc mock_object! nse headers= ","Excon Response  new  status= ","respc mock_object! nse status= ","Excc mock_object! n Respc mock_object! nse  new ","Ex mock_container! on Response  new ","o to_headers  []= ","c mock_object!  static_manifest? ","o stati mock_container! _manifest? ","length tc mock_object! _s ","hashes jc mock_object! in ","c mock_object!  each_part ","o ea mock_container! h_part ","o to_o to_headers  ","c mock_object!  tc mock_object! _headers ","c mc mock_object! ck_c mock_object! bject! "," mock_container!  mo mock_container! k_obje mock_container! t! "," mc mock_object! ck_cc mock_object! ntainer! "," mo mock_container! k_ mock_container! ontainer! "]}," Fog Storage Rackspace Real head_object":{"type":"method","name":"head_object","children":[],"call":[" request ","Fog Rackspace  escape "]}," Fog Storage Rackspace Mock head_containers":{"type":"method","name":"head_containers","children":[],"call":["response headers= ","(pair\n  (str \"X-Account-Bytes-Used\")\n  (lvar :bytes_used)) merge "," account_meta ","response status= ","Excon Response  new ","a + ","(send\n  (send\n    (send nil :data) :values) :map) reduce ","c objects size ","c objects "," data values map "," data values "," data "," data size ","c bytes_used ","Excon Response  new  headers= ","Excon Response  new  status= "]}," Fog Storage Rackspace Real head_containers":{"type":"method","name":"head_containers","children":[],"call":[" request "]}," Fog Storage Rackspace Mock head_container":{"type":"method","name":"head_container","children":[],"call":["response headers= ","c to_headers ","response status= ","Excon Response  new "," mock_container! ","Excon Response  new  headers= "," mock_container!  to_headers ","Excon Response  new  status= ","Ex mock_container! on Response  new "," mo mock_container! k_ mock_container! ontainer! "]}," Fog Storage Rackspace Real head_container":{"type":"method","name":"head_container","children":[],"call":[" request ","Fog Rackspace  escape "]}," Fog Storage Rackspace Common sig_to_hex":{"type":"method","name":"sig_to_hex","children":[],"call":["(send\n  (block\n    (send\n      (send\n        (lvar :str) :unpack\n        (str \"C*\")) :map)\n    (args\n      (arg :c))\n    (send\n      (lvar :c) :to_s\n      (int 16))) :map) join ","h size == ","h size ","(send\n  (send\n    (lvar :str) :unpack\n    (str \"C*\")) :map) map ","c to_s ","str unpack map ","str unpack "]}," Fog Storage Rackspace Common get_object_https_url":{"type":"method","name":"get_object_https_url","children":[],"call":["URI Generic  build to_s ","URI Generic  build ","(send\n  (lvar :temp_url_query) :map) join ","CGI  escape ","val to_s ","param to_s ","temp_url_query map ","@uri host ","@uri scheme ","options [] ","temp_url_query merge! "," sig_to_hex ","hmac sign ","Fog HMAC  new ","Fog Rackspace  escape ","@uri path ","expires to_i "," raise ","@rackspace_temp_url_key nil? ","  sig_to_hex _to_hex ","hmac  sig_to_hex n ","Fog HMAC  new  sign ","expires to_i  to_i "]}," Fog Storage Rackspace Common get_object_http_url":{"type":"method","name":"get_object_http_url","children":[],"call":[" get_object_https_url ","options merge "]}," Fog Storage Rackspace Mock get_object":{"type":"method","name":"get_object","children":[],"call":["response headers= ","o to_headers ","response body= ","Excon Response  new ","block call "," block_given? ","part bytes_used ","body << ","part body ","o each_part ","c mock_object! "," mock_container! ","Excon Response  new  headers= ","respc mock_object! nse headers= ","c mock_object!  tc mock_object! _headers ","Excon Response  new  body= ","respc mock_object! nse bc mock_object! dy= ","Excc mock_object! n Respc mock_object! nse  new ","Ex mock_container! on Response  new ","blc mock_object! ck call ","blo mock_container! k  mock_container! all "," blc mock_object! ck_given? "," blo mock_container! k_given? ","bc mock_object! dy << ","part bc mock_object! dy ","c mock_object!  each_part ","o ea mock_container! h_part ","c mc mock_object! ck_c mock_object! bject! "," mock_container!  mo mock_container! k_obje mock_container! t! "," mc mock_object! ck_cc mock_object! ntainer! "," mo mock_container! k_ mock_container! ontainer! "]}," Fog Storage Rackspace Real get_object":{"type":"method","name":"get_object","children":[],"call":[" request ","params []= "," block_given? ","Fog Rackspace  escape "]}," Fog Storage Rackspace Mock get_containers":{"type":"method","name":"get_containers","children":[],"call":["response body= ","response status= ","Excon Response  new ","container bytes_used ","container objects size ","container objects "," data map "," data ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Storage Rackspace Real get_containers":{"type":"method","name":"get_containers","children":[],"call":[" request ","(pair\n  (str \"format\")\n  (str \"json\")) merge! ","value nil? ","options reject "]}," Fog Storage Rackspace Mock get_container":{"type":"method","name":"get_container","children":[],"call":["response body= ","response headers= ","c to_headers ","response status= ","Excon Response  new ","results << ","mock_file content_type ","mock_file bytes_used ","mock_file last_modified strftime ","mock_file last_modified ","mock_file hash ","c objects each ","c objects "," mock_container! ","Excon Response  new  body= ","Excon Response  new  headers= "," mock_container!  to_headers ","Excon Response  new  status= ","Ex mock_container! on Response  new ","mo mock_container! k_file  mock_container! ontent_type ","mo mock_container! k_file bytes_used ","mo mock_container! k_file last_modified strftime ","mo mock_container! k_file last_modified ","mo mock_container! k_file hash "," mock_container!  obje mock_container! ts ea mock_container! h "," mock_container!  obje mock_container! ts "," mo mock_container! k_ mock_container! ontainer! "]}," Fog Storage Rackspace Real get_container":{"type":"method","name":"get_container","children":[],"call":[" request ","(pair\n  (str \"format\")\n  (str \"json\")) merge! ","Fog Rackspace  escape ","value nil? ","options reject "]}," Fog Storage Rackspace Real extract_archive":{"type":"method","name":"extract_archive","children":[],"call":[" request ","params merge! ","Fog Rackspace  escape ","container to_s ","data [] ","headers []= ","Fog Storage  parse_data ","Fog Storage  parse_data  [] ","data []  []= ","Fog Storage  parse_Fog Storage  parse_data  "]}," Fog Storage Rackspace Mock not_found":{"type":"method","name":"not_found","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Storage Rackspace Mock delete_static_large_object":{"type":"method","name":"delete_static_large_object","children":[],"call":[" delete_multiple_objects ","paths << ","s [] ","segments map ","Fog JSON  decode ","o body "," raise ","Fog Storage Rackspace BadRequest  new ","o static_manifest? "," not_found ","c mock_object "," mock_container "," delete_multiple_c mock_object bjects "," delete_multiple_obje mock_container ts ","Fog JSON  decode  map ","Fc mock_object g JSON  decc mock_object de ","Fog JSON  de mock_container ode ","c mock_object  bc mock_object dy ","Fc mock_object g Stc mock_object rage Rackspace BadRequest  new ","Fog Storage Ra mock_container kspa mock_container e BadRequest  new ","c mock_object  static_manifest? ","o stati mock_container _manifest? "," nc mock_object t_fc mock_object und ","c mc mock_object ck_c mock_object bject "," mock_container  mo mock_container k_obje mock_container t "," mc mock_object ck_cc mock_object ntainer "," mo mock_container k_ mock_container ontainer "]}," Fog Storage Rackspace Real delete_static_large_object":{"type":"method","name":"delete_static_large_object","children":[],"call":["response body= ","Fog JSON  decode ","response body "," request ","Fog Rackspace  escape ","options merge "," request  body= "," request  body "]}," Fog Storage Rackspace Mock delete_object":{"type":"method","name":"delete_object","children":[],"call":["response status= ","Excon Response  new ","c remove_object ","c mock_object! "," mock_container! ","Excon Response  new  status= ","Ex mock_container! on Response  new "," mock_container!  remove_obje mock_container! t "," mock_container!  mo mock_container! k_obje mock_container! t! "," mo mock_container! k_ mock_container! ontainer! "]}," Fog Storage Rackspace Real delete_object":{"type":"method","name":"delete_object","children":[],"call":[" request ","Fog Rackspace  escape "]}," Fog Storage Rackspace Mock delete_multiple_objects":{"type":"method","name":"delete_multiple_objects","children":[],"call":["response body= ","response status= ","Excon Response  new ","results [] ","c remove_object ","o nil? ","c mock_object "," remove_container ","results [] << ","results []= ","c empty? ","oname nil? ","c nil? "," mock_container ","name split ","object_names each ","Excon Response  new  body= ","respc mock_object nse bc mock_object dy= ","Excon Response  new  status= ","respc mock_object nse status= ","Excc mock_object n Respc mock_object nse  new ","Ex mock_container on Response  new ","c remc mock_object ve_c mock_object bject "," mock_container  remove_obje mock_container t ","c mock_object  nil? ","c mc mock_object ck_c mock_object bject "," mock_container  mo mock_container k_obje mock_container t "," remc mock_object ve_cc mock_object ntainer "," remove_ mock_container ontainer "," mock_container  empty? ","c mock_object name nil? "," mock_container  nil? "," mc mock_object ck_cc mock_object ntainer "," mo mock_container k_ mock_container ontainer ","c mock_object bject_names each ","obje mock_container t_names ea mock_container h "]}," Fog Storage Rackspace Real delete_multiple_objects":{"type":"method","name":"delete_multiple_objects","children":[],"call":["response body= ","Fog JSON  decode ","response body "," request ","options merge ","(send\n  (lvar :object_names) :map) join ","URI  encode ","object_names map "," request  body= ","response (send\n  (lvar :object_names) :map) join = "," request  body ","response (send\n  (lvar :object_names) :map) join  "]}," Fog Storage Rackspace Mock delete_container":{"type":"method","name":"delete_container","children":[],"call":["response status= ","Excon Response  new "," remove_container "," raise ","Excon Errors Conflict  new ","c empty? "," mock_container! ","Excon Response  new  status= ","Ex mock_container! on Response  new "," remove_ mock_container! ontainer ","Ex mock_container! on Errors Confli mock_container! t  new "," mock_container!  empty? "," mo mock_container! k_ mock_container! ontainer! "]}," Fog Storage Rackspace Real delete_container":{"type":"method","name":"delete_container","children":[],"call":[" request ","Fog Rackspace  escape "]}," Fog Storage Rackspace Real copy_object":{"type":"method","name":"copy_object","children":[],"call":[" request ","Fog Rackspace  escape ","(pair\n  (str \"X-Copy-From\")\n  (dstr\n    (str \"/\")\n    (begin\n      (lvar :source_container_name))\n    (str \"/\")\n    (begin\n      (lvar :source_object_name)))) merge "]}," Fog Rackspace Queues Mock update_claim":{"type":"method","name":"update_claim","children":[],"call":["response status= ","Excon Response  new ","claim ttl= ","claim touch! ","queue claim! "," mock_queue! ","Excon Response  new  status= ","queue claim!  ttl= ","queue claim!  touch! ","queue queue claim! ! "," mock_queue!  claim! "," mock_ mock_queue! ! "]}," Fog Rackspace Queues Real update_claim":{"type":"method","name":"update_claim","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Rackspace Queues Mock list_queues":{"type":"method","name":"list_queues","children":[],"call":["response body= ","queue_names last ","response status= "," data empty? "," data ","Excon Response  new ","d []= "," data [] metadata "," data [] ","d [] ","queue_data each ","queue_names map ","queue_names [] ","start_index + ","name <= ","queue_names count ","marker nil? "," data keys sort "," data keys ","options [] ","Excon Response  new  body= ","queue_names []  last "," data keys sort  last ","Excon Response  new  status= ","queue_names []  map "," data keys sort  map ","queue_names []  [] "," data keys sort  [] ","queue_names []  count "," data keys sort  count ","options []  nil? "]}," Fog Rackspace Queues Real list_queues":{"type":"method","name":"list_queues","children":[],"call":[" request "]}," Fog Rackspace Queues Mock list_messages":{"type":"method","name":"list_messages","children":[],"call":["response body= ","m to_h ","messages map ","response status= ","queue messages empty? ","queue messages ","Excon Response  new ","m claimed? ","messages reject! ","m producer_id == ","m producer_id ","queue messages [] ","marker + + ","marker + ","options [] ","(or\n  (send\n    (lvar :options) :[]\n    (sym :marker))\n  (str \"0\")) to_i "," mock_queue! ","Excon Response  new  body= ","queue messages []  map ","Excon Response  new  status= ","queue queue messages []  empty? "," mock_queue!  messages empty? ","queue queue messages []  "," mock_queue!  messages ","queue messages []  reject! ","queue queue messages []  [] "," mock_queue!  messages [] ","(or\n  (send\n    (lvar :options) :[]\n    (sym :marker))\n  (str \"0\")) to_i  + + ","(or\n  (send\n    (lvar :options) :[]\n    (sym :marker))\n  (str \"0\")) to_i  + ","(or\n  (send\n    (lvar :options) :[]\n    (sym :(or\n  (send\n    (lvar :options) :[]\n    (sym :marker))\n  (str \"0\")) to_i ))\n  (str \"0\")) to_i "," mock_ mock_queue! ! "]}," Fog Rackspace Queues Real list_messages":{"type":"method","name":"list_messages","children":[],"call":[" request "]}," Fog Rackspace Queues Mock report_message":{"type":"method","name":"report_message","children":[],"call":["payload []= ","ctime strftime ","element href ","element age ","Time  at utc ","Time  at ","element created ","Time  at utc  strftime "]}," Fog Rackspace Queues Mock get_queue_stats":{"type":"method","name":"get_queue_stats","children":[],"call":["response body= ","response status= ","Excon Response  new "," report_message ","queue newest ","queue oldest ","queue free ","queue total ","queue claimed "," mock_queue! ","Excon Response  new  body= ","Excon Response  new  status= "," mock_queue!  newest "," mock_queue!  oldest "," mock_queue!  free "," mock_queue!  total "," mock_queue!  claimed "," mock_ mock_queue! ! "]}," Fog Rackspace Queues Real get_queue_stats":{"type":"method","name":"get_queue_stats","children":[],"call":[" request "]}," Fog Rackspace Queues Mock get_queue":{"type":"method","name":"get_queue","children":[],"call":["response status= ","Excon Response  new "," raise ","NotFound  new "," mock_queue nil? "," mock_queue ","Excon Response  new  status= "]}," Fog Rackspace Queues Real get_queue":{"type":"method","name":"get_queue","children":[],"call":[" request "]}," Fog Rackspace Queues Mock get_message":{"type":"method","name":"get_message","children":[],"call":["response body= ","message to_h ","response status= ","Excon Response  new "," raise ","NotFound  new ","msg id == ","msg id ","queue messages find ","queue messages "," mock_queue! ","Excon Response  new  body= ","Excon Response  new  status= "," mock_queue!  messages find "," mock_queue!  messages "," mock_ mock_queue! ! "]}," Fog Rackspace Queues Real get_message":{"type":"method","name":"get_message","children":[],"call":[" request "]}," Fog Rackspace Queues Mock get_claim":{"type":"method","name":"get_claim","children":[],"call":["response body= ","claim to_h ","response status= ","Excon Response  new ","queue claim! "," mock_queue! ","Excon Response  new  body= ","queue claim!  to_h ","Excon Response  new  status= ","queue queue claim! ! "," mock_queue!  claim! "," mock_ mock_queue! ! "]}," Fog Rackspace Queues Real get_claim":{"type":"method","name":"get_claim","children":[],"call":[" request "]}," Fog Rackspace Queues Mock delete_queue":{"type":"method","name":"delete_queue","children":[],"call":["response status= ","Excon Response  new "," data delete "," data ","Excon Response  new  status= "]}," Fog Rackspace Queues Real delete_queue":{"type":"method","name":"delete_queue","children":[],"call":[" request "]}," Fog Rackspace Queues Mock delete_message":{"type":"method","name":"delete_message","children":[],"call":["response status= ","Excon Response  new ","m id == ","m id ","queue messages reject! ","queue messages ","message claim id == ","message claim id ","message claim ","message claimed? ","queue messages find ","options [] "," mock_queue! ","Excon Response  new  status= "," mock_queue!  messages reject! "," mock_queue!  messages "," mock_queue!  messages find "," mock_ mock_queue! ! "]}," Fog Rackspace Queues Real delete_message":{"type":"method","name":"delete_message","children":[],"call":[" request ","query []= ","options [] ","options key? "]}," Fog Rackspace Queues Mock delete_claim":{"type":"method","name":"delete_claim","children":[],"call":["response status= ","Excon Response  new ","queue claims delete ","queue claims ","message claim= ","claim messages each ","claim messages ","queue claim! "," mock_queue! ","Excon Response  new  status= ","queue queue claim! s delete "," mock_queue!  claims delete ","queue queue claim! s "," mock_queue!  claims ","message queue claim! = ","queue claim!  messages each ","queue claim!  messages ","queue queue claim! ! "," mock_queue!  claim! "," mock_ mock_queue! ! "]}," Fog Rackspace Queues Real delete_claim":{"type":"method","name":"delete_claim","children":[],"call":[" request "]}," Fog Rackspace Queues Mock create_queue":{"type":"method","name":"create_queue","children":[],"call":["response status= ","Excon Response  new "," add_queue "," mock_queue nil? ! "," mock_queue nil? "," mock_queue "," raise ","MethodNotAllowed  new ","queue_name empty? ","queue_name nil? ","Excon Response  new  status= "]}," Fog Rackspace Queues Real create_queue":{"type":"method","name":"create_queue","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Rackspace Queues Mock create_message":{"type":"method","name":"create_message","children":[],"call":["response body= ","message id ","response status= ","Excon Response  new ","queue add_message ","MockData  stringify "," raise ","BadRequest  new ","body empty? ","body nil? "," mock_queue! ","Excon Response  new  body= ","queue add_message  id ","Excon Response  new  status= ","queue add_queue add_message  "," mock_queue!  add_message "," mock_ mock_queue! ! "]}," Fog Rackspace Queues Real create_message":{"type":"method","name":"create_message","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Rackspace Queues Mock create_claim":{"type":"method","name":"create_claim","children":[],"call":["response headers []= ","claim id ","response headers ","response body= ","msg to_h ","claimed map ","response status= ","Excon Response  new ","message extend_life ","message claim= ","claimed each ","claimed empty? ","(send\n  (send\n    (lvar :queue) :messages) :select) first ","message claimed? ! ","message claimed? ","queue messages select ","queue messages ","queue add_claim ","options [] "," mock_queue! ","Excon Response  new  headers []= ","queue add_claim  id ","Excon Response  new  headers ","Excon Response  new  body= ","(send\n  (send\n    (lvar :queue) :messages) :select) first  map ","queue add_claim ed map ","Excon Response  new  status= ","message queue add_claim = ","(send\n  (send\n    (lvar :queue) :messages) :select) first  each ","queue add_claim ed each ","(send\n  (send\n    (lvar :queue) :messages) :select) first  empty? ","queue add_claim ed empty? ","(send\n  (send\n    (lvar : mock_queue! ) :messages) :select) first ","message (send\n  (send\n    (lvar :queue) :messages) :select) first ? ! ","message queue add_claim ed? ! ","message (send\n  (send\n    (lvar :queue) :messages) :select) first ? ","message queue add_claim ed? "," mock_queue!  messages select "," mock_queue!  messages ","queue add_queue add_claim  "," mock_queue!  add_claim "," mock_ mock_queue! ! "]}," Fog Rackspace Queues Real create_claim":{"type":"method","name":"create_claim","children":[],"call":[" request ","Fog JSON  encode ","query []= ","options [] ","options key? "]}," Fog Rackspace Orchestration Real validate_template":{"type":"method","name":"validate_template","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Rackspace Orchestration Real update_stack":{"type":"method","name":"update_stack","children":[],"call":[" request ","stack id ","stack stack_name ","Fog JSON  encode "]}," Fog Rackspace Orchestration Mock show_stack_details":{"type":"method","name":"show_stack_details","children":[],"call":[" response "," data [] values "," data [] "," data "]}," Fog Rackspace Orchestration Real show_stack_details":{"type":"method","name":"show_stack_details","children":[],"call":[" request "]}," Fog Rackspace Orchestration Mock show_resource_template":{"type":"method","name":"show_resource_template","children":[],"call":[]}," Fog Rackspace Orchestration Real show_resource_template":{"type":"method","name":"show_resource_template","children":[],"call":[" request "]}," Fog Rackspace Orchestration Real show_resource_schema":{"type":"method","name":"show_resource_schema","children":[],"call":[" request "]}," Fog Rackspace Orchestration Mock show_resource_metadata":{"type":"method","name":"show_resource_metadata","children":[],"call":[" response "," data [] values "," data [] "," data "]}," Fog Rackspace Orchestration Real show_resource_metadata":{"type":"method","name":"show_resource_metadata","children":[],"call":[" request ","stack id ","stack stack_name "]}," Fog Rackspace Orchestration Mock show_resource_data":{"type":"method","name":"show_resource_data","children":[],"call":[" response "," data [] values "," data [] "," data "]}," Fog Rackspace Orchestration Real show_resource_data":{"type":"method","name":"show_resource_data","children":[],"call":[" request "]}," Fog Rackspace Orchestration Mock show_event_details":{"type":"method","name":"show_event_details","children":[],"call":[" response "," data [] values "," data [] "," data "]}," Fog Rackspace Orchestration Real show_event_details":{"type":"method","name":"show_event_details","children":[],"call":[" request ","resource resource_name ","stack id ","stack stack_name "]}," Fog Rackspace Orchestration Real preview_stack":{"type":"method","name":"preview_stack","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Rackspace Orchestration Mock list_stack_events":{"type":"method","name":"list_stack_events","children":[],"call":[" response "," data [] values "," data [] "," data "]}," Fog Rackspace Orchestration Real list_stack_events":{"type":"method","name":"list_stack_events","children":[],"call":[" request "," request_uri ","stack id ","stack stack_name "," request_ request_uri  "]}," Fog Rackspace Orchestration Mock list_stack_data":{"type":"method","name":"list_stack_data","children":[],"call":[" response "," data [] values "," data [] "," data "]}," Fog Rackspace Orchestration Real list_stack_data":{"type":"method","name":"list_stack_data","children":[],"call":[" request "," request_uri "]}," Fog Rackspace Orchestration Mock list_resources":{"type":"method","name":"list_resources","children":[],"call":[" response "," data [] values "," data [] "," data "]}," Fog Rackspace Orchestration Real list_resources":{"type":"method","name":"list_resources","children":[],"call":[" request "," request_uri ","stack id ","stack stack_name "," request_ request_uri  "]}," Fog Rackspace Orchestration Mock list_resource_types":{"type":"method","name":"list_resource_types","children":[],"call":[" response "," data [] values "," data [] "," data "]}," Fog Rackspace Orchestration Real list_resource_types":{"type":"method","name":"list_resource_types","children":[],"call":[" request "]}," Fog Rackspace Orchestration Real list_resource_events":{"type":"method","name":"list_resource_events","children":[],"call":[" request "," request_uri ","resource resource_name ","stack id ","stack stack_name "," request_ request_uri  "]}," Fog Rackspace Orchestration Mock get_stack_template":{"type":"method","name":"get_stack_template","children":[],"call":[]}," Fog Rackspace Orchestration Real get_stack_template":{"type":"method","name":"get_stack_template","children":[],"call":[" request ","stack id ","stack stack_name "]}," Fog Rackspace Orchestration Real delete_stack":{"type":"method","name":"delete_stack","children":[],"call":[" request ","stack id ","stack stack_name "]}," Fog Rackspace Orchestration Real create_stack":{"type":"method","name":"create_stack","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Rackspace Orchestration Real build_info":{"type":"method","name":"build_info","children":[],"call":[" request "]}," Fog Rackspace Orchestration Real abandon_stack":{"type":"method","name":"abandon_stack","children":[],"call":[" request ","stack id ","stack stack_name "]}," Fog Rackspace NetworkingV2 Real update_subnet":{"type":"method","name":"update_subnet","children":[],"call":[" request ","subnet id ","Fog JSON  encode ","subnet gateway_ip ","subnet name "]}," Real update_security_group":{"type":"method","name":"update_security_group","children":[],"call":[" request ","security_group id ","Fog JSON  encode ","security_group name "]}," Fog Rackspace NetworkingV2 Real update_port":{"type":"method","name":"update_port","children":[],"call":[" request ","port id ","Fog JSON  encode ","port name "]}," Fog Rackspace NetworkingV2 Real update_network":{"type":"method","name":"update_network","children":[],"call":[" request ","network id ","Fog JSON  encode ","network name "]}," Fog Rackspace NetworkingV2 Real show_subnet":{"type":"method","name":"show_subnet","children":[],"call":[" request "]}," Real show_security_group_rule":{"type":"method","name":"show_security_group_rule","children":[],"call":[" request "]}," Real show_security_group":{"type":"method","name":"show_security_group","children":[],"call":[" request "]}," Fog Rackspace NetworkingV2 Real show_port":{"type":"method","name":"show_port","children":[],"call":[" request "]}," Fog Rackspace NetworkingV2 Real show_network":{"type":"method","name":"show_network","children":[],"call":[" request "]}," Fog Rackspace NetworkingV2 Real list_subnets":{"type":"method","name":"list_subnets","children":[],"call":[" request "]}," Real list_security_groups":{"type":"method","name":"list_security_groups","children":[],"call":[" request "]}," Real list_security_group_rules":{"type":"method","name":"list_security_group_rules","children":[],"call":[" request "]}," Fog Rackspace NetworkingV2 Real list_ports":{"type":"method","name":"list_ports","children":[],"call":[" request "]}," Fog Rackspace NetworkingV2 Real list_networks":{"type":"method","name":"list_networks","children":[],"call":[" request "]}," Fog Rackspace NetworkingV2 Real delete_subnet":{"type":"method","name":"delete_subnet","children":[],"call":[" request "]}," Real delete_security_group_rule":{"type":"method","name":"delete_security_group_rule","children":[],"call":[" request "]}," Real delete_security_group":{"type":"method","name":"delete_security_group","children":[],"call":[" request "]}," Fog Rackspace NetworkingV2 Real delete_port":{"type":"method","name":"delete_port","children":[],"call":[" request "]}," Fog Rackspace NetworkingV2 Real delete_network":{"type":"method","name":"delete_network","children":[],"call":[" request "]}," Fog Rackspace NetworkingV2 Real create_subnet":{"type":"method","name":"create_subnet","children":[],"call":[" request ","Fog JSON  encode ","subnet attributes "]}," Real create_security_group_rule":{"type":"method","name":"create_security_group_rule","children":[],"call":[" request ","Fog JSON  encode ","security_group_rule attributes "]}," Real create_security_group":{"type":"method","name":"create_security_group","children":[],"call":[" request ","Fog JSON  encode ","security_group attributes "]}," Fog Rackspace NetworkingV2 Real create_port":{"type":"method","name":"create_port","children":[],"call":[" request ","Fog JSON  encode ","port attributes "]}," Fog Rackspace NetworkingV2 Real create_network":{"type":"method","name":"create_network","children":[],"call":[" request ","Fog JSON  encode ","network attributes "]}," Fog Rackspace Networking Real list_virtual_interfaces":{"type":"method","name":"list_virtual_interfaces","children":[],"call":[" request "]}," Fog Rackspace Networking Mock list_networks":{"type":"method","name":"list_networks","children":[],"call":[" response "," data [] values "," data [] "," data "]}," Fog Rackspace Networking Real list_networks":{"type":"method","name":"list_networks","children":[],"call":[" request "]}," Fog Rackspace Networking Mock get_network":{"type":"method","name":"get_network","children":[],"call":[" response "," data [] [] "," data [] "," data "," raise "," data [] key? "]}," Fog Rackspace Networking Real get_network":{"type":"method","name":"get_network","children":[],"call":[" request "]}," Fog Rackspace Networking Real delete_virtual_interface":{"type":"method","name":"delete_virtual_interface","children":[],"call":[" request "]}," Fog Rackspace Networking Mock delete_network":{"type":"method","name":"delete_network","children":[],"call":[" response "," raise "," data [] key? "," data [] "," data "]}," Fog Rackspace Networking Real delete_network":{"type":"method","name":"delete_network","children":[],"call":[" request "]}," Fog Rackspace Networking Real create_virtual_interface":{"type":"method","name":"create_virtual_interface","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Rackspace Networking Mock create_network":{"type":"method","name":"create_network","children":[],"call":[" response "," data [] [] "," data [] "," data "," data [] []= ","Fog Rackspace MockData  uuid "]}," Fog Rackspace Networking Real create_network":{"type":"method","name":"create_network","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Rackspace Monitoring Real update_notification":{"type":"method","name":"update_notification","children":[],"call":[" request ","JSON  encode "]}," Fog Rackspace Monitoring Mock update_entity":{"type":"method","name":"update_entity","children":[],"call":["response remote_ip= ","Fog Rackspace MockData  ipv4_address ","response headers= ","entity_id to_s ","https://monitoring.api.rackspacecloud.com/v1.0/ + + + ","https://monitoring.api.rackspacecloud.com/v1.0/ + + ","https://monitoring.api.rackspacecloud.com/v1.0/ + ","Time  now utc to_s ","Time  now utc ","Time  now ","response body= ","response status= ","Excon Response  new "," raise ","entity_id == ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers ","Excon Response  new  remote_ip= ","Excon Response  new  headers= ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Rackspace Monitoring Real update_entity":{"type":"method","name":"update_entity","children":[],"call":[" request ","JSON  encode "]}," Fog Rackspace Monitoring Mock update_check":{"type":"method","name":"update_check","children":[],"call":["response remote_ip= ","Fog Rackspace MockData  ipv4_address ","response headers= ","https://monitoring.api.rackspacecloud.com/v1.0/ + + + + + ","https://monitoring.api.rackspacecloud.com/v1.0/ + + + + ","https://monitoring.api.rackspacecloud.com/v1.0/ + + + ","https://monitoring.api.rackspacecloud.com/v1.0/ + + ","https://monitoring.api.rackspacecloud.com/v1.0/ + ","Time  now utc to_s ","Time  now utc ","Time  now ","response body= ","response status= ","Excon Response  new "," raise ","options [] ","check_id == ","entity_id == ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers ","Excon Response  new  remote_ip= ","Excon Response  new  headers= ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Rackspace Monitoring Real update_check":{"type":"method","name":"update_check","children":[],"call":[" request ","JSON  encode "]}," Fog Rackspace Monitoring Mock update_alarm":{"type":"method","name":"update_alarm","children":[],"call":["response remote_ip= ","Fog Rackspace MockData  ipv4_address ","response headers= ","https://monitoring.api.rackspacecloud.com/v1.0/ + + + + + ","https://monitoring.api.rackspacecloud.com/v1.0/ + + + + ","https://monitoring.api.rackspacecloud.com/v1.0/ + + + ","entity_id to_s ","https://monitoring.api.rackspacecloud.com/v1.0/ + + ","https://monitoring.api.rackspacecloud.com/v1.0/ + ","Time  now utc to_s ","Time  now utc ","Time  now ","response body= ","response status= ","Excon Response  new "," raise ","options [] ","alarm_id == ","entity_id == ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers ","Excon Response  new  remote_ip= ","Excon Response  new  headers= ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Rackspace Monitoring Real update_alarm":{"type":"method","name":"update_alarm","children":[],"call":[" request ","JSON  encode "]}," Fog Rackspace Monitoring Mock list_overview":{"type":"method","name":"list_overview","children":[],"call":["response remote_ip= ","Fog Rackspace MockData  ipv4_address ","response headers= ","Time  now utc to_s ","Time  now utc ","Time  now ","response body= ","Time  now to_i ","Time  now to_i - ","https://ord.servers.api.rackspacecloud.com/ + + + ","https://ord.servers.api.rackspacecloud.com/ + + ","https://ord.servers.api.rackspacecloud.com/ + ","Fog Rackspace MockData  ipv6_address ","response status= ","Excon Response  new ","Fog Rackspace MockData  uuid ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers ","Fog Mock  random_letters ","Excon Response  new  remote_ip= ","Excon Response  new  headers= ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Rackspace Monitoring Real list_overview":{"type":"method","name":"list_overview","children":[],"call":[" request "]}," Fog Rackspace Monitoring Mock list_notifications":{"type":"method","name":"list_notifications","children":[],"call":["response remote_ip= ","Fog Rackspace MockData  ipv4_address ","response headers= ","Time  now utc to_s ","Time  now utc ","Time  now ","response body= ","response status= ","Excon Response  new ","Fog Mock  random_letters ","Fog Rackspace MockData  uuid ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers ","Excon Response  new  remote_ip= ","Excon Response  new  headers= ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Rackspace Monitoring Real list_notifications":{"type":"method","name":"list_notifications","children":[],"call":[" request "]}," Fog Rackspace Monitoring Mock list_notification_plans":{"type":"method","name":"list_notification_plans","children":[],"call":["response remote_ip= ","Fog Rackspace MockData  ipv4_address ","response headers= ","Time  now utc to_s ","Time  now utc ","Time  now ","response body= ","Time  now to_i - ","Time  now to_i ","response status= ","Excon Response  new ","Fog Mock  random_letters ","Excon Response  new  remote_ip= ","Excon Response  new  headers= ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Rackspace Monitoring Real list_notification_plans":{"type":"method","name":"list_notification_plans","children":[],"call":[" request "]}," Fog Rackspace Monitoring Real list_monitoring_zones":{"type":"method","name":"list_monitoring_zones","children":[],"call":[" request "]}," Fog Rackspace Monitoring Mock list_metrics":{"type":"method","name":"list_metrics","children":[],"call":["response remote_ip= ","Fog Rackspace MockData  ipv4_address ","response headers= ","Time  now utc to_s ","Time  now utc ","Time  now ","response body= ","response status= ","Excon Response  new ","Excon Response  new  remote_ip= ","Excon Response  new  headers= ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Rackspace Monitoring Real list_metrics":{"type":"method","name":"list_metrics","children":[],"call":[" request "]}," Fog Rackspace Monitoring Mock list_entities":{"type":"method","name":"list_entities","children":[],"call":["response remote_ip= ","Fog Rackspace MockData  ipv4_address ","response headers= ","Time  now utc to_s ","Time  now utc ","Time  now ","response body= ","Time  now to_i ","Time  now to_i - ","https://ord.servers.api.rackspacecloud.com/ + + + ","https://ord.servers.api.rackspacecloud.com/ + + ","https://ord.servers.api.rackspacecloud.com/ + ","Fog Rackspace MockData  ipv6_address ","response status= ","Excon Response  new ","Fog Mock  random_letters ","Fog Rackspace MockData  uuid ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers ","Excon Response  new  remote_ip= ","Excon Response  new  headers= ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Rackspace Monitoring Real list_entities":{"type":"method","name":"list_entities","children":[],"call":[" request "]}," Fog Rackspace Monitoring Mock list_data_points":{"type":"method","name":"list_data_points","children":[],"call":["response remote_ip= ","Fog Rackspace MockData  ipv4_address ","response headers= ","Time  now utc to_s ","Time  now utc ","Time  now ","response body= ","response status= ","Excon Response  new "," raise ","options == ","metric_name == ","check_id == ","entity_id == ","Excon Response  new  remote_ip= ","Excon Response  new  headers= ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Rackspace Monitoring Real list_data_points":{"type":"method","name":"list_data_points","children":[],"call":[" request "]}," Fog Rackspace Monitoring Mock list_checks":{"type":"method","name":"list_checks","children":[],"call":["response remote_ip= ","Fog Rackspace MockData  ipv4_address ","response headers= ","Time  now utc to_s ","Time  now utc ","Time  now ","response body= ","Time  now to_i ","Time  now to_i - ","response status= ","Excon Response  new "," raise ","entity_id == ","Fog Mock  random_letters ","Excon Response  new  remote_ip= ","Excon Response  new  headers= ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Rackspace Monitoring Real list_checks":{"type":"method","name":"list_checks","children":[],"call":[" request "]}," Fog Rackspace Monitoring Mock list_check_types":{"type":"method","name":"list_check_types","children":[],"call":["response remote_ip= ","Fog Rackspace MockData  ipv4_address ","response headers= ","Time  now utc to_s ","Time  now utc ","Time  now ","response body= ","response status= ","Excon Response  new ","Excon Response  new  remote_ip= ","Excon Response  new  headers= ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Rackspace Monitoring Real list_check_types":{"type":"method","name":"list_check_types","children":[],"call":[" request "]}," Fog Rackspace Monitoring Mock list_alarms":{"type":"method","name":"list_alarms","children":[],"call":["response remote_ip= ","Fog Rackspace MockData  ipv4_address ","response headers= ","Time  now utc to_s ","Time  now utc ","Time  now ","response body= ","Time  now to_i ","Time  now to_i - ","Fog Mock  random_letters ","response status= ","Excon Response  new "," raise ","entity_id == ","Excon Response  new  remote_ip= ","Excon Response  new  headers= ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Rackspace Monitoring Real list_alarms":{"type":"method","name":"list_alarms","children":[],"call":[" request "]}," Fog Rackspace Monitoring Real list_alarm_examples":{"type":"method","name":"list_alarm_examples","children":[],"call":[" request "]}," Fog Rackspace Monitoring Mock list_agents":{"type":"method","name":"list_agents","children":[],"call":["response remote_ip= ","Fog Mock  random_ip ","response headers= ","Time  now utc to_s ","Time  now utc ","Time  now ","response body= ","Time  now to_i - ","Time  now to_i ","Fog Rackspace MockData  uuid ","response status= ","Excon Response  new ","Excon Response  new  remote_ip= ","Excon Response  new  headers= ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Rackspace Monitoring Real list_agents":{"type":"method","name":"list_agents","children":[],"call":[" request "]}," Fog Rackspace Monitoring Mock list_agent_tokens":{"type":"method","name":"list_agent_tokens","children":[],"call":["response remote_ip= ","Fog Rackspace MockData  ipv4_address ","response headers= ","Time  now utc to_s ","Time  now utc ","Time  now ","response body= ","response status= ","Excon Response  new ","Fog Mock  random_letters to_s ","Fog Mock  random_letters ","Excon Response  new  remote_ip= ","Excon Response  new  headers= ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Rackspace Monitoring Real list_agent_tokens":{"type":"method","name":"list_agent_tokens","children":[],"call":[" request "]}," Fog Rackspace Monitoring Mock get_system_info":{"type":"method","name":"get_system_info","children":[],"call":["response remote_ip= ","Fog Mock  random_ip ","response headers= ","Time  now utc to_s ","Time  now utc ","Time  now ","response body= ","response status= ","Excon Response  new "," raise ","agent_id == ","Excon Response  new  remote_ip= ","Excon Response  new  headers= ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Rackspace Monitoring Real get_system_info":{"type":"method","name":"get_system_info","children":[],"call":[" request "]}," Fog Rackspace Monitoring Mock get_processes_info":{"type":"method","name":"get_processes_info","children":[],"call":["response remote_ip= ","Fog Mock  random_ip ","response headers= ","Time  now utc to_s ","Time  now utc ","Time  now ","response body= ","memory_page_faults to_i ","memory_minor_faults to_i ","memory_major_faults to_i ","Fog Mock  random_numbers to_i ","Fog Mock  random_numbers ","Time  now utc to_i - ","Time  now utc to_i ","response status= ","Excon Response  new "," raise ","agent_id == ","memory_major_faults + ","Excon Response  new  remote_ip= ","Excon Response  new  headers= ","Excon Response  new  body= ","memory_major_faults +  to_i ","Fog Mock  random_numbers to_i  to_i ","Excon Response  new  status= ","Fog Mock  random_numbers to_i  + "]}," Fog Rackspace Monitoring Real get_processes_info":{"type":"method","name":"get_processes_info","children":[],"call":[" request "]}," Fog Rackspace Monitoring Mock get_notification":{"type":"method","name":"get_notification","children":[],"call":["response headers= ","Time  now utc to_s ","Time  now utc ","Time  now ","response body= ","response status= ","Excon Response  new ","Excon Response  new  headers= ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Rackspace Monitoring Real get_notification":{"type":"method","name":"get_notification","children":[],"call":[" request "]}," Fog Rackspace Monitoring Mock get_network_interfaces_info":{"type":"method","name":"get_network_interfaces_info","children":[],"call":["response remote_ip= ","Fog Mock  random_ip ","response headers= ","Time  now utc to_s ","Time  now utc ","Time  now ","response body= ","Fog Mock  random_numbers to_i ","Fog Mock  random_numbers ","response status= ","Excon Response  new "," raise ","agent_id == ","Excon Response  new  remote_ip= ","Excon Response  new  headers= ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Rackspace Monitoring Real get_network_interfaces_info":{"type":"method","name":"get_network_interfaces_info","children":[],"call":[" request "]}," Fog Rackspace Monitoring Real get_monitoring_zone":{"type":"method","name":"get_monitoring_zone","children":[],"call":[" request "]}," Fog Rackspace Monitoring Mock get_memory_info":{"type":"method","name":"get_memory_info","children":[],"call":["response remote_ip= ","Fog Mock  random_ip ","response headers= ","Time  now utc to_s ","Time  now utc ","Time  now ","response body= ","Fog Mock  random_numbers to_i ","Fog Mock  random_numbers ","response status= ","Excon Response  new "," raise ","agent_id == ","Excon Response  new  remote_ip= ","Excon Response  new  headers= ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Rackspace Monitoring Real get_memory_info":{"type":"method","name":"get_memory_info","children":[],"call":[" request "]}," Fog Rackspace Monitoring Mock get_logged_in_user_info":{"type":"method","name":"get_logged_in_user_info","children":[],"call":["response remote_ip= ","Fog Mock  random_ip ","response headers= ","Time  now utc to_s ","Time  now utc ","Time  now ","response body= ","Time  now to_i - ","Time  now to_i ","response status= ","Excon Response  new "," raise ","agent_id == ","Excon Response  new  remote_ip= ","Excon Response  new  headers= ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Rackspace Monitoring Real get_logged_in_user_info":{"type":"method","name":"get_logged_in_user_info","children":[],"call":[" request "]}," Fog Rackspace Monitoring Mock get_filesystems_info":{"type":"method","name":"get_filesystems_info","children":[],"call":["response remote_ip= ","Fog Mock  random_ip ","response headers= ","Time  now utc to_s ","Time  now utc ","Time  now ","response body= ","Fog Mock  random_numbers to_i ","Fog Mock  random_numbers ","response status= ","Excon Response  new "," raise ","agent_id == ","Excon Response  new  remote_ip= ","Excon Response  new  headers= ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Rackspace Monitoring Real get_filesystems_info":{"type":"method","name":"get_filesystems_info","children":[],"call":[" request "]}," Fog Rackspace Monitoring Mock get_entity":{"type":"method","name":"get_entity","children":[],"call":["response remote_ip= ","Fog Rackspace MockData  ipv4_address ","response headers= ","Time  now utc to_s ","Time  now utc ","Time  now ","response body= ","Time  now to_i ","Time  now to_i - ","https://ord.servers.api.rackspacecloud.com/ + + + ","https://ord.servers.api.rackspacecloud.com/ + + ","https://ord.servers.api.rackspacecloud.com/ + ","response status= ","Excon Response  new "," raise ","entity_id == ","Fog Mock  random_letters ","Fog Rackspace MockData  uuid ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers ","Excon Response  new  remote_ip= ","Excon Response  new  headers= ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Rackspace Monitoring Real get_entity":{"type":"method","name":"get_entity","children":[],"call":[" request "]}," Fog Rackspace Monitoring Mock get_disks_info":{"type":"method","name":"get_disks_info","children":[],"call":["response remote_ip= ","Fog Mock  random_ip ","response headers= ","Time  now utc to_s ","Time  now utc ","Time  now ","response body= ","Fog Mock  random_numbers to_i ","Fog Mock  random_numbers ","response status= ","Excon Response  new "," raise ","agent_id == ","Excon Response  new  remote_ip= ","Excon Response  new  headers= ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Rackspace Monitoring Real get_disks_info":{"type":"method","name":"get_disks_info","children":[],"call":[" request "]}," Fog Rackspace Monitoring Mock get_cpus_info":{"type":"method","name":"get_cpus_info","children":[],"call":["response remote_ip= ","Fog Mock  random_ip ","response headers= ","Time  now utc to_s ","Time  now utc ","Time  now ","response body= ","Fog Mock  random_numbers to_i ","Fog Mock  random_numbers ","response status= ","Excon Response  new "," raise ","agent_id == ","Excon Response  new  remote_ip= ","Excon Response  new  headers= ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Rackspace Monitoring Real get_cpus_info":{"type":"method","name":"get_cpus_info","children":[],"call":[" request "]}," Fog Rackspace Monitoring Mock get_check":{"type":"method","name":"get_check","children":[],"call":["response remote_ip= ","Fog Rackspace MockData  ipv4_address ","response body= ","response headers= ","Time  now utc to_s ","Time  now utc ","Time  now ","Time  now to_i ","Time  now to_i - ","response status= ","Excon Response  new "," raise ","check_id == ","entity_id == ","Excon Response  new  remote_ip= ","Excon Response  new  body= ","Excon Response  new  headers= ","Excon Response  new  status= "]}," Fog Rackspace Monitoring Real get_check":{"type":"method","name":"get_check","children":[],"call":[" request "]}," Fog Rackspace Monitoring Real get_alarm_example":{"type":"method","name":"get_alarm_example","children":[],"call":[" request "]}," Fog Rackspace Monitoring Mock get_alarm":{"type":"method","name":"get_alarm","children":[],"call":["response remote_ip= ","Fog Rackspace MockData  ipv4_address ","response headers= ","Time  now utc to_s ","Time  now utc ","Time  now ","response body= ","Time  now to_i ","Time  now to_i - ","Fog Mock  random_letters ","response status= ","Excon Response  new "," raise ","alarm_id == ","entity_id == ","Excon Response  new  remote_ip= ","Excon Response  new  headers= ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Rackspace Monitoring Real get_alarm":{"type":"method","name":"get_alarm","children":[],"call":[" request "]}," Fog Rackspace Monitoring Mock get_agent_token":{"type":"method","name":"get_agent_token","children":[],"call":["response remote_ip= ","Fog Rackspace MockData  ipv4_address ","response headers= ","Time  now utc to_s ","Time  now utc ","Time  now ","response body= ","response status= ","Excon Response  new "," raise ","id == ","Fog Mock  random_letters to_s ","Fog Mock  random_letters ","Excon Response  new  remote_ip= ","Excon Response  new  headers= ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Rackspace Monitoring Real get_agent_token":{"type":"method","name":"get_agent_token","children":[],"call":[" request "]}," Fog Rackspace Monitoring Mock get_agent":{"type":"method","name":"get_agent","children":[],"call":["response remote_ip= ","Fog Mock  random_ip ","response headers= ","Time  now utc to_s ","Time  now utc ","Time  now ","response body= ","Time  now to_i - ","Time  now to_i ","Fog Rackspace MockData  uuid ","response status= ","Excon Response  new "," raise ","agent_id == ","Excon Response  new  remote_ip= ","Excon Response  new  headers= ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Rackspace Monitoring Real get_agent":{"type":"method","name":"get_agent","children":[],"call":[" request "]}," Fog Rackspace Monitoring Real evaluate_alarm_example":{"type":"method","name":"evaluate_alarm_example","children":[],"call":[" request ","JSON  encode ","options dup "]}," Fog Rackspace Monitoring Real delete_notification":{"type":"method","name":"delete_notification","children":[],"call":[" request "]}," Fog Rackspace Monitoring Mock delete_entity":{"type":"method","name":"delete_entity","children":[],"call":["response remote_ip= ","Fog Rackspace MockData  ipv4_address ","response headers= ","Time  now utc to_s ","Time  now utc ","Time  now ","response body= ","response status= ","Excon Response  new "," raise ","entity_id == ","Excon Response  new  remote_ip= ","Excon Response  new  headers= ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Rackspace Monitoring Real delete_entity":{"type":"method","name":"delete_entity","children":[],"call":[" request "]}," Fog Rackspace Monitoring Mock delete_check":{"type":"method","name":"delete_check","children":[],"call":["response remote_ip= ","Fog Rackspace MockData  ipv4_address ","response headers= ","Time  now utc to_s ","Time  now utc ","Time  now ","response body= ","response status= ","Excon Response  new "," raise ","check_id == ","entity_id == ","Excon Response  new  remote_ip= ","Excon Response  new  headers= ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Rackspace Monitoring Real delete_check":{"type":"method","name":"delete_check","children":[],"call":[" request "]}," Fog Rackspace Monitoring Mock delete_alarm":{"type":"method","name":"delete_alarm","children":[],"call":["response remote_ip= ","Fog Rackspace MockData  ipv4_address ","response headers= ","Time  now utc to_s ","Time  now utc ","Time  now ","response body= ","response status= ","Excon Response  new "," raise ","alarm_id == ","entity_id == ","Excon Response  new  remote_ip= ","Excon Response  new  headers= ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Rackspace Monitoring Real delete_alarm":{"type":"method","name":"delete_alarm","children":[],"call":[" request "]}," Fog Rackspace Monitoring Mock delete_agent_token":{"type":"method","name":"delete_agent_token","children":[],"call":["response remote_ip= ","Fog Rackspace MockData  ipv4_address ","response headers= ","https://monitoring.api.rackspacecloud.com/v1.0/ + + + ","https://monitoring.api.rackspacecloud.com/v1.0/ + + ","https://monitoring.api.rackspacecloud.com/v1.0/ + ","Time  now utc to_s ","Time  now utc ","Time  now ","response body= ","response status= ","Excon Response  new "," raise ","options == ","Fog Mock  random_letters to_s ","Fog Mock  random_letters ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers ","Excon Response  new  remote_ip= ","Excon Response  new  headers= ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Rackspace Monitoring Real delete_agent_token":{"type":"method","name":"delete_agent_token","children":[],"call":[" request "]}," Fog Rackspace Monitoring Real create_notification":{"type":"method","name":"create_notification","children":[],"call":[" request ","JSON  encode ","options dup "]}," Fog Rackspace Monitoring Mock create_entity":{"type":"method","name":"create_entity","children":[],"call":["response remote_ip= ","Fog Rackspace MockData  ipv4_address ","response headers= ","https://monitoring.api.rackspacecloud.com/v1.0/ + + + ","https://monitoring.api.rackspacecloud.com/v1.0/ + + ","https://monitoring.api.rackspacecloud.com/v1.0/ + ","Time  now utc to_s ","Time  now utc ","Time  now ","response body= ","response status= ","Excon Response  new "," raise ","options [] == ","options [] ","Fog Mock  random_letters ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers ","Excon Response  new  remote_ip= ","Excon Response  new  headers= ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Rackspace Monitoring Real create_entity":{"type":"method","name":"create_entity","children":[],"call":[" request ","JSON  encode ","options dup "]}," Fog Rackspace Monitoring Mock create_check":{"type":"method","name":"create_check","children":[],"call":["response remote_ip= ","Fog Rackspace MockData  ipv4_address ","response headers= ","https://monitoring.api.rackspacecloud.com/v1.0/ + + + + + ","https://monitoring.api.rackspacecloud.com/v1.0/ + + + + ","https://monitoring.api.rackspacecloud.com/v1.0/ + + + ","https://monitoring.api.rackspacecloud.com/v1.0/ + + ","https://monitoring.api.rackspacecloud.com/v1.0/ + ","Time  now utc to_s ","Time  now utc ","Time  now ","response body= ","response status= ","Excon Response  new "," raise ","options [] == ","options [] ","Fog Mock  random_letters to_s ","Fog Mock  random_letters ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers ","Excon Response  new  remote_ip= ","Excon Response  new  headers= ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Rackspace Monitoring Real create_check":{"type":"method","name":"create_check","children":[],"call":[" request ","JSON  encode ","options dup "]}," Fog Rackspace Monitoring Mock create_alarm":{"type":"method","name":"create_alarm","children":[],"call":["response remote_ip= ","Fog Rackspace MockData  ipv4_address ","response headers= ","https://monitoring.api.rackspacecloud.com/v1.0/ + + + + + ","https://monitoring.api.rackspacecloud.com/v1.0/ + + + + ","https://monitoring.api.rackspacecloud.com/v1.0/ + + + ","entity_id to_s ","https://monitoring.api.rackspacecloud.com/v1.0/ + + ","https://monitoring.api.rackspacecloud.com/v1.0/ + ","Time  now utc to_s ","Time  now utc ","Time  now ","response body= ","response status= ","Excon Response  new "," raise ","options [] ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers ","Fog Mock  random_letters ","Excon Response  new  remote_ip= ","Excon Response  new  headers= ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Rackspace Monitoring Real create_alarm":{"type":"method","name":"create_alarm","children":[],"call":[" request ","JSON  encode ","options dup "]}," Fog Rackspace Monitoring Mock create_agent_token":{"type":"method","name":"create_agent_token","children":[],"call":["response remote_ip= ","Fog Rackspace MockData  ipv4_address ","response headers= ","https://monitoring.api.rackspacecloud.com/v1.0/ + + + ","https://monitoring.api.rackspacecloud.com/v1.0/ + + ","https://monitoring.api.rackspacecloud.com/v1.0/ + ","Time  now utc to_s ","Time  now utc ","Time  now ","response body= ","response status= ","Excon Response  new "," raise ","options == ","Fog Mock  random_letters to_s ","Fog Mock  random_letters ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers ","Excon Response  new  remote_ip= ","Excon Response  new  headers= ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Rackspace Monitoring Real create_agent_token":{"type":"method","name":"create_agent_token","children":[],"call":[" request ","JSON  encode ","options dup "]}," Fog Rackspace LoadBalancers Real update_node":{"type":"method","name":"update_node","children":[],"call":[" request ","Fog JSON  encode ","data [] []= ","options [] ","data [] ","options key? "]}," Fog Rackspace LoadBalancers Real update_load_balancer":{"type":"method","name":"update_load_balancer","children":[],"call":[" request ","Fog JSON  encode ","options [] "]}," Fog Rackspace LoadBalancers Real set_ssl_termination":{"type":"method","name":"set_ssl_termination","children":[],"call":[" request ","Fog JSON  encode ","data []= ","options [] ","options key? "]}," Fog Rackspace LoadBalancers Real set_session_persistence":{"type":"method","name":"set_session_persistence","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Rackspace LoadBalancers Real set_monitor":{"type":"method","name":"set_monitor","children":[],"call":[" request ","Fog JSON  encode ","data []= ","options [] ","options key? "]}," Fog Rackspace LoadBalancers Real set_error_page":{"type":"method","name":"set_error_page","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Rackspace LoadBalancers Real set_content_caching":{"type":"method","name":"set_content_caching","children":[],"call":[" request ","Fog JSON  encode ","value to_s "]}," Fog Rackspace LoadBalancers Real set_connection_throttling":{"type":"method","name":"set_connection_throttling","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Rackspace LoadBalancers Real set_connection_logging":{"type":"method","name":"set_connection_logging","children":[],"call":[" request ","Fog JSON  encode ","value to_s "]}," Fog Rackspace LoadBalancers Real remove_ssl_termination":{"type":"method","name":"remove_ssl_termination","children":[],"call":[" request "]}," Fog Rackspace LoadBalancers Real remove_session_persistence":{"type":"method","name":"remove_session_persistence","children":[],"call":[" request "]}," Fog Rackspace LoadBalancers Real remove_monitor":{"type":"method","name":"remove_monitor","children":[],"call":[" request "]}," Fog Rackspace LoadBalancers Real remove_error_page":{"type":"method","name":"remove_error_page","children":[],"call":[" request "]}," Fog Rackspace LoadBalancers Real remove_connection_throttling":{"type":"method","name":"remove_connection_throttling","children":[],"call":[" request "]}," Fog Rackspace LoadBalancers Real list_virtual_ips":{"type":"method","name":"list_virtual_ips","children":[],"call":[" request "]}," Fog Rackspace LoadBalancers Real list_protocols":{"type":"method","name":"list_protocols","children":[],"call":[" request "]}," Fog Rackspace LoadBalancers Real list_nodes":{"type":"method","name":"list_nodes","children":[],"call":[" request "]}," Fog Rackspace LoadBalancers Real list_load_balancers":{"type":"method","name":"list_load_balancers","children":[],"call":[" request ","options [] ","options key? "]}," Fog Rackspace LoadBalancers Real list_algorithms":{"type":"method","name":"list_algorithms","children":[],"call":[" request "]}," Fog Rackspace LoadBalancers Real list_access_rules":{"type":"method","name":"list_access_rules","children":[],"call":[" request "]}," Fog Rackspace LoadBalancers Real get_usage":{"type":"method","name":"get_usage","children":[],"call":[" request ","options [] ","options key? "]}," Fog Rackspace LoadBalancers Mock get_stats":{"type":"method","name":"get_stats","children":[],"call":["Excon Response  new "]}," Fog Rackspace LoadBalancers Real get_stats":{"type":"method","name":"get_stats","children":[],"call":[" request "]}," Fog Rackspace LoadBalancers Real get_ssl_termination":{"type":"method","name":"get_ssl_termination","children":[],"call":[" request "]}," Fog Rackspace LoadBalancers Real get_session_persistence":{"type":"method","name":"get_session_persistence","children":[],"call":[" request "]}," Fog Rackspace LoadBalancers Real get_node":{"type":"method","name":"get_node","children":[],"call":[" request "]}," Fog Rackspace LoadBalancers Real get_monitor":{"type":"method","name":"get_monitor","children":[],"call":[" request "]}," Fog Rackspace LoadBalancers Real get_load_balancer_usage":{"type":"method","name":"get_load_balancer_usage","children":[],"call":[" request ","options [] ","options key? "]}," Fog Rackspace LoadBalancers Mock get_load_balancer":{"type":"method","name":"get_load_balancer","children":[],"call":["response body= ","MockData  ipv4_address ","MockData  ipv6_address ","Fog Mock  random_numbers ","MockData  zulu_time ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Rackspace LoadBalancers Real get_load_balancer":{"type":"method","name":"get_load_balancer","children":[],"call":[" request "]}," Fog Rackspace LoadBalancers Real get_error_page":{"type":"method","name":"get_error_page","children":[],"call":[" request "]}," Fog Rackspace LoadBalancers Real get_content_caching":{"type":"method","name":"get_content_caching","children":[],"call":[" request "]}," Fog Rackspace LoadBalancers Real get_connection_throttling":{"type":"method","name":"get_connection_throttling","children":[],"call":[" request "]}," Fog Rackspace LoadBalancers Real get_connection_logging":{"type":"method","name":"get_connection_logging","children":[],"call":[" request "]}," Fog Rackspace LoadBalancers Real delete_virtual_ip":{"type":"method","name":"delete_virtual_ip","children":[],"call":[" request "]}," Fog Rackspace LoadBalancers Real delete_nodes":{"type":"method","name":"delete_nodes","children":[],"call":[" request ","(send\n  (lvar :node_ids) :map) join ","node_ids map "]}," Fog Rackspace LoadBalancers Real delete_node":{"type":"method","name":"delete_node","children":[],"call":[" request "]}," Fog Rackspace LoadBalancers Mock delete_load_balancer":{"type":"method","name":"delete_load_balancer","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Rackspace LoadBalancers Real delete_load_balancer":{"type":"method","name":"delete_load_balancer","children":[],"call":[" request "]}," Fog Rackspace LoadBalancers Real delete_all_access_rules":{"type":"method","name":"delete_all_access_rules","children":[],"call":[" request "]}," Fog Rackspace LoadBalancers Real delete_access_rule":{"type":"method","name":"delete_access_rule","children":[],"call":[" request "]}," Fog Rackspace LoadBalancers Real create_virtual_ip":{"type":"method","name":"create_virtual_ip","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Rackspace LoadBalancers Real create_node":{"type":"method","name":"create_node","children":[],"call":[" request ","Fog JSON  encode ","data [] [] []= ","options [] ","data [] [] ","data [] ","options key? "]}," Fog Rackspace LoadBalancers Mock create_load_balancer":{"type":"method","name":"create_load_balancer","children":[],"call":["Excon Response  new ","data []= ","n port ","Fog Mock  random_numbers ","n address ","nodes map ","MockData  ipv4_address ","MockData  ipv6_address ","n type ","virtual_ips map ","MockData  zulu_time "]}," Fog Rackspace LoadBalancers Real create_load_balancer":{"type":"method","name":"create_load_balancer","children":[],"call":[" request ","Fog JSON  encode ","lb_data []= ","options [] ","options key? ","nodes empty? ! ","nodes empty? "]}," Fog Rackspace LoadBalancers Real create_access_rule":{"type":"method","name":"create_access_rule","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Rackspace Identity Real update_user":{"type":"method","name":"update_user","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Rackspace Identity Real list_users":{"type":"method","name":"list_users","children":[],"call":["response body delete ","response body ","response body []= ","response body [] ","response body [] is_a? "," request "," request  body delete "," request  body "," request  body []= "," request  body [] "," request  body [] is_a? "]}," Fog Rackspace Identity Real list_user_roles":{"type":"method","name":"list_user_roles","children":[],"call":["response body delete ","response body ","response body []= ","response body [] ","response body [] is_a? "," request "," request  body delete "," request  body "," request  body []= "," request  body [] "," request  body [] is_a? "]}," Fog Rackspace Identity Mock list_tenants":{"type":"method","name":"list_tenants","children":[],"call":["response body= ","Fog Mock  random_numbers ","response status= ","(int 200) [] "," rand ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Rackspace Identity Real list_tenants":{"type":"method","name":"list_tenants","children":[],"call":["response body delete ","response body ","response body []= ","response body [] ","response body [] is_a? "," request "," request  body delete "," request  body "," request  body []= "," request  body [] "," request  body [] is_a? "]}," Fog Rackspace Identity Real list_credentials":{"type":"method","name":"list_credentials","children":[],"call":["response body delete ","response body ","response body []= ","response body [] ","response body [] is_a? "," request "," request  body delete "," request  body "," request  body []= "," request  body [] "," request  body [] is_a? "]}," Fog Rackspace Identity Real get_user_by_name":{"type":"method","name":"get_user_by_name","children":[],"call":[" request "]}," Fog Rackspace Identity Real get_user_by_id":{"type":"method","name":"get_user_by_id","children":[],"call":[" request "]}," Fog Rackspace Identity Real delete_user":{"type":"method","name":"delete_user","children":[],"call":[" request "]}," Fog Rackspace Identity Real create_user":{"type":"method","name":"create_user","children":[],"call":[" request ","Fog JSON  encode ","data [] []= ","options [] ","data [] ","options [] nil? "]}," Fog Rackspace Identity Mock endpoint_entry":{"type":"method","name":"endpoint_entry","children":[],"call":["endpoint []= ","options [] ","options [] call ","endpoint [] gsub ","endpoint [] ","region downcase ","region downcase egion downcase "]}," Fog Rackspace Identity Mock service_catalog_entry":{"type":"method","name":"service_catalog_entry","children":[],"call":["entry []= "," endpoint_entry ","(str \"ORD\") map ","options [] ","options []= "," lambda "]}," Fog Rackspace Identity Mock build_service_catalog":{"type":"method","name":"build_service_catalog","children":[],"call":[" service_catalog_entry "," lambda ","Fog Mock  random_numbers "]}," Fog Rackspace Identity Mock generate_object_tenant":{"type":"method","name":"generate_object_tenant","children":[],"call":["(send\n  (array\n    (int 8)\n    (int 4)\n    (int 4)\n    (int 4)\n    (int 12)) :map) join ","Fog Mock  random_hex ","(int 8) map "]}," Fog Rackspace Identity Mock create_token":{"type":"method","name":"create_token","children":[],"call":["response body= "," build_service_catalog ","Fog Mock  random_numbers ","(send\n  (send\n    (send\n      (const nil :Time) :now) :utc) :+\n  (int 86400)) strftime ","Time  now utc + ","Time  now utc ","Time  now ","Fog Mock  random_hex ","response status= ","Excon Response  new "," generate_object_tenant "," raise ","Excon Errors Unauthorized  new ","api_key == ","username == ","Excon Response  new  body= ","Excon Response  new  status= "," generate_ generate_object_tenant  "]}," Fog Rackspace Identity Real create_token":{"type":"method","name":"create_token","children":[],"call":[" request_without_retry ","Fog JSON  encode "]}," Fog DNS Rackspace Real remove_records":{"type":"method","name":"remove_records","children":[],"call":[" request ","(str \"domains/\") + ","(send\n  (lvar :record_ids) :map) join ","record_ids map "," validate_path_fragment "," validate_(str \"domains/\") + _fragment "]}," Fog DNS Rackspace Real remove_record":{"type":"method","name":"remove_record","children":[],"call":[" request "," validate_path_fragment "]}," Fog DNS Rackspace Real remove_domains":{"type":"method","name":"remove_domains","children":[],"call":[" request ","path + + "," array_to_query_string ","path + ","query_data empty? ! ","query_data empty? ","query_data []= ","options [] ","options key? ","domains? + ","(send\n  (lvar :domain_ids) :map) join ","domain_ids map ","path + +  + + ","domains? +  + + ","path + +  + ","domains? +  + "]}," Fog DNS Rackspace Real remove_domain":{"type":"method","name":"remove_domain","children":[],"call":[" request ","path + + "," array_to_query_string ","path + ","query_data empty? ! ","query_data empty? ","query_data []= ","options [] to_s ","options [] ","options key? "," validate_path_fragment ","path + +  + + ","path + +  + "," validate_path + + _fragment "]}," Fog DNS Rackspace Real modify_record":{"type":"method","name":"modify_record","children":[],"call":[" request ","Fog JSON  encode ","data empty? ","data []= ","options [] ","options key? "," validate_path_fragment "]}," Fog DNS Rackspace Real modify_domain":{"type":"method","name":"modify_domain","children":[],"call":[" request ","Fog JSON  encode ","data empty? ","data []= ","options [] ","options key? "," validate_path_fragment "]}," Fog DNS Rackspace Real list_subdomains":{"type":"method","name":"list_subdomains","children":[],"call":[" request ","path + + "," array_to_query_string ","path + ","options empty? ! ","options empty? "," validate_path_fragment ","path + +  + + ","path + +  + "," validate_path + + _fragment "]}," Fog DNS Rackspace Real list_records":{"type":"method","name":"list_records","children":[],"call":[" request ","path + + "," array_to_query_string ","path + ","options empty? ! ","options empty? "," validate_path_fragment ","path + +  + + ","path + +  + "," validate_path + + _fragment "]}," Fog DNS Rackspace Real list_record_details":{"type":"method","name":"list_record_details","children":[],"call":[" request "," validate_path_fragment "]}," Fog DNS Rackspace Real list_domains":{"type":"method","name":"list_domains","children":[],"call":[" request "," array_to_query_string ","options empty? "]}," Fog DNS Rackspace Real list_domain_details":{"type":"method","name":"list_domain_details","children":[],"call":[" request ","path + + "," array_to_query_string ","path + ","query_data empty? ! ","query_data empty? ","query_data []= ","options [] ","options key? "," validate_path_fragment ","path + +  + + ","path + +  + "," validate_path + + _fragment "]}," Fog DNS Rackspace Real create_domains":{"type":"method","name":"create_domains","children":[],"call":[" request ","Fog JSON  encode ","data [] << ","data [] ","domain_data []= ","record_data merge! ","record [] ","record key? ","domain [] map ","domain [] ","domain key? ","domains each "]}," Fog DNS Rackspace Real callback":{"type":"method","name":"callback","children":[],"call":[" request "," validate_path_fragment "]}," Fog DNS Rackspace Real add_records":{"type":"method","name":"add_records","children":[],"call":[" request ","Fog JSON  encode ","record_data []= ","record [] ","record key? ","records map "," validate_path_fragment "]}," Fog Rackspace Databases Real revoke_user_access":{"type":"method","name":"revoke_user_access","children":[],"call":[" request ","user name + ","user name ","(and\n  (and\n    (send\n      (lvar :user) :host)\n    (send\n      (send\n        (lvar :user) :host) :!=\n      (str \"\")))\n  (send\n    (send\n      (lvar :user) :host) :!=\n    (str \"%\"))) to_s ","user host ","user host != ","user respond_to? "]}," Fog Rackspace Databases Real restart_instance":{"type":"method","name":"restart_instance","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Rackspace Databases Real resize_instance_volume":{"type":"method","name":"resize_instance_volume","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Rackspace Databases Real resize_instance":{"type":"method","name":"resize_instance","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Rackspace Databases Real list_users":{"type":"method","name":"list_users","children":[],"call":[" request "]}," Fog Rackspace Databases Real list_instances":{"type":"method","name":"list_instances","children":[],"call":[" request "]}," Fog Rackspace Databases Real list_flavors":{"type":"method","name":"list_flavors","children":[],"call":[" request "]}," Fog Rackspace Databases Real list_databases":{"type":"method","name":"list_databases","children":[],"call":[" request "]}," Fog Rackspace Databases Real grant_user_access":{"type":"method","name":"grant_user_access","children":[],"call":[" request ","Fog JSON  encode ","data [] << ","data [] ","databases each ","user name + ","user name ","(and\n  (and\n    (send\n      (lvar :user) :host)\n    (send\n      (send\n        (lvar :user) :host) :!=\n      (str \"\")))\n  (send\n    (send\n      (lvar :user) :host) :!=\n    (str \"%\"))) to_s ","user host ","user host != ","user respond_to? "]}," Fog Rackspace Databases Real get_instance":{"type":"method","name":"get_instance","children":[],"call":[" request "]}," Fog Rackspace Databases Real get_flavor":{"type":"method","name":"get_flavor","children":[],"call":[" request "]}," Fog Rackspace Databases Real enable_root_user":{"type":"method","name":"enable_root_user","children":[],"call":[" request "]}," Fog Rackspace Databases Real delete_user":{"type":"method","name":"delete_user","children":[],"call":[" request "]}," Fog Rackspace Databases Real delete_instance":{"type":"method","name":"delete_instance","children":[],"call":[" request "]}," Fog Rackspace Databases Real delete_database":{"type":"method","name":"delete_database","children":[],"call":[" request "]}," Fog Rackspace Databases Real create_user":{"type":"method","name":"create_user","children":[],"call":[" request ","Fog JSON  encode ","options [] "]}," Fog Rackspace Databases Real create_instance":{"type":"method","name":"create_instance","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Rackspace Databases Real create_database":{"type":"method","name":"create_database","children":[],"call":[" request ","Fog JSON  encode ","options [] "]}," Fog Rackspace Databases Real check_root_user":{"type":"method","name":"check_root_user","children":[],"call":[" request "]}," Fog Compute RackspaceV2 Mock update_server":{"type":"method","name":"update_server","children":[],"call":[" response ","Fog Rackspace MockData  keep ","server []= ","name is_a? ","name each_pair "," data [] [] "," data [] "," data "," data [] []  []= "]}," Fog Compute RackspaceV2 Real update_server":{"type":"method","name":"update_server","children":[],"call":[" request ","Fog JSON  encode ","options is_a? "]}," Fog Compute RackspaceV2 Mock update_metadata":{"type":"method","name":"update_metadata","children":[],"call":["response body= ","response status= ","Excon Response  new "," raise ","obj_id == ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Compute RackspaceV2 Real update_metadata":{"type":"method","name":"update_metadata","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute RackspaceV2 Mock unrescue_server":{"type":"method","name":"unrescue_server","children":[],"call":[" response ","server []= "," data [] [] "," data [] "," data "," data [] []  []= "]}," Fog Compute RackspaceV2 Real unrescue_server":{"type":"method","name":"unrescue_server","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute RackspaceV2 Mock set_metadata_item":{"type":"method","name":"set_metadata_item","children":[],"call":["response body= ","response status= ","Excon Response  new "," raise ","obj_id == ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Compute RackspaceV2 Real set_metadata_item":{"type":"method","name":"set_metadata_item","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute RackspaceV2 Mock set_metadata":{"type":"method","name":"set_metadata","children":[],"call":["response body= ","response status= ","Excon Response  new "," raise ","obj_id == ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Compute RackspaceV2 Real set_metadata":{"type":"method","name":"set_metadata","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute RackspaceV2 Mock revert_resize_server":{"type":"method","name":"revert_resize_server","children":[],"call":[" response ","server []= "," data [] [] "," data [] "," data "," data [] []  []= "]}," Fog Compute RackspaceV2 Real revert_resize_server":{"type":"method","name":"revert_resize_server","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute RackspaceV2 Mock resize_server":{"type":"method","name":"resize_server","children":[],"call":[" response ","server []= "," data [] [] "," data [] "," data "," data [] []  []= "]}," Fog Compute RackspaceV2 Real resize_server":{"type":"method","name":"resize_server","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute RackspaceV2 Mock rescue_server":{"type":"method","name":"rescue_server","children":[],"call":[" response ","Fog Mock  random_letters ","server []= "," data [] [] "," data [] "," data "," data [] []  []= "]}," Fog Compute RackspaceV2 Real rescue_server":{"type":"method","name":"rescue_server","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute RackspaceV2 Mock rebuild_server":{"type":"method","name":"rebuild_server","children":[],"call":[" response "," data [] [] "," data [] "," data "]}," Fog Compute RackspaceV2 Real rebuild_server":{"type":"method","name":"rebuild_server","children":[],"call":[" request ","Fog JSON  encode ","data [] []= ","data [] "]}," Fog Compute RackspaceV2 Mock reboot_server":{"type":"method","name":"reboot_server","children":[],"call":[" response ","type upcase "]}," Fog Compute RackspaceV2 Real reboot_server":{"type":"method","name":"reboot_server","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute RackspaceV2 Real list_virtual_interfaces":{"type":"method","name":"list_virtual_interfaces","children":[],"call":[" request "]}," Fog Compute RackspaceV2 Mock list_servers":{"type":"method","name":"list_servers","children":[],"call":[" response ","Fog Rackspace MockData  keep "," data [] values map "," data [] values "," data [] "," data "]}," Fog Compute RackspaceV2 Real list_servers":{"type":"method","name":"list_servers","children":[],"call":[" request "]}," Fog Compute RackspaceV2 Mock list_networks":{"type":"method","name":"list_networks","children":[],"call":[" response "," data [] values "," data [] "," data "]}," Fog Compute RackspaceV2 Real list_networks":{"type":"method","name":"list_networks","children":[],"call":[" request "]}," Fog Compute RackspaceV2 Mock list_metadata":{"type":"method","name":"list_metadata","children":[],"call":["response body= ","response status= ","Excon Response  new "," raise ","obj_id == ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Compute RackspaceV2 Real list_metadata":{"type":"method","name":"list_metadata","children":[],"call":[" request "]}," Fog Compute RackspaceV2 Mock list_keypairs":{"type":"method","name":"list_keypairs","children":[],"call":[" response "," data [] "," data "]}," Fog Compute RackspaceV2 Real list_keypairs":{"type":"method","name":"list_keypairs","children":[],"call":[" request "]}," Fog Compute RackspaceV2 Mock list_images_detail":{"type":"method","name":"list_images_detail","children":[],"call":[" response "," data [] values "," data [] "," data "]}," Fog Compute RackspaceV2 Real list_images_detail":{"type":"method","name":"list_images_detail","children":[],"call":[" request ","(pair\n  (str \"format\")\n  (str \"json\")) merge! ","value nil? ","options reject "]}," Fog Compute RackspaceV2 Mock list_images":{"type":"method","name":"list_images","children":[],"call":[" response "," data [] values "," data [] "," data "]}," Fog Compute RackspaceV2 Real list_images":{"type":"method","name":"list_images","children":[],"call":[" request ","(pair\n  (str \"format\")\n  (str \"json\")) merge! ","value nil? ","options reject "]}," Fog Compute RackspaceV2 Mock list_flavors_detail":{"type":"method","name":"list_flavors_detail","children":[],"call":[" response ","Fog Rackspace MockData  keep "," data [] values map "," data [] values "," data [] "," data "]}," Fog Compute RackspaceV2 Real list_flavors_detail":{"type":"method","name":"list_flavors_detail","children":[],"call":[" request "]}," Fog Compute RackspaceV2 Mock list_flavors":{"type":"method","name":"list_flavors","children":[],"call":[" response ","Fog Rackspace MockData  keep "," data [] values map "," data [] values "," data [] "," data "]}," Fog Compute RackspaceV2 Real list_flavors":{"type":"method","name":"list_flavors","children":[],"call":[" request "]}," Fog Compute RackspaceV2 Mock list_attachments":{"type":"method","name":"list_attachments","children":[],"call":[" response ","va [] == ","va [] "," data [] select "," data [] "," data "]}," Fog Compute RackspaceV2 Real list_attachments":{"type":"method","name":"list_attachments","children":[],"call":[" request "]}," Fog Compute RackspaceV2 Mock list_addresses_by_network":{"type":"method","name":"list_addresses_by_network","children":[],"call":["response body= ","RESPONSE_BODY  [] [] ","RESPONSE_BODY  [] ","response status= ","Excon Response  new "," raise ","Fog Compute RackspaceV2 NotFound  new ","server_id == ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Compute RackspaceV2 Real list_addresses_by_network":{"type":"method","name":"list_addresses_by_network","children":[],"call":[" request "]}," Fog Compute RackspaceV2 Mock list_addresses":{"type":"method","name":"list_addresses","children":[],"call":["response body= ","response status= ","Excon Response  new "," raise ","Fog Compute RackspaceV2 NotFound  new ","server_id == ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Compute RackspaceV2 Real list_addresses":{"type":"method","name":"list_addresses","children":[],"call":[" request "]}," Fog Compute RackspaceV2 Mock get_vnc_console":{"type":"method","name":"get_vnc_console","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Compute RackspaceV2 Real get_vnc_console":{"type":"method","name":"get_vnc_console","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute RackspaceV2 Mock get_server":{"type":"method","name":"get_server","children":[],"call":[" response ","l delete ","server_response [] [] map! ","server_response [] [] ","server_response [] ","Fog Rackspace MockData  keep "," raise ","server nil? "," data [] [] "," data [] "," data ","Fog Rackspace MockData  keep  [] [] map! "," data [] [] _response [] [] map! ","Fog Rackspace MockData  keep  [] [] "," data [] [] _response [] [] ","Fog Rackspace MockData  keep  [] "," data [] [] _response [] "," data [] []  nil? "]}," Fog Compute RackspaceV2 Real get_server":{"type":"method","name":"get_server","children":[],"call":[" request "]}," Fog Compute RackspaceV2 Mock get_network":{"type":"method","name":"get_network","children":[],"call":[" response "," data [] [] "," data [] "," data "," raise "," data [] key? "]}," Fog Compute RackspaceV2 Real get_network":{"type":"method","name":"get_network","children":[],"call":[" request "]}," Fog Compute RackspaceV2 Mock get_metadata_item":{"type":"method","name":"get_metadata_item","children":[],"call":["response body= ","response status= ","Excon Response  new "," raise ","obj_id == ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Compute RackspaceV2 Real get_metadata_item":{"type":"method","name":"get_metadata_item","children":[],"call":[" request "]}," Fog Compute RackspaceV2 Mock get_keypair":{"type":"method","name":"get_keypair","children":[],"call":[" response "," raise ","key nil? ","(send\n  (send\n    (send\n      (self) :data) :[]\n    (sym :keypairs)) :select) first ","key_name include? ","k [] [] ","k [] "," data [] select "," data [] "," data ","(send\n  (send\n    (send\n      (self) :data) :[]\n    (sym :keypairs)) :select) first  nil? ","(send\n  (send\n    (send\n      (self) :data) :[]\n    (sym :(send\n  (send\n    (send\n      (self) :data) :[]\n    (sym :keypairs)) :select) first pairs)) :select) first ","(send\n  (send\n    (send\n      (self) :data) :[]\n    (sym :keypairs)) :select) first _name include? "]}," Fog Compute RackspaceV2 Real get_keypair":{"type":"method","name":"get_keypair","children":[],"call":[" request "]}," Fog Compute RackspaceV2 Mock get_image":{"type":"method","name":"get_image","children":[],"call":[" response "," raise ","image nil? "," data [] [] "," data [] "," data "," data [] []  nil? "]}," Fog Compute RackspaceV2 Real get_image":{"type":"method","name":"get_image","children":[],"call":[" request ","Fog Rackspace  escape "]}," Fog Compute RackspaceV2 Mock get_flavor":{"type":"method","name":"get_flavor","children":[],"call":[" response "," raise ","flavor nil? "," data [] [] "," data [] "," data "," data [] []  nil? "]}," Fog Compute RackspaceV2 Real get_flavor":{"type":"method","name":"get_flavor","children":[],"call":[" request ","Fog Rackspace  escape "]}," Fog Compute RackspaceV2 Mock get_attachment":{"type":"method","name":"get_attachment","children":[],"call":[" response ","v [] == ","v [] "," data [] find "," data [] "," data "]}," Fog Compute RackspaceV2 Real get_attachment":{"type":"method","name":"get_attachment","children":[],"call":[" request "]}," Fog Compute RackspaceV2 Real delete_virtual_interface":{"type":"method","name":"delete_virtual_interface","children":[],"call":[" request "]}," Fog Compute RackspaceV2 Mock delete_server":{"type":"method","name":"delete_server","children":[],"call":[" response ","v []= ","v [] empty? ","v [] ","a [] == ","a [] ","v [] delete_if ","volumes each "," data [] values "," data [] "," data "," data [] delete "," data [] values  each "]}," Fog Compute RackspaceV2 Real delete_server":{"type":"method","name":"delete_server","children":[],"call":[" request "]}," Fog Compute RackspaceV2 Mock delete_network":{"type":"method","name":"delete_network","children":[],"call":[" response "," raise "," data [] key? "," data [] "," data "]}," Fog Compute RackspaceV2 Real delete_network":{"type":"method","name":"delete_network","children":[],"call":[" request "]}," Fog Compute RackspaceV2 Mock delete_metadata_item":{"type":"method","name":"delete_metadata_item","children":[],"call":["response status= ","response body= ","Excon Response  new "," raise ","obj_id == ","Excon Response  new  status= ","Excon Response  new  body= "]}," Fog Compute RackspaceV2 Real delete_metadata_item":{"type":"method","name":"delete_metadata_item","children":[],"call":[" request "]}," Fog Compute RackspaceV2 Mock delete_keypair":{"type":"method","name":"delete_keypair","children":[],"call":[" response ","key_name include? ","k [] [] ","k [] "," data [] reject! "," data [] "," data "," raise ","(send\n  (send\n    (send\n      (self) :data) :[]\n    (sym :keypairs)) :select) empty? "," data [] select "]}," Fog Compute RackspaceV2 Real delete_keypair":{"type":"method","name":"delete_keypair","children":[],"call":[" request ","URI  escape "]}," Fog Compute RackspaceV2 Mock delete_image":{"type":"method","name":"delete_image","children":[],"call":["response body= ","response status= ","Excon Response  new "," raise ","Fog Compute RackspaceV2 NotFound  new ","image_id == ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Compute RackspaceV2 Real delete_image":{"type":"method","name":"delete_image","children":[],"call":[" request "]}," Fog Compute RackspaceV2 Mock delete_attachment":{"type":"method","name":"delete_attachment","children":[],"call":[" response ","v [] == ","v [] ","volume [] delete_if ","volume [] "," data [] delete_if "," data [] "," data "," raise ","server nil? ","volume nil? "," data [] [] "," data [] []  [] delete_if "," data [] []  [] "," data [] []  nil? "]}," Fog Compute RackspaceV2 Real delete_attachment":{"type":"method","name":"delete_attachment","children":[],"call":[" request "]}," Fog Compute RackspaceV2 Real create_virtual_interface":{"type":"method","name":"create_virtual_interface","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute RackspaceV2 Mock create_server":{"type":"method","name":"create_server","children":[],"call":[" response "," data [] []= "," data [] "," data ","server []= "," data [] [] [] "," data [] [] ","network [] ","options [] each ","options [] ","Fog Rackspace MockData  keep ","Fog Mock  random_hex ","Fog Mock  random_letters ","Fog Rackspace MockData  ipv6_address ","Fog Rackspace MockData  ipv4_address ","Fog Rackspace MockData  uuid "]}," Fog Compute RackspaceV2 Real create_server":{"type":"method","name":"create_server","children":[],"call":[" request ","Fog JSON  encode ","data [] []= ","options [] ","data [] ","Fog Logger  warning ","Boot volume size:  + + ","Boot volume size:  + ","options [] nil? ","options []= ","Fog Logger  deprecation "]}," Fog Compute RackspaceV2 Mock create_network":{"type":"method","name":"create_network","children":[],"call":[" response "," data [] [] "," data [] "," data "," data [] []= ","Fog Rackspace MockData  uuid "]}," Fog Compute RackspaceV2 Real create_network":{"type":"method","name":"create_network","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute RackspaceV2 Mock create_keypair":{"type":"method","name":"create_keypair","children":[],"call":[" response "," data [] << "," data [] "," data ","k []= ","Fog Logger  deprecation ","attributes is_a? "," raise ","(send\n  (send\n    (send\n      (self) :data) :[]\n    (sym :keypairs)) :select) first nil? ! ","(send\n  (send\n    (send\n      (self) :data) :[]\n    (sym :keypairs)) :select) first nil? ","(send\n  (send\n    (send\n      (self) :data) :[]\n    (sym :keypairs)) :select) first ","key_name include? ","k [] [] ","k [] "," data [] select "," data []  []= ","(send\n  (send\n    (send\n      (self) :data) :[]\n    (sym : data [] eypairs)) :select) first nil? ! ","(send\n  (send\n    (send\n      (self) :data) :[]\n    (sym : data [] eypairs)) :select) first nil? ","(send\n  (send\n    (send\n      (self) :data) :[]\n    (sym : data [] eypairs)) :select) first "," data [] ey_name include? "," data []  [] [] "," data []  [] "]}," Fog Compute RackspaceV2 Real create_keypair":{"type":"method","name":"create_keypair","children":[],"call":[" request ","Fog JSON  encode ","key_data merge! ","attributes is_a? ","Fog Logger  deprecation "]}," Fog Compute RackspaceV2 Mock create_image":{"type":"method","name":"create_image","children":[],"call":[" response "," data [] []= "," data [] "," data ","Fog Rackspace MockData  uuid "]}," Fog Compute RackspaceV2 Real create_image":{"type":"method","name":"create_image","children":[],"call":[" request ","Fog JSON  encode ","data [] merge! ","data [] "]}," Fog Compute RackspaceV2 Mock confirm_resize_server":{"type":"method","name":"confirm_resize_server","children":[],"call":[" response ","server []= "," data [] [] "," data [] "," data "," data [] []  []= "]}," Fog Compute RackspaceV2 Real confirm_resize_server":{"type":"method","name":"confirm_resize_server","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute RackspaceV2 Mock change_server_password":{"type":"method","name":"change_server_password","children":[],"call":[" response "]}," Fog Compute RackspaceV2 Real change_server_password":{"type":"method","name":"change_server_password","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute RackspaceV2 Mock attach_volume":{"type":"method","name":"attach_volume","children":[],"call":[" response ","volume []= ","volume [] << ","volume [] "," data [] << "," data [] "," data "," raise ","volume nil? ","server nil? "," data [] [] "," data [] []  []= "," data [] []  [] << "," data [] []  [] "," data [] []  nil? "]}," Fog Compute RackspaceV2 Real attach_volume":{"type":"method","name":"attach_volume","children":[],"call":[" request ","Fog JSON  encode ","data [] []= ","data [] "]}," Fog Compute Rackspace Mock update_server":{"type":"method","name":"update_server","children":[],"call":[" raise ","response status= ","server []= ","options [] ","_ [] == ","_ [] "," list_servers_detail body [] find "," list_servers_detail body [] "," list_servers_detail body "," list_servers_detail ","Excon Response  new ","Excon Response  new  status= "]}," Fog Compute Rackspace Real update_server":{"type":"method","name":"update_server","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute Rackspace Real server_action":{"type":"method","name":"server_action","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute Rackspace Mock revert_resized_server":{"type":"method","name":"revert_resized_server","children":[],"call":[" data [] [] []= "," data [] [] "," data [] "," data ","Time  now "," data [] [] delete "," data [] [] [] ","response status= ","Excon Response  new ","Excon Response  new  status= "]}," Fog Compute Rackspace Real revert_resized_server":{"type":"method","name":"revert_resized_server","children":[],"call":[" server_action "]}," Fog Compute Rackspace Mock resize_server":{"type":"method","name":"resize_server","children":[],"call":[" data [] [] []= "," data [] [] "," data [] "," data ","Time  now "," data [] [] [] ","response status= ","Excon Response  new ","Excon Response  new  status= "]}," Fog Compute Rackspace Real resize_server":{"type":"method","name":"resize_server","children":[],"call":[" server_action "]}," Fog Compute Rackspace Mock reboot_server":{"type":"method","name":"reboot_server","children":[],"call":["response status= ","Excon Response  new ","Excon Response  new  status= "]}," Fog Compute Rackspace Real reboot_server":{"type":"method","name":"reboot_server","children":[],"call":[" server_action "]}," Fog Compute Rackspace Mock list_servers_detail":{"type":"method","name":"list_servers_detail","children":[],"call":["response body= ","response status= ","(int 200) [] "," rand ","server []= ","Time  now - > ","Fog Mock  delay * ","Fog Mock  delay ","Time  now - "," data [] [] [] ","server [] "," data [] [] "," data [] "," data ","Time  now "," data [] values ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Compute Rackspace Real list_servers_detail":{"type":"method","name":"list_servers_detail","children":[],"call":[" request "]}," Fog Compute Rackspace Mock list_servers":{"type":"method","name":"list_servers","children":[],"call":["response body= ","response status= ","(int 200) [] "," rand ","servers << ","(str \"id\") include? ! ","(str \"id\") include? ","server reject "," list_servers_detail body [] "," list_servers_detail body "," list_servers_detail ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Compute Rackspace Real list_servers":{"type":"method","name":"list_servers","children":[],"call":[" request "]}," Fog Compute Rackspace Mock list_public_addresses":{"type":"method","name":"list_public_addresses","children":[],"call":[" raise ","response body= ","server [] [] ","server [] ","response status= ","(int 200) [] "," rand ","_ [] == ","_ [] "," list_servers_detail body [] find "," list_servers_detail body [] "," list_servers_detail body "," list_servers_detail ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Compute Rackspace Real list_public_addresses":{"type":"method","name":"list_public_addresses","children":[],"call":[" request "]}," Fog Compute Rackspace Mock list_private_addresses":{"type":"method","name":"list_private_addresses","children":[],"call":[" raise ","response body= ","server [] [] ","server [] ","response status= ","(int 200) [] "," rand ","_ [] == ","_ [] "," list_servers_detail body [] find "," list_servers_detail body [] "," list_servers_detail body "," list_servers_detail ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Compute Rackspace Real list_private_addresses":{"type":"method","name":"list_private_addresses","children":[],"call":[" request "]}," Fog Compute Rackspace Mock list_images_detail":{"type":"method","name":"list_images_detail","children":[],"call":["response body= ","(str \"id\") include? ! ","(str \"id\") include? ","image reject ","images map ","response status= ","(int 200) [] "," rand ","image []= ","Time  now - >= ","Fog Mock  delay ","Time  now - "," data [] [] [] ","image [] "," data [] [] "," data [] "," data ","Time  now "," data [] values ","Excon Response  new ","Excon Response  new  body= "," data [] values  map ","Excon Response  new  status= "]}," Fog Compute Rackspace Real list_images_detail":{"type":"method","name":"list_images_detail","children":[],"call":[" request "]}," Fog Compute Rackspace Mock list_images":{"type":"method","name":"list_images","children":[],"call":["response body= ","response status= ","(int 200) [] "," rand ","images << ","(str \"id\") include? ! ","(str \"id\") include? ","image reject "," list_images_detail body [] "," list_images_detail body "," list_images_detail ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Compute Rackspace Real list_images":{"type":"method","name":"list_images","children":[],"call":[" request "]}," Fog Compute Rackspace Mock list_flavors_detail":{"type":"method","name":"list_flavors_detail","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Compute Rackspace Real list_flavors_detail":{"type":"method","name":"list_flavors_detail","children":[],"call":[" request "]}," Fog Compute Rackspace Mock list_flavors":{"type":"method","name":"list_flavors","children":[],"call":["response body= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Compute Rackspace Real list_flavors":{"type":"method","name":"list_flavors","children":[],"call":[" request "]}," Fog Compute Rackspace Mock list_addresses":{"type":"method","name":"list_addresses","children":[],"call":[" raise ","response body= ","server [] ","response status= ","(int 200) [] "," rand ","_ [] == ","_ [] "," list_servers_detail body [] find "," list_servers_detail body [] "," list_servers_detail body "," list_servers_detail ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Compute Rackspace Real list_addresses":{"type":"method","name":"list_addresses","children":[],"call":[" request "]}," Fog Compute Rackspace Mock get_server_details":{"type":"method","name":"get_server_details","children":[],"call":[" raise ","response body= ","response status= ","(int 200) [] "," rand ","_ [] to_s == ","server_id to_s ","_ [] to_s ","_ [] "," list_servers_detail body [] find "," list_servers_detail body [] "," list_servers_detail body "," list_servers_detail ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Compute Rackspace Real get_server_details":{"type":"method","name":"get_server_details","children":[],"call":[" request "]}," Fog Compute Rackspace Real get_image_details":{"type":"method","name":"get_image_details","children":[],"call":[" request "]}," Fog Compute Rackspace Mock get_flavor_details":{"type":"method","name":"get_flavor_details","children":[],"call":[" raise ","response body= ","response status= ","(pair\n  (int 1)\n  (hash\n    (pair\n      (str \"name\")\n      (str \"256 server\"))\n    (pair\n      (str \"ram\")\n      (int 256))\n    (pair\n      (str \"disk\")\n      (int 10)))) [] ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Compute Rackspace Real get_flavor_details":{"type":"method","name":"get_flavor_details","children":[],"call":[" request "]}," Fog Compute Rackspace Mock delete_server":{"type":"method","name":"delete_server","children":[],"call":[" raise ","response status= "," data [] delete "," data [] "," data "," data [] [] delete "," data [] [] ","Excon Errors  status_error ","server [] == ","server [] ","_ [] == ","_ [] "," list_servers_detail body [] find "," list_servers_detail body [] "," list_servers_detail body "," list_servers_detail ","Excon Response  new ","Excon Response  new  status= "]}," Fog Compute Rackspace Real delete_server":{"type":"method","name":"delete_server","children":[],"call":[" request "]}," Fog Compute Rackspace Mock delete_image":{"type":"method","name":"delete_image","children":[],"call":[" raise ","Fog Compute Rackspace NotFound  new ","response status= "," data [] delete "," data [] "," data "," data [] [] delete "," data [] [] ","Excon Errors  status_error ","image [] == ","image [] ","_ [] == ","_ [] "," list_images_detail body [] find "," list_images_detail body [] "," list_images_detail body "," list_images_detail ","Excon Response  new ","Excon Response  new  status= "]}," Fog Compute Rackspace Real delete_image":{"type":"method","name":"delete_image","children":[],"call":[" request "]}," Fog Compute Rackspace Mock create_server":{"type":"method","name":"create_server","children":[],"call":["response body= ","data merge "," data [] []= ","data [] "," data [] "," data "," data [] [] []= ","Time  now "," data [] [] "," rand ","options [] ","Fog Mock  random_numbers to_i ","Fog Mock  random_numbers ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  status= "]}," Fog Compute Rackspace Real create_server":{"type":"method","name":"create_server","children":[],"call":[" request ","Fog JSON  encode ","data [] [] << ","file [] ","Base64  encode64 ","data [] [] ","data [] ","options [] ","data [] []= "]}," Fog Compute Rackspace Mock create_image":{"type":"method","name":"create_image","children":[],"call":["response body= ","(str \"id\") include? ! ","(str \"id\") include? ","data reject "," data [] []= ","data [] "," data [] "," data "," data [] [] []= "," data [] [] ","now to_s ","options [] ","Fog Mock  random_numbers to_i ","Fog Mock  random_numbers ","Time  now ","response status= ","Excon Response  new ","Excon Response  new  body= ","Time  now  to_s ","Time  Time  now  ","Excon Response  new  status= "]}," Fog Compute Rackspace Real create_image":{"type":"method","name":"create_image","children":[],"call":[" request ","Fog JSON  encode ","data [] merge! ","data [] "]}," Fog Compute Rackspace Mock confirm_resized_server":{"type":"method","name":"confirm_resized_server","children":[],"call":[" data [] [] []= "," data [] [] "," data [] "," data ","Time  now "," data [] [] delete ","response status= ","Excon Response  new ","Excon Response  new  status= "]}," Fog Compute Rackspace Real confirm_resized_server":{"type":"method","name":"confirm_resized_server","children":[],"call":[" server_action "]}," Real update_service":{"type":"method","name":"update_service","children":[],"call":["service operations= "," request ","service id ","Fog JSON  encode ","service operations "]}," Real list_services":{"type":"method","name":"list_services","children":[],"call":[" request "," request_uri "]}," Real list_flavors":{"type":"method","name":"list_flavors","children":[],"call":[" request "]}," Real get_service":{"type":"method","name":"get_service","children":[],"call":[" request "]}," Real get_ping":{"type":"method","name":"get_ping","children":[],"call":[" request "]}," Real get_home_document":{"type":"method","name":"get_home_document","children":[],"call":[" request "]}," Real get_flavor":{"type":"method","name":"get_flavor","children":[],"call":[" request "]}," Real delete_service":{"type":"method","name":"delete_service","children":[],"call":[" request ","service id "]}," Real delete_assets":{"type":"method","name":"delete_assets","children":[],"call":[" request "," request_uri ","service id "," request_ request_uri  "]}," Real create_service":{"type":"method","name":"create_service","children":[],"call":[" request ","Fog JSON  encode "]}," Fog CDN Rackspace Mock put_container":{"type":"method","name":"put_container","children":[],"call":["response body= ","response headers= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  headers= ","Excon Response  new  status= "]}," Fog CDN Rackspace Real put_container":{"type":"method","name":"put_container","children":[],"call":[" request ","CGI  escape "]}," Fog CDN Rackspace Mock post_container":{"type":"method","name":"post_container","children":[],"call":["response body= ","response headers= ","response status= ","Excon Response  new "," raise ","Fog Storage Rackspace NotFound  new ","name == ","Excon Response  new  body= ","Excon Response  new  headers= ","Excon Response  new  status= "]}," Fog CDN Rackspace Real post_container":{"type":"method","name":"post_container","children":[],"call":[" request ","CGI  escape "]}," Fog CDN Rackspace Mock head_container":{"type":"method","name":"head_container","children":[],"call":["response body= ","response headers= ","response status= ","Excon Response  new "," raise ","Fog Storage Rackspace NotFound  new ","container == ","Excon Response  new  body= ","Excon Response  new  headers= ","Excon Response  new  status= "]}," Fog CDN Rackspace Real head_container":{"type":"method","name":"head_container","children":[],"call":[" request "]}," Fog CDN Rackspace Mock get_containers":{"type":"method","name":"get_containers","children":[],"call":["response body= ","response headers= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  headers= ","Excon Response  new  status= "]}," Fog CDN Rackspace Real get_containers":{"type":"method","name":"get_containers","children":[],"call":[" request ","(pair\n  (str \"format\")\n  (str \"json\")) merge! "]}," Fog CDN Rackspace Mock delete_object":{"type":"method","name":"delete_object","children":[],"call":["response body= ","response headers= ","response status= ","Excon Response  new ","Excon Response  new  body= ","Excon Response  new  headers= ","Excon Response  new  status= "]}," Fog CDN Rackspace Real delete_object":{"type":"method","name":"delete_object","children":[],"call":[" request ","Fog Rackspace  escape "]}," Fog Rackspace BlockStorage Mock list_volumes":{"type":"method","name":"list_volumes","children":[],"call":[" response "," data [] values "," data [] "," data "]}," Fog Rackspace BlockStorage Real list_volumes":{"type":"method","name":"list_volumes","children":[],"call":[" request "]}," Fog Rackspace BlockStorage Mock list_volume_types":{"type":"method","name":"list_volume_types","children":[],"call":[" response "," data [] values "," data [] "," data "]}," Fog Rackspace BlockStorage Real list_volume_types":{"type":"method","name":"list_volume_types","children":[],"call":[" request "]}," Fog Rackspace BlockStorage Mock list_snapshots":{"type":"method","name":"list_snapshots","children":[],"call":[" response "," data [] values "," data [] "," data "]}," Fog Rackspace BlockStorage Real list_snapshots":{"type":"method","name":"list_snapshots","children":[],"call":[" request "]}," Fog Rackspace BlockStorage Mock get_volume_type":{"type":"method","name":"get_volume_type","children":[],"call":[" response ","type []= ","type [] to_s ","type [] ","type dup "," raise ","type nil? "," data [] [] "," data [] "," data ","type dup  []= "," data [] []  []= ","type dup  [] to_s "," data [] []  [] to_s ","type dup  [] "," data [] []  [] ","type dup  dup "," data [] []  dup ","type dup  nil? "," data [] []  nil? "]}," Fog Rackspace BlockStorage Real get_volume_type":{"type":"method","name":"get_volume_type","children":[],"call":[" request "]}," Fog Rackspace BlockStorage Mock get_volume":{"type":"method","name":"get_volume","children":[],"call":[" response "," raise ","volume nil? ","volume []= ","possible_states [] "," rand ","possible_states length "," data [] [] "," data [] "," data "," data [] []  nil? "," data [] []  []= "]}," Fog Rackspace BlockStorage Real get_volume":{"type":"method","name":"get_volume","children":[],"call":[" request "]}," Fog Rackspace BlockStorage Mock get_snapshot":{"type":"method","name":"get_snapshot","children":[],"call":[" response "," raise ","snapshot nil? "," data [] [] "," data [] "," data "," data [] []  nil? "]}," Fog Rackspace BlockStorage Real get_snapshot":{"type":"method","name":"get_snapshot","children":[],"call":[" request "]}," Fog Rackspace BlockStorage Mock delete_volume":{"type":"method","name":"delete_volume","children":[],"call":[" response "," data [] delete "," data [] "," data "," raise ","Fog Rackspace BlockStorage BadRequest  new ","volume [] empty? ","volume [] ","volume nil? ","snapshots count ","snapshots empty? ! ","snapshots empty? ","s [] == ","s [] "," data [] values select "," data [] values "," data [] [] "," data [] []  [] empty? "," data [] []  [] "," data [] []  nil? "]}," Fog Rackspace BlockStorage Real delete_volume":{"type":"method","name":"delete_volume","children":[],"call":[" request "]}," Fog Rackspace BlockStorage Mock delete_snapshot":{"type":"method","name":"delete_snapshot","children":[],"call":[" response "," data [] delete "," data [] "," data "]}," Fog Rackspace BlockStorage Real delete_snapshot":{"type":"method","name":"delete_snapshot","children":[],"call":[" request "]}," Fog Rackspace BlockStorage Mock create_volume":{"type":"method","name":"create_volume","children":[],"call":[" response "," data [] []= "," data [] "," data ","volume []= ","options [] ","volume merge! ","snapshot [] "," data [] [] ","Fog Rackspace MockData  zulu_time ","Fog Rackspace MockData  uuid "," raise ","Fog Rackspace BlockStorage BadRequest  new ","size > ","size < ","options [] ! "," data [] []  [] "]}," Fog Rackspace BlockStorage Real create_volume":{"type":"method","name":"create_volume","children":[],"call":[" request ","Fog JSON  encode ","data [] []= ","options [] ","data [] ","options [] nil? "]}," Fog Rackspace BlockStorage Mock create_snapshot":{"type":"method","name":"create_snapshot","children":[],"call":[" response "," data [] []= "," data [] "," data ","Fog Rackspace MockData  zulu_time ","volume [] ","options [] ","Fog Rackspace MockData  uuid "," raise ","volume nil? "," data [] [] "," data [] []  [] "," data [] []  nil? "]}," Fog Rackspace BlockStorage Real create_snapshot":{"type":"method","name":"create_snapshot","children":[],"call":[" request ","Fog JSON  encode ","data [] []= ","options [] ","data [] ","options [] nil? "]}," Fog Rackspace AutoScale Mock update_webhook":{"type":"method","name":"update_webhook","children":[],"call":[" response ","webhook merge "," raise ","webhook nil? ","w [] == ","w [] ","policy [] find ","policy [] ","policy nil? ","p [] == ","p [] ","group [] find ","group [] ","group nil? "," data [] [] "," data [] "," data "," data [] []  [] find "," data [] []  [] "," data [] []  nil? "]}," Fog Rackspace AutoScale Real update_webhook":{"type":"method","name":"update_webhook","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Rackspace AutoScale Mock update_policy":{"type":"method","name":"update_policy","children":[],"call":[" request ","policy merge ","p [] == ","p [] ","group [] find ","group [] "," raise ","group nil? "," data [] [] "," data [] "," data "," data [] []  [] find "," data [] []  [] "," data [] []  nil? "]}," Fog Rackspace AutoScale Real update_policy":{"type":"method","name":"update_policy","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Rackspace AutoScale Mock update_launch_config":{"type":"method","name":"update_launch_config","children":[],"call":[" request ","config []= ","options [] ","group [] "," raise ","group nil? "," data [] [] "," data [] "," data ","group []  []= "," data [] []  [] "," data [] []  nil? "]}," Fog Rackspace AutoScale Real update_launch_config":{"type":"method","name":"update_launch_config","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Rackspace AutoScale Mock update_group_config":{"type":"method","name":"update_group_config","children":[],"call":[" request ","config []= ","options [] ","group [] "," raise ","group nil? "," data [] [] "," data [] "," data ","group []  []= "," data [] []  [] "," data [] []  nil? "]}," Fog Rackspace AutoScale Real update_group_config":{"type":"method","name":"update_group_config","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Rackspace AutoScale Mock resume_group_state":{"type":"method","name":"resume_group_state","children":[],"call":["Fog Mock  not_implemented "]}," Fog Rackspace AutoScale Real resume_group_state":{"type":"method","name":"resume_group_state","children":[],"call":[" request "]}," Fog Rackspace AutoScale Mock pause_group_state":{"type":"method","name":"pause_group_state","children":[],"call":["Fog Mock  not_implemented "]}," Fog Rackspace AutoScale Real pause_group_state":{"type":"method","name":"pause_group_state","children":[],"call":["Fog Real  not_implemented "]}," Fog Rackspace AutoScale Mock list_webhooks":{"type":"method","name":"list_webhooks","children":[],"call":[" response ","policy [] "," raise ","policy nil? ","p [] == ","p [] ","group [] find ","group [] ","group nil? "," data [] [] "," data [] "," data "," data [] []  [] find "," data [] []  [] "," data [] []  nil? "]}," Fog Rackspace AutoScale Real list_webhooks":{"type":"method","name":"list_webhooks","children":[],"call":[" request "]}," Fog Rackspace AutoScale Mock list_policies":{"type":"method","name":"list_policies","children":[],"call":[" response ","group [] "," data [] [] "," data [] "," data "," data [] []  [] "]}," Fog Rackspace AutoScale Real list_policies":{"type":"method","name":"list_policies","children":[],"call":[" request "]}," Fog Rackspace AutoScale Mock list_groups":{"type":"method","name":"list_groups","children":[],"call":[" response "," data [] "," data "]}," Fog Rackspace AutoScale Real list_groups":{"type":"method","name":"list_groups","children":[],"call":[" request "]}," Fog Rackspace AutoScale Mock get_webhook":{"type":"method","name":"get_webhook","children":[],"call":[" response "," raise ","webhook nil? ","w [] == ","w [] ","policy [] find ","policy [] ","policy nil? ","p [] == ","p [] ","group [] find ","group [] ","group nil? "," data [] [] "," data [] "," data "," data [] []  [] find "," data [] []  [] "," data [] []  nil? "]}," Fog Rackspace AutoScale Real get_webhook":{"type":"method","name":"get_webhook","children":[],"call":[" request "]}," Fog Rackspace AutoScale Mock get_policy":{"type":"method","name":"get_policy","children":[],"call":[" response "," raise ","policy nil? ","p [] == ","p [] ","group [] find ","group [] ","group nil? "," data [] [] "," data [] "," data "," data [] []  [] find "," data [] []  [] "," data [] []  nil? "]}," Fog Rackspace AutoScale Real get_policy":{"type":"method","name":"get_policy","children":[],"call":[" request "]}," Fog Rackspace AutoScale Mock get_launch_config":{"type":"method","name":"get_launch_config","children":[],"call":[" response ","group [] "," raise ","group nil? "," data [] [] "," data [] "," data "," data [] []  [] "," data [] []  nil? "]}," Fog Rackspace AutoScale Real get_launch_config":{"type":"method","name":"get_launch_config","children":[],"call":[" request "]}," Fog Rackspace AutoScale Mock get_group_state":{"type":"method","name":"get_group_state","children":[],"call":[" response ","Fog Rackspace AutoScale MockData  uuid "]}," Fog Rackspace AutoScale Real get_group_state":{"type":"method","name":"get_group_state","children":[],"call":[" request "]}," Fog Rackspace AutoScale Mock get_group_config":{"type":"method","name":"get_group_config","children":[],"call":[" response ","group [] "," raise ","group nil? "," data [] [] "," data [] "," data "," data [] []  [] "," data [] []  nil? "]}," Fog Rackspace AutoScale Real get_group_config":{"type":"method","name":"get_group_config","children":[],"call":[" request "]}," Fog Rackspace AutoScale Mock get_group":{"type":"method","name":"get_group","children":[],"call":[" response "," raise "," server nil? "," server "," data [] [] "," data [] "," data "]}," Fog Rackspace AutoScale Real get_group":{"type":"method","name":"get_group","children":[],"call":[" request "]}," Fog Rackspace AutoScale Mock execute_policy":{"type":"method","name":"execute_policy","children":[],"call":[" response "]}," Fog Rackspace AutoScale Real execute_policy":{"type":"method","name":"execute_policy","children":[],"call":[" request "]}," Fog Rackspace AutoScale Mock execute_anonymous_webhook":{"type":"method","name":"execute_anonymous_webhook","children":[],"call":[" response "]}," Fog Rackspace AutoScale Real execute_anonymous_webhook":{"type":"method","name":"execute_anonymous_webhook","children":[],"call":[" request "]}," Fog Rackspace AutoScale Mock delete_webhook":{"type":"method","name":"delete_webhook","children":[],"call":[" response ","w [] == ","w [] ","policy [] delete_if ","policy [] "," raise ","policy nil? ","p [] == ","p [] ","group [] find ","group [] ","group nil? "," data [] [] "," data [] "," data "," data [] []  [] find "," data [] []  [] "," data [] []  nil? "]}," Fog Rackspace AutoScale Real delete_webhook":{"type":"method","name":"delete_webhook","children":[],"call":[" request "]}," Fog Rackspace AutoScale Mock delete_group":{"type":"method","name":"delete_group","children":[],"call":[" response ","p [] == ","p [] ","group [] delete_if ","group [] "," raise ","group nil? "," data [] [] "," data [] "," data "," data [] delete "," data [] []  [] delete_if "," data [] []  [] "," data [] []  nil? "]}," Fog Rackspace AutoScale Real delete_policy":{"type":"method","name":"delete_policy","children":[],"call":[" request "]}," Fog Rackspace AutoScale Real delete_group":{"type":"method","name":"delete_group","children":[],"call":[" request "]}," Fog Rackspace AutoScale Mock create_webhook":{"type":"method","name":"create_webhook","children":[],"call":[" response ","policy [] << ","policy [] ","webhook []= ","options [] ","Fog Rackspace MockData  uuid "," raise ","policy nil? ","p [] == ","p [] ","group [] find ","group [] ","group nil? "," data [] [] "," data [] "," data "," data [] []  [] find "," data [] []  [] "," data [] []  nil? "]}," Fog Rackspace AutoScale Real create_webhook":{"type":"method","name":"create_webhook","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Rackspace AutoScale Mock create_policy":{"type":"method","name":"create_policy","children":[],"call":[" response ","group [] << ","group [] ","Fog Rackspace MockData  uuid "," raise ","group nil? "," data [] [] "," data [] "," data "," data [] []  [] << "," data [] []  [] "," data [] []  nil? "]}," Fog Rackspace AutoScale Real create_policy":{"type":"method","name":"create_policy","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Rackspace AutoScale Mock create_group":{"type":"method","name":"create_group","children":[],"call":[" response "," data [] []= "," data [] "," data ","group []= ","group [] [] []= ","group [] [] ","group [] ","Fog Rackspace MockData  uuid "]}," Fog Rackspace AutoScale Real create_group":{"type":"method","name":"create_group","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Rackspace Queues Real request":{"type":"method","name":"request","children":[],"call":[" raise ","ServiceError  slurp ","MethodNotAllowed  slurp ","InternalServerError  slurp ","BadRequest  slurp ","NotFound  slurp "]}," Fog Rackspace Queues Real initialize":{"type":"method","name":"initialize","children":[],"call":["Fog Core Connection  new "," endpoint_uri to_s "," endpoint_uri ","options [] "," authenticate "," apply_options "]}," Fog Rackspace Queues Mock request":{"type":"method","name":"request","children":[],"call":[" ageoff "]}," Fog Rackspace Queues Mock ageoff":{"type":"method","name":"ageoff","children":[],"call":["q ageoff "," data values each "," data values "," data "]}," Fog Rackspace Queues Mock mock_queue!":{"type":"method","name":"mock_queue!","children":[],"call":[" raise ","NotFound  new "," mock_queue "]}," Fog Rackspace Queues Mock mock_queue":{"type":"method","name":"mock_queue","children":[],"call":[" data [] "," data "]}," Fog Rackspace Queues Mock add_queue":{"type":"method","name":"add_queue","children":[],"call":[" data []= "," data ","MockQueue  new "]}," Fog Rackspace Queues Mock data":{"type":"method","name":"data","children":[],"call":[" class data [] "," class data "," class "]}," Fog Rackspace Queues Mock initialize":{"type":"method","name":"initialize","children":[],"call":[" endpoint_uri "," authenticate "," apply_options "]}," Fog Rackspace Queues Mock MockClaim to_h":{"type":"method","name":"to_h","children":[],"call":["@queue name "," age ","m to_h "," messages map "," messages "]}," Fog Rackspace Queues Mock MockClaim messages":{"type":"method","name":"messages","children":[],"call":["m claim == ","m claim ","@queue messages select ","@queue messages "]}," Fog Rackspace Queues Mock MockClaim expired?":{"type":"method","name":"expired?","children":[],"call":[" age > "," ttl "," age "]}," Fog Rackspace Queues Mock MockClaim age":{"type":"method","name":"age","children":[],"call":["Time  now to_i - ","Time  now to_i ","Time  now "]}," Fog Rackspace Queues Mock MockClaim message_end_of_life":{"type":"method","name":"message_end_of_life","children":[],"call":["@created + + ","@created + "]}," Fog Rackspace Queues Mock MockClaim touch!":{"type":"method","name":"touch!","children":[],"call":["Time  now to_i ","Time  now "]}," Fog Rackspace Queues Mock MockClaim initialize":{"type":"method","name":"initialize","children":[],"call":[" touch! ","Fog Mock  random_hex "]}," Fog Rackspace Queues Mock MockMessage to_h":{"type":"method","name":"to_h","children":[],"call":[" href "," age "]}," Fog Rackspace Queues Mock MockMessage extend_life":{"type":"method","name":"extend_life","children":[],"call":["extended > "," claim message_end_of_life - "," claim message_end_of_life "," claim "," claim message_end_of_life -  > "]}," Fog Rackspace Queues Mock MockMessage expired?":{"type":"method","name":"expired?","children":[],"call":[" age > "," ttl "," age "]}," Fog Rackspace Queues Mock MockMessage claimed?":{"type":"method","name":"claimed?","children":[],"call":["@claim nil? ! ","@claim nil? "]}," Fog Rackspace Queues Mock MockMessage href":{"type":"method","name":"href","children":[],"call":["@queue name "]}," Fog Rackspace Queues Mock MockMessage age":{"type":"method","name":"age","children":[],"call":["Time  now to_i - ","Time  now to_i ","Time  now "]}," Fog Rackspace Queues Mock MockMessage initialize":{"type":"method","name":"initialize","children":[],"call":["Time  now to_i ","Time  now "]}," Fog Rackspace Queues Mock MockQueue ageoff":{"type":"method","name":"ageoff","children":[],"call":[" claims delete "," claims ","m claim= ","claim messages each ","claim messages ","claim messages empty? ","claim expired? "," claims [] "," claims keys dup each "," claims keys dup "," claims keys ","m expired? "," messages reject! "," messages ","  claims [] s delete ","  claims [] s ","m  claims [] = "," claims []  messages each "," claims []  messages "," claims []  messages empty? "," claims []  expired? ","  claims [] s [] ","  claims [] s keys dup each ","  claims [] s keys dup ","  claims [] s keys "]}," Fog Rackspace Queues Mock MockQueue claim!":{"type":"method","name":"claim!","children":[],"call":[" raise ","NotFound  new "," claims [] "," claims "]}," Fog Rackspace Queues Mock MockQueue add_claim":{"type":"method","name":"add_claim","children":[],"call":[" claims []= ","claim id "," claims ","MockClaim  new "," MockClaim  new s []= ","MockClaim  new  id "," MockClaim  new s "]}," Fog Rackspace Queues Mock MockQueue add_message":{"type":"method","name":"add_message","children":[],"call":["@messages << ","MockMessage  new ","@id_counter to_s ","@MockMessage  new s << ","@@id_counter to_s _counter to_s "]}," Fog Rackspace Queues Mock MockQueue newest":{"type":"method","name":"newest","children":[],"call":["@messages last "]}," Fog Rackspace Queues Mock MockQueue oldest":{"type":"method","name":"oldest","children":[],"call":["@messages first "]}," Fog Rackspace Queues Mock MockQueue free":{"type":"method","name":"free","children":[],"call":["msg claimed? ! ","msg claimed? ","@messages count "]}," Fog Rackspace Queues Mock MockQueue claimed":{"type":"method","name":"claimed","children":[],"call":["msg claimed? ","@messages count "]}," Fog Rackspace Queues Mock MockQueue total":{"type":"method","name":"total","children":[],"call":["@messages size "]}," Fog Rackspace Queues Mock MockQueue initialize":{"type":"method","name":"initialize","children":[],"call":["Fog Mock  random_hex to_i ","Fog Mock  random_hex "]}," Fog Rackspace Queues Common client_id=":{"type":"method","name":"client_id=","children":[],"call":[]}," Fog Rackspace Queues Common client_id":{"type":"method","name":"client_id","children":[],"call":[]}," Fog Rackspace Queues Common authenticate":{"type":"method","name":"authenticate","children":[],"call":[]}," Fog Rackspace Queues Common endpoint_uri":{"type":"method","name":"endpoint_uri","children":[],"call":[]}," Fog Rackspace Queues Common region":{"type":"method","name":"region","children":[],"call":[]}," Fog Rackspace Queues Common service_name":{"type":"method","name":"service_name","children":[],"call":[]}," Fog Rackspace Queues Common apply_options":{"type":"method","name":"apply_options","children":[],"call":["Fog Logger  deprecation "," raise ","Fog Errors NotImplemented  new "," v2_authentication? ","options [] ","Fog UUID  uuid "]}," Fog Rackspace Orchestration Real authenticate_v1":{"type":"method","name":"authenticate_v1","children":[],"call":["credentials [] "," append_tenant_v1 ","Fog Rackspace  authenticate ","Fog Rackspace  authenticate  [] "]}," Fog Rackspace Orchestration Real append_tenant_v1":{"type":"method","name":"append_tenant_v1","children":[],"call":["@uri path= ","@uri path ","URI  parse ","credentials [] ","credentials [] match [] ","credentials [] match ","URI  parse  path= ","URI  parse  path "]}," Fog Rackspace Orchestration Real deprecation_warnings":{"type":"method","name":"deprecation_warnings","children":[],"call":["Fog Logger  deprecation ","@identity_service service_catalog display_service_regions "," service_name ","@identity_service service_catalog "," v2_authentication? ","(const nil :ORCHESTRATION_DFW_URL) include? ","options [] ","@identity_service service_catalog display_service_@identity_service service_catalog display_service_regions  "]}," Fog Rackspace Orchestration Real setup_custom_endpoint":{"type":"method","name":"setup_custom_endpoint","children":[],"call":["options [] "," v2_authentication? ","Fog Rackspace  normalize_url "]}," Fog Rackspace Orchestration Real request_uri":{"type":"method","name":"request_uri","children":[],"call":["Addressable URI  new request_uri ","Addressable URI  new "," require ","options == "]}," Fog Rackspace Orchestration Real endpoint_uri":{"type":"method","name":"endpoint_uri","children":[],"call":[]}," Fog Rackspace Orchestration Real region":{"type":"method","name":"region","children":[],"call":[]}," Fog Rackspace Orchestration Real request_id_header":{"type":"method","name":"request_id_header","children":[],"call":[]}," Fog Rackspace Orchestration Real service_name":{"type":"method","name":"service_name","children":[],"call":[]}," Fog Rackspace Orchestration Real authenticate":{"type":"method","name":"authenticate","children":[],"call":[]}," Fog Rackspace Orchestration Real request":{"type":"method","name":"request","children":[],"call":[" raise ","ServiceError  slurp ","InternalServerError  slurp ","BadRequest  slurp ","NotFound  slurp "]}," Fog Rackspace Orchestration Real initialize":{"type":"method","name":"initialize","children":[],"call":["Fog Core Connection  new "," endpoint_uri to_s "," endpoint_uri ","options [] "," deprecation_warnings "," authenticate "," setup_custom_endpoint "]}," Fog Rackspace Orchestration Mock response":{"type":"method","name":"response","children":[],"call":[" raise ","Excon Errors  status_error ","(splat\n  (send\n    (lvar :params) :[]\n    (sym :expects))) include? ! ","(splat\n  (send\n    (lvar :params) :[]\n    (sym :expects))) include? ","response status ","params [] ","params key? ","Excon Response  new ","Excon Response  new  status "]}," Fog Rackspace Orchestration Mock request":{"type":"method","name":"request","children":[],"call":["Fog Mock  not_implemented "]}," Fog Rackspace Orchestration Mock initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," Fog Rackspace Orchestration Reflectable reflection":{"type":"method","name":"reflection","children":[],"call":["REFLECTION_REGEX  match "," links [] [] "," links [] "," links "]}," Fog Rackspace Orchestration Reflectable stack":{"type":"method","name":"stack","children":[],"call":[" service stacks get "," r [] "," r "," service stacks "," service "]}," Fog Rackspace Orchestration Reflectable resource":{"type":"method","name":"resource","children":[],"call":[" service resources get "," stack "," r [] "," r "," service resources "," service "]}," Fog Rackspace NetworkingV2 Real authenticate_v1":{"type":"method","name":"authenticate_v1","children":[],"call":["credentials [] "," append_tenant_v1 ","Fog Rackspace  authenticate ","Fog Rackspace  authenticate  [] "]}," Fog Rackspace NetworkingV2 Real append_tenant_v1":{"type":"method","name":"append_tenant_v1","children":[],"call":["@uri path= ","@uri path ","URI  parse ","credentials [] ","credentials [] match [] ","credentials [] match ","URI  parse  path= ","URI  parse  path "]}," Fog Rackspace NetworkingV2 Real deprecation_warnings":{"type":"method","name":"deprecation_warnings","children":[],"call":["Fog Logger  deprecation ","@identity_service service_catalog display_service_regions "," service_name ","@identity_service service_catalog "," v2_authentication? ","(const nil :NETWORKS_DFW_URL) include? ","options [] ","@identity_service service_catalog display_service_@identity_service service_catalog display_service_regions  "]}," Fog Rackspace NetworkingV2 Real setup_custom_endpoint":{"type":"method","name":"setup_custom_endpoint","children":[],"call":["options [] "," v2_authentication? ","Fog Rackspace  normalize_url "]}," Fog Rackspace NetworkingV2 Real endpoint_uri":{"type":"method","name":"endpoint_uri","children":[],"call":[]}," Fog Rackspace NetworkingV2 Real region":{"type":"method","name":"region","children":[],"call":[]}," Fog Rackspace NetworkingV2 Real request_id_header":{"type":"method","name":"request_id_header","children":[],"call":[]}," Fog Rackspace NetworkingV2 Real service_name":{"type":"method","name":"service_name","children":[],"call":[]}," Fog Rackspace NetworkingV2 Real authenticate":{"type":"method","name":"authenticate","children":[],"call":[]}," Fog Rackspace NetworkingV2 Real request":{"type":"method","name":"request","children":[],"call":[" raise ","ServiceError  slurp ","InternalServerError  slurp ","BadRequest  slurp ","NotFound  slurp "]}," Fog Rackspace NetworkingV2 Real initialize":{"type":"method","name":"initialize","children":[],"call":["Fog Core Connection  new "," endpoint_uri to_s "," endpoint_uri ","options [] "," deprecation_warnings "," authenticate "," setup_custom_endpoint "]}," Fog Rackspace NetworkingV2 Mock response":{"type":"method","name":"response","children":[],"call":[" raise ","Excon Errors  status_error ","(splat\n  (send\n    (lvar :params) :[]\n    (sym :expects))) include? ! ","(splat\n  (send\n    (lvar :params) :[]\n    (sym :expects))) include? ","response status ","params [] ","params key? ","Excon Response  new ","Excon Response  new  status "]}," Fog Rackspace NetworkingV2 Mock request":{"type":"method","name":"request","children":[],"call":["Fog Mock  not_implemented "]}," Fog Rackspace NetworkingV2 Mock initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," Fog Rackspace NetworkingV2 InvalidImageStateException to_s":{"type":"method","name":"to_s","children":[],"call":[" current_state "," desired_state "]}," Fog Rackspace NetworkingV2 InvalidServerStateException to_s":{"type":"method","name":"to_s","children":[],"call":[" current_state "," desired_state "]}," Fog Rackspace NetworkingV2 InvalidStateException initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Fog Rackspace Networking Real authenticate_v1":{"type":"method","name":"authenticate_v1","children":[],"call":["credentials [] "," append_tenant_v1 ","Fog Rackspace  authenticate ","Fog Rackspace  authenticate  [] "]}," Fog Rackspace Networking Real append_tenant_v1":{"type":"method","name":"append_tenant_v1","children":[],"call":["@uri path= ","@uri path ","URI  parse ","credentials [] ","credentials [] match [] ","credentials [] match ","URI  parse  path= ","URI  parse  path "]}," Fog Rackspace Networking Real deprecation_warnings":{"type":"method","name":"deprecation_warnings","children":[],"call":["Fog Logger  deprecation ","@identity_service service_catalog display_service_regions "," service_name ","@identity_service service_catalog "," v2_authentication? ","(const nil :DFW_ENDPOINT) include? ","options [] ","@identity_service service_catalog display_service_@identity_service service_catalog display_service_regions  "]}," Fog Rackspace Networking Real setup_custom_endpoint":{"type":"method","name":"setup_custom_endpoint","children":[],"call":["options [] "," v2_authentication? ","Fog Rackspace  normalize_url "]}," Fog Rackspace Networking Real endpoint_uri":{"type":"method","name":"endpoint_uri","children":[],"call":[]}," Fog Rackspace Networking Real region":{"type":"method","name":"region","children":[],"call":[]}," Fog Rackspace Networking Real request_id_header":{"type":"method","name":"request_id_header","children":[],"call":[]}," Fog Rackspace Networking Real service_name":{"type":"method","name":"service_name","children":[],"call":[]}," Fog Rackspace Networking Real authenticate":{"type":"method","name":"authenticate","children":[],"call":[]}," Fog Rackspace Networking Real request":{"type":"method","name":"request","children":[],"call":[" raise ","ServiceError  slurp ","InternalServerError  slurp ","BadRequest  slurp ","NotFound  slurp "]}," Fog Rackspace Networking Real initialize":{"type":"method","name":"initialize","children":[],"call":["Fog Core Connection  new "," endpoint_uri to_s "," endpoint_uri ","options [] "," deprecation_warnings "," authenticate "," setup_custom_endpoint "]}," Fog Rackspace Networking Mock response":{"type":"method","name":"response","children":[],"call":[" raise ","Excon Errors  status_error ","(splat\n  (send\n    (lvar :params) :[]\n    (sym :expects))) include? ! ","(splat\n  (send\n    (lvar :params) :[]\n    (sym :expects))) include? ","response status ","params [] ","params key? ","Excon Response  new ","Excon Response  new  status "]}," Fog Rackspace Networking Mock request":{"type":"method","name":"request","children":[],"call":["Fog Mock  not_implemented "]}," Fog Rackspace Networking Mock initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," Fog Rackspace Networking InvalidImageStateException to_s":{"type":"method","name":"to_s","children":[],"call":[" current_state "," desired_state "]}," Fog Rackspace Networking InvalidServerStateException to_s":{"type":"method","name":"to_s","children":[],"call":[" current_state "," desired_state "]}," Fog Rackspace Networking InvalidStateException initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Fog Rackspace Monitoring Real authenticate":{"type":"method","name":"authenticate","children":[],"call":[]}," Fog Rackspace Monitoring Real request":{"type":"method","name":"request","children":[],"call":[" raise ","ServiceError  slurp ","InternalServerError  slurp ","ServiceUnavailable  slurp ","NotFound  slurp ","Conflict  slurp ","BadRequest  slurp "]}," Fog Rackspace Monitoring Real request_id_header":{"type":"method","name":"request_id_header","children":[],"call":[]}," Fog Rackspace Monitoring Real endpoint_uri":{"type":"method","name":"endpoint_uri","children":[],"call":[]}," Fog Rackspace Monitoring Real reload":{"type":"method","name":"reload","children":[],"call":["@connection reset "]}," Fog Rackspace Monitoring Real initialize":{"type":"method","name":"initialize","children":[],"call":["Fog Core Connection  new "," endpoint_uri to_s "," endpoint_uri ","options [] "," authenticate ","Fog Rackspace  normalize_url "]}," Fog Rackspace Monitoring Real region":{"type":"method","name":"region","children":[],"call":[]}," Fog Rackspace Monitoring Real service_name":{"type":"method","name":"service_name","children":[],"call":[]}," Fog Rackspace Monitoring Mock request":{"type":"method","name":"request","children":[],"call":["Fog Mock  not_implemented "]}," Fog Rackspace Monitoring Mock initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Fog Rackspace Monitoring BadRequest slurp":{"type":"method","name":"slurp","children":[],"call":[]}," Fog Storage Rackspace Metadata to_header_key":{"type":"method","name":"to_header_key","children":[],"call":["prefix + ","key to_s split map join ","key to_s split map ","key to_s split ","key to_s "," meta_prefix "," remove_meta_prefix ","value nil? "," meta_prefix  + "," remove_meta_prefix  + "," meta_ meta_prefix  "," meta_ remove_meta_prefix  "," remove_meta_ meta_prefix  "," remove_meta_ remove_meta_prefix  "]}," Fog Storage Rackspace Metadata to_key":{"type":"method","name":"to_key","children":[],"call":["str to_sym ","a join ","a map! ","m [] split ","m [] ","key match "," meta_prefix_regex ","a join  to_sym ","str to_sykey match  ","m [] split  join ","m [] split  mm [] split p! ","a key match ap! ","key match  [] split ","key match  [] ","key mm [] split tch ","key key match atch "," metm [] split _prefix_regex "," key match eta_prefix_regex "]}," Fog Storage Rackspace Metadata meta_prefix_regex":{"type":"method","name":"meta_prefix_regex","children":[],"call":[" raise "," parent_class "," file? "," directory? "]}," Fog Storage Rackspace Metadata remove_meta_prefix":{"type":"method","name":"remove_meta_prefix","children":[],"call":[" raise "," parent_class "," file? "," directory? "]}," Fog Storage Rackspace Metadata meta_prefix":{"type":"method","name":"meta_prefix","children":[],"call":[" raise "," parent_class "," file? "," directory? "]}," Fog Storage Rackspace Metadata parent_class":{"type":"method","name":"parent_class","children":[],"call":[" parent class "," parent "," parent is_a? "]}," Fog Storage Rackspace Metadata file?":{"type":"method","name":"file?","children":[],"call":["(const\n  (const\n    (const\n      (const nil :Fog) :Storage) :Rackspace) :File) include? "," parent_class "]}," Fog Storage Rackspace Metadata directory?":{"type":"method","name":"directory?","children":[],"call":["(const\n  (const\n    (const\n      (const nil :Fog) :Storage) :Rackspace) :Directory) include? "," parent_class "]}," Fog Storage Rackspace Metadata method_missing":{"type":"method","name":"method_missing","children":[],"call":[" data send "," data "]}," Fog Storage Rackspace Metadata respond_to?":{"type":"method","name":"respond_to?","children":[],"call":[" data respond_to? "," data "]}," Fog Storage Rackspace Metadata from_headers":{"type":"method","name":"from_headers","children":[],"call":[]}," Fog Storage Rackspace Metadata []=":{"type":"method","name":"[]=","children":[],"call":["@data []= ","key to_sym ","@data [] ","key to_s "]}," Fog Storage Rackspace Metadata []":{"type":"method","name":"[]","children":[],"call":["@data [] ","key to_sym ","key to_s "]}," Fog Storage Rackspace Metadata to_headers":{"type":"method","name":"to_headers","children":[],"call":["headers []= "," to_header_key ","h each_pair "," data merge "," data "," data merge eaders []= "," to_header_ to_header_key  "," to_ data merge eader_key "," data merge  eac data merge _pair "]}," Fog Storage Rackspace Metadata delete":{"type":"method","name":"delete","children":[],"call":["@deleted_hash []= "," data delete "," data "]}," Fog Storage Rackspace Metadata initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Fog Storage Rackspace Files file_url":{"type":"method","name":"file_url","children":[],"call":[]}," Fog Storage Rackspace Files new":{"type":"method","name":"new","children":[],"call":["(pair\n  (sym :directory)\n  (send nil :directory)) merge! "," directory "," requires "]}," Fog Storage Rackspace Files head":{"type":"method","name":"head","children":[],"call":[" new ","data headers merge ","data headers "," service head_object "," directory key "," directory "," service "," requires "," service head_object  headers merge "," service head_object  headers "]}," Fog Storage Rackspace Files get_https_url":{"type":"method","name":"get_https_url","children":[],"call":[" service get_object_https_url "," directory key "," directory "," service "]}," Fog Storage Rackspace Files get_http_url":{"type":"method","name":"get_http_url","children":[],"call":[" service get_object_http_url "," directory key "," directory "," service "," requires "]}," Fog Storage Rackspace Files get_url":{"type":"method","name":"get_url","children":[],"call":["Files  file_url "," directory public_url "," directory "," requires "]}," Fog Storage Rackspace Files get":{"type":"method","name":"get","children":[],"call":[" new ","data headers merge ","data body ","data headers ","Metadata  from_headers "," service get_object "," directory key "," directory "," service "," requires "," service get_object  headers merge "," service get_object  body "," service get_object  headers ","Meta service get_object   from_headers "]}," Fog Storage Rackspace Files each":{"type":"method","name":"each","children":[],"call":["subset each_file_this_page ","subset all ","subset last key ","subset last ","subset length == ","subset limit ","subset length "," dup all "," dup "," block_given? ! "," block_given? ","subset all  each_file_this_page "," dup all  each_file_this_page ","subset all  all "," dup all  all ","subset all  last key "," dup all  last key ","subset all  last "," dup all  last ","subset all  length == "," dup all  length == ","subset all  limit "," dup all  limit ","subset all  length "," dup all  length "]}," Fog Storage Rackspace Files all":{"type":"method","name":"all","children":[],"call":[" load ","file attributes ","parent files map ","parent files "," directory collection get "," directory key "," directory "," directory collection "," merge_attributes ","(pair\n  (str \"limit\")\n  (send nil :limit)) merge! "," prefix "," path "," marker "," limit "," requires "," directory collection get  files map "," directory collection get  files "]}," Fog Storage Rackspace File update_attributes_from":{"type":"method","name":"update_attributes_from","children":[],"call":[" merge_attributes ","(str \"Content-Length\") include? ","data headers reject ","data headers "]}," Fog Storage Rackspace File save":{"type":"method","name":"save","children":[],"call":["Fog Storage  get_content_type "," body "," content_type "," content_length= ","Fog Storage  get_body_size "," update_attributes_from "," service put_object "," key "," directory key "," directory "," service ","options merge! "," metadata to_headers "," metadata ","options []= "," delete_after "," delete_at "," content_encoding "," etag "," content_disposition "," origin "," access_control_allow_origin "," requires "," meta service put_object  to_headers "," meta service put_object  "]}," Fog Storage Rackspace File purge_from_cdn":{"type":"method","name":"purge_from_cdn","children":[],"call":[" service cdn purge "," service cdn "," service "," public? "]}," Fog Storage Rackspace File streaming_url":{"type":"method","name":"streaming_url","children":[],"call":["Files  file_url "," key "," directory streaming_url "," directory "]}," Fog Storage Rackspace File ios_url":{"type":"method","name":"ios_url","children":[],"call":["Files  file_url "," key "," directory ios_url "," directory "]}," Fog Storage Rackspace File public_url":{"type":"method","name":"public_url","children":[],"call":["Files  file_url "," key "," directory public_url "," directory "]}," Fog Storage Rackspace File url":{"type":"method","name":"url","children":[],"call":[" service get_object_http_url "," key "," directory key "," directory "," service "," service get_object_https_url "," service ssl? "," requires "]}," Fog Storage Rackspace File public?":{"type":"method","name":"public?","children":[],"call":[" directory public? "," directory "]}," Fog Storage Rackspace File last_modified=":{"type":"method","name":"last_modified=","children":[],"call":[" attributes []= ","Time  parse "," attributes ","Time  utc ","d [] ","Date  _strptime ","obj is_a? ","obj == ","obj nil? ","Date  _strptime  [] "]}," Fog Storage Rackspace File owner=":{"type":"method","name":"owner=","children":[],"call":[" attributes []= ","new_owner [] "," attributes "]}," Fog Storage Rackspace File metadata":{"type":"method","name":"metadata","children":[],"call":["Fog Storage Rackspace Metadata  new "," attributes [] "," attributes "]}," Fog Storage Rackspace File metadata=":{"type":"method","name":"metadata=","children":[],"call":[" attributes [] "," attributes "," attributes []= ","Fog Storage Rackspace Metadata  new ","hash is_a? "]}," Fog Storage Rackspace File destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_object "," key "," directory key "," directory "," service "," requires "]}," Fog Storage Rackspace File copy":{"type":"method","name":"copy","children":[],"call":["target_directory files get ","target_directory files "," service directories new "," service directories "," service "," service copy_object "," key "," directory key "," directory "," content_encoding ","options [] "," origin "," access_control_allow_origin "," content_type "," requires "," service directories new  files get "," service directories new  files "]}," Fog Storage Rackspace File body=":{"type":"method","name":"body=","children":[],"call":[" attributes []= "," attributes "]}," Fog Storage Rackspace File body":{"type":"method","name":"body","children":[],"call":[" collection get body "," collection get "," identity "," collection "," last_modified "," attributes [] "," attributes "]}," Fog Storage Rackspace Directory create_or_update_container":{"type":"method","name":"create_or_update_container","children":[],"call":[" service put_container "," key "," service "," metadata to_headers "," metadata "," attributes [] nil? "," attributes [] "," attributes "," metadata to_ metadata to_headers  "]}," Fog Storage Rackspace Directory urls":{"type":"method","name":"urls","children":[],"call":[" service cdn urls "," service cdn "," service "," cdn_enabled? "," requires "]}," Fog Storage Rackspace Directory cdn_enabled?":{"type":"method","name":"cdn_enabled?","children":[],"call":[" service cdn enabled? "," service cdn "," service "]}," Fog Storage Rackspace Directory save":{"type":"method","name":"save","children":[],"call":[" raise ","Fog Storage Rackspace Error  new "," public? "," service cdn publish_container "," service cdn "," service "," cdn_enabled? "," create_or_update_container "," requires "]}," Fog Storage Rackspace Directory streaming_url":{"type":"method","name":"streaming_url","children":[],"call":[" urls [] "," urls "]}," Fog Storage Rackspace Directory ios_url":{"type":"method","name":"ios_url","children":[],"call":[" urls [] "," urls "]}," Fog Storage Rackspace Directory public_url":{"type":"method","name":"public_url","children":[],"call":[" urls [] "," urls "," cdn_cname "," service ssl? "," service "," urls empty? "]}," Fog Storage Rackspace Directory reload":{"type":"method","name":"reload","children":[],"call":[]}," Fog Storage Rackspace Directory public?":{"type":"method","name":"public?","children":[],"call":[" public_url "," key ","@public nil? "]}," Fog Storage Rackspace Directory files":{"type":"method","name":"files","children":[],"call":["Fog Storage Rackspace Files  new "," service "]}," Fog Storage Rackspace Directory destroy":{"type":"method","name":"destroy","children":[],"call":[" service cdn publish_container "," service cdn "," service "," cdn_enabled? "," service delete_container "," key "," requires "]}," Fog Storage Rackspace Directory metadata":{"type":"method","name":"metadata","children":[],"call":[" attributes [] "," attributes "," attributes []= ","Fog Storage Rackspace Metadata  from_headers ","response headers "," service head_container "," key "," service "," service head_container  headers "]}," Fog Storage Rackspace Directory metadata=":{"type":"method","name":"metadata=","children":[],"call":[" attributes [] "," attributes "," attributes []= ","Fog Storage Rackspace Metadata  new ","hash is_a? "]}," Fog Storage Rackspace Directories get":{"type":"method","name":"get","children":[],"call":["directory files << ","directory files new ","directory files ","data body each ","data body ","directory files instance_variable_set ","directory files merge_attributes ","directory metadata= ","Metadata  from_headers ","data headers ","directory merge_attributes ","(str \"X-Container-Bytes-Used\") include? "," new ","options [] "," service get_container "," service "," new  files << "," new  files new "," new  files "," service get_container  body each "," service get_container  body "," new  files instance_variable_set "," new  files merge_attributes "," new  metadata= ","directory meta service get_container = ","Meta service get_container   from_headers "," service get_container  headers "," new  merge_attributes "]}," Fog Storage Rackspace Directories all":{"type":"method","name":"all","children":[],"call":[" load "," service get_containers body "," service get_containers "," service "]}," Fog Storage Rackspace Account reload":{"type":"method","name":"reload","children":[],"call":[" merge_attributes ","response headers "," service head_containers "," service "," service head_containers  headers "]}," Fog Storage Rackspace Account save":{"type":"method","name":"save","children":[],"call":[" service post_set_meta_temp_url_key "," meta_temp_url_key "," service "]}," Fog Rackspace Queues Queues get":{"type":"method","name":"get","children":[],"call":[" new "," service get_queue "," service "]}," Fog Rackspace Queues Queues all":{"type":"method","name":"all","children":[],"call":[" load "," service list_queues body [] "," service list_queues body "," service list_queues "," service "," service list_queues status == "," service list_queues status "]}," Fog Rackspace Queues Queue destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_queue "," name "," service "," requires "]}," Fog Rackspace Queues Queue save":{"type":"method","name":"save","children":[],"call":[" service create_queue "," name "," service "," requires "]}," Fog Rackspace Queues Queue dequeue":{"type":"method","name":"dequeue","children":[],"call":["message destroy "," block_given? ","claim messages first ","claim messages "," claims create ","options merge "," claims ","claim messages first  destroy ","claim claim messages first s first "," claims create  messages first ","claim claim messages first s "," claims create  messages ","  claims create s create ","  claims create s "]}," Fog Rackspace Queues Queue enqueue":{"type":"method","name":"enqueue","children":[],"call":[" messages create ","options merge "," messages "]}," Fog Rackspace Queues Queue claims":{"type":"method","name":"claims","children":[],"call":["Fog Rackspace Queues Claims  new "," service "]}," Fog Rackspace Queues Queue stats":{"type":"method","name":"stats","children":[],"call":[" service get_queue_stats body [] "," service get_queue_stats body "," service get_queue_stats "," name "," service "]}," Fog Rackspace Queues Queue messages":{"type":"method","name":"messages","children":[],"call":["Fog Rackspace Queues Messages  new "," service client_id "," service "]}," Fog Rackspace Queues Messages options":{"type":"method","name":"options","children":[],"call":["data []= "," include_claimed to_s "," include_claimed "," include_claimed nil? "," marker to_s "," marker "," marker nil? "," limit to_s "," limit "," limit nil? "," echo to_s "," echo "," echo nil? "]}," Fog Rackspace Queues Messages get":{"type":"method","name":"get","children":[],"call":[" new "," service get_message body "," service get_message "," queue name "," queue "," client_id "," service "," requires "]}," Fog Rackspace Queues Messages all":{"type":"method","name":"all","children":[],"call":[" load ","response body [] ","response body ","response status == ","response status "," service list_messages "," options "," queue name "," queue "," client_id "," service "," requires "," service list_messages  body [] "," service list_messages  body "," service list_messages  status == "," service list_messages  status "]}," Fog Rackspace Queues Message client_id":{"type":"method","name":"client_id","children":[],"call":[" collection client_id "," collection "]}," Fog Rackspace Queues Message queue":{"type":"method","name":"queue","children":[],"call":[" collection queue "," collection "]}," Fog Rackspace Queues Message destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_message "," identity "," queue name "," queue "," service ","options []= "," claim_id "," claim_id nil? "," requires "]}," Fog Rackspace Queues Message save":{"type":"method","name":"save","children":[],"call":[" href= ","data [] [] ","data [] "," service create_message body "," service create_message "," ttl "," body "," queue name "," queue "," client_id "," service "," raise "," identity nil? "," identity "," requires "," service create_message body  [] [] "," service create_message body  [] "]}," Fog Rackspace Queues Message identity":{"type":"method","name":"identity","children":[],"call":["match [] "," href match "," href "," href match  [] "," href  href match  "]}," Fog Rackspace Queues Claims get":{"type":"method","name":"get","children":[],"call":[" new "," service get_claim body "," service get_claim "," queue identity "," queue "," service "," requires "]}," Fog Rackspace Queues Claims create":{"type":"method","name":"create","children":[],"call":["object save "," new "," new  save "]}," Fog Rackspace Queues Claims all":{"type":"method","name":"all","children":[],"call":[]}," Fog Rackspace Queues Claim update":{"type":"method","name":"update","children":[],"call":[" service update_claim "," ttl "," identity "," queue identity "," queue "," service "," requires "]}," Fog Rackspace Queues Claim create":{"type":"method","name":"create","children":[],"call":[" collection << "," collection "," messages= ","response body "," identity= ","response get_header split last ","response get_header split ","response get_header ","(int 200) include? ","response status "," service create_claim "," grace "," ttl "," queue identity "," queue "," service ","options []= "," limit "," limit nil? "," requires "," service create_claim  body "," service create_claim  get_header split last "," service create_claim  get_header split "," service create_claim  get_header "," service create_claim  status "]}," Fog Rackspace Queues Claim queue":{"type":"method","name":"queue","children":[],"call":[" collection queue "," collection "]}," Fog Rackspace Queues Claim initialize":{"type":"method","name":"initialize","children":[],"call":["new_attributes delete "]}," Fog Rackspace Queues Claim messages=":{"type":"method","name":"messages=","children":[],"call":[" attributes []= ","Fog Rackspace Queues Message  new ","message merge ","(pair\n  (sym :service)\n  (send nil :service)) merge "," id "," service ","message claim_id= ","message instance_of? ","messages map "," attributes ","Fog Rackspace Queues Messages  new "," service client_id "," queue "]}," Fog Rackspace Queues Claim destroy":{"type":"method","name":"destroy","children":[],"call":[" collection delete "," collection "," service delete_claim "," identity "," queue name "," queue "," service "," requires "]}," Fog Rackspace Queues Claim save":{"type":"method","name":"save","children":[],"call":[" update "," create "," identity nil? "," identity "]}," Fog Rackspace Orchestration Templates validate":{"type":"method","name":"validate","children":[],"call":["temp description= ","data [] ","temp parameters= "," new "," service validate_template body "," service validate_template "," service "," new  description= "," service validate_template body  [] "," new  parameters= "," service validate_ new late body "," service validate_ new late "]}," Fog Rackspace Orchestration Templates get":{"type":"method","name":"get","children":[],"call":[" new "," service show_resource_template body "," service show_resource_template ","obj resource_name "," service "," service get_stack_template body "," service get_stack_template ","obj is_a? "]}," Fog Rackspace Orchestration Stacks build_info":{"type":"method","name":"build_info","children":[],"call":[" service build_info body "," service build_info "," service "]}," Fog Rackspace Orchestration Stacks preview":{"type":"method","name":"preview","children":[],"call":[" new "," service preview_stack body [] "," service preview_stack body "," service preview_stack "," service "]}," Fog Rackspace Orchestration Stacks create":{"type":"method","name":"create","children":[],"call":[" service create_stack body [] "," service create_stack body "," service create_stack "," service "]}," Fog Rackspace Orchestration Stacks adopt":{"type":"method","name":"adopt","children":[],"call":[" service create_stack "," service "]}," Fog Rackspace Orchestration Stacks get":{"type":"method","name":"get","children":[],"call":[" new "," service show_stack_details body [] "," service show_stack_details body "," service show_stack_details "," service "]}," Fog Rackspace Orchestration Stacks all":{"type":"method","name":"all","children":[],"call":[" load "," service list_stack_data body [] "," service list_stack_data body "," service list_stack_data "," service "," service list_stack_ service list_stack_data body []  body [] "," service list_stack_ service list_stack_data body []  body "," service list_stack_ service list_stack_data body []  "]}," Fog Rackspace Orchestration Stack delete":{"type":"method","name":"delete","children":[],"call":[" service delete_stack "," service "]}," Fog Rackspace Orchestration Stack abandon":{"type":"method","name":"abandon","children":[],"call":[" service abandon_stack "," service "]}," Fog Rackspace Orchestration Stack save":{"type":"method","name":"save","children":[],"call":[" service stacks create "," service stacks "," service "," service update_stack body [] "," service update_stack body "," service update_stack "," persisted? "]}," Fog Rackspace Orchestration Stack template":{"type":"method","name":"template","children":[],"call":[" service templates get "," service templates "," service "]}," Fog Rackspace Orchestration Stack events":{"type":"method","name":"events","children":[],"call":[" service events all "," service events "," service "]}," Fog Rackspace Orchestration Stack resources":{"type":"method","name":"resources","children":[],"call":[" service resources all "," service resources "," service "]}," Fog Rackspace Orchestration Stack details":{"type":"method","name":"details","children":[],"call":[" service show_stack_details body [] "," service show_stack_details body "," service show_stack_details "," id "," stack_name "," service "]}," Fog Rackspace Orchestration Resources metadata":{"type":"method","name":"metadata","children":[],"call":[" service show_resource_metadata body [] "," service show_resource_metadata body "," service show_resource_metadata "," service "]}," Fog Rackspace Orchestration Resources get":{"type":"method","name":"get","children":[],"call":[" new "," service show_resource_data body [] "," service show_resource_data body "," service show_resource_data ","stack id ","stack stack_name "," service "," first stack "," first ","stack nil? "," service show_resource_ service show_resource_data body []  body [] "," service show_resource_ service show_resource_data body []  body "," service show_resource_ service show_resource_data body []  "," first stack  id "," first stack   first stack _name "," first  first stack  "," first stack  nil? "]}," Fog Rackspace Orchestration Resources all":{"type":"method","name":"all","children":[],"call":[" load "," service list_resources body [] "," service list_resources body "," service list_resources "," service "]}," Fog Rackspace Orchestration Resources types":{"type":"method","name":"types","children":[],"call":[" service list_resource_types body [] sort "," service list_resource_types body [] "," service list_resource_types body "," service list_resource_types "," service "]}," Fog Rackspace Orchestration ResourceSchemas get":{"type":"method","name":"get","children":[],"call":[" service show_resource_schema body "," service show_resource_schema "," service "]}," Fog Rackspace Orchestration Resource template":{"type":"method","name":"template","children":[],"call":[" service templates get "," service templates "," service "]}," Fog Rackspace Orchestration Resource metadata":{"type":"method","name":"metadata","children":[],"call":[" service show_resource_metadata body [] "," service show_resource_metadata body "," service show_resource_metadata "," resource_name "," stack "," service "]}," Fog Rackspace Orchestration Resource events":{"type":"method","name":"events","children":[],"call":[" service events all "," service events "," service "]}," Fog Rackspace Orchestration Events get":{"type":"method","name":"get","children":[],"call":[" new "," service show_event_details body [] "," service show_event_details body "," service show_event_details "," service "]}," Fog Rackspace Orchestration Events all":{"type":"method","name":"all","children":[],"call":[" load "," service list_resource_events body [] "," service list_resource_events body "," service list_resource_events ","obj stack "," service "," service list_stack_events body [] "," service list_stack_events body "," service list_stack_events ","obj is_a? "]}," Fog Rackspace NetworkingV2 Subnets get":{"type":"method","name":"get","children":[],"call":[" new "," service show_subnet body [] "," service show_subnet body "," service show_subnet "," service "]}," Fog Rackspace NetworkingV2 Subnets all":{"type":"method","name":"all","children":[],"call":[" load "," service list_subnets body [] "," service list_subnets body "," service list_subnets "," service "]}," Fog Rackspace NetworkingV2 Subnet destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_subnet "," identity "," service "," requires "]}," Fog Rackspace NetworkingV2 Subnet save":{"type":"method","name":"save","children":[],"call":[" merge_attributes ","data body [] ","data body "," service update_subnet "," service "," service create_subnet "," id nil? "," id "," service update_subnet  body [] "," service create_subnet  body [] "," service update_subnet  body "," service create_subnet  body "]}," Fog Rackspace NetworkingV2 SecurityGroups get":{"type":"method","name":"get","children":[],"call":[" new "," service show_security_group body [] "," service show_security_group body "," service show_security_group "," service "]}," Fog Rackspace NetworkingV2 SecurityGroups all":{"type":"method","name":"all","children":[],"call":[" load "," service list_security_groups body [] "," service list_security_groups body "," service list_security_groups "," service "]}," Fog Rackspace NetworkingV2 SecurityGroupRules get":{"type":"method","name":"get","children":[],"call":[" new "," service show_security_group_rule body [] "," service show_security_group_rule body "," service show_security_group_rule "," service "]}," Fog Rackspace NetworkingV2 SecurityGroupRules all":{"type":"method","name":"all","children":[],"call":[" load "," service list_security_group_rules body [] "," service list_security_group_rules body "," service list_security_group_rules "," service "]}," Fog Rackspace NetworkingV2 SecurityGroupRule destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_security_group_rule "," identity "," service "," requires "]}," Fog Rackspace NetworkingV2 SecurityGroupRule save":{"type":"method","name":"save","children":[],"call":[" merge_attributes ","data body [] ","data body "," service update_security_group_rule "," service "," service create_security_group_rule "," id nil? "," id "," service update_security_group_rule  body [] "," service create_security_group_rule  body [] "," service update_security_group_rule  body "," service create_security_group_rule  body "]}," Fog Rackspace NetworkingV2 SecurityGroup destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_security_group "," identity "," service "," requires "]}," Fog Rackspace NetworkingV2 SecurityGroup save":{"type":"method","name":"save","children":[],"call":[" merge_attributes ","data body [] ","data body "," service update_security_group "," service "," service create_security_group "," id nil? "," id "," service update_security_group  body [] "," service create_security_group  body [] "," service update_security_group  body "," service create_security_group  body "]}," Fog Rackspace NetworkingV2 Ports get":{"type":"method","name":"get","children":[],"call":[" new "," service show_port body [] "," service show_port body "," service show_port "," service "]}," Fog Rackspace NetworkingV2 Ports all":{"type":"method","name":"all","children":[],"call":[" load "," service list_ports body [] "," service list_ports body "," service list_ports "," service "]}," Fog Rackspace NetworkingV2 Port destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_port "," identity "," service "," requires "]}," Fog Rackspace NetworkingV2 Port save":{"type":"method","name":"save","children":[],"call":[" merge_attributes ","data body [] ","data body "," service update_port "," service "," service create_port "," id nil? "," id "," service update_port  body [] "," service create_port  body [] "," service update_port  body "," service create_port  body "]}," Fog Rackspace NetworkingV2 Networks get":{"type":"method","name":"get","children":[],"call":[" new "," service show_network body [] "," service show_network body "," service show_network "," service "]}," Fog Rackspace NetworkingV2 Networks all":{"type":"method","name":"all","children":[],"call":[" load "," service list_networks body [] "," service list_networks body "," service list_networks "," service "]}," Fog Rackspace NetworkingV2 Network destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_network "," identity "," service "," requires "]}," Fog Rackspace NetworkingV2 Network save":{"type":"method","name":"save","children":[],"call":[" merge_attributes ","data body [] ","data body "," service update_network "," service "," service create_network "," id nil? "," id "," service update_network  body [] "," service create_network  body [] "," service update_network  body "," service create_network  body "]}," Fog Rackspace Networking VirtualInterfaces server":{"type":"method","name":"server","children":[],"call":[" raise ","server present? ","Fog Compute RackspaceV2 Server  new "," service ","obj class to_s ","obj class "]}," Fog Rackspace Networking VirtualInterfaces all":{"type":"method","name":"all","children":[],"call":["obj attributes []= ","obj attributes ","objects each "," load "," service list_virtual_interfaces body [] "," service list_virtual_interfaces body "," service list_virtual_interfaces ","server id "," service "," server ","options [] "," load  each "," server  id ","  server  "]}," Fog Rackspace Networking VirtualInterface network_id":{"type":"method","name":"network_id","children":[],"call":[" attributes [] "," attributes "," attributes [] id "," attributes [] is_a? "]}," Fog Rackspace Networking VirtualInterface server_id":{"type":"method","name":"server_id","children":[],"call":[" attributes [] "," attributes "," attributes [] id "," attributes [] is_a? "]}," Fog Rackspace Networking VirtualInterface destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_virtual_interface "," id "," server_id "," service "]}," Fog Rackspace Networking VirtualInterface create":{"type":"method","name":"create","children":[],"call":[" merge_attributes ","data body [] first ","data body [] ","data body "," service create_virtual_interface "," network_id "," server_id "," service "," service create_virtual_interface  body [] first "," service create_virtual_interface  body [] "," service create_virtual_interface  body "]}," Fog Rackspace Networking VirtualInterface save":{"type":"method","name":"save","children":[],"call":[" create "," raise ","Fog Errors Error  new "," persisted? "]}," Fog Rackspace Networking Networks get":{"type":"method","name":"get","children":[],"call":[" new "," service get_network body [] "," service get_network body "," service get_network "," service "]}," Fog Rackspace Networking Networks all":{"type":"method","name":"all","children":[],"call":[" load "," service list_networks body [] "," service list_networks body "," service list_networks "," service "]}," Fog Rackspace Networking Network destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_network "," identity "," service "," requires "]}," Fog Rackspace Networking Network save":{"type":"method","name":"save","children":[],"call":[" merge_attributes ","data body [] ","data body "," service create_network "," cidr "," label "," service "," requires "," service create_network  body [] "," service create_network  body "]}," Fog Rackspace Monitoring Notifications get":{"type":"method","name":"get","children":[],"call":[" new "," service get_notification body "," service get_notification "," service "]}," Fog Rackspace Monitoring Notifications all":{"type":"method","name":"all","children":[],"call":[" load ","data [] ","data [] [] "," service list_notifications body "," service list_notifications "," service "," service list_notifications body  [] "," service list_notifications body  [] [] "]}," Fog Rackspace Monitoring Notification destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_notification "," id "," service "," requires "]}," Fog Rackspace Monitoring Notification save":{"type":"method","name":"save","children":[],"call":[" id= ","data headers [] ","data headers "," service create_notification "," params "," service "," service update_notification "," identity "," service create_notification  headers [] "," service update_notification  headers [] "," service create_notification  headers "," service update_notification  headers "]}," Fog Rackspace Monitoring Notification params":{"type":"method","name":"params","children":[],"call":["value nil? ","options reject "," type "," details "," label "]}," Fog Rackspace Monitoring Metrics new":{"type":"method","name":"new","children":[],"call":["(pair\n  (sym :check)\n  (send nil :check)) merge! "," check "," requires "]}," Fog Rackspace Monitoring Metrics all":{"type":"method","name":"all","children":[],"call":[" load "," service list_metrics body [] "," service list_metrics body "," service list_metrics "," check id "," check "," check entity id "," check entity "," service "," requires "]}," Fog Rackspace Monitoring Metric datapoints":{"type":"method","name":"datapoints","children":[],"call":["Fog Rackspace Monitoring DataPoints  new "," service "]}," Fog Rackspace Monitoring Entity destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_entity "," id "," service "," requires "]}," Fog Rackspace Monitoring Entity alarms":{"type":"method","name":"alarms","children":[],"call":["Fog Rackspace Monitoring Alarms  new "," service "]}," Fog Rackspace Monitoring Entity checks":{"type":"method","name":"checks","children":[],"call":["Fog Rackspace Monitoring Checks  new "," service "]}," Fog Rackspace Monitoring Entity save":{"type":"method","name":"save","children":[],"call":[" id= ","data headers [] ","data headers "," service create_entity "," params "," service "," service update_entity "," identity "," service create_entity  headers [] "," service update_entity  headers [] "," service create_entity  headers "," service update_entity  headers "]}," Fog Rackspace Monitoring Entity params":{"type":"method","name":"params","children":[],"call":["value nil? ","options reject "," agent_id "," ip_addresses "," metadata "," label "]}," Fog Rackspace Monitoring Entities load_all":{"type":"method","name":"load_all","children":[],"call":["en alarms load ","object [] ","en alarms ","en checks load ","en checks "," << "," new "," clear "," new  alarms load "," new  alarms "," new  checks load "," new  checks "]}," Fog Rackspace Monitoring Entities overview":{"type":"method","name":"overview","children":[],"call":[" load_all ","body [] "," marker= ","body [] [] "," service list_overview body "," service list_overview "," service "," service list_overview body  [] "," service list_overview body  [] [] "," service list_overview  service list_overview body  "]}," Fog Rackspace Monitoring Entities get":{"type":"method","name":"get","children":[],"call":[" new "," service get_entity body "," service get_entity "," service "]}," Fog Rackspace Monitoring Entities all":{"type":"method","name":"all","children":[],"call":[" load ","data [] "," marker= ","data [] [] "," service list_entities body "," service list_entities "," service "," service list_entities body  [] "," service list_entities body  [] [] "]}," Fog Rackspace Monitoring DataPoints new":{"type":"method","name":"new","children":[],"call":["(pair\n  (sym :metric)\n  (send nil :metric)) merge! "," metric "," requires "]}," Fog Rackspace Monitoring DataPoints fetch":{"type":"method","name":"fetch","children":[],"call":[" load "," service list_data_points body [] "," service list_data_points body "," service list_data_points "," metric name "," metric "," metric check id "," metric check "," metric check entity id "," metric check entity "," service ","options []= ","options [] upcase ","options [] ","Time  now to_i * ","Time  now to_i ","Time  now ","(send\n  (send\n    (send\n      (const nil :Time) :now) :to_i) :*\n  (int 1000)) - ","3600 * "," requires "," service list_ service list_data_points body [] _points body [] "," service list_ service list_data_points body [] _points body "," service list_ service list_data_points body [] _points "]}," Fog Rackspace Monitoring DataPoints all":{"type":"method","name":"all","children":[],"call":[" fetch "]}," Fog Rackspace Monitoring Checks create":{"type":"method","name":"create","children":[],"call":["(pair\n  (sym :entity)\n  (send nil :entity)) merge! "," entity "," requires ","attributes [] "]}," Fog Rackspace Monitoring Checks new":{"type":"method","name":"new","children":[],"call":["(pair\n  (sym :entity)\n  (send nil :entity)) merge! "," entity "," requires ","attributes [] "]}," Fog Rackspace Monitoring Checks get":{"type":"method","name":"get","children":[],"call":[" new "," service get_check body "," service get_check "," entity identity "," entity "," service "," requires "]}," Fog Rackspace Monitoring Checks all":{"type":"method","name":"all","children":[],"call":[" load ","data [] "," marker= ","data [] [] "," service list_checks body "," service list_checks "," entity identity "," entity "," service "," requires "," service list_checks body  [] "," service list_checks body  [] [] "]}," Fog Rackspace Monitoring CheckTypes new":{"type":"method","name":"new","children":[],"call":[" merge! "]}," Fog Rackspace Monitoring CheckTypes all":{"type":"method","name":"all","children":[],"call":[" load "," service list_check_types body [] "," service list_check_types body "," service list_check_types "," service "]}," Fog Rackspace Monitoring Check metrics":{"type":"method","name":"metrics","children":[],"call":["Fog Rackspace Monitoring Metrics  new "," service "]}," Fog Rackspace Monitoring Check destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_check "," id "," entity id "," entity "," service "," requires "]}," Fog Rackspace Monitoring Check save":{"type":"method","name":"save","children":[],"call":[" id= ","data headers [] ","data headers "," service create_check "," entity id "," entity "," service "," params "," type "," requires "," service update_check "," identity "," service create_check  headers [] "," service update_check  headers [] "," service create_check  headers "," service update_check  headers "]}," Fog Rackspace Monitoring Check params":{"type":"method","name":"params","children":[],"call":["value nil? ","h reject ","(pair\n  (str \"label\")\n  (send nil :label)) merge "," disabled "," monitoring_zones_poll "," details "," timeout "," period "," target_hostname "," target_resolver "," target_alias "," metadata "," label ","(pair\n  (str \"label\")\n  (send nil :label)) merge  reject "," target_(pair\n  (str \"label\")\n  (send nil :label)) merge ostname "]}," Fog Rackspace Monitoring Check entity=":{"type":"method","name":"entity=","children":[],"call":[" attributes []= ","Entity  new ","obj is_a? "," attributes "]}," Fog Rackspace Monitoring Base compare?":{"type":"method","name":"compare?","children":[],"call":["remain empty? ","b_o [] === ","b_o [] ","a_o reject ","b params "," params ","b params  [] === ","b params  [] "," params  reject "]}," Fog Rackspace Monitoring Base hash":{"type":"method","name":"hash","children":[],"call":["Digest MD5  hexdigest ","keys + ","(send\n  (send\n    (lvar :attrs) :values) :map) sort join ","(send\n  (send\n    (lvar :attrs) :values) :map) sort ","sym to_s ","attrs values map ","attrs values ","(send\n  (send\n    (lvar :attrs) :keys) :map) sort join ","(send\n  (send\n    (lvar :attrs) :keys) :map) sort ","attrs keys map ","attrs keys ","value kind_of? ","attrs delete_if ","(sym :created_at) include? "," attributes dup "," attributes ","(send\n  (send\n    (lvar :attrs) :keys) :map) sort join  + ","(send\n  (send\n    (lvar :attrs) :(send\n  (send\n    (lvar :attrs) :values) :map) sort join ) :map) sort join ","(send\n  (send\n    (lvar : attributes dup ) :values) :map) sort join ","(send\n  (send\n    (lvar :attrs) :(send\n  (send\n    (lvar :attrs) :values) :map) sort join ) :map) sort ","(send\n  (send\n    (lvar : attributes dup ) :values) :map) sort ","attrs (send\n  (send\n    (lvar :attrs) :values) :map) sort join  map "," attributes dup  values map ","attrs (send\n  (send\n    (lvar :attrs) :values) :map) sort join  "," attributes dup  values ","(send\n  (send\n    (lvar :attrs) :(send\n  (send\n    (lvar :attrs) :keys) :map) sort join ) :map) sort join ","(send\n  (send\n    (lvar : attributes dup ) :keys) :map) sort join ","(send\n  (send\n    (lvar :attrs) :(send\n  (send\n    (lvar :attrs) :keys) :map) sort join ) :map) sort ","(send\n  (send\n    (lvar : attributes dup ) :keys) :map) sort ","attrs (send\n  (send\n    (lvar :attrs) :keys) :map) sort join  map "," attributes dup  keys map ","attrs (send\n  (send\n    (lvar :attrs) :keys) :map) sort join  "," attributes dup  keys "," attributes dup  delete_if "]}," Fog Rackspace Monitoring Alarms create":{"type":"method","name":"create","children":[],"call":["(pair\n  (sym :entity)\n  (send nil :entity)) merge! "," entity "," requires "]}," Fog Rackspace Monitoring Alarms new":{"type":"method","name":"new","children":[],"call":["(pair\n  (sym :entity)\n  (send nil :entity)) merge! "," entity "," requires "]}," Fog Rackspace Monitoring Alarms get":{"type":"method","name":"get","children":[],"call":[" new "," service get_alarm body "," service get_alarm "," entity identity "," entity "," service "," requires "]}," Fog Rackspace Monitoring Alarms all":{"type":"method","name":"all","children":[],"call":[" load ","data [] "," marker= ","data [] [] "," service list_alarms body "," service list_alarms "," entity identity "," entity "," service "," requires "," service list_alarms body  [] "," service list_alarms body  [] [] "]}," Fog Rackspace Monitoring AlarmExamples evaluate":{"type":"method","name":"evaluate","children":[],"call":[" new "," service evaluate_alarm_example body "," service evaluate_alarm_example "," service "]}," Fog Rackspace Monitoring AlarmExamples get":{"type":"method","name":"get","children":[],"call":[" new "," service get_alarm_example body "," service get_alarm_example "," service "]}," Fog Rackspace Monitoring AlarmExamples all":{"type":"method","name":"all","children":[],"call":[" load "," service list_alarm_examples body [] "," service list_alarm_examples body "," service list_alarm_examples "," service "]}," Fog Rackspace Monitoring AlarmExample bound?":{"type":"method","name":"bound?","children":[],"call":[" bound_criteria nil? ! "," bound_criteria nil? "," bound_criteria "]}," Fog Rackspace Monitoring Alarm destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_alarm "," id "," entity id "," entity "," service "," requires "]}," Fog Rackspace Monitoring Alarm save":{"type":"method","name":"save","children":[],"call":[" id= ","data headers [] ","data headers "," service create_alarm "," entity id "," entity "," service "," params "," check id "," check "," check_type "," service update_alarm "," identity "," requires "," service create_alarm  headers [] "," service create_alarm  headers "]}," Fog Rackspace Monitoring Alarm params":{"type":"method","name":"params","children":[],"call":["value nil? ","h reject ","(pair\n  (str \"disabled\")\n  (send nil :disabled)) merge "," notification_plan_id "," criteria "," label "," disabled ","(pair\n  (str \"disabled\")\n  (send nil :disabled)) merge  reject "]}," Fog Rackspace Monitoring Alarm check=":{"type":"method","name":"check=","children":[],"call":[" attributes []= ","Check  new ","obj is_a? "," attributes "]}," Fog Rackspace Monitoring Alarm entity=":{"type":"method","name":"entity=","children":[],"call":[" attributes []= ","Entity  new ","obj is_a? "," attributes "]}," Fog Rackspace Monitoring AgentTokens get":{"type":"method","name":"get","children":[],"call":[" new "," service get_agent_token body "," service get_agent_token "," service "]}," Fog Rackspace Monitoring AgentTokens all":{"type":"method","name":"all","children":[],"call":[" load ","body [] "," marker= ","body [] [] "," service list_agent_tokens body "," service list_agent_tokens "," service "," clear "," service list_agent_tokens body  [] "," service list_agent_tokens body  [] [] "," service list_agent_tokens  service list_agent_tokens body  "]}," Fog Rackspace Monitoring AgentToken destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_agent_token "," id "," service "," requires "]}," Fog Rackspace Monitoring AgentToken save":{"type":"method","name":"save","children":[],"call":[" id= ","data headers [] ","data headers "," service create_agent_token "," params "," service "," raise ","NotImplementedError  new "," identity "," service create_agent_token  headers [] "," service create_agent_token  headers "]}," Fog Rackspace Monitoring AgentToken params":{"type":"method","name":"params","children":[],"call":["value nil? ","options reject "," token "," label "]}," Fog Rackspace LoadBalancers VirtualIps all_raw":{"type":"method","name":"all_raw","children":[],"call":[" service list_virtual_ips body [] "," service list_virtual_ips body "," service list_virtual_ips "," load_balancer id "," load_balancer "," service "," requires "]}," Fog Rackspace LoadBalancers VirtualIps get":{"type":"method","name":"get","children":[],"call":[" new ","(send\n  (send nil :all_raw) :select) first ","virtual_ip [] == ","virtual_ip [] "," all_raw select "," all_raw "]}," Fog Rackspace LoadBalancers VirtualIps all":{"type":"method","name":"all","children":[],"call":[" load "," all_raw "]}," Fog Rackspace LoadBalancers VirtualIp load_balancer":{"type":"method","name":"load_balancer","children":[],"call":[" collection load_balancer "," collection "]}," Fog Rackspace LoadBalancers VirtualIp save":{"type":"method","name":"save","children":[],"call":[" merge_attributes ","data body "," service create_virtual_ip "," type "," load_balancer id "," load_balancer "," service "," requires "," raise ","Fog Errors Error  new "," persisted? "," service create_virtual_ip  body "]}," Fog Rackspace LoadBalancers VirtualIp destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_virtual_ip "," identity "," load_balancer identity "," load_balancer "," service "," requires "]}," Fog Rackspace LoadBalancers Nodes get":{"type":"method","name":"get","children":[],"call":[" new "," service get_node body [] "," service get_node body "," service get_node "," load_balancer id "," load_balancer "," service "," requires "," service get_ service get_node body []  body [] "," service get_ service get_node body []  body "," service get_ service get_node body []  "]}," Fog Rackspace LoadBalancers Nodes all":{"type":"method","name":"all","children":[],"call":[" load "," service list_nodes body [] "," service list_nodes body "," service list_nodes "," load_balancer id "," load_balancer "," service "," requires "]}," Fog Rackspace LoadBalancers Node update":{"type":"method","name":"update","children":[],"call":[" service update_node "," identity "," load_balancer id "," load_balancer "," service ","options []= "," type "," type nil? "," weight "," weight nil? "," condition "," requires "]}," Fog Rackspace LoadBalancers Node create":{"type":"method","name":"create","children":[],"call":[" merge_attributes ","data body [] [] ","data body [] ","data body "," service create_node "," condition "," port "," address "," load_balancer id "," load_balancer "," service ","options []= "," type "," type nil? "," weight "," weight nil? "," requires "," service create_node  body [] [] "," service create_node  body [] "," service create_node  body "]}," Fog Rackspace LoadBalancers Node load_balancer":{"type":"method","name":"load_balancer","children":[],"call":[" collection load_balancer "," collection "]}," Fog Rackspace LoadBalancers Node save":{"type":"method","name":"save","children":[],"call":[" create "," update "," persisted? "]}," Fog Rackspace LoadBalancers Node destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_node "," identity "," load_balancer identity "," load_balancer "," service "," requires "]}," Fog Rackspace LoadBalancers LoadBalancers get":{"type":"method","name":"get","children":[],"call":[" new "," service get_load_balancer body [] "," service get_load_balancer body "," service get_load_balancer "," service "," service get_ service get_load_balancer body []  body [] "," service get_ service get_load_balancer body []  body "," service get_ service get_load_balancer body []  "]}," Fog Rackspace LoadBalancers LoadBalancers all":{"type":"method","name":"all","children":[],"call":[" load "," service list_load_balancers body [] "," service list_load_balancers body "," service list_load_balancers "," service "]}," Fog Rackspace LoadBalancers LoadBalancer connection_logging=":{"type":"method","name":"connection_logging=","children":[],"call":[" attributes []= "," attributes ","new_value [] ","new_value is_a? ","new_value nil? ! ","new_value nil? "]}," Fog Rackspace LoadBalancers LoadBalancer update":{"type":"method","name":"update","children":[],"call":[" service update_load_balancer "," identity "," service "," https_redirect ! ! "," https_redirect ! "," https_redirect "," timeout "," port "," protocol "," algorithm "," name "," requires "]}," Fog Rackspace LoadBalancers LoadBalancer create":{"type":"method","name":"create","children":[],"call":[" merge_attributes ","data body [] ","data body "," service create_load_balancer "," nodes "," virtual_ips "," port "," protocol "," name "," service ","options []= "," timeout "," algorithm "," requires "," service create_load_balancer  body [] "," service create_load_balancer  body "]}," Fog Rackspace LoadBalancers LoadBalancer reset_error_page":{"type":"method","name":"reset_error_page","children":[],"call":[" service remove_error_page "," identity "," service "," requires "]}," Fog Rackspace LoadBalancers LoadBalancer error_page=":{"type":"method","name":"error_page=","children":[],"call":[" service set_error_page "," identity "," service "," requires "]}," Fog Rackspace LoadBalancers LoadBalancer error_page":{"type":"method","name":"error_page","children":[],"call":[" service get_error_page body [] [] "," service get_error_page body [] "," service get_error_page body "," service get_error_page "," identity "," service "," requires "]}," Fog Rackspace LoadBalancers LoadBalancer stats":{"type":"method","name":"stats","children":[],"call":[" service get_stats body "," service get_stats "," identity "," service "," requires "]}," Fog Rackspace LoadBalancers LoadBalancer usage":{"type":"method","name":"usage","children":[],"call":[" service get_load_balancer_usage body "," service get_load_balancer_usage "," identity "," service "," requires "]}," Fog Rackspace LoadBalancers LoadBalancer save":{"type":"method","name":"save","children":[],"call":[" create "," update "," persisted? "]}," Fog Rackspace LoadBalancers LoadBalancer ready?":{"type":"method","name":"ready?","children":[],"call":[" state == "," state "]}," Fog Rackspace LoadBalancers LoadBalancer destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_load_balancer "," identity "," service "," requires "]}," Fog Rackspace LoadBalancers LoadBalancer disable_session_persistence":{"type":"method","name":"disable_session_persistence","children":[],"call":[" service remove_session_persistence "," identity "," service "," requires "]}," Fog Rackspace LoadBalancers LoadBalancer enable_session_persistence":{"type":"method","name":"enable_session_persistence","children":[],"call":[" service set_session_persistence "," identity "," service "," requires "]}," Fog Rackspace LoadBalancers LoadBalancer session_persistence":{"type":"method","name":"session_persistence","children":[],"call":["persistence count == ","persistence count "," service get_session_persistence body [] "," service get_session_persistence body "," service get_session_persistence "," identity "," service "," requires "," service get_session_persistence body []  count == "," service get_session_persistence body []  count "," service get_session_ service get_session_persistence body []  body [] "," service get_session_ service get_session_persistence body []  body "," service get_session_ service get_session_persistence body []  "]}," Fog Rackspace LoadBalancers LoadBalancer disable_connection_throttling":{"type":"method","name":"disable_connection_throttling","children":[],"call":[" service remove_connection_throttling "," identity "," service "," requires "]}," Fog Rackspace LoadBalancers LoadBalancer enable_connection_throttling":{"type":"method","name":"enable_connection_throttling","children":[],"call":[" service set_connection_throttling "," identity "," service "," requires "]}," Fog Rackspace LoadBalancers LoadBalancer connection_throttling":{"type":"method","name":"connection_throttling","children":[],"call":["throttle count == ","throttle count "," service get_connection_throttling body [] "," service get_connection_throttling body "," service get_connection_throttling "," identity "," service "," requires "," service get_connection_throttling body []  count == "," service get_connection_throttling body []  count "]}," Fog Rackspace LoadBalancers LoadBalancer disable_health_monitor":{"type":"method","name":"disable_health_monitor","children":[],"call":[" service remove_monitor "," identity "," service "," requires "]}," Fog Rackspace LoadBalancers LoadBalancer enable_health_monitor":{"type":"method","name":"enable_health_monitor","children":[],"call":[" service set_monitor "," identity "," service "," requires "]}," Fog Rackspace LoadBalancers LoadBalancer health_monitor":{"type":"method","name":"health_monitor","children":[],"call":["monitor count == ","monitor count "," service get_monitor body [] "," service get_monitor body "," service get_monitor "," identity "," service "," requires "," service get_monitor body []  count == "," service get_monitor body []  count "," service get_ service get_monitor body []  body [] "," service get_ service get_monitor body []  body "," service get_ service get_monitor body []  "]}," Fog Rackspace LoadBalancers LoadBalancer disable_connection_logging":{"type":"method","name":"disable_connection_logging","children":[],"call":[" attributes []= "," attributes "," service set_connection_logging "," identity "," service "," requires "]}," Fog Rackspace LoadBalancers LoadBalancer enable_connection_logging":{"type":"method","name":"enable_connection_logging","children":[],"call":[" attributes []= "," attributes "," service set_connection_logging "," identity "," service "," requires "]}," Fog Rackspace LoadBalancers LoadBalancer content_caching":{"type":"method","name":"content_caching","children":[],"call":[" service get_content_caching body [] [] "," service get_content_caching body [] "," service get_content_caching body "," service get_content_caching "," identity "," service "," requires "]}," Fog Rackspace LoadBalancers LoadBalancer disable_content_caching":{"type":"method","name":"disable_content_caching","children":[],"call":[" service set_content_caching "," identity "," service "," requires "]}," Fog Rackspace LoadBalancers LoadBalancer enable_content_caching":{"type":"method","name":"enable_content_caching","children":[],"call":[" service set_content_caching "," identity "," service "," requires "]}," Fog Rackspace LoadBalancers LoadBalancer virtual_ips=":{"type":"method","name":"virtual_ips=","children":[],"call":[" virtual_ips load "," virtual_ips "]}," Fog Rackspace LoadBalancers LoadBalancer virtual_ips":{"type":"method","name":"virtual_ips","children":[],"call":["@virtual_ips clear "," persisted? ","Fog Rackspace LoadBalancers VirtualIps  new "," service ","@virtual_ips nil? ","Fog Rackspace LoadBalancers VirtualIps  new  clear ","Fog Rackspace LoadBalancers VirtualIps  new  nil? "]}," Fog Rackspace LoadBalancers LoadBalancer disable_ssl_termination":{"type":"method","name":"disable_ssl_termination","children":[],"call":[" service remove_ssl_termination "," identity "," service "," requires "]}," Fog Rackspace LoadBalancers LoadBalancer enable_ssl_termination":{"type":"method","name":"enable_ssl_termination","children":[],"call":[" service set_ssl_termination "," identity "," service "," requires "]}," Fog Rackspace LoadBalancers LoadBalancer ssl_termination":{"type":"method","name":"ssl_termination","children":[],"call":[" service get_ssl_termination body [] "," service get_ssl_termination body "," service get_ssl_termination "," identity "," service "," requires "," service get_ service get_ssl_termination body []  body [] "," service get_ service get_ssl_termination body []  body "," service get_ service get_ssl_termination body []  "]}," Fog Rackspace LoadBalancers LoadBalancer https_redirect":{"type":"method","name":"https_redirect","children":[],"call":[" service get_load_balancer body [] [] "," service get_load_balancer body [] "," service get_load_balancer body "," service get_load_balancer "," identity "," service "," requires ","@https_redirect nil? "]}," Fog Rackspace LoadBalancers LoadBalancer nodes=":{"type":"method","name":"nodes=","children":[],"call":[" nodes load "," nodes "]}," Fog Rackspace LoadBalancers LoadBalancer nodes":{"type":"method","name":"nodes","children":[],"call":["@nodes clear "," persisted? ","Fog Rackspace LoadBalancers Nodes  new "," service ","@nodes nil? ","Fog Rackspace LoadBalancers Nodes  new  clear ","Fog Rackspace LoadBalancers Nodes  new  nil? "]}," Fog Rackspace LoadBalancers LoadBalancer access_rules=":{"type":"method","name":"access_rules=","children":[],"call":[" access_rules load "," access_rules "]}," Fog Rackspace LoadBalancers LoadBalancer access_rules":{"type":"method","name":"access_rules","children":[],"call":["@access_rules clear "," persisted? ","Fog Rackspace LoadBalancers AccessRules  new "," service ","Fog Rackspace LoadBalancers AccessRules  new  clear "]}," Fog Rackspace LoadBalancers LoadBalancer initialize":{"type":"method","name":"initialize","children":[],"call":["attributes [] "]}," Fog Rackspace LoadBalancers AccessRules all_raw":{"type":"method","name":"all_raw","children":[],"call":[" service list_access_rules body [] "," service list_access_rules body "," service list_access_rules "," load_balancer id "," load_balancer "," service "," requires "]}," Fog Rackspace LoadBalancers AccessRules get":{"type":"method","name":"get","children":[],"call":[" new ","(send\n  (send nil :all_raw) :select) first ","access_rule [] == ","access_rule [] "," all_raw select "," all_raw "]}," Fog Rackspace LoadBalancers AccessRules all":{"type":"method","name":"all","children":[],"call":[" load "," all_raw "]}," Fog Rackspace LoadBalancers AccessRule load_balancer":{"type":"method","name":"load_balancer","children":[],"call":[" collection load_balancer "," collection "]}," Fog Rackspace LoadBalancers AccessRule save":{"type":"method","name":"save","children":[],"call":[" merge_attributes ","(send\n  (send\n    (send\n      (send\n        (send nil :service) :list_access_rules\n        (send\n          (send nil :load_balancer) :id)) :body) :[]\n    (str \"accessList\")) :select) first ","ar [] == "," type ","ar [] "," address "," service list_access_rules body [] select "," service list_access_rules body [] "," service list_access_rules body "," service list_access_rules "," load_balancer id "," load_balancer "," service "," service create_access_rule "," requires "," raise ","Fog Errors Error  new "," persisted? "]}," Fog Rackspace LoadBalancers AccessRule destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_access_rule "," identity "," load_balancer identity "," load_balancer "," service "," requires "]}," Fog Rackspace Identity Users get_by_name":{"type":"method","name":"get_by_name","children":[],"call":[" new "," service get_user_by_name body [] "," service get_user_by_name body "," service get_user_by_name "," service "]}," Fog Rackspace Identity Users get":{"type":"method","name":"get","children":[],"call":[" new "," service get_user_by_id body [] "," service get_user_by_id body "," service get_user_by_id "," service "]}," Fog Rackspace Identity Users all":{"type":"method","name":"all","children":[],"call":[" load "," service list_users body [] "," service list_users body "," service list_users "," service "]}," Fog Rackspace Identity User credentials":{"type":"method","name":"credentials","children":[],"call":["Fog Rackspace Identity Credentials  new "," service "]}," Fog Rackspace Identity User roles":{"type":"method","name":"roles","children":[],"call":["Fog Rackspace Identity Roles  new "," service "]}," Fog Rackspace Identity User destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_user "," identity "," service "," requires "]}," Fog Rackspace Identity User save":{"type":"method","name":"save","children":[],"call":[" merge_attributes ","data body [] ","data body "," service create_user "," password "," enabled "," email "," username "," service "," service update_user "," identity "," persisted? "," requires "," service create_user  body [] "," service update_user  body [] "," service create_user  body "," service update_user  body "]}," Fog Rackspace Identity Tenants retrieve_tenants":{"type":"method","name":"retrieve_tenants","children":[],"call":[" service list_tenants body [] "," service list_tenants body "," service list_tenants "," service "]}," Fog Rackspace Identity Tenants get":{"type":"method","name":"get","children":[],"call":[" new ","tenant [] == ","tenant [] "," retrieve_tenants find "," retrieve_tenants "]}," Fog Rackspace Identity Tenants all":{"type":"method","name":"all","children":[],"call":[" load "," retrieve_tenants "]}," Fog Rackspace Identity ServiceCatalog region_key":{"type":"method","name":"region_key","children":[],"call":["region to_s upcase ","region to_s ","region empty? ","region nil? ","region is_a? "]}," Fog Rackspace Identity ServiceCatalog matching_region?":{"type":"method","name":"matching_region?","children":[],"call":[" region_key == "," region_key ","h [] "]}," Fog Rackspace Identity ServiceCatalog network_type_key":{"type":"method","name":"network_type_key","children":[],"call":[]}," Fog Rackspace Identity ServiceCatalog from_response":{"type":"method","name":"from_response","children":[],"call":[]}," Fog Rackspace Identity ServiceCatalog reload":{"type":"method","name":"reload","children":[],"call":["@service service_catalog catalog ","@service service_catalog ","@service authenticate "]}," Fog Rackspace Identity ServiceCatalog get_endpoint":{"type":"method","name":"get_endpoint","children":[],"call":[" raise "," display_service_regions ","endpoints [] [] ","endpoints [] "," matching_region? ","endpoints size == ","endpoints size ","endpoint [] ","endpoints find ","region nil? ","endpoints size > ","endpoints empty? "," get_endpoints "," network_type_key "," region_key "," display_ region_key s "," get_endpoints  [] [] "," get_endpoints  [] "," get_endpoints  size == "," get_endpoints  size "," get_endpoints  find "," get_endpoints  size > "," get_endpoints  empty? "," get_ get_endpoints  ","  network_type_key _key "]}," Fog Rackspace Identity ServiceCatalog display_service_regions":{"type":"method","name":"display_service_regions","children":[],"call":["regions join ","e [] downcase ","e [] ","endpoints map "," get_endpoints "," get_endpoints  map "," get_ get_endpoints  "]}," Fog Rackspace Identity ServiceCatalog get_endpoints":{"type":"method","name":"get_endpoints","children":[],"call":["e [] ","h [] select ","h [] "," network_type_key ","service [] == ","service_name to_s ","service [] "," catalog find "," catalog "," network_type_ network_type_key  "]}," Fog Rackspace Identity ServiceCatalog services":{"type":"method","name":"services","children":[],"call":["s [] "," catalog map "," catalog "]}," Fog Rackspace Identity ServiceCatalog initialize":{"type":"method","name":"initialize","children":[],"call":["attributes delete "]}," Fog Rackspace Identity Roles retrieve_roles":{"type":"method","name":"retrieve_roles","children":[],"call":[" service list_user_roles body [] "," service list_user_roles body "," service list_user_roles "," user identity "," user "," service "]}," Fog Rackspace Identity Roles get":{"type":"method","name":"get","children":[],"call":[" new ","role [] == ","role [] "," retrieve_roles find "," retrieve_roles "," requires "]}," Fog Rackspace Identity Roles all":{"type":"method","name":"all","children":[],"call":[" load "," retrieve_roles "," requires "]}," Fog Rackspace Identity Credentials retrieve_credentials":{"type":"method","name":"retrieve_credentials","children":[],"call":["c [] ","raw_credentials map "," service list_credentials body [] "," service list_credentials body "," service list_credentials "," user identity "," user "," service "," service list_credentials body []  map "]}," Fog Rackspace Identity Credentials get":{"type":"method","name":"get","children":[],"call":[" new ","credential [] == ","credential [] "," retrieve_credentials find "," retrieve_credentials "," requires "]}," Fog Rackspace Identity Credentials all":{"type":"method","name":"all","children":[],"call":[" load "," retrieve_credentials "," requires "]}," Fog DNS Rackspace Zones next_params":{"type":"method","name":"next_params","children":[],"call":["CGI  parse ","uri query ","URI  parse ","next_link [] ","h [] == ","h [] ","body [] find ","body [] ","URI  parse  query "]}," Fog DNS Rackspace Zones get":{"type":"method","name":"get","children":[],"call":["z domain == ","z domain "," find "," new "," service list_domain_details body "," service list_domain_details "," service ","zone_id to_s empty? ","zone_id to_s ","zone_id nil? "]}," Fog DNS Rackspace Zones each":{"type":"method","name":"each","children":[],"call":["subset each_zone_this_page "," next_params "," merge_attributes "," dup load ","body [] "," dup "," service list_domains body "," service list_domains "," service "," block_given? "," dup load  each_zone_this_page "," next_ next_params  "," service list_domains body  [] "," service list_domains  service list_domains body  "]}," Fog DNS Rackspace Zones all":{"type":"method","name":"all","children":[],"call":[" load ","body [] "," merge_attributes "," service list_domains body "," service list_domains "," service "," clear "," service list_domains body  [] "," service list_domains  service list_domains body  "]}," Fog DNS Rackspace Zone update":{"type":"method","name":"update","children":[],"call":[" wait_for_job ","response body [] ","response body "," service modify_domain "," email "," comment "," ttl "," identity "," service "," requires "," service modify_domain  body [] "," service modify_domain  body "]}," Fog DNS Rackspace Zone create":{"type":"method","name":"create","children":[],"call":[" merge_attributes ","(send\n  (send\n    (send\n      (send\n        (lvar :response) :body) :[]\n      (str \"response\")) :[]\n    (str \"domains\")) :select) first ","domain [] == "," domain ","domain [] ","response body [] [] select ","response body [] [] ","response body [] ","response body "," wait_for_job "," service create_domains "," service "," email "," requires ","(send\n  (send\n    (send\n      (send\n        (lvar : wait_for_job ) :body) :[]\n      (str \" wait_for_job \")) :[]\n    (str \"domains\")) :select) first ","(send\n  (send\n    (send\n      (send\n        (lvar : service create_domains ) :body) :[]\n      (str \" service create_domains \")) :[]\n    (str \"domains\")) :select) first "," wait_for_job  body [] [] select "," service create_domains  body [] [] select "," wait_for_job  body [] [] "," service create_domains  body [] [] "," wait_for_job  body [] "," service create_domains  body [] "," wait_for_job  body "," service create_domains  body "]}," Fog DNS Rackspace Zone save":{"type":"method","name":"save","children":[],"call":[" create "," update "," persisted? "]}," Fog DNS Rackspace Zone records":{"type":"method","name":"records","children":[],"call":["Fog DNS Rackspace Records  new "," service "]}," Fog DNS Rackspace Zone destroy":{"type":"method","name":"destroy","children":[],"call":[" wait_for_job ","Fog  timeout ","response body [] ","response body "," service remove_domain "," identity "," service "," service remove_domain  body [] "," service remove_domain  body "]}," Fog DNS Rackspace Records new":{"type":"method","name":"new","children":[],"call":["(pair\n  (sym :zone)\n  (send nil :zone)) merge! "," zone "," requires "]}," Fog DNS Rackspace Records get":{"type":"method","name":"get","children":[],"call":[" new "," service list_record_details body "," service list_record_details "," zone identity "," zone "," service "," requires "]}," Fog DNS Rackspace Records each":{"type":"method","name":"each","children":[],"call":["subset each_record_this_page "," dup load ","body [] "," dup "," merge_attributes ","body [] size "," service list_records body "," service list_records "," zone id "," zone "," service ","entries < "," total_entries "," block_given? "," requires "," dup load  each_record_this_page "," service list_records body  [] "," service list_records body  [] size "," service list_records  service list_records body  "]}," Fog DNS Rackspace Records all":{"type":"method","name":"all","children":[],"call":[" load ","data body [] ","data body "," service list_records "," zone identity "," zone "," service "," requires "," service list_records  body [] "," service list_records  body "]}," Fog DNS Rackspace Record zone=":{"type":"method","name":"zone=","children":[],"call":[]}," Fog DNS Rackspace Record update":{"type":"method","name":"update","children":[],"call":[" wait_for_job "," service modify_record body [] "," service modify_record body "," service modify_record "," identity ","@zone identity "," service ","options []= "," ttl "," priority "," value "," type "," name "," requires "]}," Fog DNS Rackspace Record create":{"type":"method","name":"create","children":[],"call":[" merge_attributes ","record [] == "," value ","record [] "," type "," name ","IPAddr  new == ","IPAddr  new ","(str \"A\") include? "," type upcase ","response body [] [] find ","response body [] [] ","response body [] ","response body "," wait_for_job "," service add_records body [] "," service add_records body "," service add_records ","@zone identity "," service ","options []= "," priority "," ttl "," requires "," wait_for_job  body [] [] find "," wait_for_job  body [] [] "," wait_for_job  body [] "," wait_for_job  body "]}," Fog DNS Rackspace Record save":{"type":"method","name":"save","children":[],"call":[" create "," update "," persisted? "]}," Fog DNS Rackspace Record zone":{"type":"method","name":"zone","children":[],"call":[]}," Fog DNS Rackspace Record destroy":{"type":"method","name":"destroy","children":[],"call":[" wait_for_job "," service remove_record body [] "," service remove_record body "," service remove_record "," identity ","@zone identity "," service "," requires "]}," Fog DNS Rackspace Callback wait_for_job":{"type":"method","name":"wait_for_job","children":[],"call":[" raise ","Fog Errors Error  new ","retries == ","Fog DNS Rackspace CallbackError  new ","response body [] == ","response body [] ","response body "," service callback "," service ","Fog  wait_for "," service callback  body [] == "," service callback  body [] "," service callback  body "]}," Fog Rackspace Databases Users retrieve_users":{"type":"method","name":"retrieve_users","children":[],"call":[" service list_users body [] "," service list_users body "," service list_users "," instance identity "," instance "," service "," requires "]}," Fog Rackspace Databases Users get":{"type":"method","name":"get","children":[],"call":[" new ","database [] == ","database [] "," retrieve_users find "," retrieve_users "]}," Fog Rackspace Databases Users all":{"type":"method","name":"all","children":[],"call":[" load "," retrieve_users "]}," Fog Rackspace Databases User instance":{"type":"method","name":"instance","children":[],"call":[" collection instance "," collection "]}," Fog Rackspace Databases User destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_user "," identity "," instance identity "," instance "," service "," requires "]}," Fog Rackspace Databases User save":{"type":"method","name":"save","children":[],"call":[" service create_user "," host "," databases "," password "," identity "," instance identity "," instance "," service "," requires "]}," Fog Rackspace Databases Instances get":{"type":"method","name":"get","children":[],"call":[" new "," service get_instance body [] "," service get_instance body "," service get_instance "," service "]}," Fog Rackspace Databases Instances all":{"type":"method","name":"all","children":[],"call":[" load "," service list_instances body [] "," service list_instances body "," service list_instances "," service "]}," Fog Rackspace Databases Instance resize_volume":{"type":"method","name":"resize_volume","children":[],"call":[" state= "," service resize_instance_volume "," identity "," service "," requires "]}," Fog Rackspace Databases Instance resize":{"type":"method","name":"resize","children":[],"call":[" state= "," service resize_instance "," identity "," service "," requires "]}," Fog Rackspace Databases Instance restart":{"type":"method","name":"restart","children":[],"call":[" state= "," service restart_instance "," identity "," service "," requires "]}," Fog Rackspace Databases Instance enable_root_user":{"type":"method","name":"enable_root_user","children":[],"call":["data [] "," service enable_root_user body [] "," service enable_root_user body "," service enable_root_user "," identity "," service "," requires "," service enable_root_user body []  [] "]}," Fog Rackspace Databases Instance root_user_enabled?":{"type":"method","name":"root_user_enabled?","children":[],"call":[" service check_root_user body [] "," service check_root_user body "," service check_root_user "," identity "," service "," requires "]}," Fog Rackspace Databases Instance ready?":{"type":"method","name":"ready?","children":[],"call":[" state == "," state "]}," Fog Rackspace Databases Instance users":{"type":"method","name":"users","children":[],"call":["Fog Rackspace Databases Users  new "," service "]}," Fog Rackspace Databases Instance databases":{"type":"method","name":"databases","children":[],"call":["Fog Rackspace Databases Databases  new "," service "]}," Fog Rackspace Databases Instance flavor":{"type":"method","name":"flavor","children":[],"call":[" service flavors get "," flavor_id "," service flavors "," service "," requires "]}," Fog Rackspace Databases Instance destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_instance "," identity "," service "," requires "]}," Fog Rackspace Databases Instance save":{"type":"method","name":"save","children":[],"call":[" merge_attributes ","data body [] ","data body "," service create_instance "," volume_size "," flavor_id "," name "," service "," requires "," service create_instance  body [] "," service create_instance  body "]}," Fog Rackspace Databases Flavors get":{"type":"method","name":"get","children":[],"call":[" new "," service get_flavor body [] "," service get_flavor body "," service get_flavor "," service "]}," Fog Rackspace Databases Flavors all":{"type":"method","name":"all","children":[],"call":[" load "," service list_flavors body [] "," service list_flavors body "," service list_flavors "," service "]}," Fog Rackspace Databases Databases retrieve_databases":{"type":"method","name":"retrieve_databases","children":[],"call":[" service list_databases body [] "," service list_databases body "," service list_databases "," instance id "," instance "," service "," requires "," service list_ service list_databases body [] bases body [] "," service list_ service list_databases body [] bases body "," service list_ service list_databases body [] bases "]}," Fog Rackspace Databases Databases get":{"type":"method","name":"get","children":[],"call":[" new ","database [] == ","database [] "," retrieve_databases find "," retrieve_databases "]}," Fog Rackspace Databases Databases all":{"type":"method","name":"all","children":[],"call":[" load "," retrieve_databases "]}," Fog Rackspace Databases Database instance":{"type":"method","name":"instance","children":[],"call":[" collection instance "," collection "]}," Fog Rackspace Databases Database revoke_access_for":{"type":"method","name":"revoke_access_for","children":[],"call":[" service revoke_user_access "," name "," instance identity "," instance "," service "," requires "]}," Fog Rackspace Databases Database grant_access_for":{"type":"method","name":"grant_access_for","children":[],"call":[" service grant_user_access "," name "," instance identity "," instance "," service "," requires "]}," Fog Rackspace Databases Database destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_database "," identity "," instance identity "," instance "," service "," requires "]}," Fog Rackspace Databases Database save":{"type":"method","name":"save","children":[],"call":[" service create_database "," collate "," character_set "," identity "," instance identity "," instance "," service "," requires "]}," Fog Compute RackspaceV2 VirtualInterfaces new":{"type":"method","name":"new","children":[],"call":["(pair\n  (sym :server)\n  (send nil :server)) merge "," server "]}," Fog Compute RackspaceV2 VirtualInterfaces all":{"type":"method","name":"all","children":[],"call":["obj attributes []= "," server ","obj attributes ","objects each "," load "," service list_virtual_interfaces body [] "," service list_virtual_interfaces body "," service list_virtual_interfaces "," server id "," service "," raise "," load  each "]}," Fog Compute RackspaceV2 VirtualInterfaces server=":{"type":"method","name":"server=","children":[],"call":["Fog Compute RackspaceV2 Server  new "," service ","obj is_a? "]}," Fog Compute RackspaceV2 VirtualInterface network_id":{"type":"method","name":"network_id","children":[],"call":[" attributes [] "," attributes "," attributes [] id "," attributes [] is_a? "]}," Fog Compute RackspaceV2 VirtualInterface server_id":{"type":"method","name":"server_id","children":[],"call":[" attributes [] "," attributes "," attributes [] id "," attributes [] is_a? "]}," Fog Compute RackspaceV2 VirtualInterface destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_virtual_interface "," id "," server_id "," service "]}," Fog Compute RackspaceV2 VirtualInterface create":{"type":"method","name":"create","children":[],"call":[" merge_attributes ","data body [] first ","data body [] ","data body "," service create_virtual_interface "," network_id "," server_id "," service "," service create_virtual_interface  body [] first "," service create_virtual_interface  body [] "," service create_virtual_interface  body "]}," Fog Compute RackspaceV2 VirtualInterface save":{"type":"method","name":"save","children":[],"call":[" create "," raise ","Fog Errors Error  new "," persisted? "]}," Fog Compute RackspaceV2 Servers get":{"type":"method","name":"get","children":[],"call":[" new "," service get_server body [] "," service get_server body "," service get_server "," service "]}," Fog Compute RackspaceV2 Servers bootstrap":{"type":"method","name":"bootstrap","children":[],"call":["server setup ","server password "," public_ip_address empty? ! "," public_ip_address empty? "," public_ip_address "," ready? ","server wait_for "," create "," create  setup "," create  password "," create  wait_for "]}," Fog Compute RackspaceV2 Servers all":{"type":"method","name":"all","children":[],"call":[" load "," service list_servers body [] "," service list_servers body "," service list_servers "," service "]}," Fog Compute RackspaceV2 Server user_data_encoded":{"type":"method","name":"user_data_encoded","children":[],"call":["(send\n  (self) :user_data) pack "," user_data "," user_data nil? "]}," Fog Compute RackspaceV2 Server password_lock":{"type":"method","name":"password_lock","children":[],"call":[" username "," attributes [] "," attributes ","Fog Logger  warning "," attributes [] nil? ! "," attributes [] nil? "]}," Fog Compute RackspaceV2 Server adminPass=":{"type":"method","name":"adminPass=","children":[],"call":[" password= "]}," Fog Compute RackspaceV2 Server get_vnc_console":{"type":"method","name":"get_vnc_console","children":[],"call":["data body [] [] ","data body [] ","data body "," service get_vnc_console "," identity "," service "," requires "," service get_vnc_console  body [] [] "," service get_vnc_console  body [] "," service get_vnc_console  body "]}," Fog Compute RackspaceV2 Server virtual_interfaces":{"type":"method","name":"virtual_interfaces","children":[],"call":["Fog Compute RackspaceV2 VirtualInterfaces  new "," service "]}," Fog Compute RackspaceV2 Server setup":{"type":"method","name":"setup","children":[],"call":[" sleep ","Fog SSH  new run ","Fog SSH  new "," username "," ssh_ip_address "," password= "," password_lock ","commands compact ","Fog JSON  encode "," metadata "," attributes "," public_key "," requires "]}," Fog Compute RackspaceV2 Server change_admin_password":{"type":"method","name":"change_admin_password","children":[],"call":[" password= "," state= "," service change_server_password "," identity "," service "," requires "]}," Fog Compute RackspaceV2 Server unrescue":{"type":"method","name":"unrescue","children":[],"call":[" state= "," service unrescue_server "," identity "," service "," requires "]}," Fog Compute RackspaceV2 Server rescue":{"type":"method","name":"rescue","children":[],"call":[" merge_attributes ","data body "," service rescue_server "," identity "," service "," requires "," service rescue_server  body "]}," Fog Compute RackspaceV2 Server revert_resize":{"type":"method","name":"revert_resize","children":[],"call":[" service revert_resize_server "," identity "," service "," requires "]}," Fog Compute RackspaceV2 Server confirm_resize":{"type":"method","name":"confirm_resize","children":[],"call":[" service confirm_resize_server "," identity "," service "," requires "]}," Fog Compute RackspaceV2 Server resize":{"type":"method","name":"resize","children":[],"call":[" state= "," service resize_server "," identity "," service "," requires "]}," Fog Compute RackspaceV2 Server rebuild":{"type":"method","name":"rebuild","children":[],"call":[" state= "," service rebuild_server "," identity "," service "," requires "]}," Fog Compute RackspaceV2 Server reboot":{"type":"method","name":"reboot","children":[],"call":[" state= ","type == "," service reboot_server "," identity "," service "," requires "]}," Fog Compute RackspaceV2 Server ready?":{"type":"method","name":"ready?","children":[],"call":[" state == "," state "," raise ","InvalidServerStateException  new ","error_states include? "," Array "," Array  include? "]}," Fog Compute RackspaceV2 Server public_ip_address":{"type":"method","name":"public_ip_address","children":[],"call":[" ipv4_address "]}," Fog Compute RackspaceV2 Server private_ip_address":{"type":"method","name":"private_ip_address","children":[],"call":["(send\n  (send\n    (send nil :addresses) :[]\n    (str \"private\")) :select) [] [] ","(send\n  (send\n    (send nil :addresses) :[]\n    (str \"private\")) :select) [] ","a [] == ","a [] "," addresses [] select "," addresses [] "," addresses "]}," Fog Compute RackspaceV2 Server attach_volume":{"type":"method","name":"attach_volume","children":[],"call":[" attachments create "," identity "," attachments ","volume id ","volume is_a? "," requires "]}," Fog Compute RackspaceV2 Server attachments":{"type":"method","name":"attachments","children":[],"call":["Fog Compute RackspaceV2 Attachments  new "," service "]}," Fog Compute RackspaceV2 Server create_image":{"type":"method","name":"create_image","children":[],"call":["Fog Compute RackspaceV2 Image  new "," service "," service images ","response headers [] match [] ","response headers [] match ","response headers [] ","response headers "," service create_image "," identity "," requires "," service create_image  headers [] match [] "," service create_image  headers [] match "," service create_image  headers [] "," service create_image  headers "]}," Fog Compute RackspaceV2 Server image":{"type":"method","name":"image","children":[],"call":[" service images get "," image_id "," service images "," service "," requires "]}," Fog Compute RackspaceV2 Server flavor":{"type":"method","name":"flavor","children":[],"call":[" service flavors get "," flavor_id "," service flavors "," service "," requires "]}," Fog Compute RackspaceV2 Server destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_server "," identity "," service "," requires "]}," Fog Compute RackspaceV2 Server update":{"type":"method","name":"update","children":[],"call":[" merge_attributes ","data body [] ","data body "," service update_server "," identity "," service "," ipv6_address "," ipv4_address "," name "," requires "," service update_server  body [] "," service update_server  body "]}," Fog Compute RackspaceV2 Server create":{"type":"method","name":"create","children":[],"call":[" merge_attributes ","data body [] ","data body "," service create_server "," flavor_id "," image_id "," name "," service ","modified_options [] map! ","modified_options [] "," attributes [] "," attributes ","modified_options []= "," user_data_encoded "," user_data_encoded nil? "," config_drive "," config_drive nil? "," personality "," personality nil? "," metadata to_hash "," metadata ","@metadata nil? "," disk_config "," disk_config nil? "," password nil? "," password ","Fog Logger  deprecation ","Marshal  load ","Marshal  dump "," requires ","mn first is_a? ","mn first "," service create_server  body [] "," service create_server  body ","Marshal  load  [] map! ","Marshal  load  [] ","Marshal  load  []= "," user_ service create_server _encoded "," user_ service create_server _encoded nil? "," meta service create_server  to_hash "," meta service create_server  ","@meta service create_server  nil? ","modified_options []  first is_a? ","modified_options []  first "]}," Fog Compute RackspaceV2 Server save":{"type":"method","name":"save","children":[],"call":[" create "," update "," persisted? "]}," Fog Compute RackspaceV2 Server key_pair=":{"type":"method","name":"key_pair=","children":[],"call":[" key_name= ","new_keypair name ","Fog Logger  deprecation ","new_keypair is_a? "]}," Fog Compute RackspaceV2 Server key_pair":{"type":"method","name":"key_pair","children":[],"call":[" service key_pairs get "," key_name "," service key_pairs "," service "," requires "]}," Fog Compute RackspaceV2 Server metadata=":{"type":"method","name":"metadata=","children":[],"call":[" metadata from_hash "," metadata "]}," Fog Compute RackspaceV2 Server metadata":{"type":"method","name":"metadata","children":[],"call":["Fog Compute RackspaceV2 Metadata  new "," service "]}," Fog Compute RackspaceV2 Server initialize":{"type":"method","name":"initialize","children":[],"call":["attributes [] "]}," Fog Compute RackspaceV2 Networks get":{"type":"method","name":"get","children":[],"call":[" new "," service get_network body [] "," service get_network body "," service get_network "," service "]}," Fog Compute RackspaceV2 Networks all":{"type":"method","name":"all","children":[],"call":[" load "," service list_networks body [] "," service list_networks body "," service list_networks "," service "]}," Fog Compute RackspaceV2 Network destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_network "," identity "," service "," requires "]}," Fog Compute RackspaceV2 Network save":{"type":"method","name":"save","children":[],"call":[" merge_attributes ","data body [] ","data body "," service create_network "," cidr "," label "," service "," requires "," service create_network  body [] "," service create_network  body "]}," Fog Compute RackspaceV2 Metadatum save":{"type":"method","name":"save","children":[],"call":[" service set_metadata_item "," value "," key "," parent id "," parent "," collection_name "," service "," requires "]}," Fog Compute RackspaceV2 Metadatum destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_metadata_item "," key "," parent id "," parent "," collection_name "," service "," requires "]}," Fog Compute RackspaceV2 Metadata to_hash":{"type":"method","name":"to_hash","children":[],"call":["h []= ","datum value ","datum key "," each "]}," Fog Compute RackspaceV2 Metadata from_hash":{"type":"method","name":"from_hash","children":[],"call":[" load ","metas << ","hash each_pair "]}," Fog Compute RackspaceV2 Metadata new":{"type":"method","name":"new","children":[],"call":["(pair\n  (sym :parent)\n  (send nil :parent)) merge! "," parent "]}," Fog Compute RackspaceV2 Metadata save":{"type":"method","name":"save","children":[],"call":[" service set_metadata "," to_hash "," parent id "," parent "," collection_name "," service "," requires "]}," Fog Compute RackspaceV2 Metadata []=":{"type":"method","name":"[]=","children":[],"call":[" << ","Fog Compute RackspaceV2 Metadatum  new "," parent "," service ","datum value= ","datum key == ","key to_sym ","datum key "," find ","key is_a? "]}," Fog Compute RackspaceV2 Metadata []":{"type":"method","name":"[]","children":[],"call":["datum value ","datum key == ","key to_sym ","datum key "," find ","key is_a? "]}," Fog Compute RackspaceV2 Metadata get":{"type":"method","name":"get","children":[],"call":[" new ","datum [] ","data first "," service get_metadata_item body [] "," service get_metadata_item body "," service get_metadata_item "," parent id "," parent "," collection_name "," service "," requires ","data first  [] "," service get_metadata_item body []  first "," service get_meta service get_metadata_item body [] _item body [] "," service get_meta service get_metadata_item body [] _item body "," service get_meta service get_metadata_item body [] _item "]}," Fog Compute RackspaceV2 Metadata all":{"type":"method","name":"all","children":[],"call":[" from_hash "," service list_metadata body [] "," service list_metadata body "," service list_metadata "," parent id "," parent "," collection_name "," service "," parent identity "," requires "," service list_meta service list_metadata body []  body [] "," service list_meta service list_metadata body []  body "," service list_meta service list_metadata body []  "]}," Fog Compute RackspaceV2 MetaParent metas_to_hash":{"type":"method","name":"metas_to_hash","children":[],"call":["hash []= ","meta value ","meta key ","metas each "]}," Fog Compute RackspaceV2 MetaParent collection_name":{"type":"method","name":"collection_name","children":[],"call":[" raise "," parent class == "," parent class "," parent "]}," Fog Compute RackspaceV2 MetaParent parent=":{"type":"method","name":"parent=","children":[],"call":[]}," Fog Compute RackspaceV2 MetaParent parent":{"type":"method","name":"parent","children":[],"call":[]}," Fog Compute RackspaceV2 KeyPairs get":{"type":"method","name":"get","children":[],"call":[" new "," service get_keypair body [] "," service get_keypair body "," service get_keypair "," service "]}," Fog Compute RackspaceV2 KeyPairs all":{"type":"method","name":"all","children":[],"call":[" load ","data << ","kp [] "," service list_keypairs body [] each "," service list_keypairs body [] "," service list_keypairs body "," service list_keypairs "," service "]}," Fog Compute RackspaceV2 KeyPair destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_keypair "," identity "," service "," requires "]}," Fog Compute RackspaceV2 KeyPair save":{"type":"method","name":"save","children":[],"call":["data body [] [] == "," name ","data body [] [] ","data body [] ","data body "," merge_attributes "," service create_keypair "," attributes "," service "," requires "," service create_keypair  body [] [] == "," service create_keypair  body [] [] "," service create_keypair  body [] "," service create_keypair  body "]}," Fog Compute RackspaceV2 Images get":{"type":"method","name":"get","children":[],"call":[" new "," service get_image body [] "," service get_image body "," service get_image "," service "]}," Fog Compute RackspaceV2 Images all":{"type":"method","name":"all","children":[],"call":[" load "," service list_images_detail body [] "," service list_images_detail body "," service list_images_detail "," service "," merge_attributes ","(pair\n  (str \"name\")\n  (send nil :name)) merge! "," type "," limit "," marker "," status "," name "]}," Fog Compute RackspaceV2 Image destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_image "," identity "," service "," requires "]}," Fog Compute RackspaceV2 Image ready?":{"type":"method","name":"ready?","children":[],"call":[" state == "," state "," raise ","InvalidImageStateException  new ","error_states include? "," Array "," Array  include? "]}," Fog Compute RackspaceV2 Image metadata=":{"type":"method","name":"metadata=","children":[],"call":[" metadata from_hash "," metadata "]}," Fog Compute RackspaceV2 Image metadata":{"type":"method","name":"metadata","children":[],"call":["Fog Compute RackspaceV2 Metadata  new "," service "]}," Fog Compute RackspaceV2 Image initialize":{"type":"method","name":"initialize","children":[],"call":["attributes [] "]}," Fog Compute RackspaceV2 Flavors get":{"type":"method","name":"get","children":[],"call":[" new "," service get_flavor body [] "," service get_flavor body "," service get_flavor "," service "]}," Fog Compute RackspaceV2 Flavors all":{"type":"method","name":"all","children":[],"call":[" load "," service list_flavors_detail body [] "," service list_flavors_detail body "," service list_flavors_detail "," service "]}," Fog Compute RackspaceV2 Attachments get":{"type":"method","name":"get","children":[],"call":[" new "," service get_attachment body [] "," service get_attachment body "," service get_attachment "," server id "," server "," service "]}," Fog Compute RackspaceV2 Attachments all":{"type":"method","name":"all","children":[],"call":[" load "," service list_attachments body [] "," service list_attachments body "," service list_attachments "," server id "," server "," service "]}," Fog Compute RackspaceV2 Attachment server":{"type":"method","name":"server","children":[],"call":[" collection server "," collection "]}," Fog Compute RackspaceV2 Attachment destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_attachment "," volume_id "," server_id "," service "," requires "]}," Fog Compute RackspaceV2 Attachment save":{"type":"method","name":"save","children":[],"call":[" merge_attributes ","data body [] ","data body "," service attach_volume "," device "," volume_id "," server_id "," service "," requires "," service attach_volume  body [] "," service attach_volume  body "]}," Fog Compute RackspaceV2 Attachment initialize":{"type":"method","name":"initialize","children":[],"call":[" server id "," server "]}," Fog Compute Rackspace Servers get":{"type":"method","name":"get","children":[],"call":[" new "," service get_server_details body [] "," service get_server_details body "," service get_server_details "," service "," service get_ service get_server_details body [] _details body [] "," service get_ service get_server_details body [] _details body "," service get_ service get_server_details body [] _details "]}," Fog Compute Rackspace Servers bootstrap":{"type":"method","name":"bootstrap","children":[],"call":["server setup ","server password "," ready? ","server wait_for "," create "," create  setup "," create  password "," create  wait_for "]}," Fog Compute Rackspace Servers all":{"type":"method","name":"all","children":[],"call":[" load "," service list_servers_detail body [] "," service list_servers_detail body "," service list_servers_detail "," service "]}," Fog Compute Rackspace Server adminPass=":{"type":"method","name":"adminPass=","children":[],"call":[]}," Fog Compute Rackspace Server setup":{"type":"method","name":"setup","children":[],"call":[" sleep ","Fog SSH  new run ","Fog JSON  encode "," metadata "," attributes "," username "," public_key ","Fog SSH  new "," ssh_ip_address "," requires "]}," Fog Compute Rackspace Server save":{"type":"method","name":"save","children":[],"call":[" merge_attributes ","data body [] ","data body "," service create_server "," image_id "," flavor_id "," service ","value nil? ","options reject "," personality "," name "," metadata "," requires "," raise ","Fog Errors Error  new "," persisted? "," service create_server  body [] "," service create_server  body "," meta service create_server  "]}," Fog Compute Rackspace Server reboot":{"type":"method","name":"reboot","children":[],"call":[" service reboot_server "," id "," service "," requires "]}," Fog Compute Rackspace Server ready?":{"type":"method","name":"ready?","children":[],"call":[" state == "," state "]}," Fog Compute Rackspace Server public_ip_address":{"type":"method","name":"public_ip_address","children":[],"call":[" addresses [] first "," addresses [] "," addresses "]}," Fog Compute Rackspace Server private_ip_address":{"type":"method","name":"private_ip_address","children":[],"call":[" addresses [] first "," addresses [] "," addresses "]}," Fog Compute Rackspace Server images":{"type":"method","name":"images","children":[],"call":[" service images "," service "," requires "]}," Fog Compute Rackspace Server image":{"type":"method","name":"image","children":[],"call":[" service images get "," image_id "," service images "," service "," requires "]}," Fog Compute Rackspace Server flavor":{"type":"method","name":"flavor","children":[],"call":[" service flavors get "," flavor_id "," service flavors "," service "," requires "]}," Fog Compute Rackspace Server destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_server "," id "," service "," requires "]}," Fog Compute Rackspace Server initialize":{"type":"method","name":"initialize","children":[],"call":[" image_id "," flavor_id "]}," Fog Compute Rackspace Images get":{"type":"method","name":"get","children":[],"call":[" new "," service get_image_details body [] "," service get_image_details body "," service get_image_details "," service "]}," Fog Compute Rackspace Images all":{"type":"method","name":"all","children":[],"call":[" replace ","image server_id == "," server id "," server ","image server_id "," select "," load "," service list_images_detail body [] "," service list_images_detail body "," service list_images_detail "," service "]}," Fog Compute Rackspace Image save":{"type":"method","name":"save","children":[],"call":[" merge_attributes ","data body [] ","data body "," service create_image "," name "," server_id "," service "," requires "," raise ","Fog Errors Error  new "," persisted? "," service create_image  body [] "," service create_image  body "]}," Fog Compute Rackspace Image ready?":{"type":"method","name":"ready?","children":[],"call":[" status == "," status "]}," Fog Compute Rackspace Image destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_image "," id "," service "," requires "]}," Fog Compute Rackspace Image server=":{"type":"method","name":"server=","children":[],"call":[" server_id= ","new_server id "," requires "]}," Fog Compute Rackspace Flavors get":{"type":"method","name":"get","children":[],"call":[" new "," service get_flavor_details body [] "," service get_flavor_details body "," service get_flavor_details "," service "]}," Fog Compute Rackspace Flavors all":{"type":"method","name":"all","children":[],"call":[" load "," service list_flavors_detail body [] "," service list_flavors_detail body "," service list_flavors_detail "," service "]}," Fog Compute Rackspace Flavor cores":{"type":"method","name":"cores","children":[],"call":["4 * ","1 / "," ram "]}," Fog Compute Rackspace Flavor bits":{"type":"method","name":"bits","children":[],"call":[]}," Fog Rackspace CDNV2 Services get":{"type":"method","name":"get","children":[],"call":[" new "," service get_service body "," service get_service "," service "]}," Fog Rackspace CDNV2 Services all":{"type":"method","name":"all","children":[],"call":[" load "," service list_services body [] "," service list_services body "," service list_services "," service "]}," Fog Rackspace CDNV2 Service destroy_assets":{"type":"method","name":"destroy_assets","children":[],"call":[" service delete_assets "," service "]}," Fog Rackspace CDNV2 Service destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_service "," service "]}," Fog Rackspace CDNV2 Service save":{"type":"method","name":"save","children":[],"call":[" service update_service "," service "," merge_attributes ","UUID_REGEX  match [] ","UUID_REGEX  match ","data headers [] ","data headers "," service create_service "," id nil? "," id "," service create_service  headers [] "," service create_service  headers "," UUID_REGEX  match []  nil? "," UUID_REGEX  match []  "]}," Fog Rackspace CDNV2 Service add_operation":{"type":"method","name":"add_operation","children":[],"call":[" operations << "," operations "]}," Fog Rackspace CDNV2 Service add_origin":{"type":"method","name":"add_origin","children":[],"call":[" origins "," origins << ","(pair\n  (sym :origin)\n  (lvar :origin)) merge "]}," Fog Rackspace CDNV2 Service add_domain":{"type":"method","name":"add_domain","children":[],"call":[" domains "," domains << ","(pair\n  (sym :domain)\n  (lvar :domain)) merge "]}," Fog Rackspace CDNV2 Service initialize":{"type":"method","name":"initialize","children":[],"call":[" operations= "]}," Fog Rackspace CDNV2 Flavors get":{"type":"method","name":"get","children":[],"call":[" new "," service get_flavor body "," service get_flavor "," service "]}," Fog Rackspace CDNV2 Flavors all":{"type":"method","name":"all","children":[],"call":[" load "," service list_flavors body [] "," service list_flavors body "," service list_flavors "," service "]}," Fog Rackspace BlockStorage Volumes get":{"type":"method","name":"get","children":[],"call":[" new "," service get_volume body [] "," service get_volume body "," service get_volume "," service "]}," Fog Rackspace BlockStorage Volumes all":{"type":"method","name":"all","children":[],"call":[" load "," service list_volumes body [] "," service list_volumes body "," service list_volumes "," service "]}," Fog Rackspace BlockStorage VolumeTypes get":{"type":"method","name":"get","children":[],"call":[" new "," service get_volume_type body [] "," service get_volume_type body "," service get_volume_type "," service "]}," Fog Rackspace BlockStorage VolumeTypes all":{"type":"method","name":"all","children":[],"call":[" load "," service list_volume_types body [] "," service list_volume_types body "," service list_volume_types "," service "]}," Fog Rackspace BlockStorage Volume destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_volume "," identity "," service "," requires "]}," Fog Rackspace BlockStorage Volume save":{"type":"method","name":"save","children":[],"call":[" merge_attributes ","data body [] ","data body "," service create_volume "," attributes [] "," attributes "," availability_zone "," volume_type "," display_description "," display_name "," size "," service "," raise ","IdentifierTaken  new "," persisted? "," requires "," service create_volume  body [] "," service create_volume  body "]}," Fog Rackspace BlockStorage Volume create_snapshot":{"type":"method","name":"create_snapshot","children":[],"call":[" service snapshots create ","options merge "," identity "," service snapshots "," service "," requires "]}," Fog Rackspace BlockStorage Volume snapshots":{"type":"method","name":"snapshots","children":[],"call":["s volume_id == "," identity ","s volume_id "," service snapshots select "," service snapshots "," service "]}," Fog Rackspace BlockStorage Volume attached?":{"type":"method","name":"attached?","children":[],"call":[" state == "," state "]}," Fog Rackspace BlockStorage Volume ready?":{"type":"method","name":"ready?","children":[],"call":[" state == "," state "]}," Fog Rackspace BlockStorage Snapshots get":{"type":"method","name":"get","children":[],"call":[" new "," service get_snapshot body [] "," service get_snapshot body "," service get_snapshot "," service "]}," Fog Rackspace BlockStorage Snapshots all":{"type":"method","name":"all","children":[],"call":[" load "," service list_snapshots body [] "," service list_snapshots body "," service list_snapshots "," service "]}," Fog Rackspace BlockStorage Snapshot destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_snapshot "," identity "," service "," requires "]}," Fog Rackspace BlockStorage Snapshot save":{"type":"method","name":"save","children":[],"call":[" merge_attributes ","data body [] ","data body "," service create_snapshot "," force "," display_description "," display_name "," volume_id "," service "," raise ","IdentifierTaken  new "," persisted? "," requires "," service create_snapshot  body [] "," service create_snapshot  body "]}," Fog Rackspace BlockStorage Snapshot ready?":{"type":"method","name":"ready?","children":[],"call":[" state == "," state "]}," Fog Rackspace AutoScale Webhooks new":{"type":"method","name":"new","children":[],"call":["(pair\n  (sym :group)\n  (send nil :group)) merge "," policy "," group "]}," Fog Rackspace AutoScale Webhooks create":{"type":"method","name":"create","children":[],"call":[]}," Fog Rackspace AutoScale Webhooks get":{"type":"method","name":"get","children":[],"call":[" new "," service get_webhook body [] "," service get_webhook body "," service get_webhook "," policy id "," policy "," group id "," group "," service "]}," Fog Rackspace AutoScale Webhooks all":{"type":"method","name":"all","children":[],"call":[" load "," service list_webhooks body [] "," service list_webhooks body "," service list_webhooks "," policy id "," policy "," group id "," group "," service "]}," Fog Rackspace AutoScale Webhook execution_url":{"type":"method","name":"execution_url","children":[],"call":["link [] ","l [] == ","l [] "," links find "," links "," requires "]}," Fog Rackspace AutoScale Webhook destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_webhook "," identity "," policy id "," policy "," group id "," group "," service "," requires "]}," Fog Rackspace AutoScale Webhook save":{"type":"method","name":"save","children":[],"call":[" create "," update "," persisted? "]}," Fog Rackspace AutoScale Webhook update":{"type":"method","name":"update","children":[],"call":[" merge_attributes ","data body "," service update_webhook "," identity "," policy id "," policy "," group id "," group "," service "," metadata "," name "," requires "," service update_webhook  body "," meta service update_webhook  "]}," Fog Rackspace AutoScale Webhook create":{"type":"method","name":"create","children":[],"call":[" merge_attributes ","data body [] [] ","data body [] ","data body "," service create_webhook "," policy id "," policy "," group id "," group "," service ","options []= "," metadata "," name "," requires "," service create_webhook  body [] [] "," service create_webhook  body [] "," service create_webhook  body "," meta service create_webhook  "]}," Fog Rackspace AutoScale Policy webhooks":{"type":"method","name":"webhooks","children":[],"call":["Fog Rackspace AutoScale Webhooks  new "," group "," service "," requires "]}," Fog Rackspace AutoScale Policy execute":{"type":"method","name":"execute","children":[],"call":[" service execute_policy "," identity "," group id "," group "," service "," requires "]}," Fog Rackspace AutoScale Policy destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_policy "," identity "," group id "," group "," service "," requires "]}," Fog Rackspace AutoScale Policy save":{"type":"method","name":"save","children":[],"call":[" create "," update "," persisted? "]}," Fog Rackspace AutoScale Policy update":{"type":"method","name":"update","children":[],"call":[" merge_attributes ","data body "," service update_policy "," identity "," group id "," group "," service ","options []= "," args "," type == "," type "," desired_capacity "," desired_capacity nil? "," type nil? "," cooldown "," cooldown nil? "," change_percent "," change_percent nil? "," change "," change nil? "," name "," name nil? "," check_attributes "," requires "," service update_policy  body "]}," Fog Rackspace AutoScale Policy create":{"type":"method","name":"create","children":[],"call":[" merge_attributes ","data body [] [] ","data body [] ","data body "," service create_policy "," group id "," group "," service ","options []= "," args "," type == "," type "," desired_capacity "," desired_capacity nil? "," type nil? "," cooldown "," cooldown nil? "," change_percent "," change_percent nil? "," change "," change nil? "," name "," name nil? "," check_attributes "," requires "," service create_policy  body [] [] "," service create_policy  body [] "," service create_policy  body "]}," Fog Rackspace AutoScale Policy group=":{"type":"method","name":"group=","children":[],"call":[" attributes []= "," service groups new "," service groups "," service ","group is_a? "," attributes "]}," Fog Rackspace AutoScale Policy check_attributes":{"type":"method","name":"check_attributes","children":[],"call":[" raise "," name "," args [] nil? "," args [] "," args "," type == "," type "," type nil? "]}," Fog Rackspace AutoScale Policies new":{"type":"method","name":"new","children":[],"call":["(pair\n  (sym :group)\n  (send nil :group)) merge "," group "]}," Fog Rackspace AutoScale Policies create":{"type":"method","name":"create","children":[],"call":[]}," Fog Rackspace AutoScale Policies get":{"type":"method","name":"get","children":[],"call":[" new "," service get_policy body [] "," service get_policy body "," service get_policy "," group id "," group "," service "]}," Fog Rackspace AutoScale Policies all":{"type":"method","name":"all","children":[],"call":[" load "," service list_policies body [] "," service list_policies body "," service list_policies "," group id "," group "," service "]}," Fog Rackspace AutoScale LaunchConfig reload":{"type":"method","name":"reload","children":[],"call":[" merge_attributes ","data body [] ","data body "," service get_launch_config "," group id "," group "," service "," service get_launch_config  body [] "," service get_launch_config  body "]}," Fog Rackspace AutoScale LaunchConfig save":{"type":"method","name":"save","children":[],"call":[" raise "," class "," update "," group id "," group "]}," Fog Rackspace AutoScale LaunchConfig update":{"type":"method","name":"update","children":[],"call":[" service update_launch_config "," group id "," group "," service ","options []= "," args "," args nil? "," type "," type nil? "]}," Fog Rackspace AutoScale Groups get":{"type":"method","name":"get","children":[],"call":[" new "," service get_group body [] "," service get_group body "," service get_group "," service "]}," Fog Rackspace AutoScale Groups all":{"type":"method","name":"all","children":[],"call":[" load "," service list_groups body [] "," service list_groups body "," service list_groups "," service "]}," Fog Rackspace AutoScale GroupConfig reload":{"type":"method","name":"reload","children":[],"call":[" merge_attributes ","data body [] ","data body "," service get_group_config "," group id "," group "," service "," service get_group_config  body [] "," service get_group_config  body "]}," Fog Rackspace AutoScale GroupConfig save":{"type":"method","name":"save","children":[],"call":[" raise "," class "," update "," group id "," group "]}," Fog Rackspace AutoScale GroupConfig update":{"type":"method","name":"update","children":[],"call":[" service update_group_config "," group id "," group "," service ","options []= "," metadata "," metadata nil? "," max_entities "," min_entities "," cooldown "," cooldown nil? "," name "," name nil? "]}," Fog Rackspace AutoScale GroupBuilder networks_to_hash":{"type":"method","name":"networks_to_hash","children":[],"call":["networks map "]}," Fog Rackspace AutoScale GroupBuilder get_id":{"type":"method","name":"get_id","children":[],"call":["attributes [] ","attributes [] id "," model? ","type to_sym ","(begin\n  (lvar :type)) to_sym ","attributes [] attributes []  "]}," Fog Rackspace AutoScale GroupBuilder model?":{"type":"method","name":"model?","children":[],"call":["obj class ancestors include? ","obj class ancestors ","obj class "]}," Fog Rackspace AutoScale GroupBuilder build_server_template":{"type":"method","name":"build_server_template","children":[],"call":["server_template []= "," networks_to_hash ","attributes [] ","(send\n  (lvar :attributes) :[]\n  (sym :user_data)) pack "," get_id "]}," Fog Rackspace AutoScale GroupBuilder load_balancer_to_hash":{"type":"method","name":"load_balancer_to_hash","children":[],"call":["lb id ","lb port "," raise ","ArgumentError  new ","lb respond_to? "]}," Fog Rackspace AutoScale GroupBuilder build_load_balancers":{"type":"method","name":"build_load_balancers","children":[],"call":[" load_balancer_to_hash ","obj is_a? ","load_balancers map ","attributes [] ","attributes [] is_a? ","attributes []  map "]}," Fog Rackspace AutoScale GroupBuilder build_server_launch_config":{"type":"method","name":"build_server_launch_config","children":[],"call":["Fog Rackspace AutoScale LaunchConfig  new ","args []= "," build_load_balancers ","attributes [] "," build_server_template ","attributes [] == "]}," Fog Rackspace AutoScale GroupBuilder build_group_config":{"type":"method","name":"build_group_config","children":[],"call":["Fog Rackspace AutoScale GroupConfig  new ","attributes [] "]}," Fog Rackspace AutoScale GroupBuilder build":{"type":"method","name":"build","children":[],"call":["service groups new "," build_server_launch_config "," build_group_config ","service groups "]}," Fog Rackspace AutoScale Group load_model":{"type":"method","name":"load_model","children":[],"call":["model merge_attributes "," service ","Fog Rackspace AutoScale  const_get new ","Fog Rackspace AutoScale  const_get ","Fog Rackspace AutoScale  const_get new  merge_attributes "]}," Fog Rackspace AutoScale Group resume":{"type":"method","name":"resume","children":[],"call":[" service resume_group_state "," identity "," service "," requires "]}," Fog Rackspace AutoScale Group pause":{"type":"method","name":"pause","children":[],"call":[" service pause_group_state "," identity "," service "," requires "]}," Fog Rackspace AutoScale Group state":{"type":"method","name":"state","children":[],"call":["data body [] ","data body "," service get_group_state "," identity "," service "," requires "," service get_group_state  body [] "," service get_group_state  body "]}," Fog Rackspace AutoScale Group destroy":{"type":"method","name":"destroy","children":[],"call":[" service delete_group "," identity "," service "," requires "]}," Fog Rackspace AutoScale Group save":{"type":"method","name":"save","children":[],"call":[" merge_attributes ","data body [] ","data body "," service create_group "," policies "," service ","group_config_hash []= "," group_config metadata "," group_config "," group_config min_entities "," group_config max_entities "," group_config cooldown "," group_config name "," launch_config type "," launch_config "," launch_config args "," raise ","Fog Errors Error  new "," persisted? "," requires "," service create_group  body [] "," service create_group  body "," group_config meta service create_group  "]}," Fog Rackspace AutoScale Group policies":{"type":"method","name":"policies","children":[],"call":["@policies clear ","Fog Rackspace AutoScale Policies  new "," service "," load_model "," persisted? ","Fog Rackspace AutoScale Policies  new  clear "," load_model  clear "]}," Fog Rackspace AutoScale Group launch_config=":{"type":"method","name":"launch_config=","children":[],"call":[" attributes []= "," attributes "," load_model ","object is_a? "]}," Fog Rackspace AutoScale Group launch_config":{"type":"method","name":"launch_config","children":[],"call":[" attributes [] "," attributes "," attributes []= "," load_model ","data body [] ","data body "," service get_launch_config "," identity "," service "," persisted? "," attributes [] nil? "," service get_launch_config  body [] "," service get_launch_config  body "]}," Fog Rackspace AutoScale Group group_config=":{"type":"method","name":"group_config=","children":[],"call":[" attributes []= "," attributes "," load_model ","object is_a? "]}," Fog Rackspace AutoScale Group group_config":{"type":"method","name":"group_config","children":[],"call":[" attributes [] "," attributes "," attributes []= "," load_model ","data body [] ","data body "," service get_group_config "," identity "," service "," persisted? "," attributes [] nil? "," service get_group_config  body [] "," service get_group_config  body "]}," Fog Rackspace MockData stringify":{"type":"method","name":"stringify","children":[],"call":[]}," Fog Rackspace MockData zulu_time":{"type":"method","name":"zulu_time","children":[],"call":[]}," Fog Rackspace MockData slice":{"type":"method","name":"slice","children":[],"call":[]}," Fog Rackspace MockData keep":{"type":"method","name":"keep","children":[],"call":[]}," Fog Rackspace MockData ipv6_address":{"type":"method","name":"ipv6_address","children":[],"call":[]}," Fog Rackspace MockData ipv4_address":{"type":"method","name":"ipv4_address","children":[],"call":[]}," Fog Rackspace MockData uuid":{"type":"method","name":"uuid","children":[],"call":[]}," Fog Rackspace MockData data":{"type":"method","name":"data","children":[],"call":["(send\n  (const nil :Hash) :new) [] ","hash []= ","mock_data [] []= ","mock_data [] ","h []= ","(const nil :NOT_FOUND_ID) include? ","Hash  new ","Fog Mock  random_numbers to_s ","Fog Mock  random_numbers ","Fog Mock  random_letters ","-----BEGIN RSA PRIVATE KEY-----\n concat concat ","-----BEGIN RSA PRIVATE KEY-----\n concat ","ssh-rsa  concat concat ","ssh-rsa  concat ","Fog Rackspace MockData  uuid ","Fog  credentials [] ","Fog  credentials "]}," Fog Rackspace LoadBalancers Real authenticate_v1":{"type":"method","name":"authenticate_v1","children":[],"call":["credentials [] "," append_tenant_v1 ","Fog Rackspace  authenticate ","Fog Rackspace  authenticate  [] "]}," Fog Rackspace LoadBalancers Real append_tenant_v1":{"type":"method","name":"append_tenant_v1","children":[],"call":["@uri path= ","@uri path ","URI  parse ","credentials [] ","credentials [] match [] ","credentials [] match ","URI  parse  path= ","URI  parse  path "]}," Fog Rackspace LoadBalancers Real deprecation_warnings":{"type":"method","name":"deprecation_warnings","children":[],"call":["Fog Logger  deprecation ","@identity_service service_catalog display_service_regions "," service_name ","@identity_service service_catalog "," v2_authentication? ","(const nil :DFW_ENDPOINT) include? ","options [] ","@identity_service service_catalog display_service_@identity_service service_catalog display_service_regions  "]}," Fog Rackspace LoadBalancers Real setup_custom_endpoint":{"type":"method","name":"setup_custom_endpoint","children":[],"call":["options [] "," v2_authentication? ","Fog Rackspace  normalize_url "]}," Fog Rackspace LoadBalancers Real endpoint_uri":{"type":"method","name":"endpoint_uri","children":[],"call":[]}," Fog Rackspace LoadBalancers Real region":{"type":"method","name":"region","children":[],"call":[]}," Fog Rackspace LoadBalancers Real service_name":{"type":"method","name":"service_name","children":[],"call":[]}," Fog Rackspace LoadBalancers Real authenticate":{"type":"method","name":"authenticate","children":[],"call":[]}," Fog Rackspace LoadBalancers Real request":{"type":"method","name":"request","children":[],"call":[" raise ","ServiceError  slurp ","InternalServerError  slurp ","BadRequest  slurp ","NotFound  slurp "]}," Fog Rackspace LoadBalancers Real initialize":{"type":"method","name":"initialize","children":[],"call":["Fog Core Connection  new "," endpoint_uri to_s "," endpoint_uri ","options [] "," deprecation_warnings "," authenticate "," setup_custom_endpoint "]}," Fog Rackspace LoadBalancers Mock initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," Fog Rackspace LoadBalancers Shared usage":{"type":"method","name":"usage","children":[],"call":[" get_usage body "," get_usage "]}," Fog Rackspace LoadBalancers Shared protocols":{"type":"method","name":"protocols","children":[],"call":[" list_protocols body [] "," list_protocols body "," list_protocols "]}," Fog Rackspace LoadBalancers Shared algorithms":{"type":"method","name":"algorithms","children":[],"call":["i [] "," list_algorithms body [] map "," list_algorithms body [] "," list_algorithms body "," list_algorithms "]}," Fog Rackspace Identity Real initialize":{"type":"method","name":"initialize","children":[],"call":[" authenticate ","Fog Core Connection  new ","@uri to_s "," apply_options "]}," Fog Rackspace Identity Mock initialize":{"type":"method","name":"initialize","children":[],"call":[" authenticate "," apply_options "]}," Fog Rackspace Identity Common apply_options":{"type":"method","name":"apply_options","children":[],"call":["options [] ","@uri scheme ","@uri port ","@uri path ","@uri host ","URI  parse ","URI  parse  scheme ","URI  parse  port ","URI  parse  path ","URI  parse  host "]}," Fog Rackspace Identity Common authenticate":{"type":"method","name":"authenticate","children":[],"call":["data [] [] [] ","data [] [] ","data [] ","ServiceCatalog  from_response "," create_token body "," create_token "," create_token body  [] [] [] "," create_token body  [] [] "," create_token body  [] "]}," rackspace_api_key":{"type":"method","name":"rackspace_api_key","children":[],"call":[" get_user_input ","Fog  credentials [] ","Fog  credentials "]}," rackspace_username":{"type":"method","name":"rackspace_username","children":[],"call":[" get_user_input ","Fog  credentials [] ","Fog  credentials "]}," select_directory":{"type":"method","name":"select_directory","children":[],"call":["directories [] ","select_str to_i "," get_user_input "," puts ","dir count ","dir key ","directories each_with_index "," abort ","directories empty? ","delete_str to_i "," get_user_input  to_i "]}," get_user_input":{"type":"method","name":"get_user_input","children":[],"call":[" gets chomp "," gets "," print "]}," print_metadata":{"type":"method","name":"print_metadata","children":[],"call":[" puts ","object metadata each_pair ","object metadata ","metadatum value ","metadatum key ","server metadata each ","server metadata "]}," select_file":{"type":"method","name":"select_file","children":[],"call":["files [] ","delete_str to_i "," get_user_input "," puts ","file key ","files each_with_index "," get_user_input  to_i "]}," select_queue":{"type":"method","name":"select_queue","children":[],"call":["queues [] ","delete_str to_i "," get_user_input "," puts ","queue name ","queues each_with_index "," abort ","queues empty? "," get_user_input  to_i "]}," get_user_boolean":{"type":"method","name":"get_user_boolean","children":[],"call":["str match "," get_user_input "," get_user_input  match "]}," select_message":{"type":"method","name":"select_message","children":[],"call":["messages [] ","delete_str to_i "," get_user_input "," puts ","message body [] ","message body ","message id ","messages each_with_index "," abort ","messages empty? "," get_user_input  to_i "]}," select_server":{"type":"method","name":"select_server","children":[],"call":["servers [] ","delete_str to_i "," get_user_input "," puts ","server public_ip_address ","server name ","servers each_with_index "," abort ","servers empty? ","selected_str to_i "," get_user_input  to_i "]}," select_flavor":{"type":"method","name":"select_flavor","children":[],"call":["flavors [] ","selected_flavor_str to_i "," get_user_input "," puts ","flavor name ","server flavor_id == ","flavor id ","server flavor_id ","flavors each_with_index "," get_user_input  to_i "]}," select_attachment":{"type":"method","name":"select_attachment","children":[],"call":["attachments [] ","delete_str to_i "," get_user_input "," puts ","attachment device ","attachments each_with_index "," abort ","attachments empty? "," get_user_input  to_i "]}," delete_network":{"type":"method","name":"delete_network","children":[],"call":[" sleep "," puts ","e inspect ","network label ","attempt == ","network destroy "]}," wait_for_server_deletion":{"type":"method","name":"wait_for_server_deletion","children":[],"call":["server wait_for "]}," select_image":{"type":"method","name":"select_image","children":[],"call":["snapshot_images [] ","delete_str to_i "," get_user_input "," puts ","image name ","snapshot_images each_with_index "," abort ","snapshot_images empty? ","images [] ","select_str to_i ","images each_with_index "," get_user_input  to_i "]}," generate_ssh_key":{"type":"method","name":"generate_ssh_key","children":[],"call":["SSHKey  generate "]}," select_volume":{"type":"method","name":"select_volume","children":[],"call":["volumes [] ","selected_str to_i "," get_user_input "," puts ","volume display_name ","volumes each_with_index "," abort ","volumes empty? "," get_user_input  to_i "]}," select_volume_type":{"type":"method","name":"select_volume_type","children":[],"call":["volume_types [] ","selected_str to_i "," get_user_input "," puts ","volume_type name ","volume_types each_with_index "," get_user_input  to_i "]}," select_webhook":{"type":"method","name":"select_webhook","children":[],"call":["webhooks [] ","select_str to_i "," get_user_input "," puts ","webhook name ","webhooks each_with_index "," abort ","webhooks empty? "," get_user_input  to_i "]}," select_policy":{"type":"method","name":"select_policy","children":[],"call":["policies [] ","select_str to_i "," get_user_input "," puts ","policy name ","policies each_with_index "," abort ","policies empty? ","policies name "," get_user_input  to_i "]}," select_group":{"type":"method","name":"select_group","children":[],"call":["groups [] ","select_str to_i "," get_user_input "," puts ","config name ","group group_config ","groups each_with_index "," abort ","groups empty? "," get_user_input  to_i ","group group_config  name ","group group_group group_config  "]}," get_user_input_as_int":{"type":"method","name":"get_user_input_as_int","children":[],"call":["str to_i "," get_user_input "," get_user_input  to_i "]}," Fog Rackspace Errors included":{"type":"method","name":"included","children":[],"call":[]}," Fog DNS Rackspace Real authenticate":{"type":"method","name":"authenticate","children":[],"call":[]}," Fog DNS Rackspace Real authenticate_v1":{"type":"method","name":"authenticate_v1","children":[],"call":["credentials [] "," setup_endpoint ","Fog Rackspace  authenticate ","Fog Rackspace  authenticate  [] "]}," Fog DNS Rackspace Real setup_endpoint":{"type":"method","name":"setup_endpoint","children":[],"call":["@uri path= ","@uri path ","URI  parse ","credentials [] match [] ","credentials [] match ","credentials [] ","URI  parse  path= ","URI  parse  path "]}," Fog DNS Rackspace Real deprecation_warnings":{"type":"method","name":"deprecation_warnings","children":[],"call":["Fog Logger  deprecation ","options [] "]}," Fog DNS Rackspace Real validate_path_fragment":{"type":"method","name":"validate_path_fragment","children":[],"call":[" raise ","ArgumentError  new ","fragment to_s empty? ","fragment to_s ","fragment nil? "]}," Fog DNS Rackspace Real array_to_query_string":{"type":"method","name":"array_to_query_string","children":[],"call":["query_array join ","v to_s ","v join ","v is_a? ","arr map "]}," Fog DNS Rackspace Real request":{"type":"method","name":"request","children":[],"call":[" raise ","ServiceError  slurp ","Conflict  slurp ","ServiceUnavailable  slurp ","InternalServerError  slurp ","BadRequest  slurp ","NotFound  slurp "]}," Fog DNS Rackspace Real endpoint_uri":{"type":"method","name":"endpoint_uri","children":[],"call":[]}," Fog DNS Rackspace Real initialize":{"type":"method","name":"initialize","children":[],"call":["Fog Core Connection  new "," endpoint_uri to_s "," endpoint_uri ","options [] "," deprecation_warnings "," authenticate ","Fog Rackspace  normalize_url "]}," Fog DNS Rackspace Real region":{"type":"method","name":"region","children":[],"call":[]}," Fog DNS Rackspace Real service_name":{"type":"method","name":"service_name","children":[],"call":[]}," Fog DNS Rackspace Mock reset_data":{"type":"method","name":"reset_data","children":[],"call":[" class reset "," class "]}," Fog DNS Rackspace Mock data":{"type":"method","name":"data","children":[],"call":[" class data "," class "]}," Fog DNS Rackspace Mock reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog DNS Rackspace Mock initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," Fog DNS Rackspace CallbackError initialize":{"type":"method","name":"initialize","children":[],"call":["response body [] [] ","response body [] ","response body "]}," Fog Rackspace Databases Real authenticate_v1":{"type":"method","name":"authenticate_v1","children":[],"call":["credentials [] "," append_tenant_v1 ","Fog Rackspace  authenticate ","Fog Rackspace  authenticate  [] "]}," Fog Rackspace Databases Real append_tenant_v1":{"type":"method","name":"append_tenant_v1","children":[],"call":["@uri path= ","@uri path ","URI  parse ","credentials [] ","credentials [] match [] ","credentials [] match ","URI  parse  path= ","URI  parse  path "]}," Fog Rackspace Databases Real deprecation_warnings":{"type":"method","name":"deprecation_warnings","children":[],"call":["Fog Logger  deprecation ","@identity_service service_catalog display_service_regions "," service_name ","@identity_service service_catalog "," v2_authentication? ","(const nil :DFW_ENDPOINT) include? ","options [] ","@identity_service service_catalog display_service_@identity_service service_catalog display_service_regions  "]}," Fog Rackspace Databases Real setup_custom_endpoint":{"type":"method","name":"setup_custom_endpoint","children":[],"call":["options [] "," v2_authentication? ","Fog Rackspace  normalize_url "]}," Fog Rackspace Databases Real authenticate":{"type":"method","name":"authenticate","children":[],"call":[]}," Fog Rackspace Databases Real endpoint_uri":{"type":"method","name":"endpoint_uri","children":[],"call":[]}," Fog Rackspace Databases Real request":{"type":"method","name":"request","children":[],"call":[" raise ","ServiceError  slurp ","InternalServerError  slurp ","BadRequest  slurp ","NotFound  slurp "]}," Fog Rackspace Databases Real initialize":{"type":"method","name":"initialize","children":[],"call":["Fog Core Connection  new "," endpoint_uri to_s "," endpoint_uri ","options [] "," deprecation_warnings "," authenticate "," setup_custom_endpoint "]}," Fog Rackspace Databases Real region":{"type":"method","name":"region","children":[],"call":[]}," Fog Rackspace Databases Real service_name":{"type":"method","name":"service_name","children":[],"call":[]}," Fog Rackspace Databases Mock request":{"type":"method","name":"request","children":[],"call":["Fog Mock  not_implemented "]}," Fog Rackspace escape":{"type":"method","name":"escape","children":[],"call":[]}," Fog Rackspace normalize_url":{"type":"method","name":"normalize_url","children":[],"call":[]}," Fog Rackspace json_response?":{"type":"method","name":"json_response?","children":[],"call":[]}," Fog Rackspace authenticate":{"type":"method","name":"authenticate","children":[],"call":[]}," Fog Rackspace Errors BadRequest slurp":{"type":"method","name":"slurp","children":[],"call":[]}," Fog Rackspace Errors BadRequest to_s":{"type":"method","name":"to_s","children":[],"call":[" validation_errors "]}," Fog Rackspace Errors ServiceError extract_message":{"type":"method","name":"extract_message","children":[],"call":[]}," Fog Rackspace Errors ServiceError set_transaction_id":{"type":"method","name":"set_transaction_id","children":[],"call":["error response headers [] ","service request_id_header ","error response headers ","error response ","service respond_to? "]}," Fog Rackspace Errors ServiceError slurp":{"type":"method","name":"slurp","children":[],"call":[]}," Fog Rackspace Errors ServiceError to_s":{"type":"method","name":"to_s","children":[],"call":[" transaction_id "," status_code "]}," Fog Compute RackspaceV2 Real authenticate_v1":{"type":"method","name":"authenticate_v1","children":[],"call":["credentials [] "," append_tenant_v1 ","Fog Rackspace  authenticate ","Fog Rackspace  authenticate  [] "]}," Fog Compute RackspaceV2 Real append_tenant_v1":{"type":"method","name":"append_tenant_v1","children":[],"call":["@uri path= ","@uri path ","URI  parse ","credentials [] ","credentials [] match [] ","credentials [] match ","URI  parse  path= ","URI  parse  path "]}," Fog Compute RackspaceV2 Real deprecation_warnings":{"type":"method","name":"deprecation_warnings","children":[],"call":["Fog Logger  deprecation ","@identity_service service_catalog display_service_regions "," service_name ","@identity_service service_catalog "," v2_authentication? ","(const nil :DFW_ENDPOINT) include? ","options [] ","@identity_service service_catalog display_service_@identity_service service_catalog display_service_regions  "]}," Fog Compute RackspaceV2 Real setup_custom_endpoint":{"type":"method","name":"setup_custom_endpoint","children":[],"call":["options [] "," v2_authentication? ","Fog Rackspace  normalize_url "]}," Fog Compute RackspaceV2 Real endpoint_uri":{"type":"method","name":"endpoint_uri","children":[],"call":[]}," Fog Compute RackspaceV2 Real region":{"type":"method","name":"region","children":[],"call":[]}," Fog Compute RackspaceV2 Real request_id_header":{"type":"method","name":"request_id_header","children":[],"call":[]}," Fog Compute RackspaceV2 Real service_name":{"type":"method","name":"service_name","children":[],"call":[]}," Fog Compute RackspaceV2 Real authenticate":{"type":"method","name":"authenticate","children":[],"call":[]}," Fog Compute RackspaceV2 Real request":{"type":"method","name":"request","children":[],"call":[" raise ","ServiceError  slurp ","InternalServerError  slurp ","BadRequest  slurp ","NotFound  slurp "]}," Fog Compute RackspaceV2 Real initialize":{"type":"method","name":"initialize","children":[],"call":["Fog Core Connection  new "," endpoint_uri to_s "," endpoint_uri ","options [] "," deprecation_warnings "," authenticate "," setup_custom_endpoint "]}," Fog Compute RackspaceV2 Mock response":{"type":"method","name":"response","children":[],"call":[" raise ","Excon Errors  status_error ","(splat\n  (send\n    (lvar :params) :[]\n    (sym :expects))) include? ! ","(splat\n  (send\n    (lvar :params) :[]\n    (sym :expects))) include? ","response status ","params [] ","params key? ","Excon Response  new ","Excon Response  new  status "]}," Fog Compute RackspaceV2 Mock request":{"type":"method","name":"request","children":[],"call":["Fog Mock  not_implemented "]}," Fog Compute RackspaceV2 Mock initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," Fog Compute RackspaceV2 InvalidImageStateException to_s":{"type":"method","name":"to_s","children":[],"call":[" current_state "," desired_state "]}," Fog Compute RackspaceV2 InvalidServerStateException to_s":{"type":"method","name":"to_s","children":[],"call":[" current_state "," desired_state "]}," Fog Compute RackspaceV2 InvalidStateException initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Fog Compute Rackspace Real authenticate_v1":{"type":"method","name":"authenticate_v1","children":[],"call":["credentials [] "," endpoint_uri ","Fog Rackspace  authenticate ","Fog Rackspace  authenticate  [] "]}," Fog Compute Rackspace Real deprecation_warnings":{"type":"method","name":"deprecation_warnings","children":[],"call":["Fog Logger  deprecation ","options [] "]}," Fog Compute Rackspace Real endpoint_uri":{"type":"method","name":"endpoint_uri","children":[],"call":[]}," Fog Compute Rackspace Real region":{"type":"method","name":"region","children":[],"call":[]}," Fog Compute Rackspace Real service_name":{"type":"method","name":"service_name","children":[],"call":[]}," Fog Compute Rackspace Real authenticate":{"type":"method","name":"authenticate","children":[],"call":[]}," Fog Compute Rackspace Real service_net?":{"type":"method","name":"service_net?","children":[],"call":["@rackspace_servicenet == "]}," Fog Compute Rackspace Real request":{"type":"method","name":"request","children":[],"call":[" raise ","ServiceError  slurp ","InternalServerError  slurp ","BadRequest  slurp ","NotFound  slurp "]}," Fog Compute Rackspace Real reload":{"type":"method","name":"reload","children":[],"call":["@connection reset "]}," Fog Compute Rackspace Real initialize":{"type":"method","name":"initialize","children":[],"call":["Fog Core Connection  new "," endpoint_uri to_s "," endpoint_uri ","options [] ","Excon  defaults []= ","Excon  defaults "," service_net? "," authenticate ","Fog Rackspace  normalize_url "]}," Fog Compute Rackspace Mock reset_data":{"type":"method","name":"reset_data","children":[],"call":[" class data delete "," class data "," class "]}," Fog Compute Rackspace Mock data":{"type":"method","name":"data","children":[],"call":[" class data [] "," class data "," class "]}," Fog Compute Rackspace Mock initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," Fog Compute Rackspace Mock reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog Rackspace CDNV2 Real endpoint_uri":{"type":"method","name":"endpoint_uri","children":[],"call":[]}," Fog Rackspace CDNV2 Real region":{"type":"method","name":"region","children":[],"call":[]}," Fog Rackspace CDNV2 Real request_id_header":{"type":"method","name":"request_id_header","children":[],"call":[]}," Fog Rackspace CDNV2 Real service_name":{"type":"method","name":"service_name","children":[],"call":[]}," Fog Rackspace CDNV2 Real authenticate":{"type":"method","name":"authenticate","children":[],"call":[]}," Fog Rackspace CDNV2 Real home_document":{"type":"method","name":"home_document","children":[],"call":[" get_home_document body "," get_home_document "]}," Fog Rackspace CDNV2 Real ping":{"type":"method","name":"ping","children":[],"call":[" get_ping status == "," get_ping status "," get_ping "]}," Fog Rackspace CDNV2 Real request_uri":{"type":"method","name":"request_uri","children":[],"call":["Addressable URI  new request_uri ","Addressable URI  new "," require ","options == "]}," Fog Rackspace CDNV2 Real request":{"type":"method","name":"request","children":[],"call":[" raise ","ServiceError  slurp ","InternalServerError  slurp ","BadRequest  slurp ","NotFound  slurp "]}," Fog Rackspace CDNV2 Real initialize":{"type":"method","name":"initialize","children":[],"call":["Fog Core Connection  new "," endpoint_uri to_s "," endpoint_uri ","options [] "," authenticate "]}," Fog Rackspace CDNV2 Mock response":{"type":"method","name":"response","children":[],"call":[" raise ","Excon Errors  status_error ","(splat\n  (send\n    (lvar :params) :[]\n    (sym :expects))) include? ! ","(splat\n  (send\n    (lvar :params) :[]\n    (sym :expects))) include? ","response status ","params [] ","params key? ","Excon Response  new ","Excon Response  new  status "]}," Fog Rackspace CDNV2 Mock request":{"type":"method","name":"request","children":[],"call":["Fog Mock  not_implemented "]}," Fog Rackspace CDNV2 Mock initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," Fog CDN Rackspace Real authenticate":{"type":"method","name":"authenticate","children":[],"call":[]}," Fog CDN Rackspace Real authenticate_v1":{"type":"method","name":"authenticate_v1","children":[],"call":["credentials [] "," endpoint_uri ","Fog Rackspace  authenticate ","Fog Rackspace  authenticate  [] "]}," Fog CDN Rackspace Real request":{"type":"method","name":"request","children":[],"call":[" raise ","Fog Storage Rackspace ServiceError  slurp ","Fog Storage Rackspace InternalServerError  slurp ","Fog Storage Rackspace BadRequest  slurp ","Fog Storage Rackspace NotFound  slurp "]}," Fog CDN Rackspace Real purge":{"type":"method","name":"purge","children":[],"call":[" delete_object ","file key ","file directory key ","file directory "," raise ","Fog Errors NotImplemented  new "," object class "," object ","file is_a? "]}," Fog CDN Rackspace Real reload":{"type":"method","name":"reload","children":[],"call":["@cdn_connection reset "]}," Fog CDN Rackspace Real initialize":{"type":"method","name":"initialize","children":[],"call":["Fog Core Connection  new "," endpoint_uri to_s "," endpoint_uri ","options [] "," authenticate "," apply_options "]}," Fog CDN Rackspace Mock reset_data":{"type":"method","name":"reset_data","children":[],"call":[" class data delete "," class data "," class "]}," Fog CDN Rackspace Mock purge":{"type":"method","name":"purge","children":[],"call":[" raise ","Fog Errors NotImplemented  new ","object class ","object is_a? "]}," Fog CDN Rackspace Mock data":{"type":"method","name":"data","children":[],"call":[" class data [] "," class data "," class "]}," Fog CDN Rackspace Mock initialize":{"type":"method","name":"initialize","children":[],"call":[" endpoint_uri ! ! "," endpoint_uri ! "," endpoint_uri "," authenticate "," apply_options "]}," Fog CDN Rackspace Mock reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog CDN Rackspace Base urls_from_headers":{"type":"method","name":"urls_from_headers","children":[],"call":["h []= ","headers [] ","URI_HEADERS  [] ","URI_HEADERS  keys each ","URI_HEADERS  keys ","URI_HEADERS  URI_HEADERS  [] s each ","URI_HEADERS  URI_HEADERS  [] s "]}," Fog CDN Rackspace Base urls":{"type":"method","name":"urls","children":[],"call":[" urls_from_headers ","response headers ","response headers [] == ","response headers [] "," head_container ","container key "," head_container  headers "," head_container  headers [] == "," head_container  headers [] "]}," Fog CDN Rackspace Base publish_container":{"type":"method","name":"publish_container","children":[],"call":[" urls_from_headers ","response headers "," put_container ","container key "," put_container  headers "]}," Fog CDN Rackspace Base endpoint_uri":{"type":"method","name":"endpoint_uri","children":[],"call":[]}," Fog CDN Rackspace Base enabled?":{"type":"method","name":"enabled?","children":[],"call":[]}," Fog CDN Rackspace Base request_id_header":{"type":"method","name":"request_id_header","children":[],"call":[]}," Fog CDN Rackspace Base region":{"type":"method","name":"region","children":[],"call":[]}," Fog CDN Rackspace Base service_name":{"type":"method","name":"service_name","children":[],"call":[]}," Fog CDN Rackspace Base apply_options":{"type":"method","name":"apply_options","children":[],"call":["options [] "]}," Fog Rackspace BlockStorage Real authenticate_v1":{"type":"method","name":"authenticate_v1","children":[],"call":["credentials [] "," append_tenant_v1 ","Fog Rackspace  authenticate ","Fog Rackspace  authenticate  [] "]}," Fog Rackspace BlockStorage Real append_tenant_v1":{"type":"method","name":"append_tenant_v1","children":[],"call":["@uri path= ","@uri path ","URI  parse ","credentials [] ","credentials [] match [] ","credentials [] match ","URI  parse  path= ","URI  parse  path "]}," Fog Rackspace BlockStorage Real deprecation_warnings":{"type":"method","name":"deprecation_warnings","children":[],"call":["Fog Logger  deprecation ","@identity_service service_catalog display_service_regions "," service_name ","@identity_service service_catalog "," v2_authentication? ","(const nil :DFW_ENDPOINT) include? ","options [] ","@identity_service service_catalog display_service_@identity_service service_catalog display_service_regions  "]}," Fog Rackspace BlockStorage Real setup_custom_endpoint":{"type":"method","name":"setup_custom_endpoint","children":[],"call":["options [] "," v2_authentication? ","Fog Rackspace  normalize_url "]}," Fog Rackspace BlockStorage Real endpoint_uri":{"type":"method","name":"endpoint_uri","children":[],"call":[]}," Fog Rackspace BlockStorage Real request_id_header":{"type":"method","name":"request_id_header","children":[],"call":[]}," Fog Rackspace BlockStorage Real region":{"type":"method","name":"region","children":[],"call":[]}," Fog Rackspace BlockStorage Real service_name":{"type":"method","name":"service_name","children":[],"call":[]}," Fog Rackspace BlockStorage Real authenticate":{"type":"method","name":"authenticate","children":[],"call":[]}," Fog Rackspace BlockStorage Real request":{"type":"method","name":"request","children":[],"call":[" raise ","ServiceError  slurp ","InternalServerError  slurp ","BadRequest  slurp ","NotFound  slurp "]}," Fog Rackspace BlockStorage Real initialize":{"type":"method","name":"initialize","children":[],"call":["Fog Core Connection  new "," endpoint_uri to_s "," endpoint_uri ","options [] "," deprecation_warnings "," authenticate "," setup_custom_endpoint "]}," Fog Rackspace BlockStorage Mock response":{"type":"method","name":"response","children":[],"call":[" raise ","Excon Errors  status_error ","(splat\n  (send\n    (lvar :params) :[]\n    (sym :expects))) include? ! ","(splat\n  (send\n    (lvar :params) :[]\n    (sym :expects))) include? ","response status ","params [] ","params key? ","Excon Response  new ","Excon Response  new  status "]}," Fog Rackspace BlockStorage Mock request":{"type":"method","name":"request","children":[],"call":["Fog Mock  not_implemented "]}," Fog Rackspace BlockStorage Mock initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," Fog Rackspace AutoScale Real region":{"type":"method","name":"region","children":[],"call":["@options [] "]}," Fog Rackspace AutoScale Real request_id_header":{"type":"method","name":"request_id_header","children":[],"call":[]}," Fog Rackspace AutoScale Real service_name":{"type":"method","name":"service_name","children":[],"call":[]}," Fog Rackspace AutoScale Real authenticate":{"type":"method","name":"authenticate","children":[],"call":[" select_options "]}," Fog Rackspace AutoScale Real endpoint_uri":{"type":"method","name":"endpoint_uri","children":[],"call":["@options [] "]}," Fog Rackspace AutoScale Real request":{"type":"method","name":"request","children":[],"call":[" raise ","ServiceError  slurp ","InternalServerError  slurp ","BadRequest  slurp ","NotFound  slurp "]}," Fog Rackspace AutoScale Real initialize":{"type":"method","name":"initialize","children":[],"call":["Fog Core Connection  new ","@options [] "," endpoint_uri to_s "," endpoint_uri "," authenticate "]}," Fog Rackspace AutoScale Mock request":{"type":"method","name":"request","children":[],"call":["Fog Mock  not_implemented "]}," Fog Rackspace AutoScale Mock initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," Fog Rackspace AutoScale BadRequest slurp":{"type":"method","name":"slurp","children":[],"call":[]}," Fog Compute RackspaceV2 Mock stop_server":{"type":"method","name":"stop_server","children":[],"call":[" response ","server []= "," data [] [] "," data [] "," data "," data [] []  []= "]}," Fog Compute RackspaceV2 Real stop_server":{"type":"method","name":"stop_server","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute RackspaceV2 Mock start_server":{"type":"method","name":"start_server","children":[],"call":[" response ","server []= "," data [] [] "," data [] "," data "," data [] []  []= "]}," Fog Compute RackspaceV2 Real start_server":{"type":"method","name":"start_server","children":[],"call":[" request ","Fog JSON  encode "]}," Fog Compute RackspaceV2 Server stop":{"type":"method","name":"stop","children":[],"call":[" service stop_server "," identity "," service "," requires "]}," Fog Compute RackspaceV2 Server start":{"type":"method","name":"start","children":[],"call":[" service start_server "," identity "," service "," requires "]}}