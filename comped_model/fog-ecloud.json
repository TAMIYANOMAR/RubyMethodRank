{" Fog Compute Ecloud Real virtual_machine_upload_file":{"type":"method","name":"virtual_machine_upload_file","children":[],"call":[" request ","vm_uri + ","options [] ","options [] bytesize ","options [] bytesize - ","options [] [] "," validate_upload_file_options "]}," Fog Compute Ecloud Shared validate_upload_file_options":{"type":"method","name":"validate_upload_file_options","children":[],"call":[" raise ","ArgumentError  new ","(send\n  (lvar :required_opts) :-\n  (send\n    (lvar :options) :keys)) map join ","(send\n  (lvar :required_opts) :-\n  (send\n    (lvar :options) :keys)) map ","required_opts - ","options keys ","options key? ","required_opts all? "]}," Fog Compute Ecloud Mock virtual_machine_import":{"type":"method","name":"virtual_machine_import","children":[],"call":[" data [] []= "," data [] "," data ","server merge! "," response ","options [] merge ","options [] "," layout [] [] push "," layout [] [] "," layout [] "," layout ","row [] [] push ","row [] [] ","row [] ","Fog Ecloud  keep ","environment [] ","links << ","networks each ","Fog Ecloud  mac_address ","i to_s ","networks each_with_index map ","networks each_with_index ","Fog Mock  random_numbers to_i ","Fog Mock  random_numbers "," data [] [] dup "," data [] [] "," id_from_uri ","options [] map ","compute_pool [] ","options [] match [] to_i ","options [] match [] ","options [] match "," validate_import_server_options "," validate_import_server_options  [] merge "," validate_import_server_options  [] "," data [] []  [] "," validate_import_server_options  [] map "," data [] [] dup  [] "," validate_import_server_options  [] match [] to_i "," validate_import_server_options  [] match [] "," validate_import_server_options  [] match "," validate_import_server_ validate_import_server_options  "]}," Fog Compute Ecloud Real virtual_machine_import":{"type":"method","name":"virtual_machine_import","children":[],"call":[" request ","options [] "," build_request_body_import "," validate_import_server_options "," validate_import_server_options  [] "," validate_import_server_ validate_import_server_options  "]}," Fog Compute Ecloud Shared build_request_body_import":{"type":"method","name":"build_request_body_import","children":[],"call":["xml OperatingSystem ","options [] [] ","options [] ","xml Network ","xml NetworkMapping ","xml NetworkMappings ","xml CatalogEntry ","xml Tag ","options [] each ","xml Tags ","xml Description ","xml NewGroup ","xml NewRow ","xml Layout ","xml Value ","xml Unit ","xml Memory ","xml ProcessorCount ","xml ImportVirtualMachine ","Builder XmlMarkup  new ","Builder XmlMarkup  new  OperatingSystem ","Builder XmlMarkup  new  Network ","Builder XmlMarkup  new  NetworkMapping ","Builder XmlMarkup  new  NetworkMappings ","Builder XmlMarkup  new  CatalogEntry ","Builder XmlMarkup  new  Tag ","Builder XmlMarkup  new  Tags ","Builder XmlMarkup  new  Description ","Builder XmlMarkup  new  NewGroup ","Builder XmlMarkup  new  NewRow ","Builder XmlMarkup  new  Layout ","Builder XmlMarkup  new  Value ","Builder XmlMarkup  new  Unit ","Builder XmlMarkup  new  Memory ","Builder XmlMarkup  new  ProcessorCount ","Builder XmlMarkup  new  ImportVirtualMachine "]}," Fog Compute Ecloud Shared validate_import_server_options":{"type":"method","name":"validate_import_server_options","children":[],"call":["options []= ","options [] "," raise ","ArgumentError  new ","(send\n  (lvar :required_opts) :-\n  (send\n    (lvar :options) :keys)) map join ","(send\n  (lvar :required_opts) :-\n  (send\n    (lvar :options) :keys)) map ","required_opts - ","options keys ","options key? ","required_opts all? "]}," Fog Compute Ecloud Mock virtual_machine_edit_hardware_configuration":{"type":"method","name":"virtual_machine_edit_hardware_configuration","children":[],"call":[" response "," data [] []= "," data [] "," data ","Time  now iso8601 ","Time  now ","Fog Ecloud  keep ","Fog Mock  random_numbers "," data [] [] ","server_id to_i ","vm_uri match [] ","vm_uri match "," data [] [] _id to_i ","vm_uri match []  to_i "]}," Fog Compute Ecloud Real build_request_body_edit_hardware_configuration":{"type":"method","name":"build_request_body_edit_hardware_configuration","children":[],"call":["xml Network ","nic [] [] ","nic [] ","xml MacAddress ","xml UnitNumber ","xml Nic ","data [] each ","data [] ","xml Nics ","xml Value ","disk [] [] ","disk [] ","xml Unit ","xml Size ","xml Index ","xml Disk ","xml Disks ","xml Memory ","xml ProcessorCount ","xml HardwareConfiguration ","Builder XmlMarkup  new ","Builder XmlMarkup  new  Network ","Builder XmlMarkup  new  MacAddress ","Builder XmlMarkup  new  UnitNumber ","Builder XmlMarkup  new  Nic ","Builder XmlMarkup  new  Nics ","Builder XmlMarkup  new  Value ","Builder XmlMarkup  new  Unit ","Builder XmlMarkup  new  Size ","Builder XmlMarkup  new  Index ","Builder XmlMarkup  new  Disk ","Builder XmlMarkup  new  Disks ","Builder XmlMarkup  new  Memory ","Builder XmlMarkup  new  ProcessorCount ","Builder XmlMarkup  new  HardwareConfiguration "]}," Fog Compute Ecloud Real virtual_machine_edit_hardware_configuration":{"type":"method","name":"virtual_machine_edit_hardware_configuration","children":[],"call":[" request "," build_request_body_edit_hardware_configuration "," validate_data "," build_request_ build_request_body_edit_hardware_configuration _edit_hardware_configuration "]}," Fog Compute Ecloud Mock virtual_machine_edit_assigned_ips":{"type":"method","name":"virtual_machine_edit_assigned_ips","children":[],"call":[" response "," data [] []= "," data [] "," data ","Time  now iso8601 ","Time  now ","Fog Ecloud  keep ","Fog Mock  random_numbers ","ip []= ","server [] ","iph [] == ","iph [] ","network [] [] find ","network [] [] ","network [] ","net [] each ","net [] ","options each each ","options each "," data [] [] "," id_from_uri ","href match [] to_i ","href match [] ","href match "," data [] []  [] "," data [] []  [] [] find "," data [] []  [] [] "]}," Fog Compute Ecloud Real virtual_machine_edit_assigned_ips":{"type":"method","name":"virtual_machine_edit_assigned_ips","children":[],"call":[" request "," build_request_body_edit_assigned_ips "," build_request_ build_request_body_edit_assigned_ips _edit_assigned_ips "]}," Fog Compute Ecloud Shared build_request_body_edit_assigned_ips":{"type":"method","name":"build_request_body_edit_assigned_ips","children":[],"call":["xml IpAddress ","network [] each ","network [] ","xml IpAddresses ","xml Network ","networks each ","xml Networks ","xml AssignedIpAddresses ","Builder XmlMarkup  new ","Builder XmlMarkup  new  IpAddress ","Builder XmlMarkup  new  IpAddresses ","Builder XmlMarkup  new  Network ","Builder XmlMarkup  new  Networks ","Builder XmlMarkup  new  AssignedIpAddresses "]}," Fog Compute Ecloud Real virtual_machine_edit":{"type":"method","name":"virtual_machine_edit","children":[],"call":[" request "," build_request_body_edit "," validate_edit_server_options "," build_request_ build_request_body_edit _edit "]}," Fog Compute Ecloud Shared build_request_body_edit":{"type":"method","name":"build_request_body_edit","children":[],"call":["xml Tag ","options [] each ","options [] ","xml Tags ","xml Description ","xml VirtualMachine ","Builder XmlMarkup  new ","Builder XmlMarkup  new  Tag ","Builder XmlMarkup  new  Tags ","Builder XmlMarkup  new  Description ","Builder XmlMarkup  new  VirtualMachine "]}," Fog Compute Ecloud Shared validate_edit_server_options":{"type":"method","name":"validate_edit_server_options","children":[],"call":[" raise ","ArgumentError  new ","(send\n  (lvar :required_opts) :-\n  (send\n    (lvar :options) :keys)) map join ","(send\n  (lvar :required_opts) :-\n  (send\n    (lvar :options) :keys)) map ","required_opts - ","options keys ","options key? ","required_opts all? "]}," Fog Compute Ecloud Mock virtual_machine_detach_disk":{"type":"method","name":"virtual_machine_detach_disk","children":[],"call":[" data [] []= "," data [] "," data ","detached_disk merge! "," response ","disk [] == ","options [] [] ","options [] ","disk [] ","server [] [] [] delete_if ","server [] [] [] ","server [] [] ","server [] ","options [] [] [] ","Fog Ecloud  keep ","Fog Mock  random_numbers to_i ","Fog Mock  random_numbers "," data [] [] ","href match [] to_i ","href match [] ","href match "," data [] []  [] [] [] delete_if "," data [] []  [] [] [] "," data [] []  [] [] "," data [] []  [] "]}," Fog Compute Ecloud Real virtual_machine_detach_disk":{"type":"method","name":"virtual_machine_detach_disk","children":[],"call":[" request "," build_request_body_detach_disk "," build_request_ build_request_body_detach_disk _detach_disk "]}," Fog Compute Ecloud Shared build_request_body_detach_disk":{"type":"method","name":"build_request_body_detach_disk","children":[],"call":["xml Index ","options [] [] ","options [] ","xml Disk ","xml Description ","xml DetachDisk ","Builder XmlMarkup  new ","Builder XmlMarkup  new  Index ","Builder XmlMarkup  new  Disk ","Builder XmlMarkup  new  Description ","Builder XmlMarkup  new  DetachDisk "]}," Fog Compute Ecloud Mock virtual_machine_delete":{"type":"method","name":"virtual_machine_delete","children":[],"call":[" response "," data [] []= "," data [] "," data ","Time  now iso8601 ","Time  now ","Fog Ecloud  keep ","Fog Mock  random_numbers ","ip []= ","ip [] [] == ","server [] ","ip [] [] ","ip [] ","ip [] nil? ","network [] [] each ","network [] [] ","network [] "," data [] values each "," data [] values ","s [] == ","s [] ","group [] [] delete_if ","group [] [] ","group [] "," data [] delete "," data [] [] "," id_from_uri "," data [] []  [] "]}," Fog Compute Ecloud Mock virtual_machine_create_from_template":{"type":"method","name":"virtual_machine_create_from_template","children":[],"call":[" data [] []= "," data [] "," data ","server merge! ","compute_pool [] "," response ","options [] merge ","options [] ","layout [] [] push ","layout [] [] ","layout [] ","row [] [] push ","row [] [] ","row [] ","Fog Ecloud  keep ","environment [] "," data [] dup values "," data [] dup ","ip []= ","network [] "," data [] [] [] [] find "," data [] [] [] [] "," data [] [] [] "," data [] [] "," id_from_uri ","links << ","networks each ","Fog Ecloud  mac_address ","i to_s ","networks each_with_index map ","networks each_with_index "," data [] [] dup ","compute_pool_id to_i ","template_uri match captures ","template_uri match ","Fog Mock  random_numbers to_i ","Fog Mock  random_numbers "," validate_create_server_options "," data [] [] dup  [] "," validate_create_server_options  [] merge "," validate_create_server_options  [] "," data [] []  [] [] push "," data [] []  [] [] "," data [] []  [] ","options []  each ","options []  each_with_index map ","options []  each_with_index "," data [] [] dup _id to_i "," validate_create_server_ validate_create_server_options  "]}," Fog Compute Ecloud Real virtual_machine_create_from_template":{"type":"method","name":"virtual_machine_create_from_template","children":[],"call":[" request ","options [] "," build_request_body "," validate_create_server_options "," validate_create_server_options  [] "," validate_create_server_ validate_create_server_options  "]}," Fog Compute Ecloud Shared build_request_body":{"type":"method","name":"build_request_body","children":[],"call":["xml Template ","options [] ","xml PoweredOn ","xml SshKey ","xml SecondaryDns ","options [] [] ","xml PrimaryDns ","xml DnsSettings ","xml IpAddress ","uri [] ","xml Network ","xml NetworkAdapter ","options [] each ","options []= ","options [] is_a? ","xml NetworkAdapterSettings ","xml NetworkSettings ","xml LinuxCustomization ","xml LicenseKey ","xml Password ","xml WindowsCustomization ","options [] == ","xml Tag ","xml Tags ","xml Description ","xml NewGroup ","xml NewRow ","xml Layout ","xml Value ","xml Unit ","xml Memory ","xml ProcessorCount ","xml CreateVirtualMachine ","Builder XmlMarkup  new ","Builder XmlMarkup  new  Template ","Builder XmlMarkup  new  PoweredOn ","Builder XmlMarkup  new  SshKey ","Builder XmlMarkup  new  SecondaryDns ","Builder XmlMarkup  new  PrimaryDns ","Builder XmlMarkup  new  DnsSettings ","Builder XmlMarkup  new  IpAddress ","Builder XmlMarkup  new  Network ","Builder XmlMarkup  new  NetworkAdapter ","Builder XmlMarkup  new  NetworkAdapterSettings ","Builder XmlMarkup  new  NetworkSettings ","Builder XmlMarkup  new  LinuxCustomization ","Builder XmlMarkup  new  LicenseKey ","Builder XmlMarkup  new  Password ","Builder XmlMarkup  new  WindowsCustomization ","Builder XmlMarkup  new  Tag ","Builder XmlMarkup  new  Tags ","Builder XmlMarkup  new  Description ","Builder XmlMarkup  new  NewGroup ","Builder XmlMarkup  new  NewRow ","Builder XmlMarkup  new  Layout ","Builder XmlMarkup  new  Value ","Builder XmlMarkup  new  Unit ","Builder XmlMarkup  new  Memory ","Builder XmlMarkup  new  ProcessorCount ","Builder XmlMarkup  new  CreateVirtualMachine "]}," Fog Compute Ecloud Shared validate_create_server_options":{"type":"method","name":"validate_create_server_options","children":[],"call":["options []= ","network [] ","options [] [] ","options [] index ","options [] "," get_network body "," get_network ","options [] map! ","options [] is_a? "," raise ","ArgumentError  new ","(send\n  (lvar :required_opts) :-\n  (send\n    (lvar :options) :keys)) map join ","(send\n  (lvar :required_opts) :-\n  (send\n    (lvar :options) :keys)) map ","required_opts - ","options keys ","options key? ","required_opts all? ","required_opts push ","options [] == "," get_network body  [] "," get_ get_network body  body "," get_ get_network body  "]}," Fog Compute Ecloud Real virtual_machine_copy_identical":{"type":"method","name":"virtual_machine_copy_identical","children":[],"call":[" request "," build_request_body_identical "," validate_create_server_options_identical "," build_request_ build_request_body_identical _identical "," validate_create_server_ validate_create_server_options_identical _identical "]}," Fog Compute Ecloud Shared build_request_body_identical":{"type":"method","name":"build_request_body_identical","children":[],"call":["xml Description ","options [] ","xml NewGroup ","xml NewRow ","xml Layout ","xml Source ","xml CopyIdenticalVirtualMachine ","Builder XmlMarkup  new ","Builder XmlMarkup  new  Description ","Builder XmlMarkup  new  NewGroup ","Builder XmlMarkup  new  NewRow ","Builder XmlMarkup  new  Layout ","Builder XmlMarkup  new  Source ","Builder XmlMarkup  new  CopyIdenticalVirtualMachine "]}," Fog Compute Ecloud Shared validate_create_server_options_identical":{"type":"method","name":"validate_create_server_options_identical","children":[],"call":[" raise ","ArgumentError  new ","(send\n  (lvar :required_opts) :-\n  (send\n    (lvar :options) :keys)) map join ","(send\n  (lvar :required_opts) :-\n  (send\n    (lvar :options) :keys)) map ","required_opts - ","options keys ","options key? ","required_opts all? "]}," Fog Compute Ecloud Real virtual_machine_copy":{"type":"method","name":"virtual_machine_copy","children":[],"call":[" request "," build_request_body_copy "," validate_create_server_options_copy "," build_request_ build_request_body_copy _copy "," validate_create_server_ validate_create_server_options_copy _copy "]}," Fog Compute Ecloud Shared build_request_body_copy":{"type":"method","name":"build_request_body_copy","children":[],"call":["xml PoweredOn ","options [] ","xml Tag ","options [] each ","xml Tags ","xml Description ","xml SshKey ","xml SecondaryDns ","options [] [] ","xml PrimaryDns ","xml DnsSettings ","xml IpAddress ","uri [] ","xml Network ","xml NetworkAdapter ","options []= ","options [] is_a? ","xml NetworkAdapterSettings ","xml NetworkSettings ","xml LinuxCustomization ","xml LicenseKey ","xml Password ","xml WindowsCustomization ","options [] == ","xml NewGroup ","xml NewRow ","xml Layout ","xml Value ","xml Unit ","xml Memory ","xml ProcessorCount ","xml Source ","xml CopyVirtualMachine ","Builder XmlMarkup  new ","Builder XmlMarkup  new  PoweredOn ","Builder XmlMarkup  new  Tag ","Builder XmlMarkup  new  Tags ","Builder XmlMarkup  new  Description ","Builder XmlMarkup  new  SshKey ","Builder XmlMarkup  new  SecondaryDns ","Builder XmlMarkup  new  PrimaryDns ","Builder XmlMarkup  new  DnsSettings ","Builder XmlMarkup  new  IpAddress ","Builder XmlMarkup  new  Network ","Builder XmlMarkup  new  NetworkAdapter ","Builder XmlMarkup  new  NetworkAdapterSettings ","Builder XmlMarkup  new  NetworkSettings ","Builder XmlMarkup  new  LinuxCustomization ","Builder XmlMarkup  new  LicenseKey ","Builder XmlMarkup  new  Password ","Builder XmlMarkup  new  WindowsCustomization ","Builder XmlMarkup  new  NewGroup ","Builder XmlMarkup  new  NewRow ","Builder XmlMarkup  new  Layout ","Builder XmlMarkup  new  Value ","Builder XmlMarkup  new  Unit ","Builder XmlMarkup  new  Memory ","Builder XmlMarkup  new  ProcessorCount ","Builder XmlMarkup  new  Source ","Builder XmlMarkup  new  CopyVirtualMachine "]}," Fog Compute Ecloud Shared validate_create_server_options_copy":{"type":"method","name":"validate_create_server_options_copy","children":[],"call":["network [] ","options [] [] ","options [] index ","options [] "," get_network body "," get_network ","options [] map! ","options []= ","options [] is_a? "," raise ","ArgumentError  new ","(send\n  (lvar :required_opts) :-\n  (send\n    (lvar :options) :keys)) map join ","(send\n  (lvar :required_opts) :-\n  (send\n    (lvar :options) :keys)) map ","required_opts - ","options keys ","options key? ","required_opts all? ","required_opts push ","options [] == "," get_network body  [] "," get_ get_network body  body "," get_ get_network body  "]}," Fog Compute Ecloud Mock virtual_machine_attach_disk":{"type":"method","name":"virtual_machine_attach_disk","children":[],"call":[" response "," data [] []= "," data [] "," data ","Time  now iso8601 ","Time  now ","Fog Ecloud  keep ","Fog Mock  random_numbers to_i ","Fog Mock  random_numbers "," data [] delete ","server [] [] [] << ","server [] [] [] ","server [] [] ","server [] ","detached_disk []= ","(send\n  (send\n    (send\n      (block\n        (send\n          (send\n            (send\n              (send\n                (lvar :server) :[]\n                (sym :HardwareConfiguration)) :[]\n              (sym :Disks)) :[]\n            (sym :Disk)) :map)\n        (args\n          (arg :h))\n        (send\n          (send\n            (lvar :h) :[]\n            (sym :Index)) :to_i)) :sort) :last) :+\n  (int 1)) to_s ","(send\n  (send\n    (send\n      (send\n        (lvar :server) :[]\n        (sym :HardwareConfiguration)) :[]\n      (sym :Disks)) :[]\n    (sym :Disk)) :map) sort last + ","(send\n  (send\n    (send\n      (send\n        (lvar :server) :[]\n        (sym :HardwareConfiguration)) :[]\n      (sym :Disks)) :[]\n    (sym :Disk)) :map) sort last ","(send\n  (send\n    (send\n      (send\n        (lvar :server) :[]\n        (sym :HardwareConfiguration)) :[]\n      (sym :Disks)) :[]\n    (sym :Disk)) :map) sort ","h [] to_i ","h [] ","server [] [] [] map "," data [] [] ","options [] match [] to_i ","options [] match [] ","options [] match ","options [] ","href match [] to_i ","href match [] ","href match "," data [] []  [] [] [] << "," data [] []  [] [] [] "," data [] []  [] [] "," data [] []  [] "," data [] []  []= ","(send\n  (send\n    (send\n      (block\n        (send\n          (send\n            (send\n              (send\n                (lvar : data [] [] ) :[]\n                (sym :HardwareConfiguration)) :[]\n              (sym :Disks)) :[]\n            (sym :Disk)) :map)\n        (args\n          (arg :h))\n        (send\n          (send\n            (lvar :h) :[]\n            (sym :Index)) :to_i)) :sort) :last) :+\n  (int 1)) to_s ","(send\n  (send\n    (send\n      (send\n        (lvar : data [] [] ) :[]\n        (sym :HardwareConfiguration)) :[]\n      (sym :Disks)) :[]\n    (sym :Disk)) :map) sort last + ","(send\n  (send\n    (send\n      (send\n        (lvar : data [] [] ) :[]\n        (sym :HardwareConfiguration)) :[]\n      (sym :Disks)) :[]\n    (sym :Disk)) :map) sort last ","(send\n  (send\n    (send\n      (send\n        (lvar : data [] [] ) :[]\n        (sym :HardwareConfiguration)) :[]\n      (sym :Disks)) :[]\n    (sym :Disk)) :map) sort "," data [] []  [] [] [] map "]}," Fog Compute Ecloud Real virtual_machine_attach_disk":{"type":"method","name":"virtual_machine_attach_disk","children":[],"call":[" request "," build_request_body_attach_disk "," build_request_ build_request_body_attach_disk _attach_disk "]}," Fog Compute Ecloud Shared build_request_body_attach_disk":{"type":"method","name":"build_request_body_attach_disk","children":[],"call":["xml DetachedDisk ","options [] ","xml DetachedDisks ","xml AttachDisks ","Builder XmlMarkup  new ","Builder XmlMarkup  new  DetachedDisk ","Builder XmlMarkup  new  DetachedDisks ","Builder XmlMarkup  new  AttachDisks "]}," Fog Compute Ecloud Real generate_edit_trusted_network_groups_request":{"type":"method","name":"generate_edit_trusted_network_groups_request","children":[],"call":["xml Size ","xml Address ","xml Network ","network split ","data [] each ","data [] ","xml Networks ","xml IpAddress ","xml Hosts ","xml TrustedNetworkGroup ","Builder XmlMarkup  new ","Builder XmlMarkup  new  Size ","Builder XmlMarkup  new  Address ","Builder XmlMarkup  new  Network ","Builder XmlMarkup  new  Networks ","Builder XmlMarkup  new  IpAddress ","Builder XmlMarkup  new  Hosts ","Builder XmlMarkup  new  TrustedNetworkGroup "]}," Fog Compute Ecloud Real trusted_network_groups_edit":{"type":"method","name":"trusted_network_groups_edit","children":[],"call":[" request ","data [] "," generate_edit_trusted_network_groups_request "," raise ","ArgumentError  new "," validate_data "]}," Fog Compute Ecloud Real generate_create_trusted_network_groups_request":{"type":"method","name":"generate_create_trusted_network_groups_request","children":[],"call":["xml Size ","xml Address ","xml Network ","network split ","data [] each ","data [] ","xml Networks ","xml IpAddress ","xml Hosts ","xml CreateTrustedNetworkGroup ","Builder XmlMarkup  new ","Builder XmlMarkup  new  Size ","Builder XmlMarkup  new  Address ","Builder XmlMarkup  new  Network ","Builder XmlMarkup  new  Networks ","Builder XmlMarkup  new  IpAddress ","Builder XmlMarkup  new  Hosts ","Builder XmlMarkup  new  CreateTrustedNetworkGroup "]}," Fog Compute Ecloud Real trusted_network_groups_create":{"type":"method","name":"trusted_network_groups_create","children":[],"call":[" request ","data [] "," generate_create_trusted_network_groups_request "," raise ","ArgumentError  new "," validate_data "]}," Fog Compute Ecloud Real generate_rows_edit_request":{"type":"method","name":"generate_rows_edit_request","children":[],"call":["xml LayoutRow ","data [] ","Builder XmlMarkup  new ","Builder XmlMarkup  new  LayoutRow "]}," Fog Compute Ecloud Real rows_edit":{"type":"method","name":"rows_edit","children":[],"call":[" request ","data [] "," generate_rows_edit_request "," validate_data "]}," Fog Compute Ecloud Mock rows_delete":{"type":"method","name":"rows_delete","children":[],"call":[" response ","r [] == ","r [] ","layout [] [] delete_if ","layout [] [] ","layout [] "," data [] values each "," data [] values "," data [] "," data "," data [] delete "," id_from_uri "]}," Fog Compute Ecloud Real generate_rows_create_request":{"type":"method","name":"generate_rows_create_request","children":[],"call":["xml CreateLayoutRow ","data [] ","Builder XmlMarkup  new ","Builder XmlMarkup  new  CreateLayoutRow "]}," Fog Compute Ecloud Real rows_create":{"type":"method","name":"rows_create","children":[],"call":[" request ","data [] "," generate_rows_create_request "," validate_data "]}," Fog Compute Ecloud Real generate_rnat_associations_edit_network_request":{"type":"method","name":"generate_rnat_associations_edit_network_request","children":[],"call":["xml Rnat ","data [] ","xml NetworkRnat ","Builder XmlMarkup  new ","Builder XmlMarkup  new  Rnat ","Builder XmlMarkup  new  NetworkRnat "]}," Fog Compute Ecloud Real rnat_associations_edit_network":{"type":"method","name":"rnat_associations_edit_network","children":[],"call":[" request ","data [] "," generate_rnat_associations_edit_network_request "," validate_data "]}," Fog Compute Ecloud Real generate_rnat_associations_create_device_request":{"type":"method","name":"generate_rnat_associations_create_device_request","children":[],"call":["xml IpAddress ","data [] ","xml PublicIp ","xml CreateRnatAssociation ","Builder XmlMarkup  new ","Builder XmlMarkup  new  IpAddress ","Builder XmlMarkup  new  PublicIp ","Builder XmlMarkup  new  CreateRnatAssociation "]}," Fog Compute Ecloud Real rnat_associations_create_device":{"type":"method","name":"rnat_associations_create_device","children":[],"call":[" request ","data [] "," generate_rnat_associations_create_device_request "," validate_data "]}," Fog Compute Ecloud Real node_service_edit":{"type":"method","name":"node_service_edit","children":[],"call":[" request ","options [] "," build_node_service_body_edit "," validate_edit_node_service_options "," build_node_service_ build_node_service_body_edit _edit "]}," Fog Compute Ecloud Shared build_node_service_body_edit":{"type":"method","name":"build_node_service_body_edit","children":[],"call":["xml Description ","options [] ","xml Enabled ","xml NodeService ","Builder XmlMarkup  new ","xml LoadBalancingMethod ","xml BackupInternetService "," service_data [] [] "," service_data [] "," service_data ","options [] [] ","xml TrustedNetworkGroup ","xml RedirectUrl ","xml Timeout ","xml Type ","xml Persistence ","xml InternetService ","Builder XmlMarkup  new  Description ","Builder XmlMarkup  new  Enabled ","Builder XmlMarkup  new  NodeService ","Builder XmlMarkup  new  LoadBalancingMethod ","Builder XmlMarkup  new  BackupInternetService ","Builder XmlMarkup  new  TrustedNetworkGroup ","Builder XmlMarkup  new  RedirectUrl ","Builder XmlMarkup  new  Timeout ","Builder XmlMarkup  new  Type ","Builder XmlMarkup  new  Persistence ","Builder XmlMarkup  new  InternetService "]}," Fog Compute Ecloud Shared validate_edit_node_service_options":{"type":"method","name":"validate_edit_node_service_options","children":[],"call":[" raise ","ArgumentError  new ","(send\n  (lvar :required_opts) :-\n  (send\n    (lvar :options) :keys)) map join ","(send\n  (lvar :required_opts) :-\n  (send\n    (lvar :options) :keys)) map ","required_opts - ","options keys ","options key? ","required_opts all? "]}," Fog Compute Ecloud Mock node_service_delete":{"type":"method","name":"node_service_delete","children":[],"call":[" response "," data [] []= "," data [] "," data ","Time  now iso8601 ","Time  now ","Fog Ecloud  keep ","Fog Mock  random_numbers to_i ","Fog Mock  random_numbers "," data [] delete "," data [] [] dup "," data [] [] "," id_from_uri "]}," Fog Compute Ecloud Mock node_service_create":{"type":"method","name":"node_service_create","children":[],"call":[" data [] []= "," data [] "," data ","service merge! "," response ","network [] ","ip_address [] ","service_data [] ","Fog Ecloud  keep ","Fog Mock  random_numbers to_i ","Fog Mock  random_numbers ","ip [] == ","ip [] ","ip_addresses find ","ip_addresses is_a? ","network [] [] "," data [] [] ","network_id to_i ","service_data [] match captures ","service_data [] match "," data [] [] dup ","internet_service_id to_i ","service_data [] match [] "," validate_node_service_data "," data [] []  [] ","network [] []  find ","network [] []  is_a? "," data [] []  [] [] "," data [] [] _id to_i ","internet_Fog Mock  random_numbers to_i  to_i "," data [] [] dup _id to_i ","service_data [] match []  to_i "]}," Fog Compute Ecloud Real generate_node_service_request":{"type":"method","name":"generate_node_service_request","children":[],"call":["xml Description ","service_data [] ","xml Enabled ","xml Port ","xml IpAddress ","service_data [] scan [] ","service_data [] scan ","xml CreateNodeService ","Builder XmlMarkup  new ","Builder XmlMarkup  new  Description ","Builder XmlMarkup  new  Enabled ","Builder XmlMarkup  new  Port ","Builder XmlMarkup  new  IpAddress ","Builder XmlMarkup  new  CreateNodeService "]}," Fog Compute Ecloud Real node_service_create":{"type":"method","name":"node_service_create","children":[],"call":[" request ","service_data [] "," generate_node_service_request "," validate_node_service_data "]}," Fog Compute Ecloud Shared validate_node_service_data":{"type":"method","name":"validate_node_service_data","children":[],"call":[" raise ","ArgumentError  new ","(send\n  (lvar :required_opts) :-\n  (send\n    (lvar :service_data) :keys)) map join ","(send\n  (lvar :required_opts) :-\n  (send\n    (lvar :service_data) :keys)) map ","required_opts - ","service_data keys ","service_data key? ","required_opts all? "]}," Fog Compute Ecloud Real generate_edit_ping_request":{"type":"method","name":"generate_edit_ping_request","children":[],"call":["xml Enabled ","data [] ","xml Downtime ","xml Retries ","xml ResponseTimeout ","xml Interval ","xml PingMonitor ","Builder XmlMarkup  new ","Builder XmlMarkup  new  Enabled ","Builder XmlMarkup  new  Downtime ","Builder XmlMarkup  new  Retries ","Builder XmlMarkup  new  ResponseTimeout ","Builder XmlMarkup  new  Interval ","Builder XmlMarkup  new  PingMonitor "]}," Fog Compute Ecloud Real monitors_edit_ping":{"type":"method","name":"monitors_edit_ping","children":[],"call":[" request ","data [] "," generate_edit_ping_request "," validate_data "]}," Fog Compute Ecloud Real generate_edit_http_request":{"type":"method","name":"generate_edit_http_request","children":[],"call":["xml ResponseCode ","xml [] each ","xml [] ","xml ResponseCodes ","xml HttpHeaders ","xml RequestUri ","data [] ","xml Enabled ","xml Downtime ","xml Retries ","xml ResponseTimeout ","xml Interval ","xml HttpMonitor ","Builder XmlMarkup  new ","Builder XmlMarkup  new  ResponseCode ","Builder XmlMarkup  new  [] each ","Builder XmlMarkup  new  [] ","Builder XmlMarkup  new  ResponseCodes ","Builder XmlMarkup  new  HttpHeaders ","Builder XmlMarkup  new  RequestUri ","Builder XmlMarkup  new  Enabled ","Builder XmlMarkup  new  Downtime ","Builder XmlMarkup  new  Retries ","Builder XmlMarkup  new  ResponseTimeout ","Builder XmlMarkup  new  Interval ","Builder XmlMarkup  new  HttpMonitor "]}," Fog Compute Ecloud Real monitors_edit_http":{"type":"method","name":"monitors_edit_http","children":[],"call":[" request ","data [] "," generate_edit_http_request "," validate_data "]}," Fog Compute Ecloud Real generate_edit_ecv_request":{"type":"method","name":"generate_edit_ecv_request","children":[],"call":["xml ReceiveString ","data [] ","xml HttpHeaders ","xml SendString ","xml Enabled ","xml Downtime ","xml Retries ","xml ResponseTimeout ","xml Interval ","xml EcvMonitor ","Builder XmlMarkup  new ","Builder XmlMarkup  new  ReceiveString ","Builder XmlMarkup  new  HttpHeaders ","Builder XmlMarkup  new  SendString ","Builder XmlMarkup  new  Enabled ","Builder XmlMarkup  new  Downtime ","Builder XmlMarkup  new  Retries ","Builder XmlMarkup  new  ResponseTimeout ","Builder XmlMarkup  new  Interval ","Builder XmlMarkup  new  EcvMonitor "]}," Fog Compute Ecloud Real monitors_edit_ecv":{"type":"method","name":"monitors_edit_ecv","children":[],"call":[" request ","data [] "," generate_edit_ecv_request "," validate_data "]}," Fog Compute Ecloud Real generate_ping_monitor_request":{"type":"method","name":"generate_ping_monitor_request","children":[],"call":["xml Enabled ","data [] ","xml Downtime ","xml Retries ","xml ResponseTimeout ","xml Interval ","xml CreatePingMonitor ","Builder XmlMarkup  new ","Builder XmlMarkup  new  Enabled ","Builder XmlMarkup  new  Downtime ","Builder XmlMarkup  new  Retries ","Builder XmlMarkup  new  ResponseTimeout ","Builder XmlMarkup  new  Interval ","Builder XmlMarkup  new  CreatePingMonitor "]}," Fog Compute Ecloud Real monitors_create_ping":{"type":"method","name":"monitors_create_ping","children":[],"call":[" request ","data [] "," generate_ping_monitor_request "," validate_data "]}," Fog Compute Ecloud Real generate_http_monitor_request":{"type":"method","name":"generate_http_monitor_request","children":[],"call":["xml ResponseCode ","data [] each ","data [] ","xml ResponseCodes ","xml HttpHeaders ","xml RequestUri ","xml Enabled ","xml Downtime ","xml Retries ","xml ResponseTimeout ","xml Interval ","xml CreateHttpMonitor ","Builder XmlMarkup  new ","Builder XmlMarkup  new  ResponseCode ","Builder XmlMarkup  new  ResponseCodes ","Builder XmlMarkup  new  HttpHeaders ","Builder XmlMarkup  new  RequestUri ","Builder XmlMarkup  new  Enabled ","Builder XmlMarkup  new  Downtime ","Builder XmlMarkup  new  Retries ","Builder XmlMarkup  new  ResponseTimeout ","Builder XmlMarkup  new  Interval ","Builder XmlMarkup  new  CreateHttpMonitor "]}," Fog Compute Ecloud Real monitors_create_http":{"type":"method","name":"monitors_create_http","children":[],"call":[" request ","data [] "," generate_http_monitor_request "," validate_data "]}," Fog Compute Ecloud Real generate_ecv_monitor_request":{"type":"method","name":"generate_ecv_monitor_request","children":[],"call":["xml ReceiveString ","data [] ","xml HttpHeaders ","xml SendString ","xml Enabled ","xml Downtime ","xml Retries ","xml ResponseTimeout ","xml Interval ","xml CreateEcvMonitor ","Builder XmlMarkup  new ","Builder XmlMarkup  new  ReceiveString ","Builder XmlMarkup  new  HttpHeaders ","Builder XmlMarkup  new  SendString ","Builder XmlMarkup  new  Enabled ","Builder XmlMarkup  new  Downtime ","Builder XmlMarkup  new  Retries ","Builder XmlMarkup  new  ResponseTimeout ","Builder XmlMarkup  new  Interval ","Builder XmlMarkup  new  CreateEcvMonitor "]}," Fog Compute Ecloud Real monitors_create_ecv":{"type":"method","name":"monitors_create_ecv","children":[],"call":[" request ","data [] "," generate_ecv_monitor_request "," validate_data "]}," Fog Compute Ecloud Shared validate_edit_internet_service_options":{"type":"method","name":"validate_edit_internet_service_options","children":[],"call":[" raise ","ArgumentError  new ","persistence [] ","options [] [] ","options [] ","(send\n  (lvar :required_opts) :-\n  (send\n    (lvar :options) :keys)) map join ","(send\n  (lvar :required_opts) :-\n  (send\n    (lvar :options) :keys)) map ","required_opts - ","options keys ","options key? ","required_opts all? "]}," Fog Compute Ecloud Mock internet_service_delete":{"type":"method","name":"internet_service_delete","children":[],"call":[" response "," data [] []= "," data [] "," data ","Time  now iso8601 ","Time  now ","Fog Ecloud  keep ","Fog Mock  random_numbers to_i ","Fog Mock  random_numbers "," data [] delete "," data [] [] dup "," data [] [] "," id_from_uri "]}," Fog Compute Ecloud Mock internet_service_create":{"type":"method","name":"internet_service_create","children":[],"call":[" data [] []= "," data [] "," data ","service merge! "," response ","service_data [] [] ","service_data [] ","Fog Ecloud  keep ","Fog Mock  random_numbers to_i ","Fog Mock  random_numbers "," data [] [] dup "," data [] [] ","public_ip_id to_i ","service_data [] match [] ","service_data [] match "," validate_internet_service_data "," data [] [] dup _id to_i ","service_data [] match []  to_i "]}," Fog Compute Ecloud Real generate_internet_service_request":{"type":"method","name":"generate_internet_service_request","children":[],"call":["xml LoadBalancingMethod ","service_data [] ","xml BackupInternetService ","service_data [] [] ","xml TrustedNetworkGroup ","xml RedirectUrl ","xml Timeout ","xml Type ","xml Persistence ","xml Description ","xml Enabled ","xml Port ","xml Protocol ","xml CreateInternetService ","Builder XmlMarkup  new ","Builder XmlMarkup  new  LoadBalancingMethod ","Builder XmlMarkup  new  BackupInternetService ","Builder XmlMarkup  new  TrustedNetworkGroup ","Builder XmlMarkup  new  RedirectUrl ","Builder XmlMarkup  new  Timeout ","Builder XmlMarkup  new  Type ","Builder XmlMarkup  new  Persistence ","Builder XmlMarkup  new  Description ","Builder XmlMarkup  new  Enabled ","Builder XmlMarkup  new  Port ","Builder XmlMarkup  new  Protocol ","Builder XmlMarkup  new  CreateInternetService "]}," Fog Compute Ecloud Real internet_service_create":{"type":"method","name":"internet_service_create","children":[],"call":[" request ","service_data [] "," generate_internet_service_request "," validate_internet_service_data "]}," Fog Compute Ecloud Shared validate_internet_service_data":{"type":"method","name":"validate_internet_service_data","children":[],"call":[" raise ","ArgumentError  new ","(send\n  (array\n    (sym :name)\n    (sym :href)) :-\n  (send\n    (send\n      (lvar :service_data) :[]\n      (sym :backup_internet_service)) :keys)) map join ","(send\n  (array\n    (sym :name)\n    (sym :href)) :-\n  (send\n    (send\n      (lvar :service_data) :[]\n      (sym :backup_internet_service)) :keys)) map ","(sym :name) - ","service_data [] keys ","service_data [] ","(send\n  (array\n    (sym :name)\n    (sym :href)) :-\n  (send\n    (send\n      (lvar :service_data) :[]\n      (sym :trusted_network_group)) :keys)) map join ","(send\n  (array\n    (sym :name)\n    (sym :href)) :-\n  (send\n    (send\n      (lvar :service_data) :[]\n      (sym :trusted_network_group)) :keys)) map ","(send\n  (lvar :required_opts) :-\n  (send\n    (lvar :service_data) :keys)) map join ","(send\n  (lvar :required_opts) :-\n  (send\n    (lvar :service_data) :keys)) map ","required_opts - ","service_data keys ","service_data key? ","required_opts all? "]}," Fog Compute Ecloud Real generate_groups_edit_request":{"type":"method","name":"generate_groups_edit_request","children":[],"call":["xml LayoutGroup ","data [] ","Builder XmlMarkup  new ","Builder XmlMarkup  new  LayoutGroup "]}," Fog Compute Ecloud Real groups_edit":{"type":"method","name":"groups_edit","children":[],"call":[" request ","data [] "," generate_groups_edit_request "," validate_data "]}," Fog Compute Ecloud Mock groups_delete":{"type":"method","name":"groups_delete","children":[],"call":[" response ","g [] == ","g [] ","row [] [] delete_if ","row [] [] ","row [] ","layout [] [] each ","layout [] [] ","layout [] "," data [] values each "," data [] values "," data [] "," data "," data [] delete "," id_from_uri "]}," Fog Compute Ecloud Real generate_groups_create_request":{"type":"method","name":"generate_groups_create_request","children":[],"call":["xml Row ","data [] ","xml CreateLayoutGroup ","Builder XmlMarkup  new ","Builder XmlMarkup  new  Row ","Builder XmlMarkup  new  CreateLayoutGroup "]}," Fog Compute Ecloud Real groups_create":{"type":"method","name":"groups_create","children":[],"call":[" request ","data [] "," generate_groups_create_request "," validate_data "]}," Fog Compute Ecloud Mock get_virtual_machine_assigned_ips":{"type":"method","name":"get_virtual_machine_assigned_ips","children":[],"call":[" response ","networks first ","networks size > ","networks size ","Fog Ecloud  keep ","network [] []= ","address first ","network [] ","ia [] ","network [] [] map ","network [] [] ","networks each "," deep_copy ","Fog Ecloud  slice ","networks map ","n [] == ","n [] "," data [] values select "," data [] values "," data [] "," data "," data [] [] ","compute_pool [] ","server [] ","virtual_machine_id to_i "," data [] []  [] "]}," Fog Compute Ecloud Real get_virtual_machine_assigned_ips":{"type":"method","name":"get_virtual_machine_assigned_ips","children":[],"call":[" request "," base_path "]}," Fog Compute Ecloud Mock get_templates":{"type":"method","name":"get_templates","children":[],"call":[" response ","templates first ","templates size > ","templates size ","Fog Ecloud  slice ","templates map ","template [] == ","template [] "," data [] values select "," data [] values "," data [] "," data "," data [] [] "," id_from_uri "]}," Fog Compute Ecloud Mock get_template":{"type":"method","name":"get_template","children":[],"call":[" response ","Fog Ecloud  slice "," data [] [] ","template_id to_i "," data [] "," data ","uri match captures ","uri match "," data [] [] _id to_i "]}," Fog Compute Ecloud Mock get_task":{"type":"method","name":"get_task","children":[],"call":[]}," Fog Compute Ecloud Mock get_ssh_keys":{"type":"method","name":"get_ssh_keys","children":[],"call":[" response ","(pair\n  (sym :href)\n  (dstr\n    (str \"/cloudapi/ecloud/admin/organizations/\")\n    (begin\n      (lvar :organization_id))\n    (str \"/sshKeys\"))) merge ","ssh_keys first ","ssh_keys size > ","ssh_keys size ","Fog Ecloud  slice ","ssh_keys map ","key [] == ","key [] "," data [] values select "," data [] values "," data [] "," data "," data [] [] "," id_from_uri ","(pair\n  (sym :href)\n  (dstr\n    (str \"/cloudapi/ecloud/admin/ data [] [] s/\")\n    (begin\n      (lvar : data [] [] _id))\n    (str \"/sshKeys\"))) merge ","(pair\n  (sym :href)\n  (dstr\n    (str \"/cloudapi/ecloud/admin/organizations/\")\n    (begin\n      (lvar : id_from_uri ))\n    (str \"/sshKeys\"))) merge "]}," Fog Compute Ecloud Mock get_ssh_key":{"type":"method","name":"get_ssh_key","children":[],"call":[" response ","Fog Ecloud  slice "," data [] [] ","ssh_key_id to_i "," data [] "," data "," id_from_uri to_i "," id_from_uri "," data [] [] _id to_i "," id_from_uri to_i  to_i "]}," Fog Compute Ecloud Mock get_servers":{"type":"method","name":"get_servers","children":[],"call":[" response ","(pair\n  (sym :href)\n  (lvar :uri)) merge ","servers first ","servers size > ","servers size ","Fog Ecloud  keep ","compute_pool nil? ","Fog Ecloud  slice ","servers map ","cp [] == ","cp [] "," data [] values select "," data [] values "," data [] "," data "," data [] [] "," id_from_uri ","uri =~ ","compute_pool_id nil? ","servers first [] ","servers empty? ","group [] [] ","group [] ","group [] []  first ","group [] []  size > ","group [] []  size "," data [] []  nil? ","group [] []  map "," data [] [] _id nil? "," id_from_uri  nil? ","servers first []  nil? ","group [] []  first [] ","group [] []  empty? "," data [] []  [] [] "," data [] []  [] "]}," Fog Compute Ecloud Mock get_server":{"type":"method","name":"get_server","children":[],"call":[" raise "," response ","Fog Ecloud  slice "," data [] [] "," data [] "," data ","server_id [] to_i ","server_id [] ","server_id nil? ","uri match "," data [] [] _id [] to_i ","server_id [] to_i  [] to_i ","uri match  [] to_i "," data [] [] _id [] ","server_id [] to_i  [] ","uri match  [] "," data [] [] _id nil? ","server_id [] to_i  nil? ","uri match  nil? "]}," Fog Compute Ecloud Mock get_row":{"type":"method","name":"get_row","children":[],"call":[" response "," data [] [] "," data [] "," data "," id_from_uri "]}," Fog Compute Ecloud Mock get_public_ips":{"type":"method","name":"get_public_ips","children":[],"call":[" response ","(pair\n  (sym :href)\n  (lvar :uri)) merge ","public_ips first ","public_ips size > ","public_ips size ","Fog Ecloud  slice ","public_ips map ","cp [] == ","cp [] "," data [] values select "," data [] values "," data [] "," data "," data [] [] "," id_from_uri "]}," Fog Compute Ecloud Mock get_public_ip":{"type":"method","name":"get_public_ip","children":[],"call":[" raise "," response ","Fog Ecloud  slice "," data [] [] "," data [] "," data "," id_from_uri "]}," Fog Compute Ecloud Mock get_organizations":{"type":"method","name":"get_organizations","children":[],"call":[" response ","(pair\n  (sym :xmlns_i)\n  (str \"http://www.w3.org/2001/XMLSchema-instance\")) merge ","organizations first ","organizations size > ","organizations size ","org delete ","organizations each "," data [] values dup "," data [] values "," data [] "," data "," data [] values dup  first "," data [] values dup  size > "," data [] values dup  size "," data [] values dup  each "]}," Fog Compute Ecloud Mock get_organization":{"type":"method","name":"get_organization","children":[],"call":[" response ","(pair\n  (sym :xmlns_i)\n  (str \"http://www.w3.org/2001/XMLSchema-instance\")) merge "," data [] [] "," data [] "," data "," id_from_uri "]}," Fog Compute Ecloud Mock get_operating_system_families":{"type":"method","name":"get_operating_system_families","children":[],"call":[" response ","(pair\n  (sym :href)\n  (lvar :uri)) merge ","operating_system_families first ","operating_system_families size > ","operating_system_families size ","osf [] ","(send\n  (lvar :operating_system_families) :map) map ","Fog Ecloud  slice ","operating_system_families map ","osf [] == "," data [] values select "," data [] values "," data [] "," data "," data [] [] "," id_from_uri "]}," Fog Compute Ecloud Mock get_operating_system":{"type":"method","name":"get_operating_system","children":[],"call":[" response ","Fog Ecloud  slice ","os [] == ","os [] ","operating_systems find "," data [] values select "," data [] values "," data [] "," data ","compute_pool_id to_i ","uri match captures ","uri match ","operating_systems detect ","compute_pool_id to_i  to_i "]}," Fog Compute Ecloud Mock get_nodes":{"type":"method","name":"get_nodes","children":[],"call":[" response "," data [] [] "," data [] "," data "," id_from_uri "]}," Fog Compute Ecloud Mock get_node":{"type":"method","name":"get_node","children":[],"call":[" raise "," response ","Fog Ecloud  slice "," data [] [] ","node_service_id to_i "," data [] "," data "," id_from_uri "," data [] [] _id to_i "," id_from_uri  to_i "]}," Fog Compute Ecloud Mock get_networks":{"type":"method","name":"get_networks","children":[],"call":[" response ","networks first ","networks size > ","networks size ","Fog Ecloud  keep ","Fog Ecloud  slice ","networks map ","(send\n  (send\n    (send\n      (send\n        (self) :data) :[]\n      (sym :networks)) :values) :select) dup ","n [] == ","n [] "," data [] values select "," data [] values "," data [] "," data "," data [] [] "," id_from_uri ","(send\n  (send\n    (send\n      (send\n        (self) :data) :[]\n      (sym :networks)) :values) :select) dup  first ","(send\n  (send\n    (send\n      (send\n        (self) :data) :[]\n      (sym :networks)) :values) :select) dup  size > ","(send\n  (send\n    (send\n      (send\n        (self) :data) :[]\n      (sym :networks)) :values) :select) dup  size ","(send\n  (send\n    (send\n      (send\n        (self) :data) :[]\n      (sym :networks)) :values) :select) dup  map ","(send\n  (send\n    (send\n      (send\n        (self) :data) :[]\n      (sym :(send\n  (send\n    (send\n      (send\n        (self) :data) :[]\n      (sym :networks)) :values) :select) dup )) :values) :select) dup "]}," Fog Compute Ecloud Mock get_network":{"type":"method","name":"get_network","children":[],"call":[" response ","Fog Ecloud  slice "," data [] [] dup "," data [] [] "," data [] "," data "," id_from_uri "]}," Fog Compute Ecloud Mock get_layouts":{"type":"method","name":"get_layouts","children":[],"call":[" response "," data [] [] "," data [] "," data "," id_from_uri "]}," Fog Compute Ecloud Mock get_layout":{"type":"method","name":"get_layout","children":[],"call":[" response "," data [] [] "," data [] "," data "," id_from_uri "]}," Fog Compute Ecloud Mock get_ip_address":{"type":"method","name":"get_ip_address","children":[],"call":[" response ","(send\n  (send\n    (send\n      (send\n        (send\n          (send\n            (self) :data) :[]\n          (sym :networks)) :[]\n        (send\n          (lvar :network_id) :to_i)) :[]\n      (sym :IpAddresses)) :[]\n    (sym :IpAddress)) :find) dup ","ip [] == ","ip [] "," data [] [] [] [] find "," data [] [] [] [] "," data [] [] [] "," data [] [] ","network_id to_i "," data [] "," data ","uri match captures ","uri match ","(send\n  (send\n    (send\n      (send\n        (send\n          (send nil :data) :[]\n          (sym :networks)) :[]\n        (send\n          (lvar :network_id) :to_i)) :[]\n      (sym :IpAddresses)) :[]\n    (sym :IpAddress)) :detect) dup "," data [] [] [] [] detect "]}," Fog Compute Ecloud Mock get_internet_services":{"type":"method","name":"get_internet_services","children":[],"call":[" response ","Fog Ecloud  slice "," data [] [] "," data [] "," data "," id_from_uri "]}," Fog Compute Ecloud Mock get_internet_service":{"type":"method","name":"get_internet_service","children":[],"call":[" raise "," response ","Fog Ecloud  slice "," data [] [] ","internet_service_id to_i "," data [] "," data "," id_from_uri "," data [] [] _id to_i "," id_from_uri  to_i "]}," Fog Compute Ecloud Mock get_hardware_configurations":{"type":"method","name":"get_hardware_configurations","children":[],"call":[]}," Fog Compute Ecloud Mock get_hardware_configuration":{"type":"method","name":"get_hardware_configuration","children":[],"call":[" response ","server_hardware_configuration [] ","server [] "," data [] [] ","server_id to_i "," data [] "," data ","uri match [] ","uri match ","server []  [] "," data [] [] _hardware_configuration [] "," data [] []  [] "," data [] [] _id to_i ","uri match []  to_i "]}," Fog Compute Ecloud Mock get_groups":{"type":"method","name":"get_groups","children":[],"call":[" response "," data [] [] "," data [] "," data "," id_from_uri "]}," Fog Compute Ecloud Mock get_group":{"type":"method","name":"get_group","children":[],"call":[" response "," data [] [] "," data [] "," data "," id_from_uri "]}," Fog Compute Ecloud Mock get_environment":{"type":"method","name":"get_environment","children":[],"call":[" response ","body delete ","environment dup "," throw ","e [] == ","e [] ","location [] [] find ","location [] [] ","location [] ","organization [] [] each ","organization [] [] ","organization [] ","organizations each "," catch "," data [] values "," data [] "," data "," id_from_uri ","location [] [] detect ","environment dup  delete "," data [] values  each "]}," Fog Compute Ecloud Mock get_detached_disks":{"type":"method","name":"get_detached_disks","children":[],"call":[" response ","(pair\n  (sym :href)\n  (lvar :uri)) merge ","Fog Ecloud  keep ","detached_disks first ","detached_disks size > ","detached_disks size ","Fog Ecloud  slice ","detached_disks map ","cp [] == ","cp [] "," data [] values select "," data [] values "," data [] "," data "," data [] [] "," id_from_uri "]}," Fog Compute Ecloud Mock get_detached_disk":{"type":"method","name":"get_detached_disk","children":[],"call":[" raise "," response ","Fog Ecloud  slice "," data [] [] "," data [] "," data "," id_from_uri "]}," Fog Compute Ecloud Mock get_compute_pools":{"type":"method","name":"get_compute_pools","children":[],"call":[" response ","(pair\n  (sym :href)\n  (lvar :uri)) merge ","compute_pools first ","compute_pools size > ","compute_pools size ","Fog Ecloud  slice ","compute_pools map ","cp [] == ","cp [] "," data [] values select "," data [] values "," data [] "," data "," data [] [] "," id_from_uri "]}," Fog Compute Ecloud Mock get_compute_pool":{"type":"method","name":"get_compute_pool","children":[],"call":[" response ","Fog Ecloud  slice "," data [] [] "," data [] "," data "," id_from_uri "]}," Fog Compute Ecloud Mock get_admin_organization":{"type":"method","name":"get_admin_organization","children":[],"call":[" response ","Fog Ecloud  slice "," data [] [] "," data [] "," data "," id_from_uri "]}," Fog Compute Ecloud Real generate_create_firewall_acls_request":{"type":"method","name":"generate_create_firewall_acls_request","children":[],"call":["xml End ","data [] [] ","data [] ","xml Start ","xml PortRange ","xml Network ","data [] [] [] ","xml IpAddress ","xml Size ","xml Address ","xml ExternalNetwork ","xml ExternalIpAddress ","xml Type ","xml Destination ","xml Source ","xml Protocol ","xml Permission ","xml CreateFirewallAcl ","Builder XmlMarkup  new ","Builder XmlMarkup  new  End ","Builder XmlMarkup  new  Start ","Builder XmlMarkup  new  PortRange ","Builder XmlMarkup  new  Network ","Builder XmlMarkup  new  IpAddress ","Builder XmlMarkup  new  Size ","Builder XmlMarkup  new  Address ","Builder XmlMarkup  new  ExternalNetwork ","Builder XmlMarkup  new  ExternalIpAddress ","Builder XmlMarkup  new  Type ","Builder XmlMarkup  new  Destination ","Builder XmlMarkup  new  Source ","Builder XmlMarkup  new  Protocol ","Builder XmlMarkup  new  Permission ","Builder XmlMarkup  new  CreateFirewallAcl "]}," Fog Compute Ecloud Real firewall_acls_create":{"type":"method","name":"firewall_acls_create","children":[],"call":[" request ","data [] "," generate_create_firewall_acls_request "," raise ","ArgumentError  new ","data [] [] "," validate_data "]}," Fog Compute Ecloud Real compute_pool_edit":{"type":"method","name":"compute_pool_edit","children":[],"call":[" request ","options [] "," build_compute_pool_body_edit "," validate_edit_compute_pool_options "," build_compute_pool_ build_compute_pool_body_edit _edit "]}," Fog Compute Ecloud Shared build_compute_pool_body_edit":{"type":"method","name":"build_compute_pool_body_edit","children":[],"call":["xml ComputePool ","options [] ","Builder XmlMarkup  new ","Builder XmlMarkup  new  ComputePool "]}," Fog Compute Ecloud Shared validate_edit_compute_pool_options":{"type":"method","name":"validate_edit_compute_pool_options","children":[],"call":[" raise ","ArgumentError  new ","(send\n  (lvar :required_opts) :-\n  (send\n    (lvar :options) :keys)) map join ","(send\n  (lvar :required_opts) :-\n  (send\n    (lvar :options) :keys)) map ","required_opts - ","options keys ","options key? ","required_opts all? "]}," Fog Compute Ecloud Real generate_backup_internet_service_request":{"type":"method","name":"generate_backup_internet_service_request","children":[],"call":["xml RedirectUrl ","data [] ","xml Timeout ","data [] [] ","xml Type ","xml Persistence ","xml Description ","xml Enabled ","xml Protocol ","xml BackupInternetService ","Builder XmlMarkup  new ","xml CreateBackupInternetService ","Builder XmlMarkup  new  RedirectUrl ","Builder XmlMarkup  new  Timeout ","Builder XmlMarkup  new  Type ","Builder XmlMarkup  new  Persistence ","Builder XmlMarkup  new  Description ","Builder XmlMarkup  new  Enabled ","Builder XmlMarkup  new  Protocol ","Builder XmlMarkup  new  BackupInternetService ","Builder XmlMarkup  new  CreateBackupInternetService "]}," Fog Compute Ecloud Real backup_internet_service_edit":{"type":"method","name":"backup_internet_service_edit","children":[],"call":[" request ","data [] "," generate_backup_internet_service_request "," raise ","ArgumentError  new ","data [] [] "," validate_data "]}," Fog Compute Ecloud Real backup_internet_service_create":{"type":"method","name":"backup_internet_service_create","children":[],"call":[" request ","data [] "," generate_backup_internet_service_request "," raise ","ArgumentError  new ","data [] [] "," validate_data "]}," Fog Compute Ecloud Real build_password_complexity_rules_edit":{"type":"method","name":"build_password_complexity_rules_edit","children":[],"call":["xml Description ","data [] ","xml Value ","data [] [] [] ","data [] [] ","xml Enabled ","xml MinimumGenerationsBeforeReuse ","xml MinimumLifetimeRestriction ","xml MaximumConsecutiveCharactersFromPriorPasswords ","xml MinimumSpecialCharacters ","xml MinimumNumericCharacters ","xml MinimumLowerCaseCharacters ","xml MinimumUpperCaseCharacters ","xml MinimumCharacters ","xml CustomRules ","data [] == ","xml RuleType ","xml PasswordComplexityRules ","Builder XmlMarkup  new ","Builder XmlMarkup  new  Description ","Builder XmlMarkup  new  Value ","Builder XmlMarkup  new  Enabled ","Builder XmlMarkup  new  MinimumGenerationsBeforeReuse ","Builder XmlMarkup  new  MinimumLifetimeRestriction ","Builder XmlMarkup  new  MaximumConsecutiveCharactersFromPriorPasswords ","Builder XmlMarkup  new  MinimumSpecialCharacters ","Builder XmlMarkup  new  MinimumNumericCharacters ","Builder XmlMarkup  new  MinimumLowerCaseCharacters ","Builder XmlMarkup  new  MinimumUpperCaseCharacters ","Builder XmlMarkup  new  MinimumCharacters ","Builder XmlMarkup  new  CustomRules ","Builder XmlMarkup  new  RuleType ","Builder XmlMarkup  new  PasswordComplexityRules "]}," Fog Compute Ecloud Real password_complexity_rules_edit":{"type":"method","name":"password_complexity_rules_edit","children":[],"call":[" request ","data [] "," build_password_complexity_rules_edit "," validate_data "," raise ","ArgumentError  new ","data [] == "]}," Fog Compute Ecloud Real build_login_banner_edit":{"type":"method","name":"build_login_banner_edit","children":[],"call":["xml Text ","data [] ","xml Display ","xml LoginBanner ","Builder XmlMarkup  new ","Builder XmlMarkup  new  Text ","Builder XmlMarkup  new  Display ","Builder XmlMarkup  new  LoginBanner "]}," Fog Compute Ecloud Real login_banner_edit":{"type":"method","name":"login_banner_edit","children":[],"call":[" request ","data [] "," build_login_banner_edit "," validate_data "]}," Fog Compute Ecloud Real build_authentication_levels_edit":{"type":"method","name":"build_authentication_levels_edit","children":[],"call":["xml SHA512Enabled ","data [] ","xml SHA256Enabled ","xml SHA1Enabled ","xml BasicEnabled ","xml AuthenticationLevels ","Builder XmlMarkup  new ","Builder XmlMarkup  new  SHA512Enabled ","Builder XmlMarkup  new  SHA256Enabled ","Builder XmlMarkup  new  SHA1Enabled ","Builder XmlMarkup  new  BasicEnabled ","Builder XmlMarkup  new  AuthenticationLevels "]}," Fog Compute Ecloud Real authentication_levels_edit":{"type":"method","name":"authentication_levels_edit","children":[],"call":[" request ","data [] "," build_authentication_levels_edit "," validate_data "]}," Fog Compute Ecloud VirtualMachineAssignedIps get":{"type":"method","name":"get","children":[],"call":[" new ","data body "," service get_virtual_machine_assigned_ip "," identity "," service "," raise ","e status_code == ","e status_code "," service get_virtual_machine_assigned_ip  body "]}," Fog Compute Ecloud VirtualMachineAssignedIps all":{"type":"method","name":"all","children":[],"call":[" load "," service get_virtual_machine_assigned_ips body "," service get_virtual_machine_assigned_ips "," identity "," service "]}," Fog Compute Ecloud VirtualMachineAssignedIp address=":{"type":"method","name":"address=","children":[],"call":[]}," Fog Compute Ecloud VirtualMachineAssignedIp network=":{"type":"method","name":"network=","children":[],"call":[" service ip_addresses new "," service base_path "," service "," service ip_addresses ","network_address [] [] ","network_address [] ","@network href match [] ","@network href match ","@network href "," service networks new "," service networks ","network [] ","network dup ","network []  [] [] ","network dup _address [] [] ","network []  [] ","network dup _address [] "," service networks new  href match [] ","@network dup  href match [] "," service networks new  href match ","@network dup  href match "," service networks new  href ","@network dup  href "," service network dup s new "," service network dup s ","network dup  [] ","network dup  dup "]}," Fog Compute Ecloud VirtualMachineAssignedIp id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud Users get":{"type":"method","name":"get","children":[],"call":[" new ","data body "," service get_user "," service "," raise ","e status_code == ","e status_code "," service get_user  body "]}," Fog Compute Ecloud Users all":{"type":"method","name":"all","children":[],"call":[" load "," service get_users body [] "," service get_users body "," service get_users "," href "," service "]}," Fog Compute Ecloud User id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud User api_keys":{"type":"method","name":"api_keys","children":[],"call":["Fog Compute Ecloud ApiKeys  new "," id "," service base_path "," service "]}," Fog Compute Ecloud User roles":{"type":"method","name":"roles","children":[],"call":["Fog Compute Ecloud Roles  new "," id "," service base_path "," service "]}," Fog Compute Ecloud TrustedNetworkGroups get":{"type":"method","name":"get","children":[],"call":[" new ","data body "," service get_trusted_network_group "," service "," raise ","e status_code == ","e status_code "," service get_trusted_network_group  body "]}," Fog Compute Ecloud TrustedNetworkGroups all":{"type":"method","name":"all","children":[],"call":[" load ","data [] "," service get_trusted_network_groups body "," service get_trusted_network_groups "," href "," service ","data []  [] "," service get_trusted_network_groups body  [] "]}," Fog Compute Ecloud TrustedNetworkGroup id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud TrustedNetworkGroup delete":{"type":"method","name":"delete","children":[],"call":["Fog Compute Ecloud Tasks  new [] ","Fog Compute Ecloud Tasks  new ","data [] "," service "," service trusted_network_groups_delete body "," service trusted_network_groups_delete "," href "," service trusted_network_groups_delete body  [] "]}," Fog Compute Ecloud TrustedNetworkGroup edit":{"type":"method","name":"edit","children":[],"call":["Fog Compute Ecloud Tasks  new [] ","Fog Compute Ecloud Tasks  new ","data [] "," service "," service trusted_network_groups_edit body "," service trusted_network_groups_edit ","options []= "," href "," service trusted_network_groups_edit body  [] "]}," Fog Compute Ecloud TrustedNetworkGroup internet_services":{"type":"method","name":"internet_services","children":[],"call":["Fog Compute Ecloud InternetServices  new "," href "," service "]}," Fog Compute Ecloud Templates get":{"type":"method","name":"get","children":[],"call":[" new ","data body "," service get_template "," service "," raise ","e status_code == ","e status_code "," service get_template  body "]}," Fog Compute Ecloud Templates all":{"type":"method","name":"all","children":[],"call":[" load ","r_data << ","os each ","os [] [] ","os [] ","os [] [] is_a? ","cat each ","cat [] [] ","cat [] ","cat [] [] is_a? ","cats each ","cats is_a? ","d [] [] ","d [] ","data each ","data [] ","data [] is_a? "," service get_templates body [] "," service get_templates body "," service get_templates "," href "," service ","r_data []  << ","r_ service get_templates body []  << ","os [] []  each ","os [] []  [] [] ","os [] []  [] ","os [] []  [] [] is_a? ","cat [] []  each ","cat [] []  [] [] ","cat [] []  [] ","cat [] []  [] [] is_a? ","cat [] [] s each ","d [] []  each ","cat [] [] s is_a? ","d [] []  is_a? ","data []  each "," service get_templates body []  each ","data []  [] "," service get_templates body []  [] ","data []  [] is_a? "," service get_templates body []  [] is_a? "]}," Fog Compute Ecloud Template id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud Tasks get":{"type":"method","name":"get","children":[],"call":[" new ","data body "," service get_task "," service "," raise ","e status_code == ","e status_code "," service get_task  body "]}," Fog Compute Ecloud Tasks all":{"type":"method","name":"all","children":[],"call":[" load ","data [] "," service get_tasks body "," service get_tasks "," href "," service ","data []  [] "," service get_tasks body  [] "]}," Fog Compute Ecloud Task ready?":{"type":"method","name":"ready?","children":[],"call":[" completed_time nil? ! "," completed_time nil? "," completed_time "]}," Fog Compute Ecloud Tags get":{"type":"method","name":"get","children":[],"call":[" new ","data body "," service get_tag "," service "," raise ","e status_code == ","e status_code "," service get_tag  body "]}," Fog Compute Ecloud Tags all":{"type":"method","name":"all","children":[],"call":[" load "," service get_tags body [] "," service get_tags body "," service get_tags "," href "," service "]}," Fog Compute Ecloud Tag id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud SupportTickets get":{"type":"method","name":"get","children":[],"call":[" new ","data body "," service get_support_ticket "," service "," raise ","e status_code == ","e status_code "," service get_support_ticket  body "]}," Fog Compute Ecloud SupportTickets all":{"type":"method","name":"all","children":[],"call":[" load "," service get_support_tickets body [] "," service get_support_tickets body "," service get_support_tickets "," href "," service "]}," Fog Compute Ecloud SupportTicket id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud StorageUsageDetailSummary get":{"type":"method","name":"get","children":[],"call":[" new ","data body "," service get_storage_usage_detail "," service "," raise ","e status_code == ","e status_code "," service get_storage_usage_detail  body "]}," Fog Compute Ecloud StorageUsageDetailSummary all":{"type":"method","name":"all","children":[],"call":[" load "," service get_storage_usage_detail_summary body [] [] "," service get_storage_usage_detail_summary body [] "," service get_storage_usage_detail_summary body "," service get_storage_usage_detail_summary "," href "," service "]}," Fog Compute Ecloud StorageUsageDetail id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud SshKeys get":{"type":"method","name":"get","children":[],"call":[" new ","data body "," service get_ssh_key "," service "," service get_ssh_key body "," raise ","e status_code == ","e status_code "," service get_ssh_key  body "," service get_ssh_key body  body "]}," Fog Compute Ecloud SshKeys all":{"type":"method","name":"all","children":[],"call":[" load "," service get_ssh_keys body [] "," service get_ssh_keys body "," service get_ssh_keys "," href "," service "]}," Fog Compute Ecloud SshKey id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud Servers create":{"type":"method","name":"create","children":[],"call":[" service servers new "," service servers "," service "," service virtual_machine_import body "," service virtual_machine_import ","options []= "," href + "," href "," service virtual_machine_create_from_template body "," service virtual_machine_create_from_template ","options [] []= ","options [] ","(send\n  (send\n    (send\n      (self) :service) :ip_addresses\n    (hash\n      (pair\n        (sym :href)\n        (lvar :uri)))) :find) name ","i detected_on nil? ","i detected_on ","i host == ","i host "," service ip_addresses find "," service ip_addresses ","options [] index ","(splat\n  (send\n    (lvar :options) :[]\n    (sym :network_uri))) each ","template_uri =~ ","(send\n  (send\n    (send nil :service) :ip_addresses\n    (hash\n      (pair\n        (sym :href)\n        (lvar :uri)))) :detect) name "," service ip_addresses detect ","(send\n  (send\n    (send\n      (self) :service) :(send\n  (send\n    (send\n      (self) :service) :ip_addresses\n    (hash\n      (pair\n        (sym :href)\n        (lvar :uri)))) :find) name _addresses\n    (hash\n      (pair\n        (sym :href)\n        (lvar :uri)))) :find) name ","(send\n  (send\n    (send\n      (self) :service) :(send\n  (send\n    (send nil :service) :ip_addresses\n    (hash\n      (pair\n        (sym :href)\n        (lvar :uri)))) :detect) name _addresses\n    (hash\n      (pair\n        (sym :href)\n        (lvar :uri)))) :find) name "," service (send\n  (send\n    (send\n      (self) :service) :ip_addresses\n    (hash\n      (pair\n        (sym :href)\n        (lvar :uri)))) :find) name _addresses find "," service (send\n  (send\n    (send nil :service) :ip_addresses\n    (hash\n      (pair\n        (sym :href)\n        (lvar :uri)))) :detect) name _addresses find "," service (send\n  (send\n    (send\n      (self) :service) :ip_addresses\n    (hash\n      (pair\n        (sym :href)\n        (lvar :uri)))) :find) name _addresses "," service (send\n  (send\n    (send nil :service) :ip_addresses\n    (hash\n      (pair\n        (sym :href)\n        (lvar :uri)))) :detect) name _addresses ","options [] options [] index  ","(send\n  (send\n    (send nil :service) :(send\n  (send\n    (send\n      (self) :service) :ip_addresses\n    (hash\n      (pair\n        (sym :href)\n        (lvar :uri)))) :find) name _addresses\n    (hash\n      (pair\n        (sym :href)\n        (lvar :uri)))) :detect) name ","(send\n  (send\n    (send nil :service) :(send\n  (send\n    (send nil :service) :ip_addresses\n    (hash\n      (pair\n        (sym :href)\n        (lvar :uri)))) :detect) name _addresses\n    (hash\n      (pair\n        (sym :href)\n        (lvar :uri)))) :detect) name "," service (send\n  (send\n    (send\n      (self) :service) :ip_addresses\n    (hash\n      (pair\n        (sym :href)\n        (lvar :uri)))) :find) name _addresses detect "," service (send\n  (send\n    (send nil :service) :ip_addresses\n    (hash\n      (pair\n        (sym :href)\n        (lvar :uri)))) :detect) name _addresses detect "]}," Fog Compute Ecloud Servers from_data":{"type":"method","name":"from_data","children":[],"call":[" new "]}," Fog Compute Ecloud Servers get":{"type":"method","name":"get","children":[],"call":[" new "," service get_server body "," service get_server "," service "," raise ","e status_code == ","e status_code "]}," Fog Compute Ecloud Servers all":{"type":"method","name":"all","children":[],"call":[" load ","data [] ","data [] [] ","data keys include? ","data keys "," service get_servers body "," service get_servers "," href "," service ","data []  [] ","data [] []  [] "," service get_servers body  [] ","data []  [] [] ","data [] []  [] [] "," service get_servers body  [] [] ","data []  keys include? ","data [] []  keys include? "," service get_servers body  keys include? ","data []  keys ","data [] []  keys "," service get_servers body  keys "]}," Fog Compute Ecloud ServerConfigurationOptions get":{"type":"method","name":"get","children":[],"call":[" new ","data body "," service get_server_configuration_option "," service "," raise ","e status_code == ","e status_code "," service get_server_configuration_option  body "]}," Fog Compute Ecloud ServerConfigurationOptions all":{"type":"method","name":"all","children":[],"call":[" load "," service get_server_configuration_options body "," service get_server_configuration_options "," href "," service "]}," Fog Compute Ecloud ServerConfigurationOption id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud Server power_operation":{"type":"method","name":"power_operation","children":[],"call":[" raise ","e to_s =~ ","e to_s "," service send "," href + ","op values first ","op values "," href ","op keys first ","op keys "," service "," requires "]}," Fog Compute Ecloud Server _configuration_data":{"type":"method","name":"_configuration_data","children":[],"call":[" nics ","options [] "," disks "," hardware_configuration memory "," hardware_configuration "," hardware_configuration processor_count "]}," Fog Compute Ecloud Server id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud Server environment_id":{"type":"method","name":"environment_id","children":[],"call":["(send\n  (send nil :other_links) :find) [] scan [] ","(send\n  (send nil :other_links) :find) [] scan ","(send\n  (send nil :other_links) :find) [] ","l [] == ","l [] "," other_links find "," other_links ","(send\n  (send nil :other_links) :detect) [] scan [] ","(send\n  (send nil :other_links) :detect) [] scan ","(send\n  (send nil :other_links) :detect) [] "," other_links detect "]}," Fog Compute Ecloud Server compute_pool":{"type":"method","name":"compute_pool","children":[],"call":[" service compute_pools new ","(send\n  (send nil :other_links) :find) [] ","l [] == ","l [] "," other_links find "," other_links "," service compute_pools "," service "," reload "," other_links nil? ","(send\n  (send nil :other_links) :detect) [] "," other_links detect "]}," Fog Compute Ecloud Server compute_pool_id":{"type":"method","name":"compute_pool_id","children":[],"call":["(send\n  (send nil :other_links) :find) [] scan [] ","(send\n  (send nil :other_links) :find) [] scan ","(send\n  (send nil :other_links) :find) [] ","l [] == ","l [] "," other_links find "," other_links ","(send\n  (send nil :other_links) :detect) [] scan [] ","(send\n  (send nil :other_links) :detect) [] scan ","(send\n  (send nil :other_links) :detect) [] "," other_links detect "]}," Fog Compute Ecloud Server off?":{"type":"method","name":"off?","children":[],"call":[" powered_on == "," powered_on "]}," Fog Compute Ecloud Server on?":{"type":"method","name":"on?","children":[],"call":[" powered_on == "," powered_on "]}," Fog Compute Ecloud Server ready?":{"type":"method","name":"ready?","children":[],"call":[" status =~ "," status "," load_unless_loaded! "]}," Fog Compute Ecloud Server storage_size":{"type":"method","name":"storage_size","children":[],"call":["(send\n  (block\n    (send\n      (send nil :disks) :map!)\n    (args\n      (arg :d))\n    (send\n      (send\n        (send\n          (lvar :d) :[]\n          (sym :Size)) :[]\n        (sym :Value)) :to_i)) :reduce\n  (int 0)) * * ","(send\n  (block\n    (send\n      (send nil :disks) :map!)\n    (args\n      (arg :d))\n    (send\n      (send\n        (send\n          (lvar :d) :[]\n          (sym :Size)) :[]\n        (sym :Value)) :to_i)) :reduce\n  (int 0)) * ","sum + ","(send\n  (send nil :disks) :map!) reduce ","d [] [] to_i ","d [] [] ","d [] "," disks map! "," disks ","(send\n  (block\n    (send\n      (send nil :disks) :map!)\n    (args\n      (arg :d))\n    (send\n      (send\n        (send\n          (lvar :d) :[]\n          (sym :Size)) :[]\n        (sym :Value)) :to_i)) :inject\n  (int 0)) * * ","(send\n  (block\n    (send\n      (send nil :disks) :map!)\n    (args\n      (arg :d))\n    (send\n      (send\n        (send\n          (lvar :d) :[]\n          (sym :Size)) :[]\n        (sym :Value)) :to_i)) :inject\n  (int 0)) * ","(send\n  (send nil :disks) :map!) inject "]}," Fog Compute Ecloud Server upload_file":{"type":"method","name":"upload_file","children":[],"call":[" service virtual_machine_upload_file "," href + "," href "," service "]}," Fog Compute Ecloud Server delete_ip":{"type":"method","name":"delete_ip","children":[],"call":[" service tasks new "," service tasks "," service "," service virtual_machine_edit_assigned_ips body "," service virtual_machine_edit_assigned_ips "," href + "," href ","network [] delete ","ip [] ","network [] ","network [] == ","slice_networks each ","slice_ips each ","ip [] == ","options [] ","(send\n  (lvar :slice_ips) :map!) delete_if ","i network name ","i network ","i address name ","i address ","slice_ips map! ","ip network type ","ip network ","ip network name split [] ","ip network name split ","ip network name ","ip network href "," ips map "," ips ","slice_ips empty? "," service  service tasks new s new "," service  service tasks new s "]}," Fog Compute Ecloud Server add_ip":{"type":"method","name":"add_ip","children":[],"call":[" service tasks new "," service tasks "," service "," service virtual_machine_edit_assigned_ips body "," service virtual_machine_edit_assigned_ips "," href + "," href ","network [] push ","ip [] ","network [] ","network [] == ","slice_networks each ","slice_ips each ","(send\n  (lvar :slice_ips) :map) push uniq ","(send\n  (lvar :slice_ips) :map) push ","options [] ","i network name ","i network ","i address name ","i address ","slice_ips map ","(send\n  (send nil :ips) :map) push uniq ","(send\n  (send nil :ips) :map) push ","ip network type ","ip network ","ip network name split [] ","ip network name split ","ip network name ","ip network href "," ips map "," ips ","slice_ips empty? "," service  service tasks new s new "," service  service tasks new s ","(send\n  (send nil :ips) :map) push uniq  each ","(send\n  (lvar :slice_ips) :map) push uniq  each ","(send\n  (lvar :(send\n  (lvar :slice_ips) :map) push uniq ) :map) push uniq ","(send\n  (lvar :(send\n  (lvar :slice_ips) :map) push uniq ) :map) push ","(send\n  (lvar :slice_ips) :map) push uniq  map ","(send\n  (lvar :slice_ips) :map) push uniq  empty? "]}," Fog Compute Ecloud Server add_nic":{"type":"method","name":"add_nic","children":[],"call":[" service tasks new [] "," service tasks new ","data [] "," service tasks "," service "," service virtual_machine_edit_hardware_configuration body "," service virtual_machine_edit_hardware_configuration "," _configuration_data "," href + "," href "," nics << ","network name ","network href "," nics ","(send\n  (send nil :nics) :map) sort [] + ","(send\n  (send nil :nics) :map) sort [] ","(send\n  (send nil :nics) :map) sort ","n [] to_i ","n [] "," nics map "," service  service tasks new [] s new [] "," service  service tasks new [] s new "," service virtual_machine_edit_hardware_configuration body  [] "," service  service tasks new [] s "," _configuration_ service virtual_machine_edit_hardware_configuration body  "]}," Fog Compute Ecloud Server nics":{"type":"method","name":"nics","children":[],"call":["c is_a? "," hardware_configuration network_cards "," hardware_configuration "," hardware_configuration network_cards  is_a? "," hardware_ hardware_configuration network_cards onfiguration network_ hardware_configuration network_cards ards "," hardware_ hardware_configuration network_cards onfiguration "]}," Fog Compute Ecloud Server delete_disk":{"type":"method","name":"delete_disk","children":[],"call":[" service tasks new "," service tasks "," service "," service virtual_machine_edit_hardware_configuration body "," service virtual_machine_edit_hardware_configuration "," _configuration_data "," href + "," href ","h [] == ","index to_s ","h [] "," disks delete_if "," disks "," service  service tasks new s new "," service  service tasks new s "," _configuration_ service virtual_machine_edit_hardware_configuration body  "]}," Fog Compute Ecloud Server attach_disk":{"type":"method","name":"attach_disk","children":[],"call":[" service tasks new "," service tasks "," service "," service virtual_machine_attach_disk body "," service virtual_machine_attach_disk "," href + "," href ","options []= ","detached_disk href ","detached_disk name "," service  service tasks new s new "," service  service tasks new s "]}," Fog Compute Ecloud Server detach_disk":{"type":"method","name":"detach_disk","children":[],"call":[" service detached_disks new "," service detached_disks "," service "," service virtual_machine_detach_disk body "," service virtual_machine_detach_disk "," href + "," href ","options []= "," description "," name ","disk_hash [] == ","index to_s ","disk_hash [] "," disks find "," disks "," disks detect "," service  service detached_disks new s new "," service  service detached_disks new s "]}," Fog Compute Ecloud Server add_disk":{"type":"method","name":"add_disk","children":[],"call":[" service tasks new "," service tasks "," service "," service virtual_machine_edit_hardware_configuration body "," service virtual_machine_edit_hardware_configuration "," _configuration_data "," href + "," href "," disks << ","index + ","size to_s ","index to_s "," disks ","(send\n  (send nil :disks) :map) sort [] + ","(send\n  (send nil :disks) :map) sort [] ","(send\n  (send nil :disks) :map) sort ","d [] to_i ","d [] "," disks map "," service  service tasks new s new "," service  service tasks new s "," _configuration_ service virtual_machine_edit_hardware_configuration body  ","(send\n  (send nil :disks) :map) sort [] +  + ","(send\n  (send nil :disks) :map) sort [] +  to_s "]}," Fog Compute Ecloud Server disks":{"type":"method","name":"disks","children":[],"call":["c is_a? "," hardware_configuration reload storage "," hardware_configuration reload "," hardware_configuration "," hardware_configuration reload storage  is_a? "," hardware_ hardware_configuration reload storage onfiguration reload storage "," hardware_ hardware_configuration reload storage onfiguration reload "," hardware_ hardware_configuration reload storage onfiguration "]}," Fog Compute Ecloud Server create_rnat":{"type":"method","name":"create_rnat","children":[],"call":["Fog Compute Ecloud Associations  new [] ","Fog Compute Ecloud Associations  new ","data [] "," service "," service rnat_associations_create_device body "," service rnat_associations_create_device ","options []= "," environment_id "," service base_path "," ips first href "," ips first "," ips ","options [] "," service rnat_associations_create_device body  [] "," service Fog Compute Ecloud Associations  new [] _associations_create_device body "," service Fog Compute Ecloud Associations  new [] _associations_create_device "]}," Fog Compute Ecloud Server edit":{"type":"method","name":"edit","children":[],"call":["Fog Compute Ecloud Tasks  new [] ","Fog Compute Ecloud Tasks  new ","data [] "," service ","data [] == "," service virtual_machine_edit body "," service virtual_machine_edit "," href "," service virtual_machine_edit body  [] "," service virtual_machine_edit body  [] == "]}," Fog Compute Ecloud Server rnats":{"type":"method","name":"rnats","children":[],"call":["associations << ","ip name == ","association name ","ip name "," ips each "," ips ","rnat associations select ","rnat associations ","association name == "," ips any? ","rnats index == ","rnats index ","rnats each ","Fog Compute Ecloud Rnats  new "," environment_id "," service base_path "," service ","Fog Compute Ecloud Rnats  new  index == ","Fog Compute Ecloud Rnats  new  index ","Fog Compute Ecloud Rnats  new  each "]}," Fog Compute Ecloud Server copy":{"type":"method","name":"copy","children":[],"call":[" collection from_data "," collection "," service virtual_machine_copy_identical body "," service virtual_machine_copy_identical "," compute_pool_id "," service base_path "," service ","options [] == ","options [] "," service virtual_machine_copy body "," service virtual_machine_copy ","options [] []= ","(send\n  (send\n    (const\n      (const\n        (const\n          (const nil :Fog) :Compute) :Ecloud) :IpAddresses) :new\n    (hash\n      (pair\n        (sym :service)\n        (send nil :service))\n      (pair\n        (sym :href)\n        (lvar :uri)))) :find) name ","i host == ","i host ","Fog Compute Ecloud IpAddresses  new find ","Fog Compute Ecloud IpAddresses  new ","options [] index ","options [] each ","options []= ","options [] is_a? "," href ","(pair\n  (sym :type)\n  (sym :copy)) merge ","(send\n  (send\n    (const\n      (const\n        (const\n          (const nil :Fog) :Compute) :Ecloud) :IpAddresses) :new\n    (hash\n      (pair\n        (sym :service)\n        (send nil :service))\n      (pair\n        (sym :href)\n        (lvar :uri)))) :detect) name ","Fog Compute Ecloud IpAddresses  new detect "," collection from_ service virtual_machine_copy_identical body  "," collection from_ service virtual_machine_copy body  ","(pair\n  (sym :type)\n  (sym :copy)) merge  [] == ","(pair\n  (sym :type)\n  (sym :copy)) merge  [] ","(pair\n  (sym :type)\n  (sym :copy)) merge  [] []= ","options [] options [] index  ","(pair\n  (sym :type)\n  (sym :copy)) merge  [] index ","(pair\n  (sym :type)\n  (sym :copy)) merge  [] each ","(pair\n  (sym :type)\n  (sym :copy)) merge  []= ","(pair\n  (sym :type)\n  (sym :copy)) merge  [] is_a? "]}," Fog Compute Ecloud Server delete":{"type":"method","name":"delete","children":[],"call":[" service tasks new "," service tasks "," service "," service virtual_machine_delete body "," service virtual_machine_delete "," href "]}," Fog Compute Ecloud Server power_reset":{"type":"method","name":"power_reset","children":[],"call":[" power_operation "]}," Fog Compute Ecloud Server shutdown":{"type":"method","name":"shutdown","children":[],"call":[" power_operation "]}," Fog Compute Ecloud Server power_off":{"type":"method","name":"power_off","children":[],"call":[" power_operation "]}," Fog Compute Ecloud Server power_on":{"type":"method","name":"power_on","children":[],"call":[" power_operation "]}," Fog Compute Ecloud Server networks":{"type":"method","name":"networks","children":[],"call":[" service networks "," id "," service base_path "," service "]}," Fog Compute Ecloud Server ips":{"type":"method","name":"ips","children":[],"call":[" service virtual_machine_assigned_ips "," id "," service "]}," Fog Compute Ecloud Server configuration":{"type":"method","name":"configuration","children":[],"call":["Fog Compute Ecloud ServerConfigurationOptions  new [] ","Fog Compute Ecloud ServerConfigurationOptions  new "," id "," service base_path "," service "]}," Fog Compute Ecloud Server hardware_configuration":{"type":"method","name":"hardware_configuration","children":[],"call":["@hardware_configuration reload "," service hardware_configurations new "," id "," service base_path "," service "," service hardware_configurations "]}," Fog Compute Ecloud Server hardware_configuration=":{"type":"method","name":"hardware_configuration=","children":[],"call":[" service hardware_configurations new "," service hardware_configurations "," service "]}," Fog Compute Ecloud Server processes":{"type":"method","name":"processes","children":[],"call":["Fog Compute Ecloud GuestProcesses  new "," id "," service base_path "," service "]}," Fog Compute Ecloud Server tasks":{"type":"method","name":"tasks","children":[],"call":[" service tasks "," id "," service base_path "," service "]}," Fog Compute Ecloud Server storage":{"type":"method","name":"storage","children":[],"call":[" hardware_configuration storage [] "," hardware_configuration storage "," hardware_configuration "]}," Fog Compute Ecloud Server flavor_id":{"type":"method","name":"flavor_id","children":[],"call":[" hardware_configuration processor_count "," hardware_configuration "," hardware_configuration memory to_i "," hardware_configuration memory "]}," Fog Compute Ecloud Server location":{"type":"method","name":"location","children":[],"call":[]}," Fog Compute Ecloud Server memory":{"type":"method","name":"memory","children":[],"call":[" hardware_configuration memory to_i "," hardware_configuration memory "," hardware_configuration "]}," Fog Compute Ecloud Server cpus":{"type":"method","name":"cpus","children":[],"call":[" hardware_configuration processor_count "," hardware_configuration "]}," Fog Compute Ecloud Rows environment_id":{"type":"method","name":"environment_id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud Rows create":{"type":"method","name":"create","children":[],"call":[" new "," service rows_create body "," service rows_create "," service ","options []= "," environment_id "," service base_path "]}," Fog Compute Ecloud Rows get":{"type":"method","name":"get","children":[],"call":[" new ","data == "," service get_row body "," service get_row "," service "," raise ","e status_code == ","e status_code "," service get_row body  == "]}," Fog Compute Ecloud Rows all":{"type":"method","name":"all","children":[],"call":[" load "," service get_layout body [] [] "," service get_layout body [] "," service get_layout body "," service get_layout "," href "," service "]}," Fog Compute Ecloud Row id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud Row environment_id":{"type":"method","name":"environment_id","children":[],"call":[" other_links [] [] scan [] "," other_links [] [] scan "," other_links [] [] "," other_links [] "," other_links "," reload "," other_links nil? "]}," Fog Compute Ecloud Row create_group":{"type":"method","name":"create_group","children":[],"call":[" service groups new "," service groups "," service "," service groups_create body "," service groups_create ","options []= "," href "," name "," environment_id "," service base_path "," service  service groups new s new "," service  service groups new s "," service  service groups new s_create body "," service  service groups new s_create "]}," Fog Compute Ecloud Row delete":{"type":"method","name":"delete","children":[],"call":[" service rows_delete body "," service rows_delete "," href "," service "]}," Fog Compute Ecloud Row move_down":{"type":"method","name":"move_down","children":[],"call":[" service rows_movedown body "," service rows_movedown "," service ","options []= "," href + "," href "]}," Fog Compute Ecloud Row move_up":{"type":"method","name":"move_up","children":[],"call":[" service rows_moveup body "," service rows_moveup "," service ","options []= "," href + "," href "]}," Fog Compute Ecloud Row edit":{"type":"method","name":"edit","children":[],"call":[" service rows_edit body "," service rows_edit "," service ","options []= "," href "]}," Fog Compute Ecloud Row groups":{"type":"method","name":"groups","children":[],"call":[" service groups "," href "," service "]}," Fog Compute Ecloud Roles get":{"type":"method","name":"get","children":[],"call":[" new ","data body "," service get_role "," service "," raise ","e status_code == ","e status_code "," service get_role  body "]}," Fog Compute Ecloud Roles all":{"type":"method","name":"all","children":[],"call":[" load ","r_data << ","d [] ","d []= ","d [] merge ","d [] []= ","d [] [] ","data [] [] each ","data [] [] ","data [] "," service get_roles body "," service get_roles "," href "," service ","r_ service get_roles body  << "," service get_roles body  [] [] each "," service get_roles body  [] [] "," service get_roles body  [] "]}," Fog Compute Ecloud Role id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud Rnats get":{"type":"method","name":"get","children":[],"call":[" new ","data body "," service get_rnat "," service "," raise ","e status_code == ","e status_code "," service get_rnat  body "]}," Fog Compute Ecloud Rnats all":{"type":"method","name":"all","children":[],"call":[" load "," service get_rnats body [] [] "," service get_rnats body [] "," service get_rnats body "," service get_rnats "," href "," service "]}," Fog Compute Ecloud Rnat id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud Rnat associations":{"type":"method","name":"associations","children":[],"call":["Fog Compute Ecloud Associations  new "," href "," service "]}," Fog Compute Ecloud Rnat networks":{"type":"method","name":"networks","children":[],"call":["Fog Compute Ecloud Networks  new "," href "," service "]}," Fog Compute Ecloud PublicIps activate":{"type":"method","name":"activate","children":[],"call":["Fog Compute Ecloud PublicIps  new [] ","Fog Compute Ecloud PublicIps  new ","data [] "," service "," service public_ip_activate body "," service public_ip_activate "," href + "," href "," service public_ip_activate body  [] "," service public_Fog Compute Ecloud PublicIps  new [] _activate body "," service public_Fog Compute Ecloud PublicIps  new [] _activate "]}," Fog Compute Ecloud PublicIps get":{"type":"method","name":"get","children":[],"call":[" new "," service get_public_ip body "," service get_public_ip "," service "," raise ","e status_code == ","e status_code "]}," Fog Compute Ecloud PublicIps all":{"type":"method","name":"all","children":[],"call":[" load ","data [] "," service get_public_ips body "," service get_public_ips "," href "," service ","data []  [] "," service get_public_ips body  [] "]}," Fog Compute Ecloud PublicIp id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud PublicIp environment_id":{"type":"method","name":"environment_id","children":[],"call":["(send\n  (send\n    (send nil :other_links) :[]\n    (sym :Link)) :find) [] scan [] ","(send\n  (send\n    (send nil :other_links) :[]\n    (sym :Link)) :find) [] scan ","(send\n  (send\n    (send nil :other_links) :[]\n    (sym :Link)) :find) [] ","l [] == ","l [] "," other_links [] find "," other_links [] "," other_links "]}," Fog Compute Ecloud PublicIp internet_services":{"type":"method","name":"internet_services","children":[],"call":["Fog Compute Ecloud InternetServices  new "," href "," service "]}," Fog Compute Ecloud PhysicalDevices get":{"type":"method","name":"get","children":[],"call":[" new ","data body "," service get_physical_device "," service "," raise ","e status_code == ","e status_code "," service get_physical_device  body "]}," Fog Compute Ecloud PhysicalDevices all":{"type":"method","name":"all","children":[],"call":[" load "," service get_physical_devices body [] "," service get_physical_devices body "," service get_physical_devices "," href "," service "]}," Fog Compute Ecloud PhysicalDevice id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud PasswordComplexityRules get":{"type":"method","name":"get","children":[],"call":[" new ","data body "," service get_password_complexity_rule "," service "," raise ","e status_code == ","e status_code "," service get_password_complexity_rule  body "]}," Fog Compute Ecloud PasswordComplexityRules all":{"type":"method","name":"all","children":[],"call":[" load "," service get_password_complexity_rules body "," service get_password_complexity_rules "," href "," service "]}," Fog Compute Ecloud PasswordComplexityRule id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud PasswordComplexityRule minimum_generations_before_reuse":{"type":"method","name":"minimum_generations_before_reuse","children":[],"call":[" custom_rules [] "," custom_rules "]}," Fog Compute Ecloud PasswordComplexityRule minimum_lifetime_restriction":{"type":"method","name":"minimum_lifetime_restriction","children":[],"call":[" custom_rules [] "," custom_rules "]}," Fog Compute Ecloud PasswordComplexityRule maximum_consecutive_characters_from_prior_password":{"type":"method","name":"maximum_consecutive_characters_from_prior_password","children":[],"call":[" custom_rules [] "," custom_rules "]}," Fog Compute Ecloud PasswordComplexityRule minimum_special_characters":{"type":"method","name":"minimum_special_characters","children":[],"call":[" custom_rules [] "," custom_rules "]}," Fog Compute Ecloud PasswordComplexityRule minimum_numeric_characters":{"type":"method","name":"minimum_numeric_characters","children":[],"call":[" custom_rules [] "," custom_rules "]}," Fog Compute Ecloud PasswordComplexityRule minimum_lower_case_characters":{"type":"method","name":"minimum_lower_case_characters","children":[],"call":[" custom_rules [] "," custom_rules "]}," Fog Compute Ecloud PasswordComplexityRule minimum_upper_case_characters":{"type":"method","name":"minimum_upper_case_characters","children":[],"call":[" custom_rules [] "," custom_rules "]}," Fog Compute Ecloud PasswordComplexityRule minimum_characters":{"type":"method","name":"minimum_characters","children":[],"call":[" custom_rules [] "," custom_rules "]}," Fog Compute Ecloud Organizations organization_uri=":{"type":"method","name":"organization_uri=","children":[],"call":[]}," Fog Compute Ecloud Organizations organization_uri":{"type":"method","name":"organization_uri","children":[],"call":[" service default_organization_uri "," service "]}," Fog Compute Ecloud Organizations get":{"type":"method","name":"get","children":[],"call":[" new ","data body "," service get_organization "," service "," raise ","e status_code == ","e status_code "," service get_organization  body "]}," Fog Compute Ecloud Organizations all":{"type":"method","name":"all","children":[],"call":[" load ","data [] "," service get_organizations body "," service get_organizations "," organization_uri "," service "," service get_organizations body  [] "]}," Fog Compute Ecloud Organization id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud Organization disable_support_access":{"type":"method","name":"disable_support_access","children":[],"call":[" service admin_disable_support_access ","options [] "," service ","options []= "," id "," service base_path "]}," Fog Compute Ecloud Organization enable_support_access":{"type":"method","name":"enable_support_access","children":[],"call":[" service admin_enable_support_access ","options [] "," service ","options []= "," id "," service base_path "]}," Fog Compute Ecloud Organization edit_login_banner":{"type":"method","name":"edit_login_banner","children":[],"call":["Fog Compute Ecloud LoginBanners  new [] ","Fog Compute Ecloud LoginBanners  new ","data [] "," service "," service admin_edit_login_banner body "," service admin_edit_login_banner ","options []= "," id "," service base_path "," service admin_edit_login_banner body  [] "," service admin_edit_login_Fog Compute Ecloud LoginBanners  new []  body "," service admin_edit_login_Fog Compute Ecloud LoginBanners  new []  "]}," Fog Compute Ecloud Organization edit_password_complexity_rules":{"type":"method","name":"edit_password_complexity_rules","children":[],"call":["Fog Compute Ecloud PasswordComplexityRules  new [] ","Fog Compute Ecloud PasswordComplexityRules  new ","data [] "," service "," service admin_edit_password_complexity_rules body "," service admin_edit_password_complexity_rules ","options []= "," id "," service base_path "," service admin_edit_password_complexity_rules body  [] "]}," Fog Compute Ecloud Organization edit_authentication_levels":{"type":"method","name":"edit_authentication_levels","children":[],"call":["Fog Compute Ecloud AdminOrganizations  new [] ","Fog Compute Ecloud AdminOrganizations  new ","data [] "," service "," service admin_edit_authentication_levels body "," service admin_edit_authentication_levels ","options []= "," id "," service base_path "," service admin_edit_authentication_levels body  [] "," service admin_edit_authentication_Fog Compute Ecloud AdminOrganizations  new [] s body "," service admin_edit_authentication_Fog Compute Ecloud AdminOrganizations  new [] s "]}," Fog Compute Ecloud Organization support_tickets":{"type":"method","name":"support_tickets","children":[],"call":["Fog Compute Ecloud SupportTickets  new "," id "," service base_path "," service "]}," Fog Compute Ecloud Organization users":{"type":"method","name":"users","children":[],"call":[" service users "," id "," service base_path "," service "]}," Fog Compute Ecloud Organization admin":{"type":"method","name":"admin","children":[],"call":[" service admin_organizations new "," id "," service base_path "," service "," service admin_organizations "]}," Fog Compute Ecloud Organization tags":{"type":"method","name":"tags","children":[],"call":[" service tags "," id "," service base_path "," service "]}," Fog Compute Ecloud Organization environments":{"type":"method","name":"environments","children":[],"call":[" service environments "," href "," service "]}," Fog Compute Ecloud Organization locations":{"type":"method","name":"locations","children":[],"call":["Fog Compute Ecloud Locations  new "," href "," service "]}," Fog Compute Ecloud OperatingSystems get":{"type":"method","name":"get","children":[],"call":[" new ","data body "," service get_operating_system "," service "," raise ","e status_code == ","e status_code "," service get_operating_system  body "]}," Fog Compute Ecloud OperatingSystems all":{"type":"method","name":"all","children":[],"call":[" load "," data "]}," Fog Compute Ecloud OperatingSystemFamily id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud OperatingSystemFamily operating_systems":{"type":"method","name":"operating_systems","children":[],"call":[" service operating_systems "," operating_system_family [] "," operating_system_family "," service "]}," Fog Compute Ecloud OperatingSystemFamilies get":{"type":"method","name":"get","children":[],"call":[" new ","data body "," service get_operating_system "," service "," raise ","e status_code == ","e status_code "," service get_operating_system  body "]}," Fog Compute Ecloud OperatingSystemFamilies all":{"type":"method","name":"all","children":[],"call":[" load "," service get_operating_system_families body [] "," service get_operating_system_families body "," service get_operating_system_families "," href "," service "]}," Fog Compute Ecloud OperatingSystem id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud Nodes internet_service_id":{"type":"method","name":"internet_service_id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud Nodes create":{"type":"method","name":"create","children":[],"call":[" new "," service node_service_create body "," service node_service_create "," service ","options [] ","options []= "," internet_service_id "," service base_path "]}," Fog Compute Ecloud Nodes get":{"type":"method","name":"get","children":[],"call":[" new "," service get_node body "," service get_node "," service "," raise ","e status_code == ","e status_code "]}," Fog Compute Ecloud Nodes all":{"type":"method","name":"all","children":[],"call":[" load ","data [] [] ","data [] "," service get_nodes body "," service get_nodes "," href "," service "," service get_nodes body  [] [] "," service get_nodes body  [] "]}," Fog Compute Ecloud Node id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud Node edit":{"type":"method","name":"edit","children":[],"call":["Fog Compute Ecloud Tasks  new [] ","Fog Compute Ecloud Tasks  new ","data [] "," service "," service node_service_edit body "," service node_service_edit ","(pair\n  (sym :name)\n  (send nil :name)) merge "," name ","options [] ","options []= "," href "," service node_service_edit body  [] ","(pair\n  (sym :name)\n  (send nil :name)) merge  [] ","(pair\n  (sym :name)\n  (send nil :name)) merge  []= "]}," Fog Compute Ecloud Node delete":{"type":"method","name":"delete","children":[],"call":[" service tasks new "," service tasks "," service "," service node_service_delete body "," service node_service_delete "," href "]}," Fog Compute Ecloud Node tasks":{"type":"method","name":"tasks","children":[],"call":["Fog Compute Ecloud Tasks  new "," id "," service base_path "," service "]}," Fog Compute Ecloud Node ready?":{"type":"method","name":"ready?","children":[],"call":[" name nil? ! "," name nil? "," name "]}," Fog Compute Ecloud Networks get":{"type":"method","name":"get","children":[],"call":[" new ","data body "," service get_network "," service "," raise ","e status_code == ","e status_code "," service get_network  body "]}," Fog Compute Ecloud Networks all":{"type":"method","name":"all","children":[],"call":[" load ","body [] ","body [] [] "," service get_networks body "," service get_networks "," href "," service ","body []  [] ","body [] []  [] "," service get_networks body  [] ","body []  [] [] ","body [] []  [] [] "," service get_networks body  [] [] "," service get_networks body []  "," service get_networks body [] []  "," service get_networks  service get_networks body  "]}," Fog Compute Ecloud Network location":{"type":"method","name":"location","children":[],"call":[" environment id "," environment "]}," Fog Compute Ecloud Network environment":{"type":"method","name":"environment","children":[],"call":[" service environments get "," service environments "," service ","(send\n  (send nil :other_links) :find) [] ","l [] == ","l [] "," other_links find "," other_links "," reload "," other_links nil? "]}," Fog Compute Ecloud Network id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud Network edit_rnat_association":{"type":"method","name":"edit_rnat_association","children":[],"call":["Fog Compute Ecloud Tasks  new [] ","Fog Compute Ecloud Tasks  new ","data [] "," service "," service rnat_associations_edit_network body "," service rnat_associations_edit_network ","options []= "," href "," service rnat_associations_edit_network body  [] "]}," Fog Compute Ecloud Network ips":{"type":"method","name":"ips","children":[],"call":["Fog Compute Ecloud IpAddresses  new "," href "," service "]}," Fog Compute Ecloud Network rnats":{"type":"method","name":"rnats","children":[],"call":["Fog Compute Ecloud Rnats  new "," id "," service base_path "," service "]}," Fog Compute Ecloud Monitors from_data":{"type":"method","name":"from_data","children":[],"call":[" new "]}," Fog Compute Ecloud Monitors get":{"type":"method","name":"get","children":[],"call":[" new ","data body "," service get_monitor "," service "," raise ","e status_code == ","e status_code "," service get_monitor  body "]}," Fog Compute Ecloud Monitors all":{"type":"method","name":"all","children":[],"call":[" load "," service get_monitors body "," service get_monitors "," href "," service "]}," Fog Compute Ecloud Monitor id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud Monitor internet_service_id":{"type":"method","name":"internet_service_id","children":[],"call":[" other_links [] [] scan [] "," other_links [] [] scan "," other_links [] [] "," other_links [] "," other_links "]}," Fog Compute Ecloud Monitor edit":{"type":"method","name":"edit","children":[],"call":[" collection from_data "," collection "," service monitors_edit_ecv body "," service monitors_edit_ecv "," service ","options []= ","href + "," service monitors_edit_http body "," service monitors_edit_http "," service monitors_edit_ping body "," service monitors_edit_ping "," type "," internet_service_id "," service base_path "," collection from_ service monitors_edit_ecv body  "," collection from_ service monitors_edit_http body  "," collection from_ service monitors_edit_ping body  "]}," Fog Compute Ecloud MemoryUsageDetailSummary get":{"type":"method","name":"get","children":[],"call":[" new ","data body "," service get_memory_usage_detail "," service "," raise ","e status_code == ","e status_code "," service get_memory_usage_detail  body "]}," Fog Compute Ecloud MemoryUsageDetailSummary all":{"type":"method","name":"all","children":[],"call":[" load "," service get_memory_usage_detail_summary body [] [] "," service get_memory_usage_detail_summary body [] "," service get_memory_usage_detail_summary body "," service get_memory_usage_detail_summary "," href "," service "]}," Fog Compute Ecloud MemoryUsageDetail id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud LoginBanners get":{"type":"method","name":"get","children":[],"call":[" new ","data body "," service get_login_banner "," service "," raise ","e status_code == ","e status_code "," service get_login_banner  body "]}," Fog Compute Ecloud LoginBanners all":{"type":"method","name":"all","children":[],"call":[" load "," service get_login_banners body "," service get_login_banners "," href "," service "]}," Fog Compute Ecloud LoginBanner id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud Locations get":{"type":"method","name":"get","children":[],"call":[" new ","data body "," service get_location "," service "," raise ","e status_code == ","e status_code "," service get_location  body "]}," Fog Compute Ecloud Locations all":{"type":"method","name":"all","children":[],"call":[" load "," service get_organization body [] [] "," service get_organization body [] "," service get_organization body "," service get_organization "," href "," service "]}," Fog Compute Ecloud Location id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud Location catalog":{"type":"method","name":"catalog","children":[],"call":["Fog Compute Ecloud Catalog  new "," id ","org_href scan [] ","org_href scan "," service base_path "," service "]}," Fog Compute Ecloud Layouts get":{"type":"method","name":"get","children":[],"call":[" new ","data body "," service get_layout "," service "," raise ","e status_code == ","e status_code "," service get_layout  body "]}," Fog Compute Ecloud Layouts all":{"type":"method","name":"all","children":[],"call":[" load "," service get_layouts body "," service get_layouts "," href "," service "]}," Fog Compute Ecloud Layout id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud Layout rows":{"type":"method","name":"rows","children":[],"call":[" service rows "," href "," service "]}," Fog Compute Ecloud IpAddresses get":{"type":"method","name":"get","children":[],"call":[" new ","data body "," service get_ip_address "," service "," raise ","e status_code == ","e status_code "," service get_ip_address  body "]}," Fog Compute Ecloud IpAddresses all":{"type":"method","name":"all","children":[],"call":[" load ","data nil? ","data [] [] ","data [] "," service get_network body "," service get_network "," href "," service ","data [] []  nil? "," service get_network body  nil? ","data [] []  [] [] "," service get_network body  [] [] ","data [] []  [] "," service get_network body  [] "]}," Fog Compute Ecloud IpAddress network":{"type":"method","name":"network","children":[],"call":[" service networks get "," service networks "," service ","(send\n  (send nil :other_links) :find) [] ","l [] == ","l [] "," other_links find "," other_links "," reload "," other_links nil? "," service  service networks get s get "," service  service networks get s "]}," Fog Compute Ecloud IpAddress server":{"type":"method","name":"server","children":[],"call":[" service servers get ","server_link [] "," service servers "," service ","l [] == ","l [] "," other_links find "," other_links "," reload "]}," Fog Compute Ecloud IpAddress id":{"type":"method","name":"id","children":[],"call":[" href match [] "," href match "," href "]}," Fog Compute Ecloud IpAddress status":{"type":"method","name":"status","children":[],"call":[" host "," detected_on "]}," Fog Compute Ecloud InternetServices public_ip_id":{"type":"method","name":"public_ip_id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud InternetServices create":{"type":"method","name":"create","children":[],"call":[" new "," service internet_service_create body "," service internet_service_create "," service ","options [] [] ","options [] ","options []= "," public_ip_id "," service base_path "]}," Fog Compute Ecloud InternetServices get":{"type":"method","name":"get","children":[],"call":[" new "," service get_internet_service body "," service get_internet_service "," service "," raise ","e status_code == ","e status_code "]}," Fog Compute Ecloud InternetServices all":{"type":"method","name":"all","children":[],"call":[" load ","data empty? ","data is_a? ","data [] "," service get_internet_services body [] "," service get_internet_services body "," service get_internet_services "," href "," service "," service get_internet_services body []  empty? "," service get_internet_services body []  is_a? "," service get_internet_services body []  [] "]}," Fog Compute Ecloud InternetService _compose_service_data":{"type":"method","name":"_compose_service_data","children":[],"call":["v nil? ","service_data reject! ","service_data []= "," send ","(send\n  (send\n    (send\n      (self) :class) :attributes) :select) each ","attribute != "," class attributes select "," class attributes "," class "]}," Fog Compute Ecloud InternetService id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud InternetService disable_monitor":{"type":"method","name":"disable_monitor","children":[],"call":["Fog Compute Ecloud Tasks  new ","data [] "," service "," service monitors_disable body "," service monitors_disable "," href + "," href "," service monitors_disable body  [] "]}," Fog Compute Ecloud InternetService create_monitor":{"type":"method","name":"create_monitor","children":[],"call":["Fog Compute Ecloud Monitors  new ","data [] "," service "," service monitors_create_loopback body "," service monitors_create_loopback "," href "," service monitors_create_ecv body "," service monitors_create_ecv ","options []= "," href + "," service monitors_create_http body "," service monitors_create_http "," service monitors_create_ping body "," service monitors_create_ping ","options [] "," service monitors_create_default body "," service monitors_create_default ","(pair\n  (sym :type)\n  (sym :default)) merge "," service monitors_create_loopback body  [] "," service monitors_create_ecv body  [] "," service monitors_create_http body  [] "," service monitors_create_ping body  [] "," service monitors_create_default body  [] "," service Fog Compute Ecloud Monitors  new s_create_loopback body "," service Fog Compute Ecloud Monitors  new s_create_loopback "," service Fog Compute Ecloud Monitors  new s_create_ecv body "," service Fog Compute Ecloud Monitors  new s_create_ecv ","(pair\n  (sym :type)\n  (sym :default)) merge  []= "," service Fog Compute Ecloud Monitors  new s_create_http body "," service Fog Compute Ecloud Monitors  new s_create_http "," service Fog Compute Ecloud Monitors  new s_create_ping body "," service Fog Compute Ecloud Monitors  new s_create_ping ","(pair\n  (sym :type)\n  (sym :default)) merge  [] "," service Fog Compute Ecloud Monitors  new s_create_default body "," service Fog Compute Ecloud Monitors  new s_create_default "]}," Fog Compute Ecloud InternetService delete":{"type":"method","name":"delete","children":[],"call":[" service tasks new "," service tasks "," service "," service internet_service_delete body "," service internet_service_delete "," href "]}," Fog Compute Ecloud InternetService edit":{"type":"method","name":"edit","children":[],"call":["Fog Compute Ecloud Tasks  new [] ","Fog Compute Ecloud Tasks  new ","data [] "," service "," service internet_service_edit body "," service internet_service_edit ","options []= "," href "," service internet_service_edit body  [] "]}," Fog Compute Ecloud InternetService save":{"type":"method","name":"save","children":[],"call":[" merge_attributes ","result body "," service internet_service_create "," _compose_service_data "," collection href "," collection "," service "," service configure_internet_service "," _compose_ip_data "," href "," persisted? "," service internet_service_create  body "]}," Fog Compute Ecloud InternetService monitors":{"type":"method","name":"monitors","children":[],"call":["Fog Compute Ecloud Monitors  new "," id "," service base_path "," service "]}," Fog Compute Ecloud InternetService nodes":{"type":"method","name":"nodes","children":[],"call":["Fog Compute Ecloud Nodes  new "," href "," service "]}," Fog Compute Ecloud InternetService ready?":{"type":"method","name":"ready?","children":[],"call":[" port nil? ! "," port nil? "," port "]}," Fog Compute Ecloud HardwareConfigurations get":{"type":"method","name":"get","children":[],"call":[" new ","data body "," service get_hardware_configuration "," service "," raise ","e status_code == ","e status_code "," service get_hardware_configuration  body "]}," Fog Compute Ecloud HardwareConfigurations all":{"type":"method","name":"all","children":[],"call":[" load "," service get_server body "," service get_server "," href "," service "]}," Fog Compute Ecloud HardwareConfiguration id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud GuestProcesses get":{"type":"method","name":"get","children":[],"call":[" new ","data body "," service get_guest_process "," service "," raise ","e status_code == ","e status_code "," service get_guest_process  body "]}," Fog Compute Ecloud GuestProcesses all":{"type":"method","name":"all","children":[],"call":[" load "," service get_guest_processes body [] "," service get_guest_processes body "," service get_guest_processes "," href "," service "]}," Fog Compute Ecloud GuestProcess id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud Groups get":{"type":"method","name":"get","children":[],"call":[" new ","data == "," service get_group body "," service get_group "," service "," raise ","e status_code == ","e status_code "," service get_group body  == "]}," Fog Compute Ecloud Groups all":{"type":"method","name":"all","children":[],"call":[" load ","data [] == ","data [] ","data is_a? ! ","data is_a? ","data == ","data [] [] "," service get_groups body "," service get_groups "," href "," service "," service get_groups body  [] == "," service get_groups body  [] "," service get_groups body  is_a? ! "," service get_groups body  is_a? "," service get_groups body  == "," service get_groups body  [] [] "]}," Fog Compute Ecloud Group id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud Group delete":{"type":"method","name":"delete","children":[],"call":[" service groups_delete body "," service groups_delete "," href "," service "]}," Fog Compute Ecloud Group move_down":{"type":"method","name":"move_down","children":[],"call":[" service groups_movedown body "," service groups_movedown "," href "," service "]}," Fog Compute Ecloud Group move_up":{"type":"method","name":"move_up","children":[],"call":[" service groups_moveup body "," service groups_moveup "," href "," service "]}," Fog Compute Ecloud Group edit":{"type":"method","name":"edit","children":[],"call":[" service groups_edit body "," service groups_edit "," service ","options []= "," href "]}," Fog Compute Ecloud Group servers":{"type":"method","name":"servers","children":[],"call":["Fog Compute Ecloud Servers  new "," href "," service "]}," Fog Compute Ecloud FirewallAcls get":{"type":"method","name":"get","children":[],"call":[" new ","data body "," service get_firewall_acl "," service "," raise ","e status_code == ","e status_code "," service get_firewall_acl  body "]}," Fog Compute Ecloud FirewallAcls all":{"type":"method","name":"all","children":[],"call":[" load ","data [] "," service get_firewall_acls body "," service get_firewall_acls "," href "," service ","data []  [] "," service get_firewall_acls body  [] "]}," Fog Compute Ecloud FirewallAcl id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud FirewallAcl tasks":{"type":"method","name":"tasks","children":[],"call":["Fog Compute Ecloud Tasks  new "," id "," service base_path "," service "]}," Fog Compute Ecloud Environments get":{"type":"method","name":"get","children":[],"call":[" new ","data body "," service get_environment "," service "," raise ","e status_code == ","e status_code "," service get_environment  body "]}," Fog Compute Ecloud Environments all":{"type":"method","name":"all","children":[],"call":[" load ","data << ","environments [] ","environments [] each ","environments [] is_a? ","d [] "," service get_organization body [] [] each "," service get_organization body [] [] "," service get_organization body [] "," service get_organization body "," service get_organization "," href "," service ","l [] ","location each ","raw_location is_a? ","d []  [] ","l []  [] ","d []  [] each ","l []  [] each ","d []  [] is_a? ","l []  [] is_a? "," service get_organization body [] []  is_a? "]}," Fog Compute Ecloud Environment organization":{"type":"method","name":"organization","children":[],"call":[" service organizations new "," service organizations "," service ","l [] == ","l [] "," other_links find "," other_links "," reload "]}," Fog Compute Ecloud Environment id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud Environment create_firewall_acl":{"type":"method","name":"create_firewall_acl","children":[],"call":["Fog Compute Ecloud FirewallAcls  new [] ","Fog Compute Ecloud FirewallAcls  new ","data [] "," service "," service firewall_acls_create body "," service firewall_acls_create ","options [] ","options []= "," id "," service base_path "," service firewall_acls_create body  [] "," service firewall_Fog Compute Ecloud FirewallAcls  new [] s_create body "," service firewall_Fog Compute Ecloud FirewallAcls  new [] s_create "]}," Fog Compute Ecloud Environment create_trusted_network_group":{"type":"method","name":"create_trusted_network_group","children":[],"call":["Fog Compute Ecloud TrustedNetworkGroups  new [] ","Fog Compute Ecloud TrustedNetworkGroups  new ","data [] "," service "," service trusted_network_groups_create body "," service trusted_network_groups_create ","options []= "," id "," service base_path "," service trusted_network_groups_create body  [] "]}," Fog Compute Ecloud Environment rnats":{"type":"method","name":"rnats","children":[],"call":["Fog Compute Ecloud Rnats  new "," id "," service base_path "," service "]}," Fog Compute Ecloud Environment catalog":{"type":"method","name":"catalog","children":[],"call":[" service catalog "," organization id "," organization "," service base_path "," service "]}," Fog Compute Ecloud Environment trusted_network_groups":{"type":"method","name":"trusted_network_groups","children":[],"call":["Fog Compute Ecloud TrustedNetworkGroups  new "," id "," service base_path "," service "]}," Fog Compute Ecloud Environment physical_devices":{"type":"method","name":"physical_devices","children":[],"call":["Fog Compute Ecloud PhysicalDevices  new "," id "," service base_path "," service "]}," Fog Compute Ecloud Environment compute_pools":{"type":"method","name":"compute_pools","children":[],"call":["Fog Compute Ecloud ComputePools  new "," id "," service base_path "," service "]}," Fog Compute Ecloud Environment firewall_acls":{"type":"method","name":"firewall_acls","children":[],"call":["Fog Compute Ecloud FirewallAcls  new "," id "," service base_path "," service "]}," Fog Compute Ecloud Environment tasks":{"type":"method","name":"tasks","children":[],"call":["Fog Compute Ecloud Tasks  new "," id "," service base_path "," service "]}," Fog Compute Ecloud Environment rows":{"type":"method","name":"rows","children":[],"call":[" layout rows "," layout "]}," Fog Compute Ecloud Environment layout":{"type":"method","name":"layout","children":[],"call":[" service layouts first "," service layouts "," id "," service base_path "," service "]}," Fog Compute Ecloud Environment servers":{"type":"method","name":"servers","children":[],"call":["@servers << ","c servers each ","c servers ","pools index == ","pools index ","pools each "," compute_pools ","c servers  << "," compute_pools  index == "," compute_pools  index "," compute_pools  each "," compute_ compute_pools  "]}," Fog Compute Ecloud Environment networks":{"type":"method","name":"networks","children":[],"call":[" service networks "," id "," service base_path "," service "]}," Fog Compute Ecloud Environment backup_internet_services":{"type":"method","name":"backup_internet_services","children":[],"call":["Fog Compute Ecloud BackupInternetServices  new "," id "," service base_path "," service "]}," Fog Compute Ecloud Environment node_services":{"type":"method","name":"node_services","children":[],"call":["Fog Compute Ecloud Nodes  new "," id "," service base_path "," service "]}," Fog Compute Ecloud Environment internet_services":{"type":"method","name":"internet_services","children":[],"call":["Fog Compute Ecloud InternetServices  new "," id "," service base_path "," service "]}," Fog Compute Ecloud Environment public_ips":{"type":"method","name":"public_ips","children":[],"call":["Fog Compute Ecloud PublicIps  new "," id "," service base_path "," service "]}," Fog Compute Ecloud DetachedDisks get":{"type":"method","name":"get","children":[],"call":[" new "," service get_detached_disk body "," service get_detached_disk "," service "," raise ","e status_code == ","e status_code "]}," Fog Compute Ecloud DetachedDisks all":{"type":"method","name":"all","children":[],"call":[" load ","data nil? "," service get_detached_disks body [] "," service get_detached_disks body "," service get_detached_disks "," href "," service "," service get_detached_disks body []  nil? "]}," Fog Compute Ecloud DetachedDisk id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud DetachedDisk ready?":{"type":"method","name":"ready?","children":[],"call":[" status =~ "," status "]}," Fog Compute Ecloud CpuUsageDetailSummary get":{"type":"method","name":"get","children":[],"call":[" new ","data body "," service get_cpu_usage_detail "," service "," raise ","e status_code == ","e status_code "," service get_cpu_usage_detail  body "]}," Fog Compute Ecloud CpuUsageDetailSummary all":{"type":"method","name":"all","children":[],"call":[" load "," service get_cpu_usage_detail_summary body [] [] "," service get_cpu_usage_detail_summary body [] "," service get_cpu_usage_detail_summary body "," service get_cpu_usage_detail_summary "," href "," service "]}," Fog Compute Ecloud CpuUsageDetail id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud ComputePools from_data":{"type":"method","name":"from_data","children":[],"call":[" new "]}," Fog Compute Ecloud ComputePools get":{"type":"method","name":"get","children":[],"call":[" new ","data body "," service get_compute_pool "," service "," raise ","e status_code == ","e status_code "," service get_compute_pool  body "]}," Fog Compute Ecloud ComputePools all":{"type":"method","name":"all","children":[],"call":[" load "," service get_compute_pools body [] "," service get_compute_pools body "," service get_compute_pools "," href "," service "," check_href! "]}," Fog Compute Ecloud ComputePool id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud ComputePool edit":{"type":"method","name":"edit","children":[],"call":[" collection from_data "," collection "," service compute_pool_edit body "," service compute_pool_edit "," service ","options []= "," href "," collection from_ service compute_pool_edit body  "," service compute_ collection from_data _edit body "," service compute_ collection from_data _edit "]}," Fog Compute Ecloud ComputePool environment":{"type":"method","name":"environment","children":[],"call":[" service environments get ","environment_link [] "," service environments "," service ","l [] == ","l [] "," other_links find "," other_links "," reload "]}," Fog Compute Ecloud ComputePool detached_disks":{"type":"method","name":"detached_disks","children":[],"call":[" service detached_disks "," id "," service base_path "," service "]}," Fog Compute Ecloud ComputePool templates":{"type":"method","name":"templates","children":[],"call":[" service templates "," id "," service base_path "," service "]}," Fog Compute Ecloud ComputePool operating_system_families":{"type":"method","name":"operating_system_families","children":[],"call":["Fog Compute Ecloud OperatingSystemFamilies  new "," id "," service base_path "," service "]}," Fog Compute Ecloud ComputePool storage_usage":{"type":"method","name":"storage_usage","children":[],"call":["Fog Compute Ecloud StorageUsageDetailSummary  new "," id "," service base_path "," service "]}," Fog Compute Ecloud ComputePool memory_usage":{"type":"method","name":"memory_usage","children":[],"call":["Fog Compute Ecloud MemoryUsageDetailSummary  new "," id "," service base_path "," service "]}," Fog Compute Ecloud ComputePool cpu_usage":{"type":"method","name":"cpu_usage","children":[],"call":["Fog Compute Ecloud CpuUsageDetailSummary  new "," id "," service base_path "," service "]}," Fog Compute Ecloud ComputePool layout":{"type":"method","name":"layout","children":[],"call":["Fog Compute Ecloud Layouts  new first ","Fog Compute Ecloud Layouts  new "," id "," service base_path "," service "]}," Fog Compute Ecloud ComputePool servers":{"type":"method","name":"servers","children":[],"call":["Fog Compute Ecloud Servers  new "," id "," service base_path "," service "]}," Fog Compute Ecloud CatalogItem id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud CatalogItem configuration":{"type":"method","name":"configuration","children":[],"call":["Fog Compute Ecloud CatalogConfigurations  new "," id "," service base_path "," service "]}," Fog Compute Ecloud CatalogConfigurations get":{"type":"method","name":"get","children":[],"call":[" new ","data body "," service get_catalog_configuration "," service "," raise ","e status_code == ","e status_code "," service get_catalog_configuration  body "]}," Fog Compute Ecloud CatalogConfigurations all":{"type":"method","name":"all","children":[],"call":[" load "," service get_catalog_configurations body "," service get_catalog_configurations "," href "," service "]}," Fog Compute Ecloud CatalogConfiguration id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud Catalog get":{"type":"method","name":"get","children":[],"call":[" new ","data body "," service get_catalog_item "," service "," raise ","e status_code == ","e status_code "," service get_catalog_item  body "]}," Fog Compute Ecloud Catalog all":{"type":"method","name":"all","children":[],"call":[" load ","r_data << ","d [] [] each ","d [] [] ","d [] ","d [] empty? ","d [] is_a? ","data [] [] each ","data [] [] ","data [] ","data [] [] is_a? ","data [] [] [] empty? ","data [] [] [] ","data [] [] [] is_a? "," service get_catalog body "," service get_catalog "," href "," service ","r_ service get_catalog body  << "," service get_catalog body  [] [] each "," service get_catalog body  [] [] "," service get_catalog body  [] "," service get_catalog body  [] [] is_a? "," service get_catalog body  [] [] [] empty? "," service get_catalog body  [] [] [] "," service get_catalog body  [] [] [] is_a? "]}," Fog Compute Ecloud BackupInternetServices internet_service_id":{"type":"method","name":"internet_service_id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud BackupInternetServices create":{"type":"method","name":"create","children":[],"call":[" new "," service backup_internet_service_create "," service ","options [] ","options []= "," href + "," href "]}," Fog Compute Ecloud BackupInternetServices from_data":{"type":"method","name":"from_data","children":[],"call":[" new "]}," Fog Compute Ecloud BackupInternetServices get":{"type":"method","name":"get","children":[],"call":[" new ","data body "," service get_backup_internet_service "," service "," raise ","e status_code == ","e status_code "," service get_backup_internet_service  body "]}," Fog Compute Ecloud BackupInternetServices all":{"type":"method","name":"all","children":[],"call":[" load "," service get_backup_internet_services body "," service get_backup_internet_services "," href "," service "]}," Fog Compute Ecloud BackupInternetService id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud BackupInternetService delete":{"type":"method","name":"delete","children":[],"call":["Fog Compute Ecloud Tasks  new [] ","Fog Compute Ecloud Tasks  new ","data [] "," service "," service backup_internet_service_delete body "," service backup_internet_service_delete "," href "," service backup_internet_service_delete body  [] "]}," Fog Compute Ecloud BackupInternetService edit":{"type":"method","name":"edit","children":[],"call":[" collection from_data "," collection "," service backup_internet_service_edit body "," service backup_internet_service_edit "," service ","options []= "," href "," collection from_ service backup_internet_service_edit body  "]}," Fog Compute Ecloud BackupInternetService node_services":{"type":"method","name":"node_services","children":[],"call":["Fog Compute Ecloud NodeServices  new "," href "," service "]}," Fog Compute Ecloud BackupInternetService internet_services":{"type":"method","name":"internet_services","children":[],"call":["Fog Compute Ecloud InternetServices  new "," href "," service "]}," Fog Compute Ecloud BackupInternetService tasks":{"type":"method","name":"tasks","children":[],"call":["Fog Compute Ecloud Tasks  new "," href "," service "]}," Fog Compute Ecloud AuthenticationLevels get":{"type":"method","name":"get","children":[],"call":[" new ","data body "," service get_authentication_level "," service "," raise ","e status_code == ","e status_code "," service get_authentication_level  body "]}," Fog Compute Ecloud AuthenticationLevels all":{"type":"method","name":"all","children":[],"call":[" load "," service get_authentication_levels body "," service get_authentication_levels "," href "," service "]}," Fog Compute Ecloud AuthenticationLevel id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud Associations get":{"type":"method","name":"get","children":[],"call":[" new ","data body "," service get_association "," service "," raise ","e status_code == ","e status_code "," service get_association  body "]}," Fog Compute Ecloud Associations all":{"type":"method","name":"all","children":[],"call":[" load ","data [] ","data is_a? ","data empty? "," service get_associations body "," service get_associations "," href "," service ","data []  [] "," service get_associations body  [] ","data []  is_a? "," service get_associations body  is_a? ","data []  empty? "," service get_associations body  empty? "]}," Fog Compute Ecloud Association id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud Association delete":{"type":"method","name":"delete","children":[],"call":["Fog Compute Ecloud Tasks  new [] ","Fog Compute Ecloud Tasks  new "," href "," service "," service rnat_associations_delete body "," service rnat_associations_delete "]}," Fog Compute Ecloud ApiKeys get":{"type":"method","name":"get","children":[],"call":[" new ","data body "," service get_api_key "," service "," raise ","e status_code == ","e status_code "," service get_api_key  body "]}," Fog Compute Ecloud ApiKeys all":{"type":"method","name":"all","children":[],"call":[" load "," service get_api_keys body "," service get_api_keys "," href "," service "]}," Fog Compute Ecloud ApiKey id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud AdminOrganizations get":{"type":"method","name":"get","children":[],"call":[" new ","data body "," service get_admin_organization "," service "," raise ","e status_code == ","e status_code "," service get_admin_organization  body "]}," Fog Compute Ecloud AdminOrganization organization":{"type":"method","name":"organization","children":[],"call":[" service organizations new "," service organizations "," service ","l [] == ","l [] "," other_links find "," other_links "," reload "]}," Fog Compute Ecloud AdminOrganization id":{"type":"method","name":"id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud AdminOrganization authentication_levels":{"type":"method","name":"authentication_levels","children":[],"call":["Fog Compute Ecloud AuthenticationLevels  new "," organization id "," organization "," service base_path "," service "]}," Fog Compute Ecloud AdminOrganization login_banner":{"type":"method","name":"login_banner","children":[],"call":["Fog Compute Ecloud LoginBanner  new "," organization id "," organization "," service base_path "," service "]}," Fog Compute Ecloud AdminOrganization password_complexity_rules":{"type":"method","name":"password_complexity_rules","children":[],"call":["Fog Compute Ecloud PasswordComplexityRules  new "," organization id "," organization "," service base_path "," service "]}," Fog Compute Ecloud AdminOrganization ssh_keys":{"type":"method","name":"ssh_keys","children":[],"call":["Fog Compute Ecloud SshKeys  new "," organization id "," organization "," service base_path "," service "]}," Fog Ecloud Model load_unless_loaded!":{"type":"method","name":"load_unless_loaded!","children":[],"call":[" reload "]}," Fog Ecloud Model reload":{"type":"method","name":"reload","children":[],"call":[]}," Fog Ecloud MockDataClasses MockPublicIpInternetServiceNode enabled=":{"type":"method","name":"enabled=","children":[],"call":[" []= "]}," Fog Ecloud MockDataClasses MockPublicIpInternetServiceNode enabled":{"type":"method","name":"enabled","children":[],"call":[" [] to_s downcase != "," [] to_s downcase "," [] to_s "," [] "]}," Fog Ecloud MockDataClasses MockPublicIpInternetServiceNode port":{"type":"method","name":"port","children":[],"call":[" [] "]}," Fog Ecloud MockDataClasses MockPublicIpInternetServiceNode description":{"type":"method","name":"description","children":[],"call":[" name "," [] "]}," Fog Ecloud MockDataClasses MockPublicIpInternetServiceNode name":{"type":"method","name":"name","children":[],"call":[" object_id "," [] "]}," Fog Ecloud MockDataClasses MockPublicIpInternetServiceNode ip_address":{"type":"method","name":"ip_address","children":[],"call":[" [] "]}," Fog Ecloud MockDataClasses MockPublicIpInternetServiceNodes items":{"type":"method","name":"items","children":[{"type":"method","name":"<<","children":[],"asgn":[],"call":[]}],"call":["node [] ","node_array instance_variable_set "," _parent port "," _parent "," tap "]}," Fog Ecloud MockDataClasses MockPublicIpInternetServiceNodes href":{"type":"method","name":"href","children":[],"call":[" _parent href + "," _parent href "," _parent "]}," Fog Ecloud MockDataClasses MockPublicIpInternetService backup_service":{"type":"method","name":"backup_service","children":[],"call":[" [] "]}," Fog Ecloud MockDataClasses MockPublicIpInternetService monitor":{"type":"method","name":"monitor","children":[],"call":[]}," Fog Ecloud MockDataClasses MockPublicIpInternetService node_collection":{"type":"method","name":"node_collection","children":[],"call":["MockPublicIpInternetServiceNodes  new "]}," Fog Ecloud MockDataClasses MockPublicIpInternetService timeout":{"type":"method","name":"timeout","children":[],"call":[" [] "]}," Fog Ecloud MockDataClasses MockPublicIpInternetService redirect_url":{"type":"method","name":"redirect_url","children":[],"call":[" [] "]}," Fog Ecloud MockDataClasses MockPublicIpInternetService enabled":{"type":"method","name":"enabled","children":[],"call":[" [] ! ! "," [] ! "," [] "]}," Fog Ecloud MockDataClasses MockPublicIpInternetService port":{"type":"method","name":"port","children":[],"call":[" [] "]}," Fog Ecloud MockDataClasses MockPublicIpInternetService protocol":{"type":"method","name":"protocol","children":[],"call":[" [] "]}," Fog Ecloud MockDataClasses MockPublicIpInternetService description":{"type":"method","name":"description","children":[],"call":[" name "," [] "]}," Fog Ecloud MockDataClasses MockPublicIpInternetService name":{"type":"method","name":"name","children":[],"call":[" object_id "," [] "]}," Fog Ecloud MockDataClasses MockPublicIpInternetServices items":{"type":"method","name":"items","children":[],"call":[]}," Fog Ecloud MockDataClasses MockPublicIpInternetServices href":{"type":"method","name":"href","children":[],"call":[" _parent href + "," _parent href "," _parent "]}," Fog Ecloud MockDataClasses MockPublicIp internet_service_collection":{"type":"method","name":"internet_service_collection","children":[],"call":["MockPublicIpInternetServices  new "]}," Fog Ecloud MockDataClasses MockPublicIp name":{"type":"method","name":"name","children":[],"call":[" [] "]}," Fog Ecloud MockDataClasses MockPublicIps items":{"type":"method","name":"items","children":[],"call":[]}," Fog Ecloud MockDataClasses MockPublicIps name":{"type":"method","name":"name","children":[],"call":[" [] "]}," Fog Ecloud MockDataClasses MockFirewallAcls name":{"type":"method","name":"name","children":[],"call":[]}," Fog Ecloud MockDataClasses MockBackupInternetService node_collection":{"type":"method","name":"node_collection","children":[],"call":["MockPublicIpInternetServiceNodes  new "]}," Fog Ecloud MockDataClasses MockBackupInternetService redirect_url":{"type":"method","name":"redirect_url","children":[],"call":[]}," Fog Ecloud MockDataClasses MockBackupInternetService description":{"type":"method","name":"description","children":[],"call":[" name "," [] "]}," Fog Ecloud MockDataClasses MockBackupInternetService timeout":{"type":"method","name":"timeout","children":[],"call":[" [] "]}," Fog Ecloud MockDataClasses MockBackupInternetService enabled":{"type":"method","name":"enabled","children":[],"call":[" [] to_s downcase != "," [] to_s downcase "," [] to_s "," [] "]}," Fog Ecloud MockDataClasses MockBackupInternetService port":{"type":"method","name":"port","children":[],"call":[]}," Fog Ecloud MockDataClasses MockBackupInternetService protocol":{"type":"method","name":"protocol","children":[],"call":[" [] "]}," Fog Ecloud MockDataClasses MockBackupInternetService name":{"type":"method","name":"name","children":[],"call":[" object_id "," [] "]}," Fog Ecloud MockDataClasses MockVdcInternetServices backup_internet_services":{"type":"method","name":"backup_internet_services","children":[],"call":[]}," Fog Ecloud MockDataClasses MockVdcInternetServices public_ip_internet_services":{"type":"method","name":"public_ip_internet_services","children":[],"call":["services + ","public_ip internet_service_collection items ","public_ip internet_service_collection "," _parent public_ip_collection items reduce "," _parent public_ip_collection items "," _parent public_ip_collection "," _parent "]}," Fog Ecloud MockDataClasses MockVdcInternetServices items":{"type":"method","name":"items","children":[],"call":[" public_ip_internet_services + "," backup_internet_services "," public_ip_internet_services "]}," Fog Ecloud MockDataClasses MockVdcInternetServices name":{"type":"method","name":"name","children":[],"call":[]}," Fog Ecloud MockDataClasses MockVdcInternetServices href":{"type":"method","name":"href","children":[],"call":[" _parent href + "," _parent href "," _parent "]}," Fog Ecloud MockDataClasses MockVirtualMachineDisk address":{"type":"method","name":"address","children":[],"call":[" [] to_i "," [] "]}," Fog Ecloud MockDataClasses MockVirtualMachineDisk vcloud_size":{"type":"method","name":"vcloud_size","children":[],"call":[" size * "," size "]}," Fog Ecloud MockDataClasses MockVirtualMachineDisk size":{"type":"method","name":"size","children":[],"call":[" [] to_i "," [] "]}," Fog Ecloud MockDataClasses MockVirtualMachineDisks at_address":{"type":"method","name":"at_address","children":[],"call":["d address == ","d address "," find "]}," Fog Ecloud MockDataClasses MockVirtualMachineDisks <<":{"type":"method","name":"<<","children":[],"call":["a address <=> ","b address ","a address "," sort! "," raise "," size ","addresses inspect ","(lvasgn :addresses\n  (block\n    (send nil :map)\n    (args\n      (arg :d))\n    (send\n      (lvar :d) :address))) uniq size != ","(lvasgn :addresses\n  (block\n    (send nil :map)\n    (args\n      (arg :d))\n    (send\n      (lvar :d) :address))) uniq size ","(lvasgn :addresses\n  (block\n    (send nil :map)\n    (args\n      (arg :d))\n    (send\n      (lvar :d) :address))) uniq ","d address "," map ","disk [] ","disk_with_max_address address + ","disk_with_max_address address ","a [] <=> ","b [] ","a [] "," max "]}," Fog Ecloud MockDataClasses MockVirtualMachineDisks _parent":{"type":"method","name":"_parent","children":[],"call":[]}," Fog Ecloud MockDataClasses MockVirtualMachineDisks initialize":{"type":"method","name":"initialize","children":[],"call":[]}," Fog Ecloud MockDataClasses MockVirtualMachine href":{"type":"method","name":"href","children":[],"call":[" + "]}," Fog Ecloud MockDataClasses MockVirtualMachine to_configure_vapp_hash":{"type":"method","name":"to_configure_vapp_hash","children":[],"call":["d vcloud_size to_s ","d vcloud_size ","d address to_s ","d address "," disks map "," disks "," memory "," cpus "," name "]}," Fog Ecloud MockDataClasses MockVirtualMachine network_ip":{"type":"method","name":"network_ip","children":[],"call":["network ip_collection items [] "," ip ","network ip_collection items ","network ip_collection ","n ip_collection items [] ","n ip_collection items ","n ip_collection "," _parent networks find "," _parent networks "," _parent "]}," Fog Ecloud MockDataClasses MockVirtualMachine size":{"type":"method","name":"size","children":[],"call":["s + ","d vcloud_size "," disks reduce "," disks "]}," Fog Ecloud MockDataClasses MockVirtualMachine power_on!":{"type":"method","name":"power_on!","children":[],"call":[" []= "]}," Fog Ecloud MockDataClasses MockVirtualMachine power_off!":{"type":"method","name":"power_off!","children":[],"call":[" []= "]}," Fog Ecloud MockDataClasses MockVirtualMachine status":{"type":"method","name":"status","children":[],"call":[" [] "]}," Fog Ecloud MockDataClasses MockVirtualMachine disks":{"type":"method","name":"disks","children":[],"call":["MockVirtualMachineDisks  new "]}," Fog Ecloud MockDataClasses MockVirtualMachine memory":{"type":"method","name":"memory","children":[],"call":[" [] "]}," Fog Ecloud MockDataClasses MockVirtualMachine cpus":{"type":"method","name":"cpus","children":[],"call":[" [] "]}," Fog Ecloud MockDataClasses MockVirtualMachine ip":{"type":"method","name":"ip","children":[],"call":[" [] "]}," Fog Ecloud MockDataClasses MockVirtualMachine name":{"type":"method","name":"name","children":[],"call":[" [] "]}," Fog Ecloud MockDataClasses MockNetworkExtensions friendly_name":{"type":"method","name":"friendly_name","children":[],"call":[" object_id "," type "," name "]}," Fog Ecloud MockDataClasses MockNetworkExtensions vlan":{"type":"method","name":"vlan","children":[],"call":[" object_id to_s "," object_id "]}," Fog Ecloud MockDataClasses MockNetworkExtensions type":{"type":"method","name":"type","children":[],"call":[" [] "]}," Fog Ecloud MockDataClasses MockNetworkExtensions rnat":{"type":"method","name":"rnat","children":[],"call":[" _parent rnat "," _parent "]}," Fog Ecloud MockDataClasses MockNetworkExtensions address":{"type":"method","name":"address","children":[],"call":[" _parent address "," _parent "]}," Fog Ecloud MockDataClasses MockNetworkExtensions broadcast":{"type":"method","name":"broadcast","children":[],"call":[" _parent broadcast "," _parent "]}," Fog Ecloud MockDataClasses MockNetworkExtensions gateway":{"type":"method","name":"gateway","children":[],"call":[" _parent gateway "," _parent "]}," Fog Ecloud MockDataClasses MockNetworkExtensions name":{"type":"method","name":"name","children":[],"call":[" _parent name "," _parent "]}," Fog Ecloud MockDataClasses MockNetworkIp rnat_set?":{"type":"method","name":"rnat_set?","children":[],"call":[" [] ! ! "," [] ! "," [] "]}," Fog Ecloud MockDataClasses MockNetworkIp rnat":{"type":"method","name":"rnat","children":[],"call":[" _parent _parent rnat "," _parent _parent "," _parent "," [] "]}," Fog Ecloud MockDataClasses MockNetworkIp status":{"type":"method","name":"status","children":[],"call":[" used_by "]}," Fog Ecloud MockDataClasses MockNetworkIp used_by":{"type":"method","name":"used_by","children":[],"call":["v ip == "," ip ","v ip "," _parent _parent _parent virtual_machines find "," _parent _parent _parent virtual_machines "," _parent _parent _parent "," _parent _parent "," _parent "," [] "]}," Fog Ecloud MockDataClasses MockNetworkIp ip":{"type":"method","name":"ip","children":[],"call":[" [] "]}," Fog Ecloud MockDataClasses MockNetworkIp name":{"type":"method","name":"name","children":[],"call":[" ip "," [] "]}," Fog Ecloud MockDataClasses MockNetworkIps name":{"type":"method","name":"name","children":[],"call":[]}," Fog Ecloud MockDataClasses MockNetworkIps ordered_ips":{"type":"method","name":"ordered_ips","children":[],"call":["i ip split map ","i ip split ","i ip "," items values sort_by "," items values "," items "]}," Fog Ecloud MockDataClasses MockNetworkIps items":{"type":"method","name":"items","children":[],"call":["out update ","MockNetworkIp  new "," _parent usable_subnet_ips reduce "," _parent usable_subnet_ips "," _parent "]}," Fog Ecloud MockDataClasses MockNetwork subnet_ips":{"type":"method","name":"subnet_ips","children":[],"call":[" subnet_ipaddr to_range to_a map "," subnet_ipaddr to_range to_a "," subnet_ipaddr to_range "," subnet_ipaddr "]}," Fog Ecloud MockDataClasses MockNetwork subnet_ipaddr":{"type":"method","name":"subnet_ipaddr","children":[],"call":["IPAddr  new "," subnet "]}," Fog Ecloud MockDataClasses MockNetwork broadcast":{"type":"method","name":"broadcast","children":[],"call":[" subnet_ips last "," subnet_ips "]}," Fog Ecloud MockDataClasses MockNetwork address":{"type":"method","name":"address","children":[],"call":[" subnet_ips first "," subnet_ips "]}," Fog Ecloud MockDataClasses MockNetwork usable_subnet_ips":{"type":"method","name":"usable_subnet_ips","children":[],"call":[" subnet_ips [] "," subnet_ips "]}," Fog Ecloud MockDataClasses MockNetwork rnat":{"type":"method","name":"rnat","children":[],"call":[" [] "]}," Fog Ecloud MockDataClasses MockNetwork random_ip":{"type":"method","name":"random_ip","children":[],"call":[" usable_subnet_ips [] "," rand "," usable_subnet_ips length "," usable_subnet_ips "]}," Fog Ecloud MockDataClasses MockNetwork extensions":{"type":"method","name":"extensions","children":[],"call":["MockNetworkExtensions  new "]}," Fog Ecloud MockDataClasses MockNetwork ip_collection":{"type":"method","name":"ip_collection","children":[],"call":["MockNetworkIps  new "]}," Fog Ecloud MockDataClasses MockNetwork features":{"type":"method","name":"features","children":[],"call":[]}," Fog Ecloud MockDataClasses MockNetwork dns":{"type":"method","name":"dns","children":[],"call":[]}," Fog Ecloud MockDataClasses MockNetwork netmask":{"type":"method","name":"netmask","children":[],"call":[" subnet_ipaddr mask "," subnet_ipaddr "," [] "," subnet_ipaddr mask_string "]}," Fog Ecloud MockDataClasses MockNetwork gateway":{"type":"method","name":"gateway","children":[],"call":[" subnet_ips [] "," subnet_ips "," [] "]}," Fog Ecloud MockDataClasses MockNetwork subnet":{"type":"method","name":"subnet","children":[],"call":[" [] "]}," Fog Ecloud MockDataClasses MockNetwork name":{"type":"method","name":"name","children":[],"call":[" subnet "," [] "]}," Fog Ecloud MockDataClasses MockCatalogItemVappTemplate name":{"type":"method","name":"name","children":[],"call":[" [] "]}," Fog Ecloud MockDataClasses MockCatalogItemCustomization name":{"type":"method","name":"name","children":[],"call":[" [] "]}," Fog Ecloud MockDataClasses MockCatalogItem vapp_template":{"type":"method","name":"vapp_template","children":[],"call":["MockCatalogItemVappTemplate  new "," name "]}," Fog Ecloud MockDataClasses MockCatalogItem customization":{"type":"method","name":"customization","children":[],"call":["MockCatalogItemCustomization  new "]}," Fog Ecloud MockDataClasses MockCatalogItem disks":{"type":"method","name":"disks","children":[],"call":["MockVirtualMachineDisks  new "]}," Fog Ecloud MockDataClasses MockCatalogItem name":{"type":"method","name":"name","children":[],"call":[" [] "]}," Fog Ecloud MockDataClasses MockCatalog items":{"type":"method","name":"items","children":[],"call":[]}," Fog Ecloud MockDataClasses MockCatalog name":{"type":"method","name":"name","children":[],"call":[" [] "]}," Fog Ecloud MockDataClasses MockTaskList name":{"type":"method","name":"name","children":[],"call":[" [] "]}," Fog Ecloud MockDataClasses MockVdc firewall_acls":{"type":"method","name":"firewall_acls","children":[],"call":["MockFirewallAcls  new "]}," Fog Ecloud MockDataClasses MockVdc internet_service_collection":{"type":"method","name":"internet_service_collection","children":[],"call":["MockVdcInternetServices  new "]}," Fog Ecloud MockDataClasses MockVdc public_ip_collection":{"type":"method","name":"public_ip_collection","children":[],"call":["MockPublicIps  new "]}," Fog Ecloud MockDataClasses MockVdc task_list":{"type":"method","name":"task_list","children":[],"call":["MockTaskList  new "]}," Fog Ecloud MockDataClasses MockVdc virtual_machines":{"type":"method","name":"virtual_machines","children":[],"call":[]}," Fog Ecloud MockDataClasses MockVdc networks":{"type":"method","name":"networks","children":[],"call":[]}," Fog Ecloud MockDataClasses MockVdc catalog":{"type":"method","name":"catalog","children":[],"call":["MockCatalog  new "]}," Fog Ecloud MockDataClasses MockVdc memory_allocated":{"type":"method","name":"memory_allocated","children":[],"call":[" [] "]}," Fog Ecloud MockDataClasses MockVdc cpu_allocated":{"type":"method","name":"cpu_allocated","children":[],"call":[" [] "]}," Fog Ecloud MockDataClasses MockVdc storage_used":{"type":"method","name":"storage_used","children":[],"call":[" [] "]}," Fog Ecloud MockDataClasses MockVdc storage_allocated":{"type":"method","name":"storage_allocated","children":[],"call":[" [] "]}," Fog Ecloud MockDataClasses MockVdc name":{"type":"method","name":"name","children":[],"call":[" [] "]}," Fog Ecloud MockDataClasses MockOrganization environments":{"type":"method","name":"environments","children":[],"call":[]}," Fog Ecloud MockDataClasses MockOrganization name":{"type":"method","name":"name","children":[],"call":[" [] "]}," Fog Ecloud MockDataClasses MockVersion login_url":{"type":"method","name":"login_url","children":[],"call":[" href "]}," Fog Ecloud MockDataClasses MockVersion supported":{"type":"method","name":"supported","children":[],"call":[" [] ! ! "," [] ! "," [] "]}," Fog Ecloud MockDataClasses MockVersion version":{"type":"method","name":"version","children":[],"call":[" [] "]}," Fog Ecloud MockDataClasses MockData find_href_prefixed_in":{"type":"method","name":"find_href_prefixed_in","children":[],"call":["href =~ ","o href ","objects find "]}," Fog Ecloud MockDataClasses MockData find_href_in":{"type":"method","name":"find_href_in","children":[],"call":["o href == ","o href ","objects find "]}," Fog Ecloud MockDataClasses MockData network_ip_from_href":{"type":"method","name":"network_ip_from_href","children":[],"call":[" find_href_in "," all_network_ips "]}," Fog Ecloud MockDataClasses MockData all_network_ips":{"type":"method","name":"all_network_ips","children":[],"call":["(send\n  (send nil :all_network_ip_collections) :map) flatten ","c items values ","c items "," all_network_ip_collections map "," all_network_ip_collections "]}," Fog Ecloud MockDataClasses MockData network_ip_collection_from_href":{"type":"method","name":"network_ip_collection_from_href","children":[],"call":[" find_href_in "," all_network_ip_collections "]}," Fog Ecloud MockDataClasses MockData all_network_ip_collections":{"type":"method","name":"all_network_ip_collections","children":[],"call":[" all_networks map "," all_networks "]}," Fog Ecloud MockDataClasses MockData public_ip_internet_service_node_from_href":{"type":"method","name":"public_ip_internet_service_node_from_href","children":[],"call":[" find_href_in "," all_public_ip_internet_service_nodes "]}," Fog Ecloud MockDataClasses MockData all_public_ip_internet_service_nodes":{"type":"method","name":"all_public_ip_internet_service_nodes","children":[],"call":[" all_public_ip_internet_service_node_collections map flatten "," all_public_ip_internet_service_node_collections map "," all_public_ip_internet_service_node_collections "]}," Fog Ecloud MockDataClasses MockData public_ip_internet_service_node_collection_from_href":{"type":"method","name":"public_ip_internet_service_node_collection_from_href","children":[],"call":[" find_href_in "," all_public_ip_internet_service_node_collections "]}," Fog Ecloud MockDataClasses MockData all_public_ip_internet_service_node_collections":{"type":"method","name":"all_public_ip_internet_service_node_collections","children":[],"call":[" all_public_ip_internet_services map flatten "," all_public_ip_internet_services map "," all_public_ip_internet_services "]}," Fog Ecloud MockDataClasses MockData public_ip_internet_service_from_href":{"type":"method","name":"public_ip_internet_service_from_href","children":[],"call":[" find_href_in "," all_public_ip_internet_services "]}," Fog Ecloud MockDataClasses MockData all_public_ip_internet_services":{"type":"method","name":"all_public_ip_internet_services","children":[],"call":[" all_public_ip_internet_service_collections map flatten "," all_public_ip_internet_service_collections map "," all_public_ip_internet_service_collections "]}," Fog Ecloud MockDataClasses MockData public_ip_internet_service_collection_from_href":{"type":"method","name":"public_ip_internet_service_collection_from_href","children":[],"call":[" find_href_in "," all_public_ip_internet_service_collections "]}," Fog Ecloud MockDataClasses MockData all_public_ip_internet_service_collections":{"type":"method","name":"all_public_ip_internet_service_collections","children":[],"call":[" all_public_ips map flatten "," all_public_ips map "," all_public_ips "]}," Fog Ecloud MockDataClasses MockData public_ip_from_href":{"type":"method","name":"public_ip_from_href","children":[],"call":[" find_href_in "," all_public_ips "]}," Fog Ecloud MockDataClasses MockData all_public_ips":{"type":"method","name":"all_public_ips","children":[],"call":[" all_public_ip_collections map flatten "," all_public_ip_collections map "," all_public_ip_collections "]}," Fog Ecloud MockDataClasses MockData public_ip_collection_from_href":{"type":"method","name":"public_ip_collection_from_href","children":[],"call":[" find_href_in "," all_public_ip_collections "]}," Fog Ecloud MockDataClasses MockData all_public_ip_collections":{"type":"method","name":"all_public_ip_collections","children":[],"call":["(send\n  (send nil :all_vdcs) :map) flatten ","v public_ip_collection "," all_vdcs map "," all_vdcs "]}," Fog Ecloud MockDataClasses MockData backup_internet_service_from_href":{"type":"method","name":"backup_internet_service_from_href","children":[],"call":[" find_href_in "," all_backup_internet_services "]}," Fog Ecloud MockDataClasses MockData all_backup_internet_services":{"type":"method","name":"all_backup_internet_services","children":[],"call":[" all_vdc_internet_service_collections map flatten "," all_vdc_internet_service_collections map "," all_vdc_internet_service_collections "]}," Fog Ecloud MockDataClasses MockData vdc_internet_service_collection_from_href":{"type":"method","name":"vdc_internet_service_collection_from_href","children":[],"call":[" find_href_in "," all_vdc_internet_service_collections "]}," Fog Ecloud MockDataClasses MockData all_vdc_internet_service_collections":{"type":"method","name":"all_vdc_internet_service_collections","children":[],"call":[" all_vdcs map flatten "," all_vdcs map "," all_vdcs "]}," Fog Ecloud MockDataClasses MockData network_extension_from_href":{"type":"method","name":"network_extension_from_href","children":[],"call":[" find_href_in "," all_network_extensions "]}," Fog Ecloud MockDataClasses MockData all_network_extensions":{"type":"method","name":"all_network_extensions","children":[],"call":[" all_networks map flatten "," all_networks map "," all_networks "]}," Fog Ecloud MockDataClasses MockData network_from_href":{"type":"method","name":"network_from_href","children":[],"call":[" find_href_in "," all_networks "]}," Fog Ecloud MockDataClasses MockData all_networks":{"type":"method","name":"all_networks","children":[],"call":[" all_vdcs map flatten "," all_vdcs map "," all_vdcs "]}," Fog Ecloud MockDataClasses MockData virtual_machine_from_href":{"type":"method","name":"virtual_machine_from_href","children":[],"call":[" find_href_prefixed_in "," all_virtual_machines "]}," Fog Ecloud MockDataClasses MockData all_virtual_machines":{"type":"method","name":"all_virtual_machines","children":[],"call":[" all_vdcs map flatten "," all_vdcs map "," all_vdcs "]}," Fog Ecloud MockDataClasses MockData catalog_item_from_href":{"type":"method","name":"catalog_item_from_href","children":[],"call":[" find_href_in "," all_catalog_items "]}," Fog Ecloud MockDataClasses MockData all_catalog_items":{"type":"method","name":"all_catalog_items","children":[],"call":[" all_catalogs map flatten "," all_catalogs map "," all_catalogs "]}," Fog Ecloud MockDataClasses MockData catalog_from_href":{"type":"method","name":"catalog_from_href","children":[],"call":[" find_href_in "," all_catalogs "]}," Fog Ecloud MockDataClasses MockData all_catalogs":{"type":"method","name":"all_catalogs","children":[],"call":[" all_vdcs map flatten "," all_vdcs map "," all_vdcs "]}," Fog Ecloud MockDataClasses MockData vdc_from_href":{"type":"method","name":"vdc_from_href","children":[],"call":[" find_href_in "," all_vdcs "]}," Fog Ecloud MockDataClasses MockData all_vdcs":{"type":"method","name":"all_vdcs","children":[],"call":[" organizations map flatten "," organizations map "," organizations "]}," Fog Ecloud MockDataClasses MockData organization_from_href":{"type":"method","name":"organization_from_href","children":[],"call":[" find_href_in "," all_organizations "]}," Fog Ecloud MockDataClasses MockData all_organizations":{"type":"method","name":"all_organizations","children":[],"call":[" organizations map flatten "," organizations map "," organizations "]}," Fog Ecloud MockDataClasses MockData organization_collection_from_href":{"type":"method","name":"organization_collection_from_href","children":[],"call":[" find_href_in "," all_organizations "]}," Fog Ecloud MockDataClasses MockData organizations":{"type":"method","name":"organizations","children":[],"call":[]}," Fog Ecloud MockDataClasses MockData versions":{"type":"method","name":"versions","children":[],"call":[]}," Fog Ecloud MockDataClasses Base inspect":{"type":"method","name":"inspect","children":[],"call":[" object_id "," class name "," class "]}," Fog Ecloud MockDataClasses Base href":{"type":"method","name":"href","children":[],"call":["(send nil :base_url) join "," object_id "," class name split last "," class name split "," class name "," class "," base_url "]}," Fog Ecloud MockDataClasses Base base_url":{"type":"method","name":"base_url","children":[],"call":["Base  base_url "]}," Fog Ecloud MockDataClasses Base _parent":{"type":"method","name":"_parent","children":[],"call":[]}," Fog Ecloud MockDataClasses Base initialize":{"type":"method","name":"initialize","children":[],"call":[" replace "]}," Fog Ecloud MockDataClasses Base last":{"type":"method","name":"last","children":[],"call":[" raise "]}," Fog Ecloud MockDataClasses Base first":{"type":"method","name":"first","children":[],"call":[" raise "]}," Fog Ecloud MockDataClasses Base base_url=":{"type":"method","name":"base_url=","children":[],"call":[]}," IPAddr mask":{"type":"method","name":"mask","children":[],"call":[" _to_string "]}," String camelize":{"type":"method","name":"camelize","children":[],"call":["(send\n  (send\n    (self) :split\n    (str \"_\")) :map) join ","w capitalize "," split map "," split "]}," Fog Ecloud mac_address":{"type":"method","name":"mac_address","children":[],"call":[]}," Fog Ecloud ip_address":{"type":"method","name":"ip_address","children":[],"call":[]}," Fog Ecloud slice":{"type":"method","name":"slice","children":[],"call":[]}," Fog Ecloud keep":{"type":"method","name":"keep","children":[],"call":[]}," Fog Compute Ecloud Mock deep_copy":{"type":"method","name":"deep_copy","children":[],"call":["Marshal  load ","Marshal  dump "]}," Fog Compute Ecloud Mock response":{"type":"method","name":"response","children":[],"call":[" raise ","Excon Errors  status_error ","(splat\n  (send\n    (lvar :params) :[]\n    (sym :expects))) include? ! ","(splat\n  (send\n    (lvar :params) :[]\n    (sym :expects))) include? ","response status ","params [] ","params key? ","Excon Response  new ","(pair\n  (str \"Content-Type\")\n  (str \"application/xml\")) merge ","ServiceError  slurp ","Excon Errors NotFound  new "," raisExcon Errors NotFound  new  ","Excon Errors  status_Excon Errors NotFound  new rror ","(splat\n  (sExcon Errors NotFound  new nd\n    (lvar :params) :[]\n    (sym :Excon Errors NotFound  new xpExcon Errors NotFound  new cts))) includExcon Errors NotFound  new ? ! ","(splat\n  (sExcon Errors NotFound  new nd\n    (lvar :params) :[]\n    (sym :Excon Errors NotFound  new xpExcon Errors NotFound  new cts))) includExcon Errors NotFound  new ? ","Excon Response  new  status ","rExcon Errors NotFound  new sponsExcon Errors NotFound  new  status ","params kExcon Errors NotFound  new y? ","Excon RExcon Errors NotFound  new sponsExcon Errors NotFound  new   nExcon Errors NotFound  new w ","(pair\n  (str \"ContExcon Errors NotFound  new nt-TypExcon Errors NotFound  new \")\n  (str \"application/xml\")) mExcon Errors NotFound  new rgExcon Errors NotFound  new  ","SExcon Errors NotFound  new rvicExcon Errors NotFound  new Error  slurp ","Excon Errors NotFound  nExcon Errors NotFound  new w "]}," Fog Compute Ecloud Mock reset_data":{"type":"method","name":"reset_data","children":[],"call":[" class data delete "," class data "," class "]}," Fog Compute Ecloud Mock data":{"type":"method","name":"data","children":[],"call":[" class data [] "," class data "," class "]}," Fog Compute Ecloud Mock initialize":{"type":"method","name":"initialize","children":[],"call":["options [] "]}," Fog Compute Ecloud Mock reset":{"type":"method","name":"reset","children":[],"call":[]}," Fog Compute Ecloud Real canonicalize_resource":{"type":"method","name":"canonicalize_resource","children":[],"call":["uri downcase ","(send\n  (lvar :query_string_pairs) :map) join ","x last ","x first downcase ","x first ","query_string_pairs map ","e split ","query_string split sort map ","query_string split sort ","query_string split ","query_string nil? ","path split "]}," Fog Compute Ecloud Real canonicalize_headers":{"type":"method","name":"canonicalize_headers","children":[],"call":["(send\n  (send\n    (lvar :tmp) :sort) :map) join ","e last ","e first ","tmp sort map ","tmp sort ","k == ","tmp reject! ","ret []= ","h last ","h first downcase ","h first ","h first match ","headers reduce ","headers inject ","(send\n  (send\n    (lvar :(send\n  (send\n    (lvar :tmp) :sort) :map) join ) :sort) :map) join ","(send\n  (send\n    (lvar :tmp) :sort) :map) join  sort map ","(send\n  (send\n    (lvar :tmp) :sort) :map) join  sort ","(send\n  (send\n    (lvar :tmp) :sort) :map) join  reject! "]}," Fog Compute Ecloud Real cloud_api_signature":{"type":"method","name":"cloud_api_signature","children":[],"call":["Base64  encode64 chomp ","Base64  encode64 ","@hmac sign ","(lvar :verb) join ","canonicalized_resource + ","headers [] to_s ","headers [] "," canonicalize_resource "," canonicalize_headers ","params [] path ","params [] ","params [] upcase ","params [] to_s upcase ","params [] to_s ","(lvar :params [] upcase ) join ","(lvar :params [] to_s upcase ) join "," canonicalize_resource  + ","params []  [] to_s ","params []  [] "," canonicalize_params []  ","params [] params [] path  "]}," Fog Compute Ecloud Real set_extra_headers_for":{"type":"method","name":"set_extra_headers_for","children":[],"call":["params [] ","params [] merge! "," cloud_api_signature ","@authentication_method == ","Base64  encode64 delete ","Base64  encode64 ","@username + + ","@username + ","Base64  encode64 chomp ","Digest SHA2  digest ","params [] to_s ","params [] empty? ","params [] nil? ","params [] [] ","params [] == ","params []= ","(pair\n  (str \"x-tmrk-version\")\n  (ivar :@version)) merge ","Time  now utc strftime ","Time  now utc ","Time  now ","params [] size ","params [] [] ! ","length_required include? "," cloud_api_ cloud_api_signature  "]}," Fog Compute Ecloud Real request":{"type":"method","name":"request","children":[],"call":["response body= ","document body ","parser finish ","parser << ","response body ","Nokogiri XML SAX PushParser  new ","Fog ToHashDocument  new ","params [] ","response body empty? ","@connections [] request ","@connections [] ","options merge! ","params [] empty? ","params [] nil? ","params [] path + ","params [] query ","params [] path "," set_extra_headers_for ","Fog XML Connection  new ","params [] port ","params [] host ","params [] scheme ","params []= ","URI  parse ","@host + ","params [] is_a? "," raise ","ServiceError  slurp ","@connections [] request  body= ","Fog ToHashDocument  new  body ","Nokogiri XML SAX PushParser  new  finish ","Nokogiri XML SAX PushParser  new  << ","@connections [] request  body ","@connections [] request  body empty? "]}," Fog Compute Ecloud Real initialize":{"type":"method","name":"initialize","children":[],"call":["Fog HMAC  new "," raise ","@password nil? ","@username nil? ","options [] ","@authentication_method == ","@private_key nil? ","options [] to_s ","@access_key to_s ","@private_key to_s ","@access_key nil? ","options []  nil? ","options [] to_s  nil? ","@private_key to_s  nil? ","options []  to_s ","options [] to_s  to_s ","@access_key to_s  to_s ","@private_key to_s  to_s ","@access_key to_s  nil? "]}," Fog Compute Ecloud Real basic_request":{"type":"method","name":"basic_request","children":[],"call":[" request "," define_method "]}," Fog Compute Ecloud Shared default_organization_uri":{"type":"method","name":"default_organization_uri","children":[],"call":[]}," Fog Compute Ecloud Shared id_from_uri":{"type":"method","name":"id_from_uri","children":[],"call":["uri match [] to_i ","uri match [] ","uri match "]}," Fog Compute Ecloud Shared validate_data":{"type":"method","name":"validate_data","children":[],"call":[" raise ","ArgumentError  new ","(send\n  (lvar :required_opts) :-\n  (send\n    (lvar :options) :keys)) map join ","(send\n  (lvar :required_opts) :-\n  (send\n    (lvar :options) :keys)) map ","required_opts - ","options keys ","options key? ","required_opts all? "]}," Fog Ecloud Collection check_href!":{"type":"method","name":"check_href!","children":[],"call":[" raise ","Fog Errors Error  new "," class to_s split last downcase "," class to_s split last "," class to_s split "," class to_s "," class ","opts [] ","opts is_a? "," href "]}," Fog Ecloud Collection load":{"type":"method","name":"load","children":[],"call":["objects is_a? "]}," Ecloud services":{"type":"method","name":"services","children":[],"call":["Fog Ecloud  services "]}," Ecloud []":{"type":"method","name":"[]","children":[],"call":["@@connections [] ","hash []= "," raise ","key inspect ","Fog Compute  new ","Fog Logger  warning ","Hash  new "]}," Ecloud class_for":{"type":"method","name":"class_for","children":[],"call":[" raise "]}," Ecloud available?":{"type":"method","name":"available?","children":[],"call":["Fog  credentials include? ","Fog  credentials ","Fog Ecloud ECLOUD_OPTIONS  all? "]}," IPAddr mask_string":{"type":"method","name":"mask_string","children":[],"call":[" _to_string "]}," Fog Compute Ecloud TrustedNetworkGroup reload":{"type":"method","name":"reload","children":[],"call":[]}," Fog Compute Ecloud Server reload":{"type":"method","name":"reload","children":[],"call":[]}," Fog Compute Ecloud Organizations reload":{"type":"method","name":"reload","children":[],"call":[]}," Fog Compute Ecloud Organization reload":{"type":"method","name":"reload","children":[],"call":[]}," Fog Compute Ecloud OperatingSystemFamily reload":{"type":"method","name":"reload","children":[],"call":[]}," Fog Compute Ecloud Node reload":{"type":"method","name":"reload","children":[],"call":[]}," Fog Compute Ecloud Network reload":{"type":"method","name":"reload","children":[],"call":[]}," Fog Compute Ecloud Location reload":{"type":"method","name":"reload","children":[],"call":[]}," Fog Compute Ecloud Layout reload":{"type":"method","name":"reload","children":[],"call":[]}," Fog Compute Ecloud IpAddress reload":{"type":"method","name":"reload","children":[],"call":[]}," Fog Compute Ecloud InternetService reload":{"type":"method","name":"reload","children":[],"call":[]}," Fog Compute Ecloud Environment reload":{"type":"method","name":"reload","children":[],"call":[]}," Fog Compute Ecloud ComputePool reload":{"type":"method","name":"reload","children":[],"call":[]}," Fog Compute Ecloud AdminOrganization reload":{"type":"method","name":"reload","children":[],"call":[]}," Fog Compute Ecloud Mock ssh_key_edit":{"type":"method","name":"ssh_key_edit","children":[],"call":[" response "," response body ","Fog Ecloud  slice "," data [] [] "," data [] "," data "," data [] [] []= ","options [] "," id_from_uri to_i "," id_from_uri "]}," Fog Compute Ecloud Real generate_ssh_key_edit_request":{"type":"method","name":"generate_ssh_key_edit_request","children":[],"call":["xml Default ","data [] ","xml SshKey ","Builder XmlMarkup  new ","Builder XmlMarkup  new  Default ","Builder XmlMarkup  new  SshKey "]}," Fog Compute Ecloud Real ssh_key_edit":{"type":"method","name":"ssh_key_edit","children":[],"call":[" request body "," request ","data [] "," generate_ssh_key_edit_request "]}," Fog Compute Ecloud Mock ssh_key_delete":{"type":"method","name":"ssh_key_delete","children":[],"call":[" response "," data [] delete "," data [] "," data "," id_from_uri "]}," Fog Compute Ecloud Mock ssh_key_create":{"type":"method","name":"ssh_key_create","children":[],"call":["ssh_key_response body "," data [] []= "," data [] "," data "," response ","data [] ","Fog Mock  random_base64 ","ssh_key_fingerprint + ","Fog Mock  random_hex ","ssh_key_fingerprint + + ","(irange\n  (int 1)\n  (int 15)) each ","Fog Mock  random_numbers to_i ","Fog Mock  random_numbers "," validate_data "," response  body ","ssh_key_fingerprint +  + ","ssh_key_fingerprint + +  + ","ssh_key_fingerprint +  + + ","ssh_key_fingerprint + +  + + "]}," Fog Compute Ecloud Real generate_ssh_key_create_request":{"type":"method","name":"generate_ssh_key_create_request","children":[],"call":["xml Default ","data [] ","xml CreateSshKey ","Builder XmlMarkup  new ","Builder XmlMarkup  new  Default ","Builder XmlMarkup  new  CreateSshKey "]}," Fog Compute Ecloud Real ssh_key_create":{"type":"method","name":"ssh_key_create","children":[],"call":[" request body "," request ","data [] "," generate_ssh_key_create_request "," validate_data "]}," Fog Compute Ecloud SshKeys environment_id":{"type":"method","name":"environment_id","children":[],"call":[" href scan [] "," href scan "," href "]}," Fog Compute Ecloud SshKeys create":{"type":"method","name":"create","children":[],"call":[" service ssh_keys new "," service ssh_keys "," service "," service ssh_key_create ","new_options []= "," href + "," href ","options [] ","options [] nil? "]}," Fog Compute Ecloud SshKey edit":{"type":"method","name":"edit","children":[],"call":[" service ssh_key_edit "," service ","new_options []= ","options [] "," default ","options [] nil? "," name "," href "]}," Fog Compute Ecloud SshKey delete":{"type":"method","name":"delete","children":[],"call":[" service ssh_key_delete body "," service ssh_key_delete "," href "," service "]}," Fog Ecloud Errors ServiceError extract_minor_code":{"type":"method","name":"extract_minor_code","children":[],"call":[]}," Fog Ecloud Errors ServiceError extract_message":{"type":"method","name":"extract_message","children":[],"call":[]}," Fog Ecloud Errors ServiceError slurp":{"type":"method","name":"slurp","children":[],"call":[]}," Fog Ecloud Errors ServiceError to_s":{"type":"method","name":"to_s","children":[],"call":[" minor_error_code "," status_code "]}}